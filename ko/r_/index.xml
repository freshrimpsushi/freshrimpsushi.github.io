<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>R_s on 생새우초밥집</title><link>https://freshrimpsushi.github.io/ko/r_/</link><description>Recent content in R_s on 생새우초밥집</description><generator>Hugo -- gohugo.io</generator><language>ko</language><lastBuildDate>Sun, 31 Aug 2025 00:00:00 +0000</lastBuildDate><atom:link href="https://freshrimpsushi.github.io/ko/r_/index.xml" rel="self" type="application/rss+xml"/><item><title>윈도우즈에서 환경변수 참조하는 법</title><link>https://freshrimpsushi.github.io/ko/posts/2703/</link><pubDate>Sun, 31 Aug 2025 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/2703/</guid><description>가이드 ${env:변수명}을 통해 &amp;lsquo;변수명&amp;rsquo;이라는 이름을 가진 환경변수를 참조할 수 있다. 예를 들어, 윈도우즈에서 사용자 이름을</description></item><item><title>git 유저이름과 이메일 설정하는 법</title><link>https://freshrimpsushi.github.io/ko/posts/2702/</link><pubDate>Fri, 29 Aug 2025 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/2702/</guid><description>가이드 git config --global user.name &amp;#34;Your Name&amp;#34; git config --global user.email &amp;#34;Your Email&amp;#34; 당연하다면 당연하지만, 깃git을 사용하는 많은 액션에서 깃허브 유저이름과 이메일을 요구한다. 위와 같이 한 번 설정해두면 같</description></item><item><title>자바스크립트 다중 드롭다운 구현 예제</title><link>https://freshrimpsushi.github.io/ko/posts/2701/</link><pubDate>Wed, 27 Aug 2025 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/2701/</guid><description>쇼케이스 계 동물 식물 종 아종 왼쪽부터 순서대로 큰 분류에서 작은 분류로 내려가는 다중 드롭다운을 구현했다. 상위 드롭다운이 선택되면 하위 드롭다운이 자바스크립트</description></item><item><title>자바스크립트에서 로컬호스트를 통해 줄리아 서버로 데이터 전송하는 예제</title><link>https://freshrimpsushi.github.io/ko/posts/2700/</link><pubDate>Mon, 25 Aug 2025 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/2700/</guid><description>쇼케이스 Send &amp;lsquo;A&amp;rsquo; Send &amp;lsquo;B&amp;rsquo; 왼쪽 버튼을 클릭하면 &amp;lsquo;A&amp;rsquo;라는 메시지를, 오른쪽 버튼을 클릭하면 &amp;lsquo;B&amp;rsquo;라는 메시지를</description></item><item><title>HTML에서 마우스 커서 모양 바꾸는 법</title><link>https://freshrimpsushi.github.io/ko/posts/2699/</link><pubDate>Sat, 23 Aug 2025 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/2699/</guid><description>쇼케이스 auto | default | none | context-menu | help | pointer | progress | wait | cell | crosshair | text | vertical-text | alias | copy | move | no-drop | not-allowed | grab | grabbing | all-scroll | col-resize | row-resize | n-resize | e-resize | s-resize | w-resize | ne-resize | nw-resize | se-resize | sw-resize | ew-resize | ns-resize | nesw-resize |</description></item><item><title>통계학에서의 랭크</title><link>https://freshrimpsushi.github.io/ko/posts/2677/</link><pubDate>Thu, 10 Jul 2025 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/2677/</guid><description>정의 통계학에서 랭크 $R : \mathbb{R} \to \mathbb{N}$ 은 보통 데이터를 오름차순으로 정렬했을 때 그 데이터의 순위를 나타내는 함수로 쓰인다. 설명 $$ x_{3} &amp;lt; x_{1} &amp;lt; x_{2} \implies x_{(1)} = x_{3}, x_{(2)} = x_{1}, x_{(3)} = x_{2} $$</description></item><item><title>일치하다: consistent with, agree with</title><link>https://freshrimpsushi.github.io/ko/posts/2676/</link><pubDate>Tue, 08 Jul 2025 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/2676/</guid><description>어휘 consistent with: &amp;lsquo;일치하다&amp;rsquo;라는 뜻의 숙어로, consistent가 &amp;lsquo;일관된&amp;rsquo;이라는 뜻으로 쓰이지 않았다</description></item><item><title>비모수 통계학이란?</title><link>https://freshrimpsushi.github.io/ko/posts/2675/</link><pubDate>Sun, 06 Jul 2025 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/2675/</guid><description>정의 1 통계학에서 비모수 통계학nonparametric statistics이란 주로 모집단의 분포에 대한 가정을 하지 않는 통계적 방법론을 말하며, 특히</description></item><item><title>상미분방정식의 시간을 거꾸로 푸는 트릭</title><link>https://freshrimpsushi.github.io/ko/posts/2673/</link><pubDate>Wed, 02 Jul 2025 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/2673/</guid><description>메서드 $$ {\frac{ d y }{ d t }} = f(y) $$ 위와 같이 주어진 상미분방정식을 풀기 위한 수치적인 솔버 $K$ 가 미래의 시점 $T &amp;gt; 0$ 와 초기값 $y_{0}$ 에 대해 $$ K \left( f , T , y_{0} \right) = \left\{ y(t) : t</description></item><item><title>작은, 극소의: tiny, minuscule</title><link>https://freshrimpsushi.github.io/ko/posts/2672/</link><pubDate>Mon, 30 Jun 2025 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/2672/</guid><description>어휘 tiny: &amp;ldquo;아주 작은&amp;rdquo;, 수식적으로 언급되는 양보단 실체가 있는 것의 크기가 작은 경우에 쓰인다. minuscule: &amp;ldquo;아주 작은&amp;rdqu</description></item><item><title>상미분방정식의 솔버 중 명시적 메서드보다 암시적 메서드가 권장되는 상황</title><link>https://freshrimpsushi.github.io/ko/posts/2671/</link><pubDate>Sat, 28 Jun 2025 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/2671/</guid><description>개요 $$ \dot{y} = f(y) $$ 위와 같이 주어진 상미분방정식을 풀기 위한 수치적인 솔버는 그 계산 방식에따라 명시적 메서드explicit method와 암시적 메서드imp</description></item><item><title>텍에서 항의 갯수 나타내는 표현 brace</title><link>https://freshrimpsushi.github.io/ko/posts/2670/</link><pubDate>Thu, 26 Jun 2025 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/2670/</guid><description>코드 텍에서 항의 갯수를 나타낼 때는 흔히 여러 항을 묶는 표현으로써 \overbrace, \underbrace 커맨드를 사용한다. 두 커맨드를 사용하기 위해서는 \usepackage{amsmat</description></item><item><title>이원분산분석</title><link>https://freshrimpsushi.github.io/ko/posts/2669/</link><pubDate>Tue, 24 Jun 2025 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/2669/</guid><description>가설검정 1 실험 설계 상 $k$ 개의 처리와 $b$ 개의 블럭이 있어서 $n = bk$ 개의 표본을 얻었다고 하자. $j = 1 , \cdots , k$ 번째 처리의 표본이 각자 독립적이고 랜덤하게 정규분포</description></item><item><title>텍에서 립숨(의미 없는 문자열) 사용하는 법</title><link>https://freshrimpsushi.github.io/ko/posts/2668/</link><pubDate>Sun, 22 Jun 2025 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/2668/</guid><description>코드 로렘 입숨Lorem Ipsum 혹은 립숨Lipsum은 문서의 디자인을 집중하기 위해 의미 없는 문자열로 만들어진 플레이스홀더place holder로써, $\</description></item><item><title>일원분산분석</title><link>https://freshrimpsushi.github.io/ko/posts/2667/</link><pubDate>Fri, 20 Jun 2025 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/2667/</guid><description>가설검정 1 실험 설계 상 $k$ 개의 처리가 있을 때, 각 처리에서 $n_{j}$ 개씩 총 $n = n_{1} + \cdots + n_{k}$ 개의 표본을 얻었다고 하자. $j = 1 , \cdots , k$ 번째 처리의 표본이 각자 독립적이고</description></item><item><title>배치 커맨드의 입력 파라미터 확장</title><link>https://freshrimpsushi.github.io/ko/posts/2666/</link><pubDate>Wed, 18 Jun 2025 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/2666/</guid><description>코드 여러 입력 파라미터 중 첫번째 인자 C:\data\ABC.csv를 물결 표시가 포함된 %1로 받는다고 하자. 이 입력 인자의 다양한 기능을 소개한다1. 문법</description></item><item><title>분산분석의 F-검정</title><link>https://freshrimpsushi.github.io/ko/posts/2665/</link><pubDate>Mon, 16 Jun 2025 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/2665/</guid><description>가설검정 1 실험 설계 상 $k$ 개의 처리가 있을 때, 각 처리에서 $n_{j}$ 개씩 총 $n = n_{1} + \cdots + n_{k}$ 개의 표본을 얻었다고 하자. $j = 1 , \cdots , k$ 번째 처리의 표본이 각자 독립적이고</description></item><item><title>배치 커맨드에서 여러 입력 파라미터 받는 법</title><link>https://freshrimpsushi.github.io/ko/posts/2664/</link><pubDate>Sat, 14 Jun 2025 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/2664/</guid><description>코드 배치 커맨드에서 자연수 $m$ 에 대해 %n은 $n$번째 파라미터를 의미하고, 모든 파라미터의 배열은 %*로 표현된다1. 예를 들어 위와 같은 디렉터리에 다음과 같</description></item><item><title>아노바 테이블</title><link>https://freshrimpsushi.github.io/ko/posts/2663/</link><pubDate>Thu, 12 Jun 2025 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/2663/</guid><description>정의 1 분산분석에서 요약된 결과를 보여주는 표를 아노바 테이블ANOVA table이라 한다. 실험설계에 따라서 아노바 테이블의 형태가 약간 다르다. 완전랜덤</description></item><item><title>배치 커맨드에서 프로그램을 백그라운드에서 실행시키는 법</title><link>https://freshrimpsushi.github.io/ko/posts/2662/</link><pubDate>Tue, 10 Jun 2025 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/2662/</guid><description>코드 program이라는 프로그램을 실행하고 싶다고 하자. 윈도우즈 START /B program program 앞에 START /B를 붙이면 된다1. 예를 들어 다음과 같이 작성된 REPL.jl, REPL.py, REPL.bat 파일이 있다고 하</description></item><item><title>통계학에서 분산분석 혹은 ANOVA란?</title><link>https://freshrimpsushi.github.io/ko/posts/2661/</link><pubDate>Sun, 08 Jun 2025 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/2661/</guid><description>정의 1 2 두 개 이상 집단들의 모평균을 비교하기 위해 분산을 분석하는 것을 분산분석analysis of variance이라 하고, 줄여서 아노바ANOVA라 부</description></item><item><title>배치 커맨드에서 >와 >>의 차이</title><link>https://freshrimpsushi.github.io/ko/posts/2660/</link><pubDate>Fri, 06 Jun 2025 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/2660/</guid><description>개요 배치 커맨드에서 &amp;gt;는 문자열을 덮어쓰고, &amp;gt;&amp;gt;는 문자열을 추가한다. 코드 예를 들어 다음과 같이 작성된 example.bat 파일이 있다고 하자. @echo off echo 1 &amp;gt;</description></item><item><title>통계학에서의 실험 설계</title><link>https://freshrimpsushi.github.io/ko/posts/2659/</link><pubDate>Wed, 04 Jun 2025 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/2659/</guid><description>정의 1 측정이나 관측이 일어나는 대상을 실험 단위experimental unit라 한다. 실험자에 의해 통제되고 변하는 독립변수를 인자factor라 한다</description></item><item><title>vscode에서 멀티커서로 연속되는 수 편하게 입력하는 법</title><link>https://freshrimpsushi.github.io/ko/posts/2658/</link><pubDate>Mon, 02 Jun 2025 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/2658/</guid><description>가이드 프로그래밍 언어를 다루더라도 배열을 사용하기는 곤란하거나 마크업 언어를 사용하는 경우 0 혹은 1 부터 순서대로 이어지는 수를 직접 입력할 일이 있다. 이때 멀</description></item><item><title>정규분포를 따르는 집단의 모분산 추정</title><link>https://freshrimpsushi.github.io/ko/posts/2657/</link><pubDate>Sat, 31 May 2025 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/2657/</guid><description>가설검정 1 표본의 수가 $n$ 인 모집단의 분포가 정규분포 $N \left( \mu , \sigma^{2} \right)$ 를 따른다고 하자. 모분산의 후보 $\sigma_{0}$ 에 대한 가설검정은 다음과 같다. $H_{0}$: $\sigma^{2} = \sigma_{0}^{2}$ $H_{1}$: $\sigma^{2} \neq \sigma_{0}^{2}$ 검정통계</description></item><item><title>배치 커맨드의 입력 파라미터에서 물결 표시(틸드)의 의미</title><link>https://freshrimpsushi.github.io/ko/posts/2656/</link><pubDate>Thu, 29 May 2025 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/2656/</guid><description>개요 배치 커맨드의 입력 파라미터를 받을 때 %1과 %~1와 같은 물결 표시는 입력에서 큰따옴표 &amp;quot;를 제거하느냐 안하느냐를 결정한다1. 코드 예를 들어 다</description></item><item><title>코크란 정리 증명</title><link>https://freshrimpsushi.github.io/ko/posts/2655/</link><pubDate>Tue, 27 May 2025 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/2655/</guid><description>정리 샘플 $\mathbf{X} = \left( X_{1} , \cdots , X_{n} \right)$ 이 $X_{1} , \cdots , X_{n} \overset{\text{iid}}{\sim} N \left( 0, \sigma^{2} \right)$ 와 같이 iid로 정규분포를 따른다고 하자. 랭크가 $r_{j}$ 인 대칭행렬 $A_{1} , \cdots , A_{k} \in \mathbb{R}^{n \times n}$ 에 대해 확률변수 $Q_{1}</description></item><item><title>줄리아 데이터프레임의 새로운 열을 첫번째 열에 추가하는 방법</title><link>https://freshrimpsushi.github.io/ko/posts/2654/</link><pubDate>Sun, 25 May 2025 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/2654/</guid><description>코드 새로운 열을 추가하는 것 자체는 별로 어렵지 않은데, 특정 위치에 추가하는 것이 까다로울 때가 있다. insertcols! julia&amp;gt; df = DataFrame(a = 1:3, b = 4:6) 3×2 DataFrame Row │ a b │ Int64 Int64 ─────</description></item><item><title>행렬 랭크의 준가법성 증명 rank(A+B) ≤ rankA + rankB</title><link>https://freshrimpsushi.github.io/ko/posts/2653/</link><pubDate>Fri, 23 May 2025 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/2653/</guid><description>정리 행렬의 랭크는 준가법성을 가진다. 다시 말해, 두 행렬 $A, B$ 에 대해 다음이 성립한다. $$ \rank \left( A + B \right) \le \rank A + \rank B $$ 설명 이 정리는 코크란 정리의 증명에서 쓰인</description></item><item><title>줄리아에서 특정 경로 아래의 파일 목록을 재귀적으로 가져오는 방법</title><link>https://freshrimpsushi.github.io/ko/posts/2652/</link><pubDate>Wed, 21 May 2025 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/2652/</guid><description>코드 walkdir julia&amp;gt; walkdir(&amp;#34;D:\\U\\B&amp;#34;) Channel{Tuple{String, Vector{String}, Vector{String}}}(0) (1 item available) julia&amp;gt; collect(walkdir(&amp;#34;D:\\U\\B&amp;#34;)) 2-element Vector{Tuple{String, Vector{String}, Vector{String}}}: (&amp;#34;D:\\U\\B&amp;#34;, [&amp;#34;b&amp;#34;], [&amp;#34;alpha.txt&amp;#34;, &amp;#34;beta.txt&amp;#34;]) (&amp;#34;D:\\U\\B\\b&amp;#34;, [], [&amp;#34;m.txt&amp;#34;]) walkdir은 빌트인 함수로써 주어진 경로 아래의 모든 파일을 탐색한다. 그 자체로는 파일들의 정보가 담</description></item><item><title>호그-크레이그 정리 증명</title><link>https://freshrimpsushi.github.io/ko/posts/2651/</link><pubDate>Mon, 19 May 2025 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/2651/</guid><description>정리 샘플 $\mathbf{X} = \left( X_{1} , \cdots , X_{n} \right)$ 이 $X_{1} , \cdots , X_{n} \overset{\text{iid}}{\sim} N \left( 0, \sigma^{2} \right)$ 와 같이 iid로 정규분포를 따른다고 하자. 대칭행렬 $A_{1} , \cdots , A_{k} \in \mathbb{R}^{n \times n}$ 에 대해 확률변수 $Q_{1} , \cdots , Q_{k}$ 가</description></item><item><title>줄리아에서 배열의 배열을 연결시키는 트릭</title><link>https://freshrimpsushi.github.io/ko/posts/2650/</link><pubDate>Sat, 17 May 2025 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/2650/</guid><description>개요 줄리아에서는 append!와 같은 함수를 통해 배열의 배열을 연결시킬 수 있지만, 뱅 컨벤션 !이 붙은만큼 원래의 배열을 변형시키는 부작용이 있다. 이를 회피</description></item><item><title>정부호 행렬 주대각성분의 성질</title><link>https://freshrimpsushi.github.io/ko/posts/2649/</link><pubDate>Thu, 15 May 2025 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/2649/</guid><description>정리 정부호 행렬 $A = \left( a_{ij} \right) \in \mathbb{C}^{n \times n}$ 가 주어져 있다고 하자. 주대각성분의 부호 $A$ 의 주대각성분 $a_{ii}$ 의 부호는 $A$ 의 부호와 같다. $A$ 가 양의 정부호면 $a_{ii} &amp;gt; 0$ $A$ 가 양의 준</description></item><item><title>배치 커맨드에서 출력 결과를 생략하는 법</title><link>https://freshrimpsushi.github.io/ko/posts/2648/</link><pubDate>Tue, 13 May 2025 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/2648/</guid><description>코드 output &amp;gt; nul 파일에 쓰거나 화면에 출력되는 결과를 생략하기 위해서는 널 디바이스null device로 출력을 리다이렉트 하면 된다. 윈도우즈 윈도우즈에서는 n</description></item><item><title>크레이그 정리 증명</title><link>https://freshrimpsushi.github.io/ko/posts/2647/</link><pubDate>Sun, 11 May 2025 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/2647/</guid><description>정리 샘플 $\mathbf{X} = \left( X_{1} , \cdots , X_{n} \right)$ 이 $X_{1} , \cdots , X_{n} \overset{\text{iid}}{\sim} N \left( 0, \sigma^{2} \right)$ 와 같이 iid로 정규분포를 따른다고 하자. 대칭행렬 $A, B \in \mathbb{R}^{n \times n}$ 에 대해 확률변수 $Q_{1}$ 과 $Q_{2}$ 가 랜덤벡터 이</description></item><item><title>줄리아가 실행되는 통합개발환경 확인하는 법</title><link>https://freshrimpsushi.github.io/ko/posts/2646/</link><pubDate>Fri, 09 May 2025 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/2646/</guid><description>가이드 vscode 등과 같이 IDE(통합개발환경)에서 코드를 실행시키는 경우 개발 단계를 기준으로 세팅을 다르게 하는 경우가 많다. 이를 체크하려면 ENV[&amp;quot;TERM_PROGRAM&amp;quot;] == &amp;quot;v</description></item><item><title>대각화가능한 행렬 거듭제곱의 대각합은 고유값의 거듭제곱의 합과 같음을 증명</title><link>https://freshrimpsushi.github.io/ko/posts/2645/</link><pubDate>Wed, 07 May 2025 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/2645/</guid><description>정리 대각화가능한 행렬 $A \in \mathbb{C}^{n \times n}$ 와 자연수 $k \in \mathbb{N}$ 가 주어져 있다고 하자. $A$ 의 고유값을 $\lambda_{1} , \cdots , \lambda_{n}$ 이라고 하면 다음이 성립한다. $$ \operatorname{tr} A^{k} = \sum_{i=1}^{n} \lambda_{i}^{k} $$ 여기서 $\operatorname{tr}$ 은 트레</description></item><item><title>줄리아에서 데이터프레임 앞부분과 뒷부분 보는 법</title><link>https://freshrimpsushi.github.io/ko/posts/2644/</link><pubDate>Mon, 05 May 2025 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/2644/</guid><description>개요 줄리아의 데이터프레임에는 head나 tail 함수가 없다. 타 언어에 비해서는 한 번 더 손이 가서 귀찮긴 하지만, first와 last 함수를 사용하면 된다. 왜 Data</description></item><item><title>대칭 실수행렬의 고유값이 모두 0이거나 1이면 멱등행렬임을 증명</title><link>https://freshrimpsushi.github.io/ko/posts/2643/</link><pubDate>Sat, 03 May 2025 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/2643/</guid><description>정리 대칭행렬 $A \in \mathbb{R}^{n \times n}$ 의 고유값이 모두 $0$ 이거나 $1$ 이면 $A$ 는 멱등행렬이다. 설명 이 보조정리는 정규분포 랜덤벡터 이차형식의 카이제곱성의 동치조건의 증명과 코</description></item><item><title>줄리아에서 비공식 패키지 설치하는 법</title><link>https://freshrimpsushi.github.io/ko/posts/2642/</link><pubDate>Thu, 01 May 2025 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/2642/</guid><description>가이드 비공식 패키지의 경우 레지스터를 등록하는 등 복잡하게 설치해야 하는 것처럼 설명하기도 하는데, 실제로는 깃허브 주소만 가지고 설치할 수 있다1. 설치하고 싶</description></item><item><title>멱등행렬의 고유값은 0이거나 1임을 증명</title><link>https://freshrimpsushi.github.io/ko/posts/2641/</link><pubDate>Tue, 29 Apr 2025 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/2641/</guid><description>정리 멱등행렬의 고유값은 $0$ 또는 $1$ 뿐이다. 설명 이 보조정리는 정규분포 랜덤벡터 이차형식의 카이제곱성의 동치조건의 증명에서 쓰인다. 이 정리의 역이 성립하려면</description></item><item><title>줄리아 데이터프레임에 같은 값으로 채워진 열 추가하는 법</title><link>https://freshrimpsushi.github.io/ko/posts/2640/</link><pubDate>Sun, 27 Apr 2025 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/2640/</guid><description>코드 근본적으로는 새로운 열 추가하는 방법과 같지만, 대입 연산 =에 브로드캐스트를 적용한 .=를 통해 별도의 칼럼을 만들지 않고 간단히 초기화가 가능하다. julia&amp;gt; df =</description></item><item><title>정규분포 랜덤벡터 이차형식의 카이제곱성의 동치조건</title><link>https://freshrimpsushi.github.io/ko/posts/2639/</link><pubDate>Fri, 25 Apr 2025 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/2639/</guid><description>정리 샘플 $\mathbf{X} = \left( X_{1} , \cdots , X_{n} \right)$ 이 $X_{1} , \cdots , X_{n} \overset{\text{iid}}{\sim} N \left( 0, \sigma^{2} \right)$ 와 같이 iid로 정규분포를 따른다고 하자. 랭크가 $r \le n$ 인 대칭행렬 $A \in \mathbb{R}^{n \times n}$ 에 대해 랜덤벡터 이차형</description></item><item><title>매트랩에서 그림 틱 가이드 제거하는 법</title><link>https://freshrimpsushi.github.io/ko/posts/2638/</link><pubDate>Wed, 23 Apr 2025 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/2638/</guid><description>코드 &amp;gt;&amp;gt; scatter(rand(10, 1), rand(10, 1)) 틱 자체를 아예 제거하려면 xtick([]) 혹은 ytick([]) 를 사용하면 되지만, 값은 그대로 두고 틱 가이드만 제거하고 싶다면 다음과 같이 TickLength를 조정해 주</description></item><item><title>정규분포 랜덤벡터 이차형식의 적률생성함수</title><link>https://freshrimpsushi.github.io/ko/posts/2637/</link><pubDate>Mon, 21 Apr 2025 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/2637/</guid><description>정리 샘플 $\mathbf{X} = \left( X_{1} , \cdots , X_{n} \right)$ 이 $X_{1} , \cdots , X_{n} \overset{\text{iid}}{\sim} N \left( 0, \sigma^{2} \right)$ 와 같이 iid로 정규분포를 따른다고 하자. 랭크가 $r \le n$ 인 대칭행렬 $A \in \mathbb{R}^{n \times n}$ 에 대해 랜덤벡터 이차형</description></item><item><title>매트랩에서 그림 테두리 추가하는 법</title><link>https://freshrimpsushi.github.io/ko/posts/2636/</link><pubDate>Sat, 19 Apr 2025 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/2636/</guid><description>코드 &amp;gt;&amp;gt; scatter(rand(10, 1), rand(10, 1)) 예로써 매트랩에서 점도표를 그리면 기본 설정 상 상방과 우방이 트여서 테두리가 보이지 않는다. 이때 테두리를 보이게 하려면 아래와 같이 box on 커맨드를</description></item><item><title>랜덤벡터 이차형식으로 나타낸 편차제곱합</title><link>https://freshrimpsushi.github.io/ko/posts/2635/</link><pubDate>Thu, 17 Apr 2025 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/2635/</guid><description>공식 랜덤벡터 $\mathbf{X} = \left( X_{1} , \cdots , X_{n} \right)$ 와 항등행렬 $I_{n} \in \mathbb{R}^{n \times n}$ 과 모든 성분이 $1$ 인 일행렬 $J_{n} \in \mathbb{R}^{n \times n}$ 에 대해 다음이 성립한다. $$ \mathbf{X}^{T} \left( I_{n} - {\frac{ 1 }{ n }} J_{n} \right) \mathbf{X} = ( n - 1</description></item><item><title>퇴플리츠 행렬</title><link>https://freshrimpsushi.github.io/ko/posts/2634/</link><pubDate>Tue, 15 Apr 2025 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/2634/</guid><description>정의 행렬 $A \in \mathbb{R}^{m \times n}$ 의 성분 $\left( A \right)_{ij}$ 가 모든 $i, j$ 에 대해 $\left( A \right)_{i, j} = \left( A \right)_{i+1, j+1}$ 를 만족하면 $A$ 를 퇴플리츠 행렬Toeplitz matrix라 한다. 다시 말해, 퇴플</description></item><item><title>랜덤벡터 이차형식의 기대값</title><link>https://freshrimpsushi.github.io/ko/posts/2633/</link><pubDate>Sun, 13 Apr 2025 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/2633/</guid><description>공식 모평균 벡터 $\mu \in \mathbb{R}^{n}$ 와 공분산행렬 $\Sigma \in \mathbb{R}^{n \times n}$ 에 대해 랜덤벡터 $\mathbf{X}$ 가 $\mathbf{X} \sim \left( \mu , \Sigma \right)$ 라 하자. 대칭행렬 $A$ 에 대해 랜덤벡터 이차형식 $Q = \mathbf{X}^{T} A \mathbf{X}$ 의 기대값은 다음과</description></item><item><title>줄리아에서 l1 트렌드 필터링 사용하는 법</title><link>https://freshrimpsushi.github.io/ko/posts/2632/</link><pubDate>Fri, 11 Apr 2025 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/2632/</guid><description>개요 L1TrendFiltering.jl는 원래 매트랩으로 구현된 $\ell_{1}$ 트렌드 필터링 코드를 줄리아로 번역한 패키지다1. $\ell_{1}$ 은 주어진 시계열 데이터 $y = \left\{ y_{t}</description></item><item><title>랜덤벡터 이차형식</title><link>https://freshrimpsushi.github.io/ko/posts/2631/</link><pubDate>Wed, 09 Apr 2025 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/2631/</guid><description>정의 1 랜덤벡터 $\mathbf{X} = \left( X_{1} , \cdots , X_{n} \right)$ 와 대칭행렬 $A \in \mathbb{R}^{n \times n}$ 에 대해 $Q = \mathbf{X}^{T} A \mathbf{X}$ 를 이차형식quadratic form in $\mathbf{X}$이라 한다. 설명 이</description></item><item><title>복소수 스텝 미분 근사</title><link>https://freshrimpsushi.github.io/ko/posts/2630/</link><pubDate>Mon, 07 Apr 2025 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/2630/</guid><description>공식 함수 $f : \mathbb{R} \to \mathbb{R}$ 의 미분계수 $f ' (x)$ 는 다음과 같이 복소수를 이용해서 근사할 수 있다. $$ f ' (x) \approx \frac{\im \left( f \left( x + i h \right) \right)}{h} $$ 여기서 $\im$ 은 복소수의 허수부를 나타내</description></item><item><title>자바스크립트에서 버튼으로 출력이 바뀌는 예제</title><link>https://freshrimpsushi.github.io/ko/posts/2629/</link><pubDate>Sat, 05 Apr 2025 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/2629/</guid><description>쇼케이스 0 0으로 시작하는 수가 + 버튼을 누르면 숫자가 1씩 증가하고, - 버튼을 누르면 숫자가 1씩 감소하는 예제다. 코드 HTML &amp;lt;input type=&amp;#39;button&amp;#39; onclick=&amp;#39;count(&amp;#34;+&amp;#34;)&amp;#39; value=&amp;#39;+&amp;#39;/&amp;gt; &amp;lt;input type=&amp;#39;button&amp;#39; onclick=&amp;#39;count(&amp;#34;-&amp;#34;)&amp;#39; value=&amp;#39;-&amp;#39;/&amp;gt; &amp;lt;div id=&amp;#39;result&amp;#39;&amp;gt;0&amp;lt;/div&amp;gt; &amp;lt;div id='r</description></item><item><title>집단의 동질성 검정</title><link>https://freshrimpsushi.github.io/ko/posts/894/</link><pubDate>Thu, 03 Apr 2025 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/894/</guid><description>가설검정 1 다항실험에서 범주가 $C$ 개인 범주형 데이터를 $R$ 개의 모집단에서 얻었다고 가정하자. $i = 1 , \cdots , R$번째 모집단에서 원소가 $j = 1 , \cdots , C$번째 범</description></item><item><title>머신러닝에서 실루 혹은 스위시 함수 SiLU, Swish</title><link>https://freshrimpsushi.github.io/ko/posts/883/</link><pubDate>Tue, 01 Apr 2025 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/883/</guid><description>정의 1 2 실루SiLU, Sigmoid-weighted Linear Unit 혹은 스위시Swish 함수는 다음과 같이 정의된다. $$ \operatorname{SiLU}(x) = x \cdot \sigma(x) $$ 여기서 $\sigma$ 는 시그모이드 함수 중 특히 로지스틱 함수 $\sigma(x) = \left( 1 +</description></item><item><title>집단의 독립성 검정</title><link>https://freshrimpsushi.github.io/ko/posts/882/</link><pubDate>Sun, 30 Mar 2025 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/882/</guid><description>가설검정 1 다항실험에서 데이터가 두 개의 특성 $X$, $Y$ 를 가지고 있고 $X$ 의 범주가 $R$ 개, $Y$ 의 범주가 $C$ 개인 범주형 데이터를 $n$번의 독립적인 시행으로 얻었다고 가정</description></item><item><title>해석학에서 불연속의 동치 조건</title><link>https://freshrimpsushi.github.io/ko/posts/869/</link><pubDate>Fri, 28 Mar 2025 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/869/</guid><description>정리 1 함수 $f : \mathbb{R} \to \mathbb{R}$ 이 $x_{0}$ 에서 연속이 아니라는 것은 다음과 동치다: $$ \exists \epsilon &amp;gt; 0 , \forall \delta &amp;gt; 0 : \exists x ( \delta ) \in \mathbb{R} \left( \left| x ( \delta ) - x_{0} \right| &amp;lt; \delta \land \left| f \left( x ( \delta ) - f \left(</description></item><item><title>Lozi map</title><link>https://freshrimpsushi.github.io/ko/posts/855/</link><pubDate>Wed, 26 Mar 2025 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/855/</guid><description>정의 1 다음과 같이 동역학계를 정의하는 맵을 로치 맵Lozi map map이라 한다. $$ \begin{align*} x \mapsto&amp;amp; 1 - a \left| x \right| + y \\ y \mapsto&amp;amp; b x \end{align*} $$ 설명 로치 맵은 헤논 맵에서 $x^{2}$ 만 $\left| x \right|$</description></item><item><title>줄리아의 순열차원 함수와 그 응용 permutedims</title><link>https://freshrimpsushi.github.io/ko/posts/834/</link><pubDate>Mon, 24 Mar 2025 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/834/</guid><description>개요 줄리아의 내장 함수 permutedims는 어떻게 보면 전치행렬의 일반화로써, 다차원 배열의 차원을 다루는데 유용하다. 코드 텐서의 차원 전환 julia&amp;gt; A = reshape(Vector(1:8), (2,2,2))</description></item><item><title>이상한 어트랙터</title><link>https://freshrimpsushi.github.io/ko/posts/816/</link><pubDate>Sat, 22 Mar 2025 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/816/</guid><description>정의 혼돈 1 불변인 폐집합이 위상적으로 추이적이면 어트랙터라 한다. 컴팩트한 불변 집합이 초기조건에 민감하고 위상적으로 추이적이면 캐어릭하다고 한다. 캐어릭</description></item><item><title>기하학에서 접점과 횡단점</title><link>https://freshrimpsushi.github.io/ko/posts/815/</link><pubDate>Thu, 20 Mar 2025 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/815/</guid><description>용어 두 매니폴드가 만나는 한 점을 $p$ 라 하자. 다음과 같이 두 매니폴드가 스치기만 하면 이 점을 접점tangent point, 서로 가로지르면 횡단점transversal</description></item><item><title>콰지피리어딕 오빗</title><link>https://freshrimpsushi.github.io/ko/posts/768/</link><pubDate>Tue, 18 Mar 2025 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/768/</guid><description>정의 유계면서 어심토티컬리 피리어딕이 아닌 오빗이 초기조건에 민감sensitive dependence on initial condition하지 않으면 이 오빗을 콰지피리어딕quasi</description></item><item><title>준주기 함수</title><link>https://freshrimpsushi.github.io/ko/posts/759/</link><pubDate>Sun, 16 Mar 2025 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/759/</guid><description>정의 1 함수 $h : \mathbb{R} \to \mathbb{R}^{n}$ 가 기초 주파수basic frequency $\omega_{1} , \cdots , \omega_{n}$ 와 각각의 $x_{1} , \cdots , x_{n}$ 에 대해 $2 \pi$-주기함수인 $H$ 에 대해 다음과 같이 나타낼 수 있으면 $h$ 가 준주</description></item><item><title>영문법: S가 A한 채로 남아 있다</title><link>https://freshrimpsushi.github.io/ko/posts/726/</link><pubDate>Fri, 14 Mar 2025 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/726/</guid><description>문형 주어 S와 형용사 A가 주어져 있다고 하자. &amp;ldquo;S remains A&amp;rdquo; $\iff$ &amp;ldquo;S가 A한 채로 남아 있다.&amp;rdquo; 예문 형용사 &amp;ldquo;그럼에도 불구하고,</description></item><item><title>망델브로 집합과 줄리아 집합</title><link>https://freshrimpsushi.github.io/ko/posts/718/</link><pubDate>Wed, 12 Mar 2025 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/718/</guid><description>정의 $$ P_{c} : z \mapsto z^{2} + c $$ 복소평면 $\mathbb{C}$ 에서 주어진 $c \in \mathbb{C}$ 에 대해 위와 같이 맵으로 정의된 동역학계와 그 오빗 $P_{c}^{n} (z)$ 를 생각해보자. 망델브로 집합 1 초기조건 $z = 0$ 에 대</description></item><item><title>차원의 저주</title><link>https://freshrimpsushi.github.io/ko/posts/708/</link><pubDate>Mon, 10 Mar 2025 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/708/</guid><description>정의 1 주로 유클리드 공간 $\mathbb{R}^{d}$ 에서, 어떤 문제를 풀기 위한 메모리의 양이나 연산 횟수가 차원 $d$ 에 따라 지수적으로 커지는 것을 차원의 저주curse of dimensi</description></item><item><title>이케다 맵</title><link>https://freshrimpsushi.github.io/ko/posts/671/</link><pubDate>Sat, 08 Mar 2025 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/671/</guid><description>정의 복소수 공간 $\mathbb{C}$ 에서 다음과 같이 동역학계를 정의하는 맵을 이케다 맵Ikeda map이라 한다. $$ z \mapsto \mu z \exp \left( i \left[ a + {\frac{ b }{ |z|^{2} + 1 }} \right] \right) + c $$ 복소수를</description></item><item><title>2025 겨울 오마카세: 형식에 압도된 개념</title><link>https://freshrimpsushi.github.io/ko/posts/639/</link><pubDate>Thu, 06 Mar 2025 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/639/</guid><description>소개 2025년 푸른 뱀의 해가 밝았습니다. 이번 코스에서는 어렵고 복잡한 내용을 새롭게 소개하기보다는 이공계의 역사 속에서 반복해서 등장하는 수식의 형태, 다시</description></item><item><title>리들드 베이신</title><link>https://freshrimpsushi.github.io/ko/posts/617/</link><pubDate>Tue, 04 Mar 2025 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/617/</guid><description>정의 1 동역학계에서 $n$ 개의 어트랙터에 대한 베이신 $R_{1} , \cdots , R_{n}$ 이 주어져 있다고 하자. 집합 $\mathcal{R}$ 이 모든 $\mathbf{x} \in \mathcal{R}$ 와 모든 $\varepsilon &amp;gt; 0$ 에 대해 오픈 볼 $B \left( \mathbf{x} ; \varepsilon \right)$ 이 모든 $R_{1} , \cdots</description></item><item><title>평균과 분산의 또 다른 정의</title><link>https://freshrimpsushi.github.io/ko/posts/610/</link><pubDate>Sun, 02 Mar 2025 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/610/</guid><description>정의 유클리드 공간 $\mathbb{R}$ 1 확률변수 $X :\Omega \to \mathbb{R}$ 에 대해서 편차제곱의 기대값의 인피멈 $\sigma^{2} (X) \in \mathbb{R}$ 을 $X$ 의 분산variance이라 정의한다. $$ \sigma^{2} \left( X \right) := \inf_{a \in \mathbb{R}} E \left[ \left(</description></item><item><title>상관관계 차원</title><link>https://freshrimpsushi.github.io/ko/posts/606/</link><pubDate>Fri, 28 Feb 2025 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/606/</guid><description>정의 1 2 거리공간 $\left( X , d \right)$ 에서 집합 $S = \left\{ x_{1} , \cdots , x_{n} \right\} \subset X$ 의 원소를 $x \in S$ 과 같이 나타내자. 중심이 $x$ 이고 반경이 $\varepsilon &amp;gt; 0$ 인 오픈 볼 $B \left( x ; \varepsilon \right)$ 에 속한 $S$ 의</description></item><item><title>랜덤 필드의 정의</title><link>https://freshrimpsushi.github.io/ko/posts/595/</link><pubDate>Wed, 26 Feb 2025 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/595/</guid><description>정의 1 집합형 정의 확률변수의 집합을 확률과정이라 한다. 파라미터 집합 혹은 인덱스 집합 $T$ 에 대해 $T$ 상에서의 확률과정 $f$ 는 $t \in T$ 에 대한 확률변수 $f(t)$ 들의 집합 $\left\{ f(t)</description></item><item><title>박스-카운팅 차원</title><link>https://freshrimpsushi.github.io/ko/posts/584/</link><pubDate>Mon, 24 Feb 2025 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/584/</guid><description>정의 1 2 바운디드된 집합 $S \subset \mathbb{R}^{n}$ 이 주어져 있다고 하자. 한 변의 길이가 $\varepsilon$ 인 하이퍼큐브가 $S$ 를 커버할 수 있게끔 하는 최소한의 수를 $N \left( \varepsilon \right)$ 이라 하자. 만약 다음과 같</description></item><item><title>선형회귀분석에서 SST = SSR + SSE 증명</title><link>https://freshrimpsushi.github.io/ko/posts/511/</link><pubDate>Sat, 22 Feb 2025 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/511/</guid><description>정리 $$ \begin{bmatrix} y_{1} \\ y_{2} \\ \vdots \\ y_{n} \end{bmatrix} = \begin{bmatrix} 1 &amp;amp; x_{11} &amp;amp; \cdots &amp;amp; x_{p1} \\ 1 &amp;amp; x_{12} &amp;amp; \cdots &amp;amp; x_{p2} \\ \vdots &amp;amp; \vdots &amp;amp; \ddots &amp;amp; \vdots \\ 1 &amp;amp; x_{1n} &amp;amp; \cdots &amp;amp; x_{pn} \end{bmatrix} \begin{bmatrix} \beta_{0} \\ \beta_{1} \\ \vdots \\ \beta_{p} \end{bmatrix} + \begin{bmatrix} \varepsilon_{1} \\ \varepsilon_{2} \\ \vdots \\ \varepsilon_{n} \end{bmatrix} $$ $n$ 개의 데</description></item><item><title>동역학에서 프랙털이란?</title><link>https://freshrimpsushi.github.io/ko/posts/442/</link><pubDate>Thu, 20 Feb 2025 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/442/</guid><description>용어 프랙털fractal은 흔히 자기유사성self-similarity을 가지는 기하적 객체를 일컫고 그 예시와 개념 또한 널리 알려져 있으나, 보편적으로</description></item><item><title>나뉘다: be divied into</title><link>https://freshrimpsushi.github.io/ko/posts/441/</link><pubDate>Tue, 18 Feb 2025 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/441/</guid><description>어휘 be divied into: 말 그대로 나뉘어진다는 의미다. 중요한 것은 전치사로 into를 사용한다는 점이다. 예문 &amp;ldquo;우선, 패 $T$ 는 서로 다른 연결되지 않은 블럭들</description></item><item><title>유사성 차원</title><link>https://freshrimpsushi.github.io/ko/posts/397/</link><pubDate>Sun, 16 Feb 2025 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/397/</guid><description>정의 집합 $\displaystyle A := \lim_{n \to \infty} A_{n}$ 가 자기유사 집합이라고 하자. $A_{1}$ 이 가지는 $A_{0}$ 와 유사한 부분집합을 $A_{0}$ 의 복제본copy of $A_{0}$라 부를 때, $A_{0}$ 의 복제본의 볼륨v</description></item><item><title>영문법: V함에 있어서 A한 역할을 하다</title><link>https://freshrimpsushi.github.io/ko/posts/393/</link><pubDate>Fri, 14 Feb 2025 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/393/</guid><description>문형 동사 V와, 형용사 A가 주어져 있다고 하자. &amp;ldquo;play a A role V-ing&amp;rdquo; $\iff$ V함에 있어서 A한 역할을 하다 예문 &amp;ldquo;추가적으로, 0에 근접하는 RMSE를 얻는 것은</description></item><item><title>폰 코흐 커브</title><link>https://freshrimpsushi.github.io/ko/posts/387/</link><pubDate>Wed, 12 Feb 2025 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/387/</guid><description>정의 1 $K_{n+1}$ 은 위와 같이 $K_{n}$ 의 길이가 $l$ 인 모든 선분을 삼등분하고 가운데 지점에 변의 길이가 $l/3$ 인 정삼각형을 추가하고 정삼각형과 $K_{n}$ 이 겹치는 부분을 제거 함으로써 정의된</description></item><item><title>고려하다: take into account, consider</title><link>https://freshrimpsushi.github.io/ko/posts/386/</link><pubDate>Mon, 10 Feb 2025 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/386/</guid><description>어휘 take into account: &amp;lsquo;고려하다&amp;rsquo;라는 뜻의 숙어로, 모델이나 메서드 등에서 &amp;lsquo;어떠한 요소를 고려했다&amp;rsquo;는 식으로 많</description></item><item><title>하우스도르프 차원</title><link>https://freshrimpsushi.github.io/ko/posts/370/</link><pubDate>Sat, 08 Feb 2025 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/370/</guid><description>정의 1 거리공간 $\left( X, d \right)$ 가 주어져 있다고 하자. $S \subset X$ 의 지름diameter $\diam S$ 는 다음과 같이 정의된다. $$ \diam S := \sup \left\{ d (x, y) : x, y \in S \right\} $$ 하우스도르프</description></item><item><title>영문법: 그에 해당하는 X</title><link>https://freshrimpsushi.github.io/ko/posts/369/</link><pubDate>Thu, 06 Feb 2025 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/369/</guid><description>문형 &amp;ldquo;the corresponding X&amp;rdquo; $\iff$ &amp;ldquo;그에 해당하는 X&amp;rdquo; 예문 &amp;ldquo;$g$ 가 연속인 도함수를 가진다고 할 때, 이계 미분 방정식 $\ddot{x} + g(x) = 0$ 혹은 그에 대응되는 시스템 $\dot{x} = y , \dot{y} = g(x)$ 을 생</description></item><item><title>자기유사 집합</title><link>https://freshrimpsushi.github.io/ko/posts/368/</link><pubDate>Tue, 04 Feb 2025 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/368/</guid><description>정의 1 두 집합 $A, B$ 에 대해 $f(A) = B$ 를 만족하는 전단사 $f$ 가 존재하면 두 집합 $A, B$ 가 유사하다similar고 하자. 집합 $X$ 에 대해 $X$ 와 유사한 부분집합 $S \subset X$ 가 존재</description></item><item><title>아핀 변환</title><link>https://freshrimpsushi.github.io/ko/posts/365/</link><pubDate>Sun, 02 Feb 2025 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/365/</guid><description>정의 쉬운 정의 행렬 $A$ 와 벡터 $\mathbf{b}$ 이 주어져 있다고 하자. 다음과 같이 벡터 $\mathbf{x}$ 에 $A$ 를 곱하고 $\mathbf{b}$ 를 더하는 변환을 아핀 변환이라 한다. $$ \mathbf{x} \mapsto A \mathbf{x} + \mathbf{b} $$ 어려운 정의 1 벡터</description></item><item><title>초기조건에 민감한 종속성</title><link>https://freshrimpsushi.github.io/ko/posts/364/</link><pubDate>Fri, 31 Jan 2025 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/364/</guid><description>정의 1 공간 $X = \left( \mathbb{R}^{n} , \left\| \cdot \right\| \right)$ 와 스무스한 함수 $f,g : X \to X$ 에 대해 벡터필드, 맵이 다음과 같이 표현된다고 하자. $$ \dot{x} = f(x) \\ x \mapsto g(x) $$ $\phi (t, \cdot)$ 은 벡터필드 $\dot{x} = f(x)$ 의</description></item><item><title>영문법: A와 B의 조합인 X</title><link>https://freshrimpsushi.github.io/ko/posts/363/</link><pubDate>Wed, 29 Jan 2025 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/363/</guid><description>문형 &amp;ldquo;a X coupling A and B&amp;rdquo; $\iff$ &amp;ldquo;A와 B의 조합인 X&amp;rdquo; 예문 &amp;ldquo;이러한 센스에서, 인공신경망과 유전알고리즘을 섞은 메서드는 이질적인 광촉매가 포함</description></item><item><title>미분방정식으로 표현되는 시스템의 카오스</title><link>https://freshrimpsushi.github.io/ko/posts/337/</link><pubDate>Mon, 27 Jan 2025 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/337/</guid><description>정의 1 함수 $f : \mathbb{R}^{n} \to \mathbb{R}^{n}$ 에 대해 다음과 같은 벡터필드가 미분 방정식으로 주어져 있다고 하자. $$ \dot{x} = f(x) $$ 한 점 $x_{0} \in X$ 에 대해 이 시스템의 오빗 $\phi_{t} ( x_{0} )$ 이 다음의 조건들</description></item><item><title>영문법: X의 인근에</title><link>https://freshrimpsushi.github.io/ko/posts/335/</link><pubDate>Sat, 25 Jan 2025 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/335/</guid><description>문형 &amp;ldquo;in the vicinity of X&amp;rdquo; $\iff$ &amp;ldquo;X의 인근에&amp;rdquo; 예문 &amp;ldquo;일반적으로 이러한 절차는 트래젝터리 시뮬레이션에서, 특히 불연속점 인근에서</description></item><item><title>헤논 맵</title><link>https://freshrimpsushi.github.io/ko/posts/334/</link><pubDate>Thu, 23 Jan 2025 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/334/</guid><description>정의 다음과 같이 동역학계를 정의하는 맵을 헤논 맵Hénon map map이라 한다. $$ \begin{align*} x \mapsto&amp;amp; 1 - a x^{2} + y \\ y \mapsto&amp;amp; b x \end{align*} $$ 설명 프랑스의 천문학자 헤논Hénon은</description></item><item><title>이상하지만 캐어릭하지 않은 어트랙터 SNA</title><link>https://freshrimpsushi.github.io/ko/posts/326/</link><pubDate>Sun, 19 Jan 2025 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/326/</guid><description>정의 1 2 이상하지만 캐어릭하지 않은 어트랙터SNA, strange nonchaotic attractor는 프랙털 기하의 구조를 갖추었지만 다이내미컬 센스에서는 캐어릭하지 않은 어트랙</description></item><item><title>평균아크탄젠트절대비오차 MAAPE</title><link>https://freshrimpsushi.github.io/ko/posts/320/</link><pubDate>Fri, 17 Jan 2025 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/320/</guid><description>정의 1 회귀문제에서, 데이터 포인트 $\left\{ x_{k} \right\}_{k=1}^{n}$ 과 그 예측치 $\left\{ \widehat{x}_{k} \right\}_{k=1}^{n}$ 에 대해 평균아크탄젠트절대비오차MAAPE(Mean Arctangent Absolute Precentage Error)를 다음과 같이 정의한</description></item><item><title>고정점을 포함하지 않는 궤적은 적어도 하나의 0인 랴푸노프 지수를 가진다</title><link>https://freshrimpsushi.github.io/ko/posts/313/</link><pubDate>Wed, 15 Jan 2025 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/313/</guid><description>정리 공간 $X = \mathbb{R}^{n}$ 와 연속인 함수 $f : X \to X$ 에 대해 다음과 같은 벡터필드가 미분 방정식으로 주어져 있다고 하자. $$ \dot{x} = f(x) $$ 이 시스템의 트래젝터리 $x$ 가 $t \in [0, \infty)$ 에 대</description></item><item><title>평균절대비오차 MAPE</title><link>https://freshrimpsushi.github.io/ko/posts/312/</link><pubDate>Mon, 13 Jan 2025 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/312/</guid><description>정의 1 회귀문제에서, 데이터 포인트 $\left\{ x_{k} \right\}_{k=1}^{n}$ 과 그 예측치 $\left\{ \widehat{x}_{k} \right\}_{k=1}^{n}$ 에 대해 평균절대비오차MAPE(Mean Absolute Precentage Error)를 다음과 같이 정의한다. $$ \text{MAPE} = {{ 1</description></item><item><title>동역학에서의 먹이사슬 시스템</title><link>https://freshrimpsushi.github.io/ko/posts/302/</link><pubDate>Sat, 11 Jan 2025 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/302/</guid><description>모델 1 $$ \begin{align*} \dot{R} =&amp;amp; R \left( 1 - {\frac{ R }{ K }} \right) - {\frac{ x_{c} y_{c} C R }{ R + R_{0} }} \\ \dot{C} =&amp;amp; x_{c} C \left( {\frac{ y_{c} R }{ R + R_{0} }} - 1 \right) - {\frac{ x_{p} y_{p} P C }{ C + C_{0} }} \\ \dot{P} =&amp;amp; x_{p} P \left( {\frac{ y_{p} C }{ C + C_{0} }}</description></item><item><title>평균이 0인 정규분포를 따르는 확률변수 거듭제곱의 기대값</title><link>https://freshrimpsushi.github.io/ko/posts/300/</link><pubDate>Thu, 09 Jan 2025 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/300/</guid><description>공식 확률변수 $X$ 가 정규분포 $N \left( 0 , \sigma^{2} \right)$ 를 따른다고 하면 그 거듭제곱 $X^{n}$ 의 기대값은 다음과 같이 재귀적인 공식으로 나타난다1. $$ E \left( X^{n} \right) = (n - 1) \sigma^{2} E \left( X^{n-2} \right) $$</description></item><item><title>홀링 타입 함수형 반응</title><link>https://freshrimpsushi.github.io/ko/posts/294/</link><pubDate>Tue, 07 Jan 2025 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/294/</guid><description>개요 생태계eco system을 모델링하는 상미분방정식 등에서 포식자와 피식자 간에 적용되는 질량 작용 법칙을 함수 꼴로 가정할 때, 흔히 함수형 반응funct</description></item><item><title>리눅스에서 vi 혹은 vim 종료하는 법</title><link>https://freshrimpsushi.github.io/ko/posts/292/</link><pubDate>Sun, 05 Jan 2025 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/292/</guid><description>개요 vivisual editor 혹은 vimvi improved은 리눅스 체제에서 오랜 생명력을 자랑하는 텍스트 에디터로, gedit에 비해 명백하게 불편하지만 서버에 접속해서 CLI로 파</description></item><item><title>미분방정식으로 표현되는 시스템의 랴푸노프 스펙트럼과 그 수치적 계산법</title><link>https://freshrimpsushi.github.io/ko/posts/287/</link><pubDate>Fri, 03 Jan 2025 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/287/</guid><description>알고리즘 공간 $X = \mathbb{R}^{n}$ 와 함수 $f : X \to X$ 에 대해 다음과 같은 벡터필드가 미분 방정식으로 주어져 있다고 하자. $$ \dot{x} = f(x) $$ $f$ 의 자코비안 행렬 $J$ 에 대해 다음과 같이 변분</description></item><item><title>정규행렬의 정의</title><link>https://freshrimpsushi.github.io/ko/posts/286/</link><pubDate>Wed, 01 Jan 2025 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/286/</guid><description>정의 정방행렬 $A \in \mathbb{C}^{n \times n}$ 이 다음을 만족하면 정규행렬normal matrix이라 한다. $$ A A^{\ast} = A^{\ast} A $$ 여기서 $X^{\ast}$ 는 행렬 $X$ 의 켤레전치행렬이다. 설명 이를 작</description></item><item><title>KOSIS 국가데이터포털 소개</title><link>https://freshrimpsushi.github.io/ko/posts/284/</link><pubDate>Mon, 30 Dec 2024 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/284/</guid><description>소개 KOSIS 국가데이터포털은 국내·국제·북한의 주요 통계를 한 곳에 모아 이용자가 원하는 통계를 한 번에 찾을 수 있도록 통계청이 제공하는 One-Stop 통계 서비스로 400여 개 기</description></item><item><title>선형 시스템의 랴푸노프 스펙트럼</title><link>https://freshrimpsushi.github.io/ko/posts/283/</link><pubDate>Sat, 28 Dec 2024 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/283/</guid><description>정리 행렬 $A \in \mathbb{R}^{n \times n}$ 에 대해 다음과 같은 벡터필드가 선형 미분방정식으로 주어져 있다고 하자. $$ \dot{\mathbf{x}} = A \mathbf{x} \qquad , \mathbf{x} \in \mathbb{R}^{n} $$ 만약 $A$ 가 대칭행렬 이면, 이 시스템의 랴푸노</description></item><item><title>행정표준코드관리시스템 소개</title><link>https://freshrimpsushi.github.io/ko/posts/280/</link><pubDate>Thu, 26 Dec 2024 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/280/</guid><description>소개 행정표준코드관리시스템, 그 중에서도 이 포스트에서는 법정동코드목록조회에 대해 소개한다. 한국 데이터를 다룰 때 많이 유용한만큼 당장 필요하진 않아도 이런</description></item><item><title>랴푸노프 스펙트럼의 정의</title><link>https://freshrimpsushi.github.io/ko/posts/272/</link><pubDate>Tue, 24 Dec 2024 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/272/</guid><description>정의 공간 $X = \mathbb{R}^{n}$ 와 함수 $f : X \to X$ 에 대해 다음과 같은 벡터필드가 미분 방정식으로 주어져 있다고 하자. $$ \dot{x} = f(x) $$ 쉬운 정의 플로우 $F_{T} (v)$ 의 타임-$1$ 맵에 대한 다</description></item><item><title>Network Data Repository 소개</title><link>https://freshrimpsushi.github.io/ko/posts/271/</link><pubDate>Sun, 22 Dec 2024 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/271/</guid><description>소개 네트워크 데이터 원격저장소network data repository는 30가지 이상의 주제에 대해 수천가지의 다양한 네트워크를 제공하는 사이트다. 요구사</description></item><item><title>변분 방정식</title><link>https://freshrimpsushi.github.io/ko/posts/270/</link><pubDate>Fri, 20 Dec 2024 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/270/</guid><description>정의 1 2 공간 $X = \mathbb{R}^{n}$ 와 함수 $f : X \to X$ 에 대해 다음과 같은 벡터필드가 미분 방정식으로 주어져 있다고 하자. $$ \dot{x} = f(x) $$ $f$ 의 자코비안 행렬 $J$ 에 대해 다음을 변분 방정</description></item><item><title>Baseball Savant 소개</title><link>https://freshrimpsushi.github.io/ko/posts/269/</link><pubDate>Wed, 18 Dec 2024 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/269/</guid><description>소개 베이스볼 서번트Baseball Savant는 메이저 리그 베이스볼(MLB)의 데이터를 제공하는 사이트다. 요구사항 어떤 요구 사항도 없이 무제한적으</description></item><item><title>동역학계로써의 멤리스터 힌드마쉬-로즈 뉴런 모델</title><link>https://freshrimpsushi.github.io/ko/posts/268/</link><pubDate>Mon, 16 Dec 2024 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/268/</guid><description>개요 힌드마쉬-로즈 모델Hindmarsh-Rose model은 뉴런neuron에서 이온 채널ion channel과 관련된 전압의 변화를 설명하는 모</description></item><item><title>Web of Life 소개</title><link>https://freshrimpsushi.github.io/ko/posts/261/</link><pubDate>Sat, 14 Dec 2024 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/261/</guid><description>소개 웹 오브 라이프Web of Life는 취리히 대학에서 제공하는 생태계 네트워크 데이터와 관련 정보를 얻을 수 있는 사이트다. 요구사항 어떤 요구 사항도 없이 무제한</description></item><item><title>동역학계로써의 이중 진자</title><link>https://freshrimpsushi.github.io/ko/posts/259/</link><pubDate>Thu, 12 Dec 2024 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/259/</guid><description>모델 평면 상에서 진자pendulum의 끝에 하나의 진자가 더 있는 구조를 이중 진자double pendulum라 한다1. $$ \begin{align*} \ddot{\phi} =&amp;amp; \left[ 1 - \mu \cos^{2} \left( \psi - \phi \right) \right]^{-1}</description></item><item><title>줄리아에서 엑셀 XLSX 파일 읽는 법</title><link>https://freshrimpsushi.github.io/ko/posts/242/</link><pubDate>Tue, 10 Dec 2024 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/242/</guid><description>개요 줄리아에서 엑셀 통합 문서 확장자인 *.XLSX 파일을 읽는 방법에 대해 소개한다. CSV 파일을 읽는 것보다는 다소 까다롭지만 데이터 자체를 *.XLSX 파일로 얻을 수밖에 없고 그 파일</description></item><item><title>파이겐바움 보편성</title><link>https://freshrimpsushi.github.io/ko/posts/241/</link><pubDate>Sun, 08 Dec 2024 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/241/</guid><description>추측 $$ x \mapsto f_{\alpha} (x) \qquad , x \in \mathbb{R}^{1} $$ 위와 같이 정의된 맵으로 표현되는 동역학계가 $\alpha$ 를 바이퍼케이션 파라미터로 가지는 피리어드 더블링 바이퍼케이션을 보인다고 하자. $</description></item><item><title>줄리아에서 운영체제 확인하는 법</title><link>https://freshrimpsushi.github.io/ko/posts/233/</link><pubDate>Fri, 06 Dec 2024 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/233/</guid><description>개요 줄리아는 과학계산에 특화된 언어인만큼 여러 서버로 프로그램을 배포하고 실행할 일이 잦아 여러 운영체제에 대응할 수 있게 코드를 작성할 필요가 있다. 코드 운영체</description></item><item><title>네이막-삭커 바이퍼케이션</title><link>https://freshrimpsushi.github.io/ko/posts/190/</link><pubDate>Wed, 04 Dec 2024 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/190/</guid><description>정의 쉬운 정의 네이막-삭커 바이퍼케이션Neimark-Sacker bifurcation은 동역학계의 파라미터 변화에 따라 고정점에서 불변 폐곡선이 생</description></item><item><title>줄리아에서 그림의 가로축과 세로축 서로 바꾸는 법</title><link>https://freshrimpsushi.github.io/ko/posts/179/</link><pubDate>Mon, 02 Dec 2024 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/179/</guid><description>개요 줄리아에서 그림의 가로축과 세로축을 바꾸는 방법에 대해 소개한다. 코드 plot 함수의 인수로 permute = (:y, :x)를 통해 축의 순서를 바꾸면 된다. bar(name, height) bar(name, height, permute = (:y, :x)) 전체</description></item><item><title>피리어드 더블링 바이퍼케이션</title><link>https://freshrimpsushi.github.io/ko/posts/146/</link><pubDate>Sat, 30 Nov 2024 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/146/</guid><description>정의 쉬운 정의 피리어드 더블링 바이퍼케이션period-doubling bifurcation은 동역학계의 파라미터 변화에 따라 피리어딕 오빗의 주기가</description></item><item><title>SAMBA로 리눅스 클라이언트에서 윈도우 서버 접속하는 법</title><link>https://freshrimpsushi.github.io/ko/posts/143/</link><pubDate>Thu, 28 Nov 2024 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/143/</guid><description>개요 삼바samba는 윈도우와 리눅스 간의 파일 공유 기능을 제공하는 소프트웨어로, 이 포스트에서는 리눅스 클라이언트 측에서 윈도우 서버로 접속해 공유된 파일에</description></item><item><title>동역학에서 리미트사이클의 쌍곡성</title><link>https://freshrimpsushi.github.io/ko/posts/140/</link><pubDate>Tue, 26 Nov 2024 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/140/</guid><description>정의 유클리드 공간 $\mathbb{R}^{n}$ 와 오픈 셋 $U \subset \mathbb{R}^{n}$ 에서 연속인 함수 $f : U \to \mathbb{R}^{n}$ 에 대해 다음과 같은 벡터필드가 미분 방정식으로 주어져 있다고 하자. $$ \dot{x} = f(x) $$ 이 시스템의 리미트</description></item><item><title>크롬으로 리눅스에 원격접속하는 법 및 검은 화면 문제 해결법</title><link>https://freshrimpsushi.github.io/ko/posts/139/</link><pubDate>Sun, 24 Nov 2024 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/139/</guid><description>개요 리눅스의 경우 크롬 원격접속이 윈도우만큼 쉽지 않다. 검은 화면과 커서만 보일 뿐 사용할 수 없는 이슈가 있으니, 이를 해결하는 방법을 알아보자. 간단한 작업은 아</description></item><item><title>동역학에서 고정점의 쌍곡성</title><link>https://freshrimpsushi.github.io/ko/posts/128/</link><pubDate>Fri, 22 Nov 2024 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/128/</guid><description>정의 1 공간 $\mathbb{R}^{p}$ 와 스무스한 함수 $f , g : \mathbb{R}^{p} \to \mathbb{R}^{p}$ 에 대해 동역학계가 다음과 같이 벡터필드 혹은 맵으로 표현된다고 하자. $$ \dot{x} = f(x) \\ x \mapsto g(x) $$ 이들의 고정점 $\overline{x}$ 에서 얻은</description></item><item><title>줄리아에서 축에 원주율 기호 사용하는 법</title><link>https://freshrimpsushi.github.io/ko/posts/127/</link><pubDate>Wed, 20 Nov 2024 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/127/</guid><description>개요 줄리아에서 틱에 직접 원주율 기호를 쓰는 방법에 대해 설명한다. 사실 꼭 원주율일 필요는 없고, 튜플로 틱의 위치와 표기를 전달하면 얼마든지 다른 형태로로 응용할</description></item><item><title>호프 바이퍼케이션</title><link>https://freshrimpsushi.github.io/ko/posts/125/</link><pubDate>Mon, 18 Nov 2024 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/125/</guid><description>정의 호프 바이퍼케이션Hopf bifurcation은 동역학계의 파라미터 변화에 따라 고정점의 안정성이 반전되며 새로운 피리어딕 오빗이 나타나거나 사라지</description></item><item><title>국가별 ISO3와 위도 경도 데이터</title><link>https://freshrimpsushi.github.io/ko/posts/124/</link><pubDate>Sat, 16 Nov 2024 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/124/</guid><description>소개 특정한 사이트라기보단, ISO alpha-2, alpha-3와 국토 전역에서 평균을 취한 위도, 경도를 얻을 수 있는 Gist 페이지다. 개인에 의해 관리되고 있지만 간단한 시각화나</description></item><item><title>무한주기 바이퍼케이션</title><link>https://freshrimpsushi.github.io/ko/posts/123/</link><pubDate>Thu, 14 Nov 2024 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/123/</guid><description>정의 무한주기 바이퍼케이션infinite-period은 동역학계의 파라미터 변화에 따라 새들 포인트와 스테이블 노드를 포함하는 리미트 사이클이 나타나거</description></item><item><title>파워포인트에서 큰 직사각행렬 쉽게 만드는 법</title><link>https://freshrimpsushi.github.io/ko/posts/120/</link><pubDate>Tue, 12 Nov 2024 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/120/</guid><description>개요 파워포인트에서 직사각행렬을 넣고 싶을 땐 노가다 이전에 정석적인 방법이 있는지조차 파악하기 어렵다. 이차원 형식에 관련된 꿀팁을 발견해서 소개한다. 가이드</description></item><item><title>헤테로클리닉 바이퍼케이션</title><link>https://freshrimpsushi.github.io/ko/posts/119/</link><pubDate>Sun, 10 Nov 2024 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/119/</guid><description>정의 헤테로클리닉 바이퍼케이션heteroclinic bifurcation은 동역학계의 파라미터 변화에 따라 헤테로클리닉 오빗이 나타나거나 사라지는</description></item><item><title>파워포인트에서 큰 정사각행렬 쉽게 만드는 법</title><link>https://freshrimpsushi.github.io/ko/posts/115/</link><pubDate>Fri, 08 Nov 2024 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/115/</guid><description>개요 파워포인트에서 크기가 큰 정사각행렬을 넣고 싶을 땐 노가다를 할 수 밖에 없었는데, 이차원 형식에 관련된 꿀팁을 발견해서 소개한다. 가이드 수식에 검은 사각형 특</description></item><item><title>호모클리닉 바이퍼케이션</title><link>https://freshrimpsushi.github.io/ko/posts/114/</link><pubDate>Wed, 06 Nov 2024 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/114/</guid><description>정의 호모클리닉 바이퍼케이션homoclinic bifurcation은 동역학계의 파라미터 변화에 따라 호모클리닉 오빗이 나타나거나 사라지는 바이퍼케</description></item><item><title>파워포인트에서 등호 기준 정렬하는 법</title><link>https://freshrimpsushi.github.io/ko/posts/113/</link><pubDate>Mon, 04 Nov 2024 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/113/</guid><description>개요 파워포인트에서 수식을 사용할 때 등호 기준으로 정렬하는 법을 소개한다. 가이드 1. 수식 위와 같이 수식의 첫번째 줄이 주어져 있다고 하자. 2. 개행 shift + enter</description></item><item><title>호모클리닉 오빗과 헤테로클리닉 오빗</title><link>https://freshrimpsushi.github.io/ko/posts/107/</link><pubDate>Sat, 02 Nov 2024 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/107/</guid><description>정의1 공간 $X$ 와 함수 $f : X \to X$ 에 대해 다음과 같은 벡터필드가 미분방정식으로 주어져 있다고 하자. $$ \dot{x} = f(x) $$ 이 시스템의 한 플로우를 $\phi (t, x)$ 와 같이 나타내자. 호</description></item><item><title>커누스 윗화살표 표기: 프로그래밍에서 거듭제곱을 ^로 표현하는 이유</title><link>https://freshrimpsushi.github.io/ko/posts/105/</link><pubDate>Thu, 31 Oct 2024 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/105/</guid><description>정의 커누스의 윗화살표 표기Knuth&amp;rsquo;s up-arrow notation란 큰 정수를 나타내기 위해 고안한 표기법이다. 덧셈과 곱셈, 거듭제곱 덧셈addi</description></item><item><title>해석학에서의 널클라인</title><link>https://freshrimpsushi.github.io/ko/posts/99/</link><pubDate>Tue, 29 Oct 2024 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/99/</guid><description>정의 아이소클라인 곡선의 집합이 주어져 있다고 하자. 기울기가 같은 점들의 집합을 아이소클라인isocline이라 한다. 널클라인 $p$차원 상미분방정식이</description></item><item><title>확률분포의 헬링거 거리</title><link>https://freshrimpsushi.github.io/ko/posts/91/</link><pubDate>Sun, 27 Oct 2024 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/91/</guid><description>정의 다음과 같이 정의되는 확률분포 그 자체의 거리 함수를 헬링거 거리Hellinger distance라 한다. 이산 1 $p, q$ 를 확률질량함수라 하자. $p, q$ 의 헬</description></item><item><title>동역학에서의 티핑 포인트</title><link>https://freshrimpsushi.github.io/ko/posts/87/</link><pubDate>Fri, 25 Oct 2024 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/87/</guid><description>용어 동역학계에서 상태의 어떤 타입에서 다른 타입으로 급격한 전이를 겪는 것을 티핑 포인트 현상phenomenon of tipping point이라 한다1. 설명 티핑 포인트</description></item><item><title>그래프와 그래프 사이의 편집 거리</title><link>https://freshrimpsushi.github.io/ko/posts/85/</link><pubDate>Wed, 23 Oct 2024 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/85/</guid><description>정의 1 버텍스의 유한집합 $X$ 와 유한한 알파뱃의 집합을 $\alpha$ 이라 하자. 여기서 알파뱃은 공백 혹은 널null을 포함한다고 간주한다. 버텍스 라벨링vertex labeling $V</description></item><item><title>동역학에서의 이력 현상</title><link>https://freshrimpsushi.github.io/ko/posts/81/</link><pubDate>Mon, 21 Oct 2024 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/81/</guid><description>정의 파라미터의 변화에 따라 일어나는 동역학계의 변화가 비가역적irreversible인 현상을 이력 현상hysteresis라 한다1. 설명 예로써 위와</description></item><item><title>그래프와 그래프 사이의 스펙트럴 거리</title><link>https://freshrimpsushi.github.io/ko/posts/80/</link><pubDate>Sat, 19 Oct 2024 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/80/</guid><description>정의 버텍스의 수가 $n$ 인 두 그래프 $G_{1}$, $G_{2}$ 의 인접행렬을 $A_{1}$, $A_{2}$ 라 하자. 이들이 내림차순으로 정렬된 고유값, 즉 스펙트라spectra를 각각 다음과 같이 나타내자. $$</description></item><item><title>새들-노드 바이퍼케이션</title><link>https://freshrimpsushi.github.io/ko/posts/79/</link><pubDate>Thu, 17 Oct 2024 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/79/</guid><description>정의 쉬운 정의 새들-노드 바이퍼케이션saddle-node bifurcation은 동역학계의 파라미터 변화에 따라 고정점이 생성 혹은 소멸하는 바이퍼케</description></item><item><title>해밍 거리</title><link>https://freshrimpsushi.github.io/ko/posts/78/</link><pubDate>Tue, 15 Oct 2024 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/78/</guid><description>정의 자연수 $n \in \mathbb{N}$ 에 대해, 길이가 $n$인 코드 포인트code point의 집합 $\left\{ 0, 1 \right\}^{n}$ 에서 다음과 같이 정의된 거리 함수 $H$ 를 해밍 거리Hamming dis</description></item><item><title>트랜스크리티컬 바이퍼케이션</title><link>https://freshrimpsushi.github.io/ko/posts/77/</link><pubDate>Sun, 13 Oct 2024 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/77/</guid><description>정의 1 2 트랜스크리티컬 바이퍼케이션transcritical bifurcation은 동역학계의 파라미터 변화에 따라 두 고정점이 안정성을 교환하는 바</description></item><item><title>소금 후추 노이즈</title><link>https://freshrimpsushi.github.io/ko/posts/76/</link><pubDate>Fri, 11 Oct 2024 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/76/</guid><description>정의 이미지에 작은 점으로 흰 색이나 검은 색으로 나타나는 노이즈를 소금 후추 노이즈salt-and pepper noise라 한다. 예시 예로써 위의 이미지에 소금 후추 노이</description></item><item><title>양정부호 행렬의 실수 거듭제곱</title><link>https://freshrimpsushi.github.io/ko/posts/69/</link><pubDate>Wed, 09 Oct 2024 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/69/</guid><description>정의 양정부호인 행렬 $A \ge 0$ 와 실수 $t \in \mathbb{R}$ 에 대해 $A$ 의 $t$-거듭제곱$t$-power을 다음과 같이 정의한다. $$ A^{t} := \exp \left( t \log A \right) $$ 여기서 $\exp$ 와 $\log$ 는 각각</description></item><item><title>수학에서 그래프의 레이아웃</title><link>https://freshrimpsushi.github.io/ko/posts/68/</link><pubDate>Mon, 07 Oct 2024 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/68/</guid><description>개요 수학에서 그래프 혹은 네트워크의 레이아웃layout이라 함은 어쨌거나 2D 혹은 3D로 시각화할 때 구체적으로 버텍스와 에지를 어떻게 배치할지에 대한 알고리</description></item><item><title>행렬의 로그</title><link>https://freshrimpsushi.github.io/ko/posts/67/</link><pubDate>Sat, 05 Oct 2024 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/67/</guid><description>정의 지수함수 $\exp$ 와 로그 함수 $\log$ 를 행렬에 대해 일반화하려 한다. 행렬 지수 지수함수를 행렬에 대해 일반화한 $\exp : \mathbb{C}^{n \times n} \to \mathbb{C}^{n \times n}$ 은 행렬 $A \in \mathbb{C}^{n \times n}$ 에 대해 다음과 같이</description></item><item><title>줄리아 칼라 스킴에서 0부터 1 사이의 값으로 색 얻는 법</title><link>https://freshrimpsushi.github.io/ko/posts/46/</link><pubDate>Thu, 03 Oct 2024 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/46/</guid><description>개요 줄리아의 칼라 스킴에서 0부터 1 사이의 값으로 색을 얻으려면 get 함수를 사용한다1. 이 함수는 원래 Base에도 있지만 using ColorSchemes를 통해 오</description></item><item><title>에르미트 행렬의 로우너 순서</title><link>https://freshrimpsushi.github.io/ko/posts/26/</link><pubDate>Tue, 01 Oct 2024 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/26/</guid><description>정의 로우너 순서 두 행렬 $A, B \in \mathbb{C}^{n \times n}$ 가 에르미트 행렬이라고 하자. $\left( A - B \right)$ 가 양준정부호면 $A \ge B$ 와 같이 나타내고, $\left( A - B \right)$ 가 양정부호면 $A &amp;gt; B$ 와 같이 나</description></item><item><title>논문 리뷰: 콜모고로프-아놀드 신경망(KAN)</title><link>https://freshrimpsushi.github.io/ko/posts/322/</link><pubDate>Sun, 29 Sep 2024 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/322/</guid><description>개요 및 요약 Kolmogorov–Arnold Networks(KAN)은 그 이름 그대로 콜모고로프-아놀드 표현 정리Kolmogorov–Arno</description></item><item><title>줄리아 자연어 처리 패키지 TextAnaylsis.jl 소개</title><link>https://freshrimpsushi.github.io/ko/posts/24/</link><pubDate>Sun, 29 Sep 2024 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/24/</guid><description>개요 줄리아의 자연어처리 패키지인 TextAnaylsis.jl에 대해 가볍게 소개한다1. 실전적인 자연어처리를 위해서는 어간 추출stemming을 위</description></item><item><title>에르미트 행렬 공간과 양준정부호 행렬의 컨벡스 콘</title><link>https://freshrimpsushi.github.io/ko/posts/19/</link><pubDate>Fri, 27 Sep 2024 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/19/</guid><description>정의 $n \in \mathbb{N}$ 이라 하자. 에르미트 행렬 공간 크기가 $n \times n$ 인 에르미트행렬의 집합을 다음과 같이 나타낸다. $$ \mathbb{H}_{n} := \left\{ A \in \mathbb{C}^{n \times n} : A = A^{\ast} \right\} $$ 양정부호 행렬 집합 크기</description></item><item><title>줄리아의 심볼릭 연산 패키지 Symbolics.jl 소개</title><link>https://freshrimpsushi.github.io/ko/posts/18/</link><pubDate>Wed, 25 Sep 2024 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/18/</guid><description>개요 줄리아에서 심볼릭 대수 체계symbolic algebra system를 지원하는 패키지인 Symbolics.jl에 대해 소개한다1. 이 패키지는 특히 줄리아의</description></item><item><title>콘과 컨벡스 콘의 정의</title><link>https://freshrimpsushi.github.io/ko/posts/8/</link><pubDate>Mon, 23 Sep 2024 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/8/</guid><description>정의 1 콘 벡터공간 $V$ 의 부분집합 $C \subset V$ 가 모든 스칼라 $a &amp;gt; 0$ 와 $x \in C$ 에 대해 다음을 만족하면 $C$ 를 콘cone이라 한다. $$ ax \in C $$ 평평한 콘과 돌출된 콘 콘 $V$ 가 어</description></item><item><title>줄리아에서 이미지 상하반전, 좌우반전하는 법</title><link>https://freshrimpsushi.github.io/ko/posts/7/</link><pubDate>Sat, 21 Sep 2024 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/7/</guid><description>개요 줄리아에서 이미지를 상하반전하거나 좌우반전하는 방법을 소개한다. 상식적으로 Images.jl에 flip 같은 함수가 있을 것 같지만 없고1, Augment</description></item><item><title>자바스크립트 모듈 밖에서 함수 사용하는 법</title><link>https://freshrimpsushi.github.io/ko/posts/6/</link><pubDate>Thu, 19 Sep 2024 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/6/</guid><description>개요 자바스크립트에서 모듈의 함수는 외부에서 사용할 수 없다. 웹 환경에서 모듈은 &amp;lt;script type=&amp;quot;module&amp;quot;&amp;gt; 태그로 작성되며, 모듈 그 자체는 export를 통해 내보낼 수 있으나 해당 모</description></item><item><title>줄리아에서 장치 이름 및 계정 이름 참조하는 법</title><link>https://freshrimpsushi.github.io/ko/posts/902/</link><pubDate>Tue, 17 Sep 2024 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/902/</guid><description>개요 줄리아는 고성능 컴퓨팅을 지향하는만큼 일반적인 수준의 계산량을 훌쩍 넘겨서 복수의 서버를 사용할 가능성이 높다. 이 때 제어, 데이터 전송이나 로그 작성을 위해</description></item><item><title>줄리아에서 클립보드 사용하는 법</title><link>https://freshrimpsushi.github.io/ko/posts/2628/</link><pubDate>Sun, 15 Sep 2024 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/2628/</guid><description>개요 줄리아에서 클립보드를 사용하는 방법을 소개한다. 코드 clipboard는 두가지 메서드로 구현되어 있다. clipboard(x) 클립보드에 x를 복사한다. clipboard() 클립보드에서</description></item><item><title>vscode에서 자동줄바꿈 설정 바꾸는 법</title><link>https://freshrimpsushi.github.io/ko/posts/2627/</link><pubDate>Fri, 13 Sep 2024 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/2627/</guid><description>가이드 프로그래밍 언어와 마크업 언어를 둘 다 사용하다보면 줄바꿈을 설정해야할 경우가 있다. 단축키를 통해 간단하게 설정을 바꿀 수 있다. Alt+z ↕ Alt+z 환경 OS: Windows vscode: v1.86.2</description></item><item><title>줄리아에서 코드 성능 평가, 벤치마크 하는 법</title><link>https://freshrimpsushi.github.io/ko/posts/2626/</link><pubDate>Wed, 11 Sep 2024 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/2626/</guid><description>개요 줄리아를 사용하는 가장 큰 이유가 속도, 성능인만큼 공학적으로 최적화된 코드를 작성하는 일은 대단히 중요하다. BenchmarkTools.jl은 쉽고</description></item><item><title>vscode 여러 창 사용하는 법</title><link>https://freshrimpsushi.github.io/ko/posts/2625/</link><pubDate>Mon, 09 Sep 2024 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/2625/</guid><description>가이드 vscode에서는 탭과 터미널을 새로운 창으로 띄워서 여러 모니터를 사용할 수 있다. 탭 아무 탭에서 우클릭 후 [Copy into New Window]를 선택하면 새로운 창이</description></item><item><title>줄리아의 정렬순열 함수과 그 응용 sortperm</title><link>https://freshrimpsushi.github.io/ko/posts/2624/</link><pubDate>Sat, 07 Sep 2024 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/2624/</guid><description>코드 sortperm은 주어진 배열을 정렬이 되도록 하는 인덱스의 배열을 리턴한다1. 말만 보면 어려워 보이지만 예시를 보면 한 번에 이해가 된다. julia&amp;gt; foo = [&amp;#3</description></item><item><title>vscode 기본 스니펫 경로</title><link>https://freshrimpsushi.github.io/ko/posts/2623/</link><pubDate>Thu, 05 Sep 2024 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/2623/</guid><description>가이드 vscode에서 기본 스니펫 경로는 다음과 같다. C:\Users\사용자이름\AppData\Local\Programs\Microso</description></item><item><title>줄리아에서 홑원소집합의 원소에 접근하는 함수 only</title><link>https://freshrimpsushi.github.io/ko/posts/2622/</link><pubDate>Tue, 03 Sep 2024 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/2622/</guid><description>개요 집합론에서 말하는 홑원소 집합 $\left\{ a \right\}$ 와 그 원소 $a$ 가 엄연히 다르듯, 프로그래밍에서 원소를 하나만 가지는 컬렉션 [a]와 그 유일한 원소 a는 다르다. 매트랩등</description></item><item><title>감마함수의 단순극</title><link>https://freshrimpsushi.github.io/ko/posts/2621/</link><pubDate>Sun, 01 Sep 2024 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/2621/</guid><description>정리 복소함수로써의 감마함수 $\Gamma$ 의 정의역은 다음과 같다. $$ \mathbb{C} \setminus \left( \mathbb{Z} \setminus \mathbb{N} \right) = \mathbb{C} \setminus \left\{ 0 , -1, -2, \cdots \right\} $$ 그 뿐만 아니라, $\Gamma$ 의 특이점의 집합 $\left( \mathbb{Z} \setminus \mathbb{N} \right)$ 은 단순극의 집</description></item><item><title>줄리아 vscode에서 데이터프레임 깔끔하게 보는 법</title><link>https://freshrimpsushi.github.io/ko/posts/2620/</link><pubDate>Fri, 30 Aug 2024 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/2620/</guid><description>가이드 1 julia&amp;gt; using DataFrames julia&amp;gt; df = DataFrame(a = 10:-1:1, b = &amp;#39;a&amp;#39;:&amp;#39;j&amp;#39;) 10×2 DataFrame Row │ a b │ Int64 Char ─────┼───────────── 1 │ 10 a 2 │ 9 b 3 │ 8 c 4 │ 7 d 5 │ 6 e 6 │ 5</description></item><item><title>하이퍼그래프의 정의</title><link>https://freshrimpsushi.github.io/ko/posts/2619/</link><pubDate>Wed, 28 Aug 2024 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/2619/</guid><description>정의 어떤 유한집합 $V \ne \emptyset$ 을 하이퍼버텍스 셋hypervertex set이라 한다. 하이퍼에지hyperedge란 하이퍼버텍스 셋의 부분집합을 말하고,</description></item><item><title>줄리아에서 의사결정나무 사용하는 법</title><link>https://freshrimpsushi.github.io/ko/posts/2618/</link><pubDate>Mon, 26 Aug 2024 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/2618/</guid><description>개요 줄리아에서 의사결정나무decision Tree를 구현한 DecisionTree.jl 패키지를 소개한다1. 코드 예시로는 대표적인 R 내장데이터인 iris 데이터를 사용한다. 우리의</description></item><item><title>감마함수의 1에서의 미분계수</title><link>https://freshrimpsushi.github.io/ko/posts/2617/</link><pubDate>Sat, 24 Aug 2024 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/2617/</guid><description>정리 감마함수 $\Gamma$ 과 오일러-마스케로니 상수 $\gamma$ 대해 다음이 성립한다. $$ \Gamma ' (1) = - \gamma $$ 증명 1 감마함수의 도함수와 역수의 곱: $$ {{ \Gamma ' (z) } \over { \Gamma (z) }} = - \gamma +</description></item><item><title>줄리아에서 컬렉션의 중복을 없애는 법</title><link>https://freshrimpsushi.github.io/ko/posts/2616/</link><pubDate>Thu, 22 Aug 2024 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/2616/</guid><description>개요 줄리아에서 컬렉션의 중복을 없애고 체크하는 법을 소개한다. 중복을 없애주는 unique() 함수는 게 알고리즘적으로 봤을 때 전혀 어려울 게 없지만 막상 직접 구현하려면 귀찮</description></item><item><title>디감마함수: 감마함수의 도함수와 역수의 곱</title><link>https://freshrimpsushi.github.io/ko/posts/2615/</link><pubDate>Tue, 20 Aug 2024 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/2615/</guid><description>정의 로그 감마함수의 도함수를 디감마 함수digamma function라 한다. $$ \psi_{0} (z) := \dfrac{d}{dz} \ln \Gamma (z) = \dfrac{\Gamma^{\prime}(z)}{\Gamma (z)} $$ 정리 감마함수 $\Gamma$ 과 오일러-마스케로니 상수 $\gamma$ 대</description></item><item><title>피치포크 바이퍼케이션</title><link>https://freshrimpsushi.github.io/ko/posts/2614/</link><pubDate>Tue, 20 Aug 2024 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/2614/</guid><description>정의 1 2 피치포크 바이퍼케이션pitchfork bifurcation은 동역학계의 파라미터 변화에 따라 고정점의 안정성이 반전되며 새로운 두 개의 고정점</description></item><item><title>줄리아에서 클러스터링 패키지 사용하는 법</title><link>https://freshrimpsushi.github.io/ko/posts/2613/</link><pubDate>Fri, 16 Aug 2024 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/2613/</guid><description>개요 줄리아에서는 클러스터링을 위한 패키지로써 Clustering.jl이 제공된다1. 구현되어 있는 알고리즘으로는 다음과 같은 것들이 있다: K-means K-medoids Affinity Propagation Density-based</description></item><item><title>동역학계로써의 진동 충격 모델</title><link>https://freshrimpsushi.github.io/ko/posts/2612/</link><pubDate>Wed, 14 Aug 2024 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/2612/</guid><description>개요 진동 충격 모델vibro-impact model은 진동하는 원통형 관 속에 있는 물체의 움직임을 나타내는 넌스무스한 다이내믹 시스템으로, 크게 하드와 소</description></item><item><title>줄리아 플럭스에서 GPU 사용하는 법</title><link>https://freshrimpsushi.github.io/ko/posts/2611/</link><pubDate>Mon, 12 Aug 2024 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/2611/</guid><description>개요 줄리아의 머신러닝 라이브러리인 Flux.jl을1 통해 딥러닝을 구현하되, GPU를 통해 성능을 학습을 가속시키는 방법에 대해 소개한다. GPU를 사용하</description></item><item><title>동역학에서 벡터필드의 노멀 폼</title><link>https://freshrimpsushi.github.io/ko/posts/2610/</link><pubDate>Sat, 10 Aug 2024 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/2610/</guid><description>정의 $p(x;r)$ 가 어떤 다항함수라 하자. $$ \dot{x} = p(x; r) $$ 동역학계의 성질을 설명하기 위해 위와 같이 간략화된 벡터필드를 노멀 폼normal form이라 한다. 설명 동역학</description></item><item><title>줄리아의 자동미분 패키지 Zygote.jl</title><link>https://freshrimpsushi.github.io/ko/posts/2609/</link><pubDate>Thu, 08 Aug 2024 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/2609/</guid><description>개요 줄리아에서는 머신러닝, 특히 딥러닝에 관련된 자동 미분automatic Differentiation을 위해 Zygote.jl이라는 패키지를 사</description></item><item><title>동역학에서의 바이퍼케이션</title><link>https://freshrimpsushi.github.io/ko/posts/2608/</link><pubDate>Tue, 06 Aug 2024 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/2608/</guid><description>정의 1 2 동역학계에서 파라미터들의 변화 하에서 페이즈 포트레이트의 위상적 불일치topological nonequivalent가 나타나는 것을 바이퍼</description></item><item><title>줄리아에서 함수로 구조체의 프로퍼티 참조하는 법</title><link>https://freshrimpsushi.github.io/ko/posts/2607/</link><pubDate>Sun, 04 Aug 2024 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/2607/</guid><description>개요 줄리아에서 구조체의 프로퍼티를 참조하는 방법은 크게 두 가지가 있다. 문법적인 편의나 실제 용도에 따라 적절하게 사용해야한다. 코드 예시로써 줄리아에서 // 연</description></item><item><title>수리통계학에서의 주성분 분석 PCA</title><link>https://freshrimpsushi.github.io/ko/posts/2606/</link><pubDate>Fri, 02 Aug 2024 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/2606/</guid><description>개요 주성분 분석은 회귀분석에서 다중공선성을 회피하고 데이터를 요약하는 등 통계학에서 많은 쓰임새가 있고, 머신러닝에서도 차원축소라는 중요한 의미를 가진다.</description></item><item><title>줄리아에서 벡터필드 그리는 법</title><link>https://freshrimpsushi.github.io/ko/posts/2605/</link><pubDate>Wed, 31 Jul 2024 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/2605/</guid><description>코드 quiver(, quiver=) 줄리아에서는 quiver() 함수를 통해 벡터필드를 시각화할 수 있다. θ = 0:0.2:2π quiver(cos.(θ),sin.(θ), quiver = (-sin.</description></item><item><title>양정부호 행렬의 고유값과 이차형식의 최대값</title><link>https://freshrimpsushi.github.io/ko/posts/2604/</link><pubDate>Mon, 29 Jul 2024 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/2604/</guid><description>정리 양의 정부호 행렬 $A \in \mathbb{R}^{p \times p}$ 의 고유쌍 $\left\{ \left( \lambda_{k} , e_{k} \right) \right\}_{k=1}^{n}$ 이 $\lambda_{1} \ge \cdots \ge \lambda_{n} \ge 0$ 순으로 정렬되어 있다고 하자. 단위 구unit Sphere 상에서 이차 형식 $\mathbf{x}^{T} A \mathbf{x}$ 의 최대값과 최</description></item><item><title>줄리아에서 배열의 특정 위치를 함수로 참조하는 법</title><link>https://freshrimpsushi.github.io/ko/posts/2603/</link><pubDate>Sat, 27 Jul 2024 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/2603/</guid><description>개요 여러 개의 배열이 주어져 있을 때 이들의 특정 원소, 예를 들어 각각의 배열마다 3번째 원소에 접근하고 싶은 상황이 생각보다 많다. 줄리아에서는 getindex() 함수의 브로드캐</description></item><item><title>양정부호 행렬과 확장된 코시-슈바르츠 부등식 증명</title><link>https://freshrimpsushi.github.io/ko/posts/2602/</link><pubDate>Thu, 25 Jul 2024 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/2602/</guid><description>정리 1 임의의 두 벡터 $\mathbf{b}, \mathbf{d} \in \mathbf{R}^{p}$ 와 양의 정부호 행렬 $A \in \mathbf{R}^{p \times p}$ 에 대해 다음의 부등식이 성립한다. $$ \left( \mathbf{b}^{T} \mathbf{d} \right)^{2} \le \left( \mathbf{b}^{T} A \mathbf{b} \right) \left( \mathbf{d}^{T} A^{-1} \mathbf{d} \right) $$ 이것이 등식이 되는 동치조건</description></item><item><title>줄리아에서 리스트로 패키지 불러오는 방법</title><link>https://freshrimpsushi.github.io/ko/posts/2601/</link><pubDate>Tue, 23 Jul 2024 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/2601/</guid><description>개요 줄리아에서 패키지를 불러오는 방법은 using을 사용하는 것이지만, 프로그램이 커지게 되면 그걸 일일이 적고 있는 것도 일이 된다. 반복분을 통해 패키지를 로</description></item><item><title>데이터의 정규화</title><link>https://freshrimpsushi.github.io/ko/posts/2600/</link><pubDate>Sun, 21 Jul 2024 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/2600/</guid><description>용어 정규화 주어진 데이터를 $0$ 부터 $1$ 사이의 값으로 변환하는 것을 정규화normalization라 한다. 흔히 데이터의 최대값 $x_{\text{max}}$ 과 최소값 $x_{\text{min}}$ 에 대해 다음과 같</description></item><item><title>줄리아에서 행렬을 칼럼별로 정규화하는 법</title><link>https://freshrimpsushi.github.io/ko/posts/2599/</link><pubDate>Fri, 19 Jul 2024 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/2599/</guid><description>개요 줄리아에서 행렬의 정규화를 간단히 하는 팁을 소개한다1. 근본적으로 행렬을 행별, 열별로 스칼라곱하는 법과 eachcol() 함수, LinearAlgebra 모듈의 norm() 함수를 섞어 쓴 것에 불과하지</description></item><item><title>대학원생 하강법</title><link>https://freshrimpsushi.github.io/ko/posts/2598/</link><pubDate>Wed, 17 Jul 2024 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/2598/</guid><description>빌드업 냉장코-코끼리 문제 전통적으로 코끼리를 냉장고에 넣는 방법은 대학원생에게 의존해왔다. 얼마나 어려울지, 힘들지, 어떤 방법이 좋은지는 잘 모르겠지만 그</description></item><item><title>줄리아에서 행렬을 행별, 열별로 스칼라곱하는 법</title><link>https://freshrimpsushi.github.io/ko/posts/2597/</link><pubDate>Mon, 15 Jul 2024 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/2597/</guid><description>개요 줄리아의 행렬에 행별, 열별로 스칼라곱하는 법을 소개한다. 코드 julia&amp;gt; d = 1:10 1:10 julia&amp;gt; X = ones(Int64, 10, 10) 10×10 Matrix{Int64}: 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1</description></item><item><title>그리드 서치, 브루트 포스, 노가다</title><link>https://freshrimpsushi.github.io/ko/posts/2596/</link><pubDate>Sat, 13 Jul 2024 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/2596/</guid><description>용어 그리드 서치 주로 최적화 문제에서, 유클리드 공간 $\mathbb{R}^{n}$ 을 격자grid로 나누고 가능한 많은 점에 대해 시도를 반복해 최적해를 찾는 방식을 그리드 서치grid se</description></item><item><title>PLU 분해</title><link>https://freshrimpsushi.github.io/ko/posts/2/</link><pubDate>Thu, 11 Jul 2024 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/2/</guid><description>정의 1 2 순열 행렬 $P^{T}$ 와 가역행렬 $A \in \mathbb{R}^{n \times n}$ 에 대해, 그들의 행렬곱 $P^{T} A$ 의 LU 분해를 $A$ 의 PLU 분해permutation LU decomposition라 한다.</description></item><item><title>순열 행렬</title><link>https://freshrimpsushi.github.io/ko/posts/1/</link><pubDate>Tue, 09 Jul 2024 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/1/</guid><description>정의 1 각 행마다 하나의 성분만 $1$ 이고 나머지가 $0$ 인 정방행렬 $P \in \mathbb{R}^{n \times n}$ 을 순열 행렬permutation matrix이라 한다. 기초 성질 직교성 모든 순열 행</description></item><item><title>동역학에서의 아토피성 피부염 시스템</title><link>https://freshrimpsushi.github.io/ko/posts/2595/</link><pubDate>Sun, 07 Jul 2024 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/2595/</guid><description>모델 다음의 넌스무스 다이내믹 시스템을 아토피성 피부염 시스템atopic dermatitis system이라 한다. $$ \begin{align*} {{ d P (t) } \over { d t }} =&amp;amp; {{ P_{\text{env}} \kappa_{P} } \over { 1 + \gamma_{B} B (t) }}</description></item><item><title>초모수, 하이퍼 파라미터란?</title><link>https://freshrimpsushi.github.io/ko/posts/2594/</link><pubDate>Fri, 05 Jul 2024 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/2594/</guid><description>용어 베이지안 통계학 1 베이지안 패러다임에서, 다음을 베이지안 계층적 모델Bayesian hierarchical model이라 한다. (1) 데이터 $y_{1} , \cdots , y_{n}$ 가 파라미터 $\theta_{1} , \cdots ,</description></item><item><title>동역학계로써의 DC-DC 벅 컨버터</title><link>https://freshrimpsushi.github.io/ko/posts/2593/</link><pubDate>Wed, 03 Jul 2024 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/2593/</guid><description>모델 위와 같은 회로도1의 전압 $V$ 와 전류 $I$ 는 다음과 같은 비자율적 넌스무스 시스템으로 나타낼 수 있다2. 이를 DC-DC 벅 컨버터DC-DC Buck Converter라 부른</description></item><item><title>양정부호 행렬의 역행렬과 제곱근 행렬</title><link>https://freshrimpsushi.github.io/ko/posts/2592/</link><pubDate>Mon, 01 Jul 2024 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/2592/</guid><description>공식 1 양의 정부호 행렬 $A$ 의 고유쌍 $\left\{ \left( \lambda_{k} , e_{k} \right) \right\}_{k=1}^{n}$ 이 $\lambda_{1} &amp;gt; \cdots &amp;gt; \lambda_{n} &amp;gt; 0$ 순으로 정렬되어 있다고 하자. 직교행렬 $P = \begin{bmatrix} e_{1} &amp;amp; \cdots &amp;amp; e_{n} \end{bmatrix} \in \mathbb{R}^{n \times n}$ 와 대각행렬 $\Lambda = \diag \left( \lambda_{1}</description></item><item><title>슬로우-패스트 시스템</title><link>https://freshrimpsushi.github.io/ko/posts/2591/</link><pubDate>Sat, 29 Jun 2024 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/2591/</guid><description>정의 1 슬로우-패스트 시스템 유클리드 공간의 열린 부분집합 $W \subset \mathbb{R}^{m + n}$ 의 원소가 $\left( \mathbf{x}, \mathbf{y} \right)$ 와 같이 나타난다고 하자. $k \in \mathbb{N}$ 인 $C^{k}$ 클래스에 속하는 두 함수 $\mathbf{f} : W \times [0,1]</description></item><item><title>스펙트럴 분해</title><link>https://freshrimpsushi.github.io/ko/posts/2590/</link><pubDate>Thu, 27 Jun 2024 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/2590/</guid><description>정의 1 스펙트럴 이론: $A$ 가 에르미트 행렬인 것과 유니터리 대각화 가능한 것은 동치다: $$ A = A^{\ast} \iff A = Q \Lambda Q^{\ast} $$ 스펙트럴 이론에서 말하는 $A = Q \Lambda Q^{\ast}$ 를 다음과 같이</description></item><item><title>동역학에서의 넌스무스 시스템</title><link>https://freshrimpsushi.github.io/ko/posts/2589/</link><pubDate>Tue, 25 Jun 2024 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/2589/</guid><description>용어 $S_{k} \subset \mathbb{R}^{n}$ 에서 정의된 $f_{k} : S_{k} \to \mathbb{R}^{n}$ 에 대한 조각마다 스무스한 시스템 $$ \dot{x} = f_{k} (x) \qquad , k = 1, \cdots, s $$ 혹은 다가사상 $F : \mathbb{R}^{n} \rightrightarrows \mathbb{R}^{n}$ 에 대한 미분포함식 $$ \dot{x} \in F(x) $$ 로 표현되</description></item><item><title>정부호 행렬은 에르미트 행렬이다</title><link>https://freshrimpsushi.github.io/ko/posts/2588/</link><pubDate>Sun, 23 Jun 2024 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/2588/</guid><description>정리 정부호 행렬 $A \in \mathbb{C}^{n \times n}$ 은 에르미트행렬이다. 물론, 준정부호 행렬 또한 에르미트행렬이다. 증명 1 $$ \mathbf{x}^{\ast} A \mathbf{x} = \lambda $$ $A$ 가 정부호 행렬이면 모든 $\mathbf{x} \in \mathbb{C}^{n}$ 에 대해 위</description></item><item><title>미분포함식의 정의</title><link>https://freshrimpsushi.github.io/ko/posts/2587/</link><pubDate>Fri, 21 Jun 2024 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/2587/</guid><description>정의 1 미분포함식 다가사상, 혹은 집합값 사상multivalued mapping $F : \mathbb{R}^{n} \to \mathbb{R}^{n}$ 에 대해 다음과 같이 $x \in \mathbb{R}^{n}$ 에서의 도함수 $\dot{x} = dx/dt$ 가 집합 $F(x)$ 의 원소 중 하나라는 것</description></item><item><title>이차 형식이 0이 되는 필요충분조건</title><link>https://freshrimpsushi.github.io/ko/posts/2586/</link><pubDate>Wed, 19 Jun 2024 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/2586/</guid><description>정리 행렬 폼 $A \in \mathbb{C}^{n \times n}$ 는 행렬을 나타내고 $\mathbf{x} \in \mathbb{C}^{n}$ 는 벡터를 나타낸다고 하자. 모든 $\mathbf{x} \in \mathbb{C}^{n}$ 에 대해 이차형식 $\mathbf{x}^{\ast} A \mathbf{x}$ 이 $0$ 이 되는 필요충분조건은 $A$ 가 영행렬인 것이다:</description></item><item><title>동역학에서의 조각마다 스무스한 시스템</title><link>https://freshrimpsushi.github.io/ko/posts/2585/</link><pubDate>Mon, 17 Jun 2024 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/2585/</guid><description>정의 피스와이즈 스무스 시스템 상태공간이 $\mathbb{R}^{n}$ 인 동역학계가 변수 $x \in \mathbb{R}^{n}$ 와 파라미터 $\mu \in \mathbb{R}^{p}$ 에 대해 다음과 같이 나타난다고 하자. $$ \dot{x} = f \left( x ; \mu \right) \qquad x \in \mathbb{R}^{n} , \mu \in</description></item><item><title>상미분환과 편미분환</title><link>https://freshrimpsushi.github.io/ko/posts/2584/</link><pubDate>Sat, 15 Jun 2024 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/2584/</guid><description>정의 1 링 $R$ 에서 정의되는 대수적 미분 $\Delta = \left\{ \partial_{1} , \cdots , \partial_{n} \right\}$ 들이 모든 $i,j = 1, \cdots, n$ 에 대해 $$ \partial_{i} \left( \partial_{j} (r) \right) = \partial_{j} \left( \partial_{i} (r) \right) \qquad \forall r \in R $$ 를 만족하면 순서쌍 $\left( R , \Delta \right)$ 를 편</description></item><item><title>일반적인 다가사상, 집합값 사상의 정의</title><link>https://freshrimpsushi.github.io/ko/posts/2583/</link><pubDate>Thu, 13 Jun 2024 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/2583/</guid><description>정의 1 2 3 두 집합 $X, Y$ 과 $Y$ 의 멱집합 $\mathcal{P} (Y)$ 에 대해 함수 $f : X \to \mathcal{P} (Y)$ 를 다가사상multivalued mapping 혹은 집합값 사상set-valued mapping</description></item><item><title>추상대수에서의 미분체</title><link>https://freshrimpsushi.github.io/ko/posts/2582/</link><pubDate>Tue, 11 Jun 2024 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/2582/</guid><description>정의 1 $R$ 이 (아벨리안) 링이라 하자. 다음을 만족하는 함수 $d: R \to R$ 을 미분derivation이라 하고, $$ \begin{align*} d \left( x + y \right) =&amp;amp; d (x) + d(y) \\ d \left( x y \right) =&amp;amp; d (x)</description></item><item><title>신디 알고리즘이란?</title><link>https://freshrimpsushi.github.io/ko/posts/2581/</link><pubDate>Sun, 09 Jun 2024 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/2581/</guid><description>알고리즘 1 상태공간이 $\mathbb{R}^{n}$ 인 동역학계가 다음과 같이 스무스 함수 $f : \mathbb{R}^{n} \to \mathbb{R}^{n}$ 에 의해 주어진다고 하자. $$ \dot{\mathbf{x}} = f \left( \mathbf{x} \right) $$ 간단히 $\mathbf{x} = \left( x_{1} , \cdots , x_{n} \right)$ 그리고 $\dot{\mathbf{x}} = \left( \dot{x_{1}}</description></item><item><title>추상대수에서의 미분환</title><link>https://freshrimpsushi.github.io/ko/posts/2580/</link><pubDate>Fri, 07 Jun 2024 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/2580/</guid><description>정의 미분환 1 $R$ 이 (아벨리안) 링이라 하자. 다음을 만족하는 함수 $d: R \to R$ 을 (대수적) 미분algebraic derivation이라 한다. $$ \begin{align*} d \left( x</description></item><item><title>STLSQ이란?</title><link>https://freshrimpsushi.github.io/ko/posts/2579/</link><pubDate>Wed, 05 Jun 2024 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/2579/</guid><description>알고리즘 STLSQ 풀 랭크인 행렬 $X \in \mathbb{R}^{m \times p}$ 와 $Y \in \mathbb{R}^{m \times n}$ 에 대해 행렬방정식 $$ Y = X B $$ 이 주어졌을 때, 가능한 한 스파스한 $B \in \mathbb{R}^{p \times n}$ 을 찾는 스파스 회귀 문제를 생각해</description></item><item><title>분수환과 분수체</title><link>https://freshrimpsushi.github.io/ko/posts/2578/</link><pubDate>Mon, 03 Jun 2024 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/2578/</guid><description>정의 1 링 $\left( A , + , \cdot \right)$ 에 대해 $S := A^{\ast} = A \setminus \left\{ 0 \right\}$ 는 $A$ 에서 덧셈 $+$ 에 대한 항등원 $0$ 이 빠진 부분집합 $S \subset A$ 이라고 하자. 분수체 $A$ 가 인티그럴 도메인이라고 하자</description></item><item><title>균등 불확정성 원리: 제한된 등거리 조건</title><link>https://freshrimpsushi.github.io/ko/posts/2577/</link><pubDate>Sat, 01 Jun 2024 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/2577/</guid><description>정의 $$ \begin{align*} \left\| \mathbf{v} \right\|_{0} :=&amp;amp; \left| \operatorname{supp} \mathbf{v} \right| \\ =&amp;amp; \operatorname{card} \left\{ k : \left( \mathbf{v} \right) _{k} \ne 0 \right\} \end{align*} $$ 벡터공간 $V$ 의 벡터 $\mathbf{v} \in V$ 에 대해 $l_{0}$-놈 $\left\| \mathbf{v} \right\|_{0} : V \to \mathbb{Z}$ 을 위와 같이 서포트의 카디널러</description></item><item><title>수학에서 클로즈드 폼이란?</title><link>https://freshrimpsushi.github.io/ko/posts/2576/</link><pubDate>Thu, 30 May 2024 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/2576/</guid><description>용어 1 수학에서 함수의 클로즈드 폼 익스프레션closed form expression이란 유한한 횟수의 기호와 사칙연산 $+, -, \cdot, \div$, 그리고 잘 알려진 몇 가지의 함수들</description></item><item><title>압축 센싱이란?</title><link>https://freshrimpsushi.github.io/ko/posts/2575/</link><pubDate>Tue, 28 May 2024 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/2575/</guid><description>정의 $$ \mathbf{y} = \Theta \mathbf{s} $$ $\Theta \in \mathbb{R}^{n \times p}$ 에 대해 $n \ll p$ 일 때, 다시 말해 과소결정계라서 위의 행렬방정식을 만족하는 해 $\mathbf{s}$ 가 무수히 많이 존재한다고 하자. 이 행렬방정식을 만족</description></item><item><title>줄리아에서 String7, String15 없이 데이터프레임 부르는 법</title><link>https://freshrimpsushi.github.io/ko/posts/2574/</link><pubDate>Sun, 26 May 2024 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/2574/</guid><description>에러 줄리아에서 데이터프레임을 사용하다보면 위와 같이 문자열 데이터가 String7이나 String15, String31와 같이 읽혀서 각종 에러를 유발할 때가 있다. 구체</description></item><item><title>편미분의 기호를 다르게 쓰는 이유</title><link>https://freshrimpsushi.github.io/ko/posts/2573/</link><pubDate>Fri, 24 May 2024 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/2573/</guid><description>질문 편도함수에는 보통의 미분과 달리 $\displaystyle {{ d f } \over { d t }}$ 대신 $\displaystyle {{ \partial f } \over { \partial t }}$ 과 같은 표현을 사용한다. $\partial$ 은 [라운드-디]round dee 혹은 [파셜]</description></item><item><title>줄리아 서브플랏에서 전체 타이틀 추가하는 법</title><link>https://freshrimpsushi.github.io/ko/posts/2572/</link><pubDate>Wed, 22 May 2024 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/2572/</guid><description>개요 줄리아에서 그림을 그릴 때 title로 타이틀을 입력하면 서브플랏 모두에 적용되므로, plot_title을 사용해야한다1. 이는 서브플랏을 가진 플랏</description></item><item><title>라쏘 회귀란?</title><link>https://freshrimpsushi.github.io/ko/posts/2571/</link><pubDate>Mon, 20 May 2024 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/2571/</guid><description>정의 $$ \begin{bmatrix} y_{1} \\ y_{2} \\ \vdots \\ y_{n} \end{bmatrix} = \begin{bmatrix} 1 &amp;amp; x_{11} &amp;amp; \cdots &amp;amp; x_{p1} \\ 1 &amp;amp; x_{12} &amp;amp; \cdots &amp;amp; x_{p2} \\ \vdots &amp;amp; \vdots &amp;amp; \ddots &amp;amp; \vdots \\ 1 &amp;amp; x_{1n} &amp;amp; \cdots &amp;amp; x_{pn} \end{bmatrix} \begin{bmatrix} \beta_{0} \\ \beta_{1} \\ \vdots \\ \beta_{p} \end{bmatrix} + \begin{bmatrix} \varepsilon_{1} \\ \varepsilon_{2} \\ \vdots \\ \varepsilon_{n} \end{bmatrix} $$ $n$ 개의 데</description></item><item><title>줄리아 그림에서 축의 값만 지우는 법</title><link>https://freshrimpsushi.github.io/ko/posts/2570/</link><pubDate>Sat, 18 May 2024 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/2570/</guid><description>개요 줄리아에서 그림의 컬러바, 축, 눈금, 그리드 등을 지우는 방법은 있지만 그래픽적인 요소를 건드리기 때문에 숫자만 깔끔하게 지울 수가 없고, formatte</description></item><item><title>함수로써의 하드 쓰레숄딩과 소프트 쓰레숄딩</title><link>https://freshrimpsushi.github.io/ko/posts/2569/</link><pubDate>Thu, 16 May 2024 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/2569/</guid><description>정의 1 역치threshold $\lambda \in \mathbb{R}$ 가 주어져 있다고 하자. 하드 쓰레숄딩 다음과 같이 정의된 $\eta _{H} \left( x ; \lambda \right) : \mathbb{R} \to \mathbb{R}$ 을 하드 쓰레숄딩hard thresho</description></item><item><title>줄리아에서 유한차분 사용하는 법</title><link>https://freshrimpsushi.github.io/ko/posts/2568/</link><pubDate>Tue, 14 May 2024 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/2568/</guid><description>개요 줄리아에서 유한차분법을 사용하려면, 더 정확히 유한차분의 계수를 구하기 위해서는 FiniteDifferences.jl를 써봄직하다1. 노이즈에</description></item><item><title>리지 회귀란?</title><link>https://freshrimpsushi.github.io/ko/posts/2567/</link><pubDate>Sun, 12 May 2024 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/2567/</guid><description>정의 $$ \begin{bmatrix} y_{1} \\ y_{2} \\ \vdots \\ y_{n} \end{bmatrix} = \begin{bmatrix} 1 &amp;amp; x_{11} &amp;amp; \cdots &amp;amp; x_{p1} \\ 1 &amp;amp; x_{12} &amp;amp; \cdots &amp;amp; x_{p2} \\ \vdots &amp;amp; \vdots &amp;amp; \ddots &amp;amp; \vdots \\ 1 &amp;amp; x_{1n} &amp;amp; \cdots &amp;amp; x_{pn} \end{bmatrix} \begin{bmatrix} \beta_{0} \\ \beta_{1} \\ \vdots \\ \beta_{p} \end{bmatrix} + \begin{bmatrix} \varepsilon_{1} \\ \varepsilon_{2} \\ \vdots \\ \varepsilon_{n} \end{bmatrix} $$ $n$ 개의 데</description></item><item><title>줄리아에서 수치해석적 인터폴레이션 하는 법</title><link>https://freshrimpsushi.github.io/ko/posts/2566/</link><pubDate>Fri, 10 May 2024 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/2566/</guid><description>개요 줄리아에서는 수치해석적인 인터폴레이션을 위해 Interpolations.jl 패키지를 사용한다1. 줄리아에서는 변수의 값을 출력할 때 사용하는 보간법과 혼동될 수 있으니 주의하자. 코</description></item><item><title>잔차제곱합의 그래디언트</title><link>https://freshrimpsushi.github.io/ko/posts/2565/</link><pubDate>Wed, 08 May 2024 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/2565/</guid><description>개요 통계학 및 머신러닝의 많은 회귀문제에서는 다음과 같이 잔차제곱합을 목적 함수로 사용하며, 특히 $f$ 가 선형결합인 경우 행렬 꼴로 간략하게 표현할 수 있다. $$ \begin{align*} RSS</description></item><item><title>줄리아에서 배열의 차분 계산하는 법</title><link>https://freshrimpsushi.github.io/ko/posts/2564/</link><pubDate>Mon, 06 May 2024 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/2564/</guid><description>개요 줄리아에서는 차분을 계산하기 위해 diff() 함수를 제공한다1. circshift() 함수를 사용해도 쉽게 짤 수는 있는데 끝 점의 처리 같은 부분에서 은근히 불편하다보니 알아두면 훨씬 편</description></item><item><title>스파스 회귀란?</title><link>https://freshrimpsushi.github.io/ko/posts/2563/</link><pubDate>Sat, 04 May 2024 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/2563/</guid><description>정의 행렬 $A \in \mathbb{R}^{m \times n}$ 과 벡터 $\mathbf{b} \in \mathbb{R}^{m}$ 에 대해 행렬방정식이 다음과 같이 주어져 있다고 하자. $$ A \mathbf{x} = \mathbf{b} $$ 스파스 회귀sparse regression는 위와 같은</description></item><item><title>줄리아에서 원형 배열 사용하는 법</title><link>https://freshrimpsushi.github.io/ko/posts/2562/</link><pubDate>Thu, 02 May 2024 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/2562/</guid><description>개요 사실 줄리아에서 네이티브한 원형 배열circular Array을 지원하지는 않지만, 사실상 그렇게 사용할 수 있도록 원소를 환형으로circularl</description></item><item><title>한켈 행렬</title><link>https://freshrimpsushi.github.io/ko/posts/2561/</link><pubDate>Tue, 30 Apr 2024 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/2561/</guid><description>정의 $$ H = \begin{bmatrix} h_{11} &amp;amp; h_{12} &amp;amp; h_{13} &amp;amp; \cdots &amp;amp; h_{1n} \\ h_{21} &amp;amp; h_{22} &amp;amp; h_{23} &amp;amp; \cdots &amp;amp; h_{2n} \\ h_{31} &amp;amp; h_{32} &amp;amp; h_{33} &amp;amp; \cdots &amp;amp; h_{3n} \\ \vdots &amp;amp; \vdots &amp;amp; \vdots &amp;amp; \ddots &amp;amp; \vdots \\ h_{m1} &amp;amp; h_{m2} &amp;amp; h_{m3} &amp;amp; \cdots &amp;amp; h_{mn} \end{bmatrix} $$ 주어진 행렬 $H = \left( h_{ij} \right) \in \mathbb{R}^{m \times</description></item><item><title>줄리아에서 마커와 라인 스타일 목록</title><link>https://freshrimpsushi.github.io/ko/posts/2560/</link><pubDate>Sun, 28 Apr 2024 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/2560/</guid><description>코드 1 길게 설명할 것도 없고, 말 그대로 마커 스타일과 라인 스타일이 실제로 어떻게 생겼는지 보여준다. linesytle [:auto, :solid, :dash, :dot, :dashdot, :dashdotdot] 중에 하나를 고른다. shape [:none, :auto, :circle, :rect, :star5, :diamond, :hexagon, :cross, :xcross,</description></item><item><title>아크탄젠트2 함수의 정의</title><link>https://freshrimpsushi.github.io/ko/posts/2559/</link><pubDate>Fri, 26 Apr 2024 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/2559/</guid><description>정의 아크탄젠트2arc Tangent 2 $\arctan 2 : \left( \mathbb{R}^{2} \setminus \left\{ (0,0) \right\} \right) \to \mathbb{R}$ 는 다음과 같이 정의된다. $$ \arctan 2 : \left( r \sin \theta , r \cos \theta \right) \mapsto \theta $$ $r &amp;gt; 0$ 는 임의의 양수다. 설명 아크탄젠트</description></item><item><title>줄리아 점도표에서 회귀직선 그리는 법</title><link>https://freshrimpsushi.github.io/ko/posts/2558/</link><pubDate>Wed, 24 Apr 2024 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/2558/</guid><description>코드 줄리아의 점도표에서 회귀직선을 넣는 법은 다음과 같이 옵션으로 smooth = true를 주는 것이다. using Plots x = rand(100) scatter(x, 2x .+ 0.1randn(100), smooth = true) savefig(&amp;#34;plot.svg&amp;#34;) 환경 OS: Windows julia: v1.8.3 Plots v1.38.5</description></item><item><title>3차원 회전변환 행렬: 롤, 피치, 요</title><link>https://freshrimpsushi.github.io/ko/posts/2557/</link><pubDate>Mon, 22 Apr 2024 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/2557/</guid><description>정의 1 3차원 공간 $\mathbb{R}^{3}$ 에서 벡터를 $x$축, $y$축, $z$축을 기준으로 반시계반향으로 $\theta$ 만큼 회전시키는 행렬 $R_{x}$, $R_{y}$, $R_{z}$ 은 다음과 같다. $$ \begin{align*} R_{x} =&amp;amp; \begin{bmatrix} 1 &amp;amp; 0 &amp;amp; 0</description></item><item><title>줄리아 0으로 나누었을 때 Inf와 NaN의 차이</title><link>https://freshrimpsushi.github.io/ko/posts/2556/</link><pubDate>Sat, 20 Apr 2024 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/2556/</guid><description>개요 줄리아에서 0/0과 1/0이 어떻게 다른지 설명한다. 코드 julia&amp;gt; 0/0 NaN julia&amp;gt; 1/0 Inf 적어도 프로그래밍에서, 무한 Inf는 초기값 혹은 대소관계의 비교라는 측면에서 유</description></item><item><title>랜덤 벡터의 기대값</title><link>https://freshrimpsushi.github.io/ko/posts/2555/</link><pubDate>Thu, 18 Apr 2024 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/2555/</guid><description>정의 1 $$ E \left( X \right) := \begin{bmatrix} E \left( X_{1} \right) \\ \vdots \\ E \left( X_{n} \right) \end{bmatrix} $$ 랜덤벡터 $X = \left( X_{1} , \cdots , X_{n} \right)$ 의 기대값expectation은 위와 같이 각 성분의 기대값의 벡터로 정의된</description></item><item><title>줄리아 스플랫 오퍼레이터를 통한 옵션 인자 전달 팁</title><link>https://freshrimpsushi.github.io/ko/posts/2554/</link><pubDate>Tue, 16 Apr 2024 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/2554/</guid><description>개요 줄리아에서 스플랫 ...의 용도 중 가장 빈번하게 사용되는 옵셔널 아규먼트 전달 법에 대해서 설명한다. 기본적으로 네임드튜플의 형태로 어떤 옵션에 어떤 인자를</description></item><item><title>여러개의 점을 사용하는 유한 차분 유도</title><link>https://freshrimpsushi.github.io/ko/posts/2553/</link><pubDate>Sun, 14 Apr 2024 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/2553/</guid><description>정리 $N$번 미분가능한 함수 $f : \mathbb{R} \to \mathbb{R}$ 가 주어져 있다고 하자. 한 점 $t \in \mathbb{R}$ 에서 $d &amp;lt; N$ 인 $d$계 도함수의 함숫값 $f^{(d)} \left( t \right)$ 은 충분히 작은 $h &amp;gt; 0$ 에 대해 기수가 $n</description></item><item><title>줄리아의 스플랫 오퍼레이터</title><link>https://freshrimpsushi.github.io/ko/posts/2552/</link><pubDate>Fri, 12 Apr 2024 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/2552/</guid><description>개요 줄리아에서 ...는 스플랫splat 오퍼레이터로 불리며 함수를 사용할 때나 배열을 정의할 때 유용하게 쓰인다1. 이런 오퍼레이터가 줄리아에만 있는 건 아니</description></item><item><title>뢰슬러 어트랙터</title><link>https://freshrimpsushi.github.io/ko/posts/2551/</link><pubDate>Wed, 10 Apr 2024 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/2551/</guid><description>개요 뢰슬러 방정식rössler equation이란 간단하지만 캐어릭한 어트랙터를 가지는 것으로 하나로 소개된 시스템 중 하나다. 시스템1 $$ \begin{align*} {{dx} \over {dt}} =&amp;amp; -</description></item><item><title>줄리아에서 유니코드 문자열의 일부만 슬라이싱하는 법</title><link>https://freshrimpsushi.github.io/ko/posts/2550/</link><pubDate>Mon, 08 Apr 2024 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/2550/</guid><description>개요 여느 프로그래밍 언어들이 그러하듯, 줄리아에서는 영문을 아스키 코드aSCII Code로 쓰고 한자, 한글 등을 유니코드unicode로 쓴다. 문제는 다</description></item><item><title>데이터과학에서 F1 스코어란?</title><link>https://freshrimpsushi.github.io/ko/posts/2549/</link><pubDate>Sat, 06 Apr 2024 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/2549/</guid><description>정의 양성positive $P$ 와 음성negative $N$ 을 구분하는 분류문제에서 양성과 음성을 판정하는 모델이 주어져 있다고 하자. 양을 양으로 판정한 수를 참양</description></item><item><title>줄리아 StatsPlots에서 데이터프레임 이름을 생략하는 매크로 @df</title><link>https://freshrimpsushi.github.io/ko/posts/2548/</link><pubDate>Thu, 04 Apr 2024 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/2548/</guid><description>개요 줄리아의 StatsPlots 패키지에서는 그림을 그릴 때 @df 매크로를 통해 여러번 반복되는 데이터프레임의 이름을 생략할 수 있다1. 매크로를 사용하는 문법은 데이터프레임 X의</description></item><item><title>데이터과학에서 재현도란?</title><link>https://freshrimpsushi.github.io/ko/posts/2547/</link><pubDate>Tue, 02 Apr 2024 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/2547/</guid><description>정의 양성positive $P$ 와 음성negative $N$ 을 구분하는 분류문제에서 양성과 음성을 판정하는 모델이 주어져 있다고 하자. 양을 양으로 판정한 수를 참양</description></item><item><title>팩토리얼 0이 0!=1 으로 정의되는 이유</title><link>https://freshrimpsushi.github.io/ko/posts/2546/</link><pubDate>Sun, 31 Mar 2024 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/2546/</guid><description>정의 $0 \notin \mathbb{N}$ 에 대한 팩토리얼 $0!$ 을 다음과 같이 정의한다. $$ 0! := 1 $$ 설명 $0!$ 은 왜 $0$ 이 아니라 $1$ 일까? 본래 $0! := 1$ 은 정의기 때문에 증명할 필요가 없고, 왜 그런 정의가</description></item><item><title>데이터과학에서 정밀도란?</title><link>https://freshrimpsushi.github.io/ko/posts/2545/</link><pubDate>Fri, 29 Mar 2024 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/2545/</guid><description>정의 양성positive $P$ 와 음성negative $N$ 을 구분하는 분류문제에서 양성과 음성을 판정하는 모델이 주어져 있다고 하자. 양을 양으로 판정한 수를 참양</description></item><item><title>줄리아에서 다른 파일에 정의한 함수 사용하는 법</title><link>https://freshrimpsushi.github.io/ko/posts/2544/</link><pubDate>Wed, 27 Mar 2024 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/2544/</guid><description>개요 다른 파일에 있는 함수를 사용할 수 있게끔 줄리아 코드 자체를 실행시키는 함수 include()를 소개한다. 매트랩에서는 같은 디렉터리 내에 있으면 알아서 함</description></item><item><title>데이터과학에서 정확도가 과대평가 되는 상황</title><link>https://freshrimpsushi.github.io/ko/posts/2543/</link><pubDate>Mon, 25 Mar 2024 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/2543/</guid><description>정의 양성positive $P$ 와 음성negative $N$ 을 구분하는 분류문제에서 양성과 음성을 판정하는 모델이 주어져 있다고 하자. 양을 양으로 판정한 수를 참양</description></item><item><title>윈도우즈에서 시스템 복원하는 법</title><link>https://freshrimpsushi.github.io/ko/posts/2542/</link><pubDate>Sat, 23 Mar 2024 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/2542/</guid><description>가이드 윈도우11은 23년 2월 기준 여전히 많은 호환성 문제를 겪고 있으며, 컴퓨터를 프로페셔널한 용도로 많이 사용한다면 소위 말하는 &amp;lsquo;밀고 재설치</description></item><item><title>지구통계학에서의 PROJ 소개</title><link>https://freshrimpsushi.github.io/ko/posts/2541/</link><pubDate>Thu, 21 Mar 2024 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/2541/</guid><description>빌드업 지구는 둥글며, 더 자세하게는 타원구로 보고 있다. 지구를 단순히 축소시켜놓은 &amp;lsquo;지구본&amp;rsquo;은 정확한 모형일 뿐 쓰임새가 그다지 많</description></item><item><title>데이터과학에서 분류문제와 회귀문제의 정의</title><link>https://freshrimpsushi.github.io/ko/posts/2540/</link><pubDate>Tue, 19 Mar 2024 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/2540/</guid><description>용어 데이터과학에서는 문제의 종속변수가 무엇인지에 따라서 다음과 같이 구분하기도 한다. 분류 문제 종속변수가 질적변수인 문제를 분류classificati</description></item><item><title>인구균형방정식</title><link>https://freshrimpsushi.github.io/ko/posts/2539/</link><pubDate>Sun, 17 Mar 2024 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/2539/</guid><description>정의 1 $t$ 시점에서 집단의 인구population를 $P_{t}$ 라 하자. 다음 시점 $(t+1)$ 까지 태어나는birth 인구를 $B_{t}$, 죽는death 인구를 $D_{t}$, 유입이민immigr</description></item><item><title>데이터과학에서 독립변수와 종속변수</title><link>https://freshrimpsushi.github.io/ko/posts/2538/</link><pubDate>Fri, 15 Mar 2024 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/2538/</guid><description>용어 통계학이나 머신러닝 등 데이터과학의 분야의 모델model에서 데이터의 변수는 크게 다음의 두가지 부류로 나뉜다. 종속변수 종속변수dependent v</description></item><item><title>줄리아 산점도 마크에 색 넣는 법</title><link>https://freshrimpsushi.github.io/ko/posts/2537/</link><pubDate>Wed, 13 Mar 2024 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/2537/</guid><description>코드 using Plots x, y = rand(100), rand(100) 위와 같은 데이터가 주어져 있다고 하자. 데이터가 연속형이냐 범주형이냐에 따라 그림의 형태와 그리는 방법이 다르다. 연속형 scatter(marker_z=) z = x + y scatter(x, y,</description></item><item><title>브룩의 보조정리 증명</title><link>https://freshrimpsushi.github.io/ko/posts/2536/</link><pubDate>Mon, 11 Mar 2024 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/2536/</guid><description>정리 1 랜덤벡터 $Z : \Omega \to \mathbb{R}^{n}$ 의 확률질량함수 $p : \mathbb{R}^{n} \to \mathbb{R}$ 에 대해 $Z$ 의 서포트를 다음과 같이 나타내자. $$ S_{Z} = \left\{ \left( z_{1} , \cdots , z_{n} \right) \in \mathbb{R}^{n} : p \left( z_{1} , \cdots , z_{n} \right) &amp;gt; 0 \right\} \subset \Omega</description></item><item><title>CLI로 SSH 서버 접속하는 법</title><link>https://freshrimpsushi.github.io/ko/posts/2535/</link><pubDate>Sat, 09 Mar 2024 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/2535/</guid><description>가이드 접속하려는 서버의 IP가 192.168.1.1이라고 하자. ssh user@192.168.1.1 터미널에서 위와 같은 커맨드를 입력하면 된다1. 윈도우즈 서버에서의 주의사항 윈도우</description></item><item><title>R 회귀분석에서 not defined because of singularities 해결</title><link>https://freshrimpsushi.github.io/ko/posts/2534/</link><pubDate>Thu, 07 Mar 2024 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/2534/</guid><description>당신이 통계나 수학 전공자라면 원인을 대강 파악하고 직면한 문제를 해결하는 것에서 그치지 않고, 수리적인 증명까지 이해하는 것을 강하게 권한다. 에러 진단 Coefficients: (1 not defined</description></item><item><title>X'X 의 역행렬이 존재하는 동치조건</title><link>https://freshrimpsushi.github.io/ko/posts/2533/</link><pubDate>Tue, 05 Mar 2024 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/2533/</guid><description>정리 행렬 $X \in \mathbb{R}^{m \times n}$ 이 주어져 있고 $m \ge n$ 라 하면, 다음이 성립한다. $$ \exists \left( X^{T} X \right)^{-1} \iff \text{rank} X = n $$ 다시 말해, $X^{T} X$ 의 역행렬이 존재하는 동치조건은 $X$ 가 풀 랭크를 가</description></item><item><title>윈도우즈 11 초기 세팅</title><link>https://freshrimpsushi.github.io/ko/posts/2532/</link><pubDate>Sun, 03 Mar 2024 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/2532/</guid><description>가이드 자세한 설명은 생략한다. 모든 커맨드들은 윈도우즈 터미널을 관리자모드로 실행시킨 후 입력되어야 한다. 컨텍스트 메뉴 되돌리기 1 reg.exe add &amp;#34;HKCU\Software\Classes\CLSID\{86ca1aa0-34aa-4e8b-a509-50c905bae2a2}\InprocServer32&amp;#34; /f /ve taskkill /f /im explorer.exe explorer.exe 작</description></item><item><title>GIS DEVELOPER 소개</title><link>https://freshrimpsushi.github.io/ko/posts/2531/</link><pubDate>Fri, 01 Mar 2024 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/2531/</guid><description>소개 GIS 전문가이자 개발자인 김형준님이 운영하는 블로그다. 적어도 한국 데이터를 가지고 분석에 임한다면 이 분의 도움 없이는 아무 일도 못한다고 해도 과언이 아니다.</description></item><item><title>조화평균</title><link>https://freshrimpsushi.github.io/ko/posts/2530/</link><pubDate>Wed, 28 Feb 2024 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/2530/</guid><description>정의 양수 $a,b &amp;gt; 0$ 에 대해 다음을 조화평균harmonic mean이라 한다. $$ H (a,b) := 2 \left( {{ 1 } \over { a }} + {{ 1 } \over { b }} \right)^{-1} = {{ 2 ab } \over { a + b }} $$ $n</description></item><item><title>다변량정규분포의 조건부 평균과 분산</title><link>https://freshrimpsushi.github.io/ko/posts/2529/</link><pubDate>Mon, 26 Feb 2024 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/2529/</guid><description>공식 이변량정규분포 $$ \left( X, Y \right) \sim N_{2} \left( \begin{bmatrix} \mu_{1} \\ \mu_{n} \end{bmatrix} , \begin{bmatrix} \sigma_{X}^{2} &amp;amp; \rho \sigma_{X} \sigma_{Y} \\ \rho \sigma_{X} \sigma_{Y} &amp;amp; \sigma_{Y}^{2} \end{bmatrix} \right) $$ 랜덤벡터 $\left( X,Y \right)$ 가 위와 같이 이변량정규분포를 따른다고 할 때, $X | Y$ 는 일</description></item><item><title>네트워크 이론에서의 고유벡터 중심성</title><link>https://freshrimpsushi.github.io/ko/posts/2528/</link><pubDate>Sat, 24 Feb 2024 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/2528/</guid><description>정의 1 네트워크 $\left( V , E \right)$의 인접행렬 $A$ 의 스펙트럴 래디어스 $\lambda_{1}$ 에 대응되는 고유벡터 $\mathbf{v}_{1}$ 의 $i$번째 성분을 $i$번째 노드 $v_{i}$ 의 고유벡터 중심성</description></item><item><title>다변량정규분포에서 독립과 제로 상관관계는 동치다</title><link>https://freshrimpsushi.github.io/ko/posts/2527/</link><pubDate>Thu, 22 Feb 2024 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/2527/</guid><description>정리 1 $$ \begin{align*} \mathbf{X} =&amp;amp; \begin{bmatrix} \mathbf{X}_{1} \\ \mathbf{X}_{2} \end{bmatrix} &amp;amp; : \Omega \to \mathbb{R}^{n} \\ \mu =&amp;amp; \begin{bmatrix} \mu_{1} \\ \mu_{2} \end{bmatrix} &amp;amp; \in \mathbb{R}^{n} \\ \Sigma =&amp;amp; \begin{bmatrix} \Sigma_{11} &amp;amp; \Sigma_{12} \\ \Sigma_{21} &amp;amp; \Sigma_{22} \end{bmatrix} &amp;amp; \in \mathbb{R}^{n \times n} \end{align*} $$ 위와 같이 조던블럭폼으로 나타낸 $\mathbf{X}$, $\mu$, $\Sigma$ 에 대해 다변량</description></item><item><title>네트워크 이론에서의 근접 중심성</title><link>https://freshrimpsushi.github.io/ko/posts/2526/</link><pubDate>Tue, 20 Feb 2024 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/2526/</guid><description>정의 1 네트워크 $\left( V, E \right)$의 지오데식 거리를 $d$ 라 하자. 다음과 같이 정의된 $C_{C} : V \to \mathbb{R}$ 을 노드 $v \in V$ 의 근접 중심성closeness Centr</description></item><item><title>다변량정규분포의 선형변환</title><link>https://freshrimpsushi.github.io/ko/posts/2525/</link><pubDate>Sun, 18 Feb 2024 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/2525/</guid><description>정리 1 선형변환의 정규성 행렬 $A \in \mathbb{R}^{m \times n}$ 과 벡터 $\mathbf{b} \in \mathbb{R}^{m}$ 에 대해 다변량정규분포를 따르는 랜덤벡터 $\mathbf{X} \sim N_{n} \left( \mu , \Sigma \right)$ 의 선형변환 $\mathbf{Y} = A \mathbf{X} + \mathbf{b}$ 는 여전히 다변량정규</description></item><item><title>네트워크 이론에서의 매개 중심성</title><link>https://freshrimpsushi.github.io/ko/posts/2524/</link><pubDate>Fri, 16 Feb 2024 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/2524/</guid><description>정의 1 스트레스 중심성 네트워크 $\left( V, E \right)$ 에서 두 노드 $s,t \in V$ 를 잇는 최단 거리인 패스의 갯수를 $\sigma_{st} = \sigma_{ts}$ 라 하고, 특히 $s,t$ 를 잇는 패스 중 또 다른 노드 $v \in V$ 를 포함하는 패</description></item><item><title>유니버설 크리깅</title><link>https://freshrimpsushi.github.io/ko/posts/2523/</link><pubDate>Wed, 14 Feb 2024 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/2523/</guid><description>모델 오디너리 크리깅 공간데이터분석에서 랜덤필드 $\mathbf{Y} = \left( Y \left( s_{1} \right) , \cdots , Y \left( s_{n} \right) \right)$ 의 평균 $\mu \in \mathbb{R}$ 과 공분산행렬 $\Sigma \in \mathbb{R}^{n \times n}$ 과 다변량정규분포를 따르는 $\varepsilon \sim N_{n} \left(</description></item><item><title>네트워크 이론에서의 스트레스 중심성</title><link>https://freshrimpsushi.github.io/ko/posts/2522/</link><pubDate>Mon, 12 Feb 2024 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/2522/</guid><description>정의 1 네트워크 $\left( V, E \right)$ 에서 두 노드 $s,t \in V$ 를 잇는 최단 거리인 패스의 갯수를 $\sigma_{st} = \sigma_{ts}$ 라 하고, 특히 $s,t$ 를 잇는 패스 중 또 다른 노드 $v \in V$ 를 포함하는 패스의 갯수를 $\sigma_{st} (v)$</description></item><item><title>공간데이터분석에서 크리깅이란?</title><link>https://freshrimpsushi.github.io/ko/posts/2521/</link><pubDate>Sat, 10 Feb 2024 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/2521/</guid><description>모델 오디너리 크리깅 공간데이터분석에서 랜덤필드 $\mathbf{Y} = \left( Y \left( s_{1} \right) , \cdots , Y \left( s_{n} \right) \right)$ 의 평균 $\mu \in \mathbb{R}$ 과 공분산행렬 $\Sigma \in \mathbb{R}^{n \times n}$ 과 다변량정규분포를 따르는 $\varepsilon \sim N_{n} \left(</description></item><item><title>네트워크 이론에서의 차수 중심성</title><link>https://freshrimpsushi.github.io/ko/posts/2520/</link><pubDate>Thu, 08 Feb 2024 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/2520/</guid><description>정의 1 네트워크 $G (V, E)$ 의 각 노드 $v \in V$ 에 대해 다음을 차수 중심성degree Centrality이라 한다. $$ \deg v $$ 설명 중심성 중심성centralit</description></item><item><title>경험적 배리오그램</title><link>https://freshrimpsushi.github.io/ko/posts/2519/</link><pubDate>Tue, 06 Feb 2024 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/2519/</guid><description>빌드업 배리오그램의 정의: 유클리드 공간의 픽스된 부분집합 $D \subset \mathbb{R}^{r}$ 에서 확률변수 $Y(s) : \Omega \to \mathbb{R}^{1}$ 의 집합인 공간과정 $\left\{ Y(s) \right\}_{s \in D}$ 와 방향벡터 $\mathbf{h} \in \mathbb{R}^{r}$ 를 생각해보자. 구체</description></item><item><title>비중심 F-분포</title><link>https://freshrimpsushi.github.io/ko/posts/2518/</link><pubDate>Sun, 04 Feb 2024 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/2518/</guid><description>정의 단일 비중심 F-분포 1 자유도 $r_{1} , r_{2} &amp;gt; 0$ 와 비중심성non-centrality $\lambda_{1} \ge 0$ 에 대해 다음과 같은 확률 밀도 함수를 가지는 연속확률분포 $F \left( r_{1} ,</description></item><item><title>가우스 소거법으로 역행렬 구하는 알고리즘</title><link>https://freshrimpsushi.github.io/ko/posts/2517/</link><pubDate>Fri, 02 Feb 2024 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/2517/</guid><description>알고리즘 Input 가역행렬 $M \in \mathbb{R}^{n \times n}$ 이 주어져 있다고 하자. Step 1. 초기화 $M$ 과 같은 사이즈의 항등행렬 $X$ 를 만든다. Step 2. 에쉘론 폼 가우스 소거법을 통해 $M$ 을 에쉘론 폼으로</description></item><item><title>비중심 카이제곱분포</title><link>https://freshrimpsushi.github.io/ko/posts/2516/</link><pubDate>Wed, 31 Jan 2024 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/2516/</guid><description>정의 자유도 $r &amp;gt; 0$ 과 비중심성non-centrality $\lambda \ge 0$ 에 대해 다음과 같은 확률 밀도 함수를 가지는 연속확률분포 $\chi^{2} \left( r , \lambda \right)$ 를 비중심 카이제곱 분포</description></item><item><title>제곱근 행렬</title><link>https://freshrimpsushi.github.io/ko/posts/2515/</link><pubDate>Mon, 29 Jan 2024 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/2515/</guid><description>정의 1 행렬 $A$ 에 대해 다음을 만족하는 행렬 $B$ 를 $A$ 의 제곱근 행렬square root matrix이라 하고 $\sqrt{A} := B$ 와 같이 나타낸다. $$ B^{2} = A $$ 설명 행렬이라는 점에서</description></item><item><title>피타고리안 승률 유도</title><link>https://freshrimpsushi.github.io/ko/posts/2514/</link><pubDate>Sat, 27 Jan 2024 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/2514/</guid><description>공식 특정 종목 스포츠 리그의 팀 하나가 주어져 있다고 하자. 팀 득점scores $S$ 와 팀 실점allows $A$ 가 각각 베이불 분포를 따르는 확률변수 $$ \begin{align*} S &amp;amp; \sim \text{Weibull} \left( \alpha_{S}</description></item><item><title>스파스 행렬</title><link>https://freshrimpsushi.github.io/ko/posts/2513/</link><pubDate>Thu, 25 Jan 2024 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/2513/</guid><description>정의 자연어에서 스파스sparse란 희박하다, 희소하다는 의미로써 값이 $0$ 이면 값이 존재하지 않는 것이나 마찬가지로 간주하는 것에서 온 단어다. 스파서티sp</description></item><item><title>켄트 분포</title><link>https://freshrimpsushi.github.io/ko/posts/2512/</link><pubDate>Tue, 23 Jan 2024 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/2512/</guid><description>정의 1 집중concentration $\kappa &amp;gt; 0$ 과 $\beta \in \mathbb{R}$, 평균mean $\gamma_{1} \in S^{p-1}$, 장축major Axis $\gamma_{2} \in S^{p-1}$, 단축minor Axis $\gamma_{3} \in S^{p-1}$ 에 대해 다음과 같은 확률 밀도 함수</description></item><item><title>줄리아에서 무한 배열 사용하는 법</title><link>https://freshrimpsushi.github.io/ko/posts/2511/</link><pubDate>Sun, 21 Jan 2024 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/2511/</guid><description>개요 InfiniteArrays.jl는 무한한 사이즈의 배열을 사용할 수 있게 해주는 패키지1로써, 사실 레이지 어레이lazy Array와 많은 연관이 있</description></item><item><title>빙햄-마르디아 분포</title><link>https://freshrimpsushi.github.io/ko/posts/2510/</link><pubDate>Fri, 19 Jan 2024 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/2510/</guid><description>정의 1 유니크 모드unique mode $\mu \in S^{p-1}$ 과 집중concentration $\kappa &amp;gt; 0$ 과 반지름 $\nu &amp;gt; 0$ 에 대해 다음과 같은 확률 밀도 함수를 가지는 다변량분포 $\text{BM}_{p} \left( \mu</description></item><item><title>줄리아에서 mat 파일 읽고 쓰는 법</title><link>https://freshrimpsushi.github.io/ko/posts/2509/</link><pubDate>Wed, 17 Jan 2024 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/2509/</guid><description>개요 MAT.jl은 매트랩에서 사용하는 데이터 저장 형식인 *.mat 파일을 읽고 쓰는 라이브러리다1. 원래 줄리아가 그러하듯, 이 패키지는 기존에 쓰던 프로그래밍 언어</description></item><item><title>왜정규분포</title><link>https://freshrimpsushi.github.io/ko/posts/2508/</link><pubDate>Mon, 15 Jan 2024 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/2508/</guid><description>정의 1 로케이션location $\xi \in \mathbb{R}$ 과 스케일scale $\omega &amp;gt; 0$ 과 셰이프shape $\alpha \in \mathbb{R}$ 에 대해 다음과 같은 확률 밀도 함수를 가지는 확률분포 $SN \left( \xi , \omega ,</description></item><item><title>줄리아 콘솔에서 간단한 그림 출력하는 법</title><link>https://freshrimpsushi.github.io/ko/posts/2507/</link><pubDate>Sat, 13 Jan 2024 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/2507/</guid><description>개요 UnicodePlots.jl은 유니코드 문자를 통해서 줄리아 REPL에서 그림을 출력해주는 라이브러리1로, 프로그램이 진행되는 가운데 가벼우면서</description></item><item><title>폰 푀르스터 방정식</title><link>https://freshrimpsushi.github.io/ko/posts/2506/</link><pubDate>Thu, 11 Jan 2024 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/2506/</guid><description>모델 1 $$ {{ \partial n } \over { \partial t }} + {{ \partial n } \over { \partial a }} = - \mu \left( a \right) n \qquad t, a \in (0, \infty) $$ 위의 편미분방정식을 폰 푀르스터 방정식von Foester equation이라 하며</description></item><item><title>줄리아에서 콘솔 초기화 하는 법</title><link>https://freshrimpsushi.github.io/ko/posts/2505/</link><pubDate>Tue, 09 Jan 2024 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/2505/</guid><description>방법 콘솔에서 Ctrl + L를 누르면 콘솔이 싹 초기화되는 걸로 보이는데, 일부 환경에선 진짜 초기화 하는 게 아니라 창이 밀린 것처럼 스크롤만 하는 경우도 있다. 아주 깔끔하</description></item><item><title>폰 미제스-피셔 분포</title><link>https://freshrimpsushi.github.io/ko/posts/2504/</link><pubDate>Sun, 07 Jan 2024 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/2504/</guid><description>정의 1 유니크 모드unique mode $\mu \in S^{p-1}$ 과 집중concentration $\kappa &amp;gt; 0$ 에 대해 다음과 같은 확률 밀도 함수를 가지는 다변량분포 $\text{vMF}_{p} \left( \mu , \kappa \right)$ 를 폰 미제</description></item><item><title>줄리아에서 데이터프레임의 결측치 제거하는 법</title><link>https://freshrimpsushi.github.io/ko/posts/2503/</link><pubDate>Fri, 05 Jan 2024 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/2503/</guid><description>개요 1 줄리아에서는 dropmissing() 함수를 통해 쉽게 결측치를 제거할 수 있다. 코드 julia&amp;gt; df = DataFrame(x = [&amp;#34;i&amp;#34;, missing, &amp;#34;k&amp;#34;, &amp;#34;j&amp;#34;], y = [1, 2, 3, missing]) 4×2 DataFrame Row │ x y │ String? Int64? ─────┼────────</description></item><item><title>세미배리오그램의 모형들</title><link>https://freshrimpsushi.github.io/ko/posts/2502/</link><pubDate>Wed, 03 Jan 2024 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/2502/</guid><description>개요 공간통계분석에서 공간과정이 아이소트로픽해서 세미배리오그램이 $\gamma \left( \left\| \mathbf{h} \right\| \right) = \gamma (d)$ 을 만족하는 경우 $\gamma$ 는 복잡한 행렬 꼴이 아닌 1차원 스칼라함수, 즉 $\gamma :</description></item><item><title>제2회 생새우초밥집 대회: Imaginary Matrix</title><link>https://freshrimpsushi.github.io/ko/posts/2501/</link><pubDate>Mon, 01 Jan 2024 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/2501/</guid><description>상상행렬 $$ x^{2} = -1 \longrightarrow X^{2} = - E_{p} $$ 제2회 대회는 위와 같이 복소수를 행렬 $\mathbb{R}^{p \times p}$ 로 일반화한 상상행렬imaginary matrix에 대해 다루었습니다. 결과 uriel,</description></item><item><title>배리오그램의 등방성</title><link>https://freshrimpsushi.github.io/ko/posts/2500/</link><pubDate>Sat, 30 Dec 2023 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/2500/</guid><description>정의 1 공간과정의 세미배리오그램 $\gamma \left( \mathbf{h} \right)$ 가 방향벡터 $\mathbf{h} \in \mathbb{R}^{r}$ 에 의존할 뿐만 아니라, 사실 방향과 관계 없이 그 크기 $d := \left\| \mathbf{h} \right\|$ 에만 의존해서 다음과 같이 나타낼 수 있</description></item><item><title>줄리아에서 환경변수 참조하는 법</title><link>https://freshrimpsushi.github.io/ko/posts/2499/</link><pubDate>Thu, 28 Dec 2023 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/2499/</guid><description>개요 줄리아에서 환경변수를 참조하는 법을 설명한다1. 코드 Base.ENV Base.ENV[&amp;#34;JULIA_NUM_THREADS&amp;#34;] 환경변수는 보다시피 별도의 패키지 로드가 필요하지 않고 Base.ENV를 통해 바로 접근할 수 있</description></item><item><title>배리오그램의 정의</title><link>https://freshrimpsushi.github.io/ko/posts/2498/</link><pubDate>Tue, 26 Dec 2023 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/2498/</guid><description>정의 1 유클리드 공간의 픽스된 부분집합 $D \subset \mathbb{R}^{r}$ 에서 확률변수 $Y(s) : \Omega \to \mathbb{R}^{1}$ 의 집합인 공간과정 $\left\{ Y(s) \right\}_{s \in D}$ 와 방향벡터 $\mathbf{h} \in \mathbb{R}^{r}$ 를 생각해보자. 구체적으로 $n \in \mathbb{N}$ 개의 사</description></item><item><title>줄리아에서 프로그레스바 사용하는 법</title><link>https://freshrimpsushi.github.io/ko/posts/2497/</link><pubDate>Sun, 24 Dec 2023 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/2497/</guid><description>개요 줄리아에서도 프로그램의 진행 상황을 알려주는 프로그래스바를 손쉽게 사용할 수 있다. 코드 ProgressMeter.jl ProgressMeter.jl 패키지의 @showprogress 매크로를 for 루프에 두면 된다1. using ProgressMeter chi2 = [] @showprogress for n</description></item><item><title>공간 과정의 정상성</title><link>https://freshrimpsushi.github.io/ko/posts/2496/</link><pubDate>Fri, 22 Dec 2023 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/2496/</guid><description>정의 1 유클리드 공간의 픽스된 부분집합 $D \subset \mathbb{R}^{r}$ 에서 확률변수 $Y(s) : \Omega \to \mathbb{R}^{1}$ 의 집합인 공간과정 $\left\{ Y(s) \right\}_{s \in D}$ 와 방향벡터 $\mathbf{h} \in \mathbb{R}^{r}$ 를 생각해보자. 구체적으로 $n \in \mathbb{N}$ 개의 사</description></item><item><title>줄리아에서 0이나 결측치를 제외한 평균 구하는 법</title><link>https://freshrimpsushi.github.io/ko/posts/2495/</link><pubDate>Wed, 20 Dec 2023 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/2495/</guid><description>개요 R 언어의 합계 sum()이나 평균 mean()에서는 함수 그 자체가 해당 결측치를 무시할 수 있는 옵션을 가지고 있는데, 줄리아에서는 그런 옵션이 없는 대신 함</description></item><item><title>공간 과정</title><link>https://freshrimpsushi.github.io/ko/posts/2494/</link><pubDate>Mon, 18 Dec 2023 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/2494/</guid><description>정의 1 특히 $r &amp;gt; 1$ 일 때, 유클리드 공간의 픽스된 부분집합 $D \in \mathbb{R}^{r}$ 에 대해서 다음과 같이 $p$-변량 랜덤벡터 $Y(s) : \Omega \to \mathbb{R}^{p}$ 의 집합인 확률과정을 공간 과정spati</description></item><item><title>줄리아에서 회귀분석 하는 법</title><link>https://freshrimpsushi.github.io/ko/posts/2493/</link><pubDate>Sat, 16 Dec 2023 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/2493/</guid><description>개요 줄리아에서 회귀분석을 하기 위한 GLM.jl 패키지를 간략하게 소개한다1. R에서의 인터페이스와 얼마나 흡사한지 강조하기 위해 세세한 설명은 생략한다. 코드 줄리아</description></item><item><title>공간 데이터 분석이란?</title><link>https://freshrimpsushi.github.io/ko/posts/2492/</link><pubDate>Thu, 14 Dec 2023 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/2492/</guid><description>설명 1 공간 데이터spatial Data란 말 그대로 공간에 대한 정보를 포함하는 데이터로써, 공간 통계학spatial Statistics는 주로 유클리</description></item><item><title>집단의 적합도 검정</title><link>https://freshrimpsushi.github.io/ko/posts/2491/</link><pubDate>Tue, 12 Dec 2023 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/2491/</guid><description>가설검정 1 $k$개의 범주가 각자 이론적으로 $p_{j} &amp;gt; 0$ 의 확률로 뽑히는 다항실험에서 $n$번의 독립적인 시행으로 얻은 범주형 데이터가 주어져 있다고 가정하자. 피</description></item><item><title>이변량 폰 미제스 분포</title><link>https://freshrimpsushi.github.io/ko/posts/2490/</link><pubDate>Sun, 10 Dec 2023 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/2490/</guid><description>정의 1 평균 방향mean Direction $\mu, \nu \in \mathbb{R}$ 과 집중concentration $\kappa_{1}, \kappa_{2} &amp;gt; 0$ 과 어떤 행렬 $A \in \mathbb{R}^{2 \times 2}$ 대해 다음에 비례하는 확률 밀도 함수를 가지는 연속확률분</description></item><item><title>다항실험과 분할표</title><link>https://freshrimpsushi.github.io/ko/posts/2489/</link><pubDate>Fri, 08 Dec 2023 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/2489/</guid><description>정의 1 다항실험 다음의 특성을 가지면서 세가지 이상 가능한 결과 혹은 범주를 갖는 실험을 다항 실험multinomial experiment이라 한다. $n$ 번의</description></item><item><title>폰 미제스 분포</title><link>https://freshrimpsushi.github.io/ko/posts/2488/</link><pubDate>Wed, 06 Dec 2023 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/2488/</guid><description>정의 1 2 평균 방향mean Direction $\mu \in \mathbb{R}$ 과 집중concentration $\kappa &amp;gt; 0$ 에 대해 다음과 같은 확률 밀도 함수를 가지는 연속확률분포 $\text{vM} \left( \mu , \kappa \right)$ 를 폰 미제스</description></item><item><title>피어슨 카이제곱 검정통계량</title><link>https://freshrimpsushi.github.io/ko/posts/2487/</link><pubDate>Mon, 04 Dec 2023 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/2487/</guid><description>정의 1 $k$개의 범주가 각자 $p_{j} &amp;gt; 0$ 의 확률로 뽑히는 다항실험에서 $n$번의 독립적인 시행으로 얻은 범주형 데이터가 주어져 있다고 하자. $j$번째 범주에 속하</description></item><item><title>피어슨 정리 증명</title><link>https://freshrimpsushi.github.io/ko/posts/2486/</link><pubDate>Sat, 02 Dec 2023 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/2486/</guid><description>정리 $$ \sum_{i=1}^{k} N_{i} = n \qquad \&amp;amp; \qquad \sum_{i=1}^{k} p_{i} = 1 $$ 을 만족시키는 $\mathbf{p} = \left( p_{1} , \cdots , p_{k} \right) \in [0,1]^{k}$ 와 샘플사이즈 $n \in \mathbb{N}$ 과 $k \in \mathbb{N}$ 개의 범주에 대해 랜덤벡터 $\left( N_{1} , \cdots , N_{k} \right)$ 가 다항분포 $M_{k} \left(</description></item><item><title>삼각행렬의 행렬식</title><link>https://freshrimpsushi.github.io/ko/posts/2485/</link><pubDate>Thu, 30 Nov 2023 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/2485/</guid><description>정리 삼각행렬의 행렬식은 대각성분의 곱으로 나타난다. 증명 1 일반성을 잃지 않고, $A$ 가 상삼각행렬이라고 하자. $$ A := \begin{bmatrix} a_{11} &amp;amp; a_{12} &amp;amp; a_{13} &amp;amp; \cdots &amp;amp; a_{1n} \\ 0 &amp;amp; a_{22} &amp;amp; a_{23} &amp;amp; \cdots</description></item><item><title>다항 분포의 공분산 행렬 유도</title><link>https://freshrimpsushi.github.io/ko/posts/2484/</link><pubDate>Tue, 28 Nov 2023 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/2484/</guid><description>공식 랜덤벡터 $\mathbf{X} := \left( X_{1} , \cdots , X_{k} \right)$ 가 다항분포 $M_{k} \left( n, \mathbf{p} \right)$ 면 공분산행렬은 다음과 같다. $$ \operatorname{Cov} \left( \mathbf{X} \right) = n \begin{bmatrix} p_{1} \left( 1 - p_{1} \right) &amp;amp; - p_{1} p_{2} &amp;amp; \cdots &amp;amp; - p_{1} p_{k} \\ - p_{2} p_{1} &amp;amp; p_{2} \left( 1</description></item><item><title>여인자와 고전수반행렬</title><link>https://freshrimpsushi.github.io/ko/posts/2483/</link><pubDate>Sun, 26 Nov 2023 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/2483/</guid><description>정의 정사각행렬 $A_{n \times n} = (a_{ij})$ 이 주어져 있다고 하자. $A$ 의 $i$번째 행과 $j$ 번째 행을 제거한 행렬의 행렬식 $M_{ij}$ 을 소행렬식minor이라고 한다. $C_{ij} := (-1)^{i + j} M_{ij}$ 를 여</description></item><item><title>확률론에서 레비의 연속성 정리</title><link>https://freshrimpsushi.github.io/ko/posts/2482/</link><pubDate>Fri, 24 Nov 2023 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/2482/</guid><description>정리 1 가측공간 $\left( \mathbb{R}^{d} , \mathcal{B} \left( \mathbb{R}^{d} \right) \right)$ 이 주어져 있다고 하자. $n \in \overline{\mathbb{N}}$ 에 대해 확률측도를 $\mu_{n}$ 로, 그에 대응되는 특성함수를 $\varphi_{n}$ 이라 나타내자. 다음은 서로 동치다. (a): $\mu_{n}$ 가</description></item><item><title>셔먼-모리슨 공식 유도</title><link>https://freshrimpsushi.github.io/ko/posts/2481/</link><pubDate>Wed, 22 Nov 2023 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/2481/</guid><description>정리 가역행렬 $A \in \mathbb{R}^{n \times n}$ 과 $\mathbf{u} , \mathbf{v} \in \mathbb{R}^{n}$ 에 대해 다음이 성립한다. $$ 1 + \mathbf{v}^{T} A^{-1} \mathbf{u} \ne 0 \iff \exists : \left( A + \mathbf{u} \mathbf{v}^{T} \right)^{-1} $$ 셔먼-모리슨 공식 $\left( A + \mathbf{u} \mathbf{v}^{T} \right)^{-1}$ 이 존재할 때, 그 구체적</description></item><item><title>다항 분포</title><link>https://freshrimpsushi.github.io/ko/posts/2480/</link><pubDate>Mon, 20 Nov 2023 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/2480/</guid><description>정의 $n \in \mathbb{N}$ 과 범주 $k \in \mathbb{N}$ 개만큼의 확률변수로 이루어진 랜덤벡터를 $\left( X_{1} , \cdots , X_{k} \right)$ 와 같이 나타내자. $$ \sum_{i=1}^{k} X_{i} = n \qquad \&amp;amp; \qquad \sum_{i=1}^{k} p_{i} = 1 $$ 를 만족시키는 $\mathbf{p} = \left( p_{1} , \cdots ,</description></item><item><title>행렬식 보조정리 증명</title><link>https://freshrimpsushi.github.io/ko/posts/2479/</link><pubDate>Sat, 18 Nov 2023 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/2479/</guid><description>정리 가역행렬 $A \in \mathbb{R}^{n \times n}$ 과 $\mathbf{u} , \mathbf{v} \in \mathbb{R}^{n}$ 에 대해 다음이 성립한다. $$ \det \left( A + \mathbf{u} \mathbf{v}^{T} \right) = \left( 1 + \mathbf{v}^{T} A^{-1} \mathbf{u} \right) \det A $$ 특히 고전수반행렬 $\operatorname{adj} (A) = A^{-1} \det A$ 에 대해서는 다음과 같</description></item><item><title>변형 제1종 베셀 함수가 방향 통계학에 등장하는 이유</title><link>https://freshrimpsushi.github.io/ko/posts/2478/</link><pubDate>Thu, 16 Nov 2023 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/2478/</guid><description>빌드업 변형 베셀 함수 $$ J_{\nu}(x) = \sum \limits_{n=0}^{\infty} \frac{(-1)^{n} }{\Gamma (n+1) \Gamma (n+\nu+1)} \left(\frac{x}{2} \right)^{2n+\nu} $$ 제1종 베셀 함수 $J_{\nu}$ 에 대해 다음과 같이 정의된 $I_{\nu}$ 를 변형 제1종 베셀함수라 한다1. $$ \begin{align*} I_{\nu} (z) :=&amp;amp; i^{-\nu} J_{\nu} \left( iz \right) \\ =&amp;amp; \left(</description></item><item><title>수학에서의 고정점</title><link>https://freshrimpsushi.github.io/ko/posts/2477/</link><pubDate>Tue, 14 Nov 2023 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/2477/</guid><description>정의 함수 $f : X \to X$ 에 대해 다음을 만족시키는 $x_{0} \in X$ 를 고정점fixed point이라 부른다. $$ f \left( x_{0} \right) = x_{0} $$ $f$ 의 도함수 $f '$ 가 주어져 있을 때는 다음을 고</description></item><item><title>두 모평균의 차에 대한 소표본 가설검정</title><link>https://freshrimpsushi.github.io/ko/posts/2476/</link><pubDate>Sun, 12 Nov 2023 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/2476/</guid><description>가설검정 1 서로 독립인 두 모집단의 분포가 각각 정규분포 $N \left( \mu_{1} , \sigma_{1}^{2} \right)$ 과 $N \left( \mu_{2} , \sigma_{2}^{2} \right)$ 를 따르며 $\sigma_{1}^{2} = \sigma^{2} = \sigma_{2}^{2}$, 즉 각각의 모분산을 알 수는 없지만 서로 같다고는 가정하자</description></item><item><title>근과 해의 차이</title><link>https://freshrimpsushi.github.io/ko/posts/2475/</link><pubDate>Fri, 10 Nov 2023 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/2475/</guid><description>정의 주어진 함수의 함수값이 $0$이 되게 하는 정의역의 점을 근root이라 한다. 주어진 문제의 조건을 만족하는 것을 해solution라 한다. 설명 짧게 요약</description></item><item><title>모평균에 대한 소표본 가설검정</title><link>https://freshrimpsushi.github.io/ko/posts/2474/</link><pubDate>Wed, 08 Nov 2023 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/2474/</guid><description>가설검정 1 모집단의 분포가 정규분포 $N \left( \mu , \sigma^{2} \right)$ 을 따르지만 모분산 $\sigma^{2}$ 는 모른다고 가정하자. 표본이 $n &amp;lt; 30$ 개 뿐인 소표본인 경우, 그 모평균의 후보 $\mu_{0}$ 에 대한 가설</description></item><item><title>복소함수의 정의</title><link>https://freshrimpsushi.github.io/ko/posts/2473/</link><pubDate>Mon, 06 Nov 2023 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/2473/</guid><description>정의 1 복소수 집합 $\mathbb{C}$ 의 공집합이 아닌 부분집합 $A,B \subset \mathbb{C}$ 에 대해 $f : A \to B$ 를 복소함수complex Valued function라 한다. 한편 $A, B \subset \mathbb{R}$ 일 때, 복소함수와</description></item><item><title>합동분산의 정의</title><link>https://freshrimpsushi.github.io/ko/posts/2472/</link><pubDate>Sat, 04 Nov 2023 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/2472/</guid><description>빌드업 분포가 $X \sim \left( \mu , \sigma^{2} \right)$ 인 모집단에서 상호독립으로 뽑은 $n$개의 샘플들이 실제로는 $m$가지의 모집단 $\left( \mu_{1} , \sigma_{1}^{2} \right), \cdots , \left( \mu_{m} , \sigma_{m}^{2} \right)$ 에서 $n_{1} , \cdots , n_{</description></item><item><title>리만 구의 정의</title><link>https://freshrimpsushi.github.io/ko/posts/2471/</link><pubDate>Thu, 02 Nov 2023 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/2471/</guid><description>정의 1 한 점 컴팩트화를 통해 확장복소평면 $\overline{\mathbb{C}} = \mathbb{C} \cup \left\{ \infty \right\}$ 와 호메오멀픽한 $3$차원 단위구, 즉 $2$-스피어 $S^{2} \subset \mathbb{R}^{3}$ 을 리만 스피어riemann Spher</description></item><item><title>가중평균의 정의</title><link>https://freshrimpsushi.github.io/ko/posts/2470/</link><pubDate>Tue, 31 Oct 2023 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/2470/</guid><description>정의 데이터 $\mathbf{x} = \left\{ x_{1} , \cdots , x_{n} \right\}$ 와 벡터 $\mathbf{w} = \left( w_{1} , \cdots , w_{n} \right) \in \mathbb{R}^{n}$ 에 대해 다음을 가중평균weighted mean이라 한다. $$ {{ \sum_{k=1}^{n} w_{k} x_{k} } \over { \sum_{k=1}^{n} w_{k} }} = {{ w_{1} x_{1}</description></item><item><title>복소평면에서 실수축의 비개방성</title><link>https://freshrimpsushi.github.io/ko/posts/2469/</link><pubDate>Sun, 29 Oct 2023 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/2469/</guid><description>정리 $$ \mathbb{R}^{\circ} \ne \mathbb{R} \subset \mathbb{C} $$ 실수축 $\mathbb{R} \subset \mathbb{C}$ 은 복소평면 $\mathbb{C}$ 에서 오픈이 아니다. 설명 따라서 실수축은 복소공간에서 복소영역이 아니다. $\mathbb{R}$ 에서 $\mathbb{R}$ 은 오픈이라는 점을 생각해보</description></item><item><title>두 모평균의 차에 대한 대표본 가설검정</title><link>https://freshrimpsushi.github.io/ko/posts/2468/</link><pubDate>Fri, 27 Oct 2023 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/2468/</guid><description>가설검정 1 서로 독립인 두 모집단의 분포가 각각 $\left( \mu_{1} , \sigma_{1}^{2} \right)$ 과 $\left( \mu_{2} , \sigma_{2}^{2} \right)$ 를 따른다고 하자. 표본이 대표본인 경우, 즉 표본의 수가 $n_{1} , n_{2} &amp;gt; 30$ 일 때 두 모평균의 차이에</description></item><item><title>복소공간의 토폴로지</title><link>https://freshrimpsushi.github.io/ko/posts/2467/</link><pubDate>Wed, 25 Oct 2023 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/2467/</guid><description>개요 복소수의 집합 $\mathbb{C}$ 를 위상공간으로써 다루기 위한 정의들을 소개한다. 위상공간이라고는 하나 대부분은 거리공간에서의 정의를 복소집합으로 특수화했다. 해석개</description></item><item><title>모평균에 대한 대표본 가설검정</title><link>https://freshrimpsushi.github.io/ko/posts/2466/</link><pubDate>Mon, 23 Oct 2023 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/2466/</guid><description>가설검정 1 모집단의 분포가 $\left( \mu , \sigma^{2} \right)$ 을 따른다고 하자. 표본이 대표본인 경우, 즉 표본의 수가 $n &amp;gt; 30$ 일 때 그 모평균의 후보 $\mu_{0}$ 에 대한 가설검정은 다음과 같다. $H_{0}$: $\mu</description></item><item><title>상수함수의 정의</title><link>https://freshrimpsushi.github.io/ko/posts/2465/</link><pubDate>Sat, 21 Oct 2023 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/2465/</guid><description>정의 함수 $c : X \to Y$ 가 모든 $x_{1} , x_{2} \in X$ 에 대해 다음을 만족하면 상수 함수constant Funciton라 한다. $$ c \left( x_{1} \right) = c \left( x_{2} \right) $$ 설명 보통 상수함수</description></item><item><title>다중회귀분석에서 잔차의 분산에 대한 추정량과 회귀계수의 표준오차</title><link>https://freshrimpsushi.github.io/ko/posts/2464/</link><pubDate>Thu, 19 Oct 2023 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/2464/</guid><description>정리 $$ \begin{bmatrix} y_{1} \\ y_{2} \\ \vdots \\ y_{n} \end{bmatrix} = \begin{bmatrix} 1 &amp;amp; x_{11} &amp;amp; \cdots &amp;amp; x_{p1} \\ 1 &amp;amp; x_{12} &amp;amp; \cdots &amp;amp; x_{p2} \\ \vdots &amp;amp; \vdots &amp;amp; \ddots &amp;amp; \vdots \\ 1 &amp;amp; x_{1n} &amp;amp; \cdots &amp;amp; x_{pn} \end{bmatrix} \begin{bmatrix} \beta_{0} \\ \beta_{1} \\ \vdots \\ \beta_{p} \end{bmatrix} + \begin{bmatrix} \varepsilon_{1} \\ \varepsilon_{2} \\ \vdots \\ \varepsilon_{n} \end{bmatrix} $$ 독립변수</description></item><item><title>유리함수의 정의</title><link>https://freshrimpsushi.github.io/ko/posts/2463/</link><pubDate>Tue, 17 Oct 2023 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/2463/</guid><description>정의 1 두 다항함수 $P_{1}(z), P_{2}(z) : \mathbb{C} \to \mathbb{C}$ 에 대해 $P_{2} (z) \ne 0$ 인 모든 $z \in \mathbb{C}$ 를 $\left( P_{1} / P_{2} \right) (z)$ 로 대응시키는 다음의 함수 $Q$ 를 유리함수rational function 혹은 대수적 분수alg</description></item><item><title>표준오차의 일반적인 정의</title><link>https://freshrimpsushi.github.io/ko/posts/2462/</link><pubDate>Sun, 15 Oct 2023 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/2462/</guid><description>정의 1 어떤 추정량estimator $T$ 에 대해, $T$ 의 표준편차의 추정치estimate를 표준오차standard error라 한다. $$ \text{s.e.} \left( T \right) := \sqrt{ \widehat{</description></item><item><title>줄리아에서 두 시각의 차를 초 단위로 계산하는 법</title><link>https://freshrimpsushi.github.io/ko/posts/2461/</link><pubDate>Fri, 13 Oct 2023 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/2461/</guid><description>개요 Dates 모듈의 canonicalize() 함수를 사용하면 된다1. 코드 using Dates tic = DateTime(2022,3,7,7,1,11) toc = now() Dates.canonicalize(toc-tic) 위 코드를 실행시킨 결과는 다음과 같다. julia&amp;gt; using Dates julia&amp;gt; tic = DateTime(2022,3,7,7,1,11) 2022-03-07T07:01:11 julia&amp;gt; toc = now() 2022-07-19T22:26:22.070 julia&amp;gt; Dates.canonicalize(toc-tic) 19 weeks, 1 day, 15 hours, 25 minutes, 11</description></item><item><title>회귀계수의 정규성 증명</title><link>https://freshrimpsushi.github.io/ko/posts/2460/</link><pubDate>Wed, 11 Oct 2023 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/2460/</guid><description>정리 $$ \begin{bmatrix} y_{1} \\ y_{2} \\ \vdots \\ y_{n} \end{bmatrix} = \begin{bmatrix} 1 &amp;amp; x_{11} &amp;amp; \cdots &amp;amp; x_{p1} \\ 1 &amp;amp; x_{12} &amp;amp; \cdots &amp;amp; x_{p2} \\ \vdots &amp;amp; \vdots &amp;amp; \ddots &amp;amp; \vdots \\ 1 &amp;amp; x_{1n} &amp;amp; \cdots &amp;amp; x_{pn} \end{bmatrix} \begin{bmatrix} \beta_{0} \\ \beta_{1} \\ \vdots \\ \beta_{p} \end{bmatrix} + \begin{bmatrix} \varepsilon_{1} \\ \varepsilon_{2} \\ \vdots \\ \varepsilon_{n} \end{bmatrix} $$ 독립변수</description></item><item><title>줄리아에서 2차원 배열과 행렬 간 전환하는 법</title><link>https://freshrimpsushi.github.io/ko/posts/2459/</link><pubDate>Mon, 09 Oct 2023 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/2459/</guid><description>개요 줄리아에서 2차원 배열과 행렬 사이를 전환하는 팁을 소개한다1. 아마 줄리아 1.7 이하의 환경에서는 가장 줄리아다운 구현이면서 간단하고, 빠르고, 아름다운 방</description></item><item><title>회귀계수의 정의와 추정량의 공식 유도</title><link>https://freshrimpsushi.github.io/ko/posts/2458/</link><pubDate>Sat, 07 Oct 2023 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/2458/</guid><description>정의 1 $$ Y = \beta_{0} + \beta_{1} X_{1} + \cdots + \beta_{p} X_{p} + \varepsilon $$ 다중회귀분석에서 주어진 $p$ 개의 독립변수 $X_{1} , \cdots , X_{p}$ 에 대해 위와 같은 선형모델linear model을 세울 때, $\beta_{0} ,</description></item><item><title>줄리아로 네이버에서 메일 보내는 법</title><link>https://freshrimpsushi.github.io/ko/posts/2457/</link><pubDate>Thu, 05 Oct 2023 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/2457/</guid><description>개요 SMTPClient.jl 패키지로 SMTPsimple Mail Transfer Protocol를 사용해서 네이버에서 메일을 보내는 방법을 소개한다1. 필자의 경우 긴 시간이 걸리는 시뮬레이션이 끝나면 카카오 메일로</description></item><item><title>통계학에서의 자유도</title><link>https://freshrimpsushi.github.io/ko/posts/2456/</link><pubDate>Tue, 03 Oct 2023 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/2456/</guid><description>용어 어떤 통계량을 산출할 때 그 값을 바꿀 수 있는 독립적인 데이터의 수를 자유도degree of freedom라 한다1. 설명 자유도를 설명하기 어려운 이유 신입생</description></item><item><title>누적 평균 공식 유도</title><link>https://freshrimpsushi.github.io/ko/posts/2455/</link><pubDate>Sun, 01 Oct 2023 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/2455/</guid><description>공식 주어진 샘플 $x_{1} , \cdots , x_{n}$ 의 표본평균이 $y_{n}$ 이라면, 샘플 $x_{n+1}$ 가 새로이 주어졌을 때 전체의 표본평균 $y_{n+1}$ 은 다음과 같다. $$ y_{n+1} := {{ n } \over {n + 1}} y_{n} + {{1} \over {n+1}} x_{n+1} $$ 설명 누</description></item><item><title>엑셀에서 지도 모양으로 그림 그리는 방법</title><link>https://freshrimpsushi.github.io/ko/posts/2454/</link><pubDate>Fri, 29 Sep 2023 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/2454/</guid><description>개요 엑셀을 통해서 지도(Map)의 특정 영역을 주어진 수에 따라 칠한 그림을 그려본다. 구체적으로 어떤 디테일을 있는지는 추후에 스스로 익히면 되고, 이런 방법이</description></item><item><title>수학에서 구간의 정의</title><link>https://freshrimpsushi.github.io/ko/posts/2453/</link><pubDate>Wed, 27 Sep 2023 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/2453/</guid><description>정의 $$ [a,b] := \left\{ x \in \mathbb{R} : a \le x \le b \right\} \subset \mathbb{R} $$ 두 실수 $a \le b$ 에 대해 위와 같은 집합을 구간interval이라 한다. 특히 위와 같이 양 끝점 $a,b$ 를 포함하면 대괄호 []</description></item><item><title>백분위수와 이상치</title><link>https://freshrimpsushi.github.io/ko/posts/2452/</link><pubDate>Mon, 25 Sep 2023 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/2452/</guid><description>정의 1 양적 데이터가 주어져 있다고 하자. 전체에서 $p \%$ 만큼보다 크고 $(100-p) \%$ 만큼보다 작은 값을 $p$-퍼센타일$p$th Percentile이라 한다. $1</description></item><item><title>원주율의 정의</title><link>https://freshrimpsushi.github.io/ko/posts/2451/</link><pubDate>Sat, 23 Sep 2023 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/2451/</guid><description>정의 기하학적 정의 평면에서 주어진 한 점과 거리 $r &amp;gt; 0$ 만큼 떨어진 점들의 집합을 원circle이라 정의한다. 원의 둘레 $l$ 과 지름 $2r$ 의 비를 원주율 $\pi$ 라 정의한다.</description></item><item><title>z-스코어와 표준화</title><link>https://freshrimpsushi.github.io/ko/posts/2450/</link><pubDate>Thu, 21 Sep 2023 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/2450/</guid><description>정의 1 모평균이 $\mu$ 고 모표준편차가 $\sigma$ 인 분포를 따르는 확률변수 $X$ 에 대해 다음과 같은 변환을 표준화standardization라 한다. $$ Z = {{ X - \mu } \over</description></item><item><title>조모로디안의 알고리즘 구현</title><link>https://freshrimpsushi.github.io/ko/posts/2449/</link><pubDate>Tue, 19 Sep 2023 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/2449/</guid><description>개요 조모로디안zomorodian과 칼슨Carlsson의 논문 &amp;lsquo;Computing Persistent Homology&amp;rsquo;에서 소개된 알고리즘의 의사코드를 설명하고 구현한</description></item><item><title>기초통계학에서 분산의 정의</title><link>https://freshrimpsushi.github.io/ko/posts/2448/</link><pubDate>Sun, 17 Sep 2023 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/2448/</guid><description>정의 1 $n$개의 양적 데이터가 주어져 있다고 하자. 표본평균 $\overline{x}$ 과 데이터의 차 $\left( \overline{x} - x_{i} \right)$ 를 편차deviation라 한다. 편차의 제곱의 합을 $n-1$으로</description></item><item><title>조모로디안의 알고리즘 유도</title><link>https://freshrimpsushi.github.io/ko/posts/2447/</link><pubDate>Fri, 15 Sep 2023 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/2447/</guid><description>개요 조모로디안zomorodian과 칼슨Carlsson의 논문 &amp;lsquo;Computing Persistent Homology&amp;rsquo;에서 소개된 알고리즘의 유도과정을 설명한다1. 추</description></item><item><title>기초통계학에서 최빈값의 정의</title><link>https://freshrimpsushi.github.io/ko/posts/2446/</link><pubDate>Wed, 13 Sep 2023 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/2446/</guid><description>정의 1 질적 데이터가 주어져 있을 때, 가장 도수가 높은 범주를 최빈값mode이라 한다. 양적 데이터의 경우, 가장 도수가 높은 계급을 최빈계급modal clas</description></item><item><title>퍼시스턴트 모듈</title><link>https://freshrimpsushi.github.io/ko/posts/2445/</link><pubDate>Mon, 11 Sep 2023 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/2445/</guid><description>정의 1 $R$ 이 링이라고 하고 확장된 정수 집합 $\mathbb{Z}$을 $\overline{\mathbb{Z}} := \mathbb{Z} \cup \left\{ \pm \infty \right\}$ 이라 하자. 다음과 같이 체인컴플렉스 $\mathsf{C}_{\ast}^{i}$ 들 사이의 체인 맵chain map $f^{i}</description></item><item><title>기초통계학에서 중앙값의 정의</title><link>https://freshrimpsushi.github.io/ko/posts/2444/</link><pubDate>Sat, 09 Sep 2023 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/2444/</guid><description>정의 1 $n$개의 양적 데이터가 크기 순서대로 주어져 있을 때, 전체 데이터의 가운데에 위치하는 값을 중앙값 혹은 중위수median $m$ 이라 한다. $n$ 이 홀수면 $m :=</description></item><item><title>퍼시스턴트 호몰로지 그룹의 정의</title><link>https://freshrimpsushi.github.io/ko/posts/2443/</link><pubDate>Thu, 07 Sep 2023 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/2443/</guid><description>빌드업 오리엔티드oriented $k$-심플렉스 $K$ 에서 얻은 프리 그룹 $\mathsf{C}_{k}$ 에 대해, $\partial_{k} \circ \partial_{k+1} = 0$ 을 만족하는 바운더리 오퍼레이터 $\partial_{k} : \mathsf{C}_{k} \to \mathsf{C}_{k-1}$ 는 체인 컴플렉스을</description></item><item><title>가설검정의 쉬운 정의</title><link>https://freshrimpsushi.github.io/ko/posts/2442/</link><pubDate>Tue, 05 Sep 2023 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/2442/</guid><description>정의 1 2 과학에서 모집단에 대한 어떤 추측을 통계적 가설이라 하며, 가설을 채택하거나 기각하는 통계적 의사결정 과정을 통계적 가설검정testing of statistical hyp</description></item><item><title>컴플렉스의 필트레이션</title><link>https://freshrimpsushi.github.io/ko/posts/2441/</link><pubDate>Sun, 03 Sep 2023 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/2441/</guid><description>정의 1 $K$ 가 (심플리셜) 컴플렉스라 하자. 부분집합 $L \subset K$ 역시 (심플리셜) 컴플렉스면 $K$ 의 부분컴플렉스subcomplex라 한다. $$ \emptyset = K^{0} \subset K^{1} \subset \cdots \subset</description></item><item><title>기초통계학에서의 모수와 통계량</title><link>https://freshrimpsushi.github.io/ko/posts/2440/</link><pubDate>Fri, 01 Sep 2023 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/2440/</guid><description>정의 1 모집단에 연관된 수치적으로 기술되는 측도numerical descriptive measure를 모수parameter라 하고, 샘플에서 계산된 것을 통계량stat</description></item><item><title>등급 모듈의 정의</title><link>https://freshrimpsushi.github.io/ko/posts/2439/</link><pubDate>Wed, 30 Aug 2023 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/2439/</guid><description>빌드업 표기 상 $n,m,i \in \mathbb{Z}$ 이라고 하자. 등급환 링 $\left( R , + , \cdot \right)$ 이 아벨리안 그룹 $R$ 의 직합 $\left( R , \otimes \right) \simeq \bigoplus_{i} R_{i}$ 이 장착된 등급 환graded ring이라는 것은 $R_{i}$ 들 사</description></item><item><title>기초통계학에서 평균의 정의</title><link>https://freshrimpsushi.github.io/ko/posts/2438/</link><pubDate>Mon, 28 Aug 2023 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/2438/</guid><description>정의 1 $$ \overline{x} := {{ 1 } \over { n }} \sum_{k=1}^{n} x_{k} $$ $n$개의 양적 데이터가 주어져 있을 때, 그 값들을 모두 더하고 $n$ 으로 나눈 값 $\overline{x}$ 을 표본평균sample mean, 산술 평균arit</description></item><item><title>위상수학에서의 리트랙트</title><link>https://freshrimpsushi.github.io/ko/posts/2437/</link><pubDate>Sat, 26 Aug 2023 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/2437/</guid><description>정의 1 2 위상공간 $X$ 의 부분공간 $A \subset X$ 가 주어졌고, 항등함수를 $\text{id}$ 라 나타내자. 인클루젼 $i : A \to X$ 에 대해 $$ r \circ i = \text{id}_{A} : A \to A $$ 를 만족하는 연속 전사 함수 $r</description></item><item><title>다변량 데이터의 점도표</title><link>https://freshrimpsushi.github.io/ko/posts/2436/</link><pubDate>Thu, 24 Aug 2023 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/2436/</guid><description>정의 1 다변량 데이터가 주어져 있다고 하자. 양적 데이터 두 개를 골라 하나는 수평축(x축), 하나는 수직축(y축)으로 두어 점을 찍은 그림을 점도표scatte</description></item><item><title>축약가능 공간의 정의</title><link>https://freshrimpsushi.github.io/ko/posts/2435/</link><pubDate>Tue, 22 Aug 2023 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/2435/</guid><description>정의 1 2 호모토피 타입: 두 위상공간 $X, Y$ 에 대해 다음을 만족하는 연속함수 $f : X \to Y$, $g: Y \to X$ 가 존재하면 $X, Y$ 가 같은 호모토피 타입homotopy Type을</description></item><item><title>시계열 데이터의 꺾은 선 그래프</title><link>https://freshrimpsushi.github.io/ko/posts/2434/</link><pubDate>Sun, 20 Aug 2023 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/2434/</guid><description>정의 1 시계열 데이터가 주어져 있다고 하자. 시간의 변화를 수평축(x축)으로 나타내면서 값의 변화를 선으로 이어 나타내는 그래프를 꺾은 선 그래프line Cha</description></item><item><title>토러스의 기본군은 두 정수군의 곱과 동형이다</title><link>https://freshrimpsushi.github.io/ko/posts/2433/</link><pubDate>Fri, 18 Aug 2023 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/2433/</guid><description>정리 1 $$ \pi_{1} \left( T^{2} \right) \simeq \mathbb{Z} \times \mathbb{Z} $$ 토러스 $T^{2}$의 기본군은 $\mathbb{Z} \times \mathbb{Z}$ 다. 증명 유도된 호모몰피즘의 성질: [2]: 만약 $\varphi : X \to Y$ 가 호메오멀피즘이면, $\varphi_{\ast} : \pi_{1} \left( X,</description></item><item><title>양적 데이터의 히스토그램</title><link>https://freshrimpsushi.github.io/ko/posts/2432/</link><pubDate>Wed, 16 Aug 2023 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/2432/</guid><description>정의 1 2 어려운 정의 양적 데이터의 도수분포로 만들어진 막대 그래프를 히스토그램histogram이라 한다. 쉬운 정의 숫자로 된 데이터를 일정 구간으로 나누어</description></item><item><title>호모토피 타입</title><link>https://freshrimpsushi.github.io/ko/posts/2431/</link><pubDate>Mon, 14 Aug 2023 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/2431/</guid><description>정의 1 두 위상공간 $X, Y$ 에 대해 다음을 만족하는 연속함수 $f : X \to Y$, $g: Y \to X$ 가 존재하면 $X, Y$ 가 같은 호모토피 타입homotopy Type을 가진다고 하며 $X, Y$</description></item><item><title>질적 데이터의 막대 그래프</title><link>https://freshrimpsushi.github.io/ko/posts/2430/</link><pubDate>Sat, 12 Aug 2023 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/2430/</guid><description>정의 1 질적 데이터의 도수분포가 주어져 있다고 하자. 막대의 높이가 도수를 나타내는 그래프를 바 차트bar Chart라 한다. 원호의 넓이가 상대도수를 나타내는</description></item><item><title>곱공간의 기본군은 기본군들의 곱과 아이소멀픽하다</title><link>https://freshrimpsushi.github.io/ko/posts/2429/</link><pubDate>Thu, 10 Aug 2023 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/2429/</guid><description>정리 $X, Y$ 가 위상공간이라고 하자. 그 (토폴로지) 데카르트 곱의 기본군과 그 각각의 (그룹) 데카르트 곱은 아이소멀픽하다. $$ \pi_{1} \left( X \times Y , \left( x_{0} , y_{0} \right) \right) \simeq \pi_{1} \left(</description></item><item><title>양적자료의 계급</title><link>https://freshrimpsushi.github.io/ko/posts/2428/</link><pubDate>Tue, 08 Aug 2023 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/2428/</guid><description>정의 1 양적 데이터의 값에 따라 상한과 하한을 정해 나눈 구간을 계급class이라 한다. 각 계급에 속한 데이터의 수를 도수frequency라 한다. 설명 학술용</description></item><item><title>원의 기본군은 정수군과 동형이다</title><link>https://freshrimpsushi.github.io/ko/posts/2427/</link><pubDate>Sun, 06 Aug 2023 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/2427/</guid><description>정리 단위원 $S^{1}$의 기본군 $\pi_{1} \left( S^{1}, 1 \right)$ 과 정수군 $\mathbb{Z}$ 는 아이소멀픽하다. $$ \pi_{1} \left( S^{1}, 1 \right) \simeq \mathbb{Z} $$ 여기서 $(1,0) \in \mathbb{R}^{2}$ 을 간단히 $1$ 이라고도 나타냈다. 설명 응용 호모</description></item><item><title>질적자료의 도수</title><link>https://freshrimpsushi.github.io/ko/posts/2426/</link><pubDate>Fri, 04 Aug 2023 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/2426/</guid><description>정의 1 질적 데이터의 각 관측값이 나타나는 빈도수를 도수frequency라 한다. 도수를 전체 자료의 갯수로 나눈 것을 상대도수relative Freque</description></item><item><title>연속함수의 상대적 호모토피</title><link>https://freshrimpsushi.github.io/ko/posts/2425/</link><pubDate>Wed, 02 Aug 2023 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/2425/</guid><description>정의 1 호모토피의 일반화 $I = [0,1]$ 는 단위구간이고 $X, Y$ 가 위상공간이라고 하자. 두 연속 사상 $f_{0} , f_{1} : X \to Y$ 에 대해 $$ F (x , 0) = f_{0} (x) \\ F (x , 1) = f_{1} (x) $$ 를 만족하</description></item><item><title>통계학의 정의</title><link>https://freshrimpsushi.github.io/ko/posts/2424/</link><pubDate>Mon, 31 Jul 2023 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/2424/</guid><description>정의 1 통계학은 데이터를 수집하고 분석하며 나타내고 해석하며 결정을 하는 방법들의 집합이다. 기술통계학은 도표나 그래프와 요약 측도 등을 이용하여 데이터를 구성</description></item><item><title>대수위상에서의 유도된 준동형사상</title><link>https://freshrimpsushi.github.io/ko/posts/2423/</link><pubDate>Sat, 29 Jul 2023 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/2423/</guid><description>정의 1 2 $X,Y$ 가 위상공간이고 $\varphi : X \to Y$ 가 연속이라 하자. 이들의 기본군 사이에서 $$ \varphi_{\ast} [f] := \left[ \varphi f \right] = \left[ \varphi \circ f \right] \qquad , \forall f : I \to X $$ 와 같이 정의된 준동형사상 $$</description></item><item><title>통계학에서의 척도: 명목, 순서, 구간, 비율</title><link>https://freshrimpsushi.github.io/ko/posts/2422/</link><pubDate>Thu, 27 Jul 2023 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/2422/</guid><description>개요 일반적으로, 실제 세상에서 데이터를 만든다는 것은 현상이나 실험을 관측observe하여 그에 대해 기록하는 작업을 말하며, 이를 측정한다measure</description></item><item><title>모노드로미 정리 증명</title><link>https://freshrimpsushi.github.io/ko/posts/2421/</link><pubDate>Tue, 25 Jul 2023 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/2421/</guid><description>정리 1 $1$-스피어 $S^{1}$ 에서 $1 := (1,0)$ 을 시점으로 가지며 동치인 두 패스 $f_{0} \simeq f_{1}$ 가 주어져 있다고 하자. 만약 그 각각의 리프트가 $\widetilde{f}_{0}, \widetilde{f}_{1}$ 가 $\widetilde{f}_{0} (0) = \widetilde{f}_{1} (0)$ 을 만족한다면, $\widetilde{f}_{0} (1)</description></item><item><title>질적변수와 양적변수</title><link>https://freshrimpsushi.github.io/ko/posts/2420/</link><pubDate>Sun, 23 Jul 2023 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/2420/</guid><description>정의 1 질적변수 질적qualitative인 특성을 측정한 변수를 질적변수라 한다. 음식이&amp;hellip; 맛있다 / 그럭저럭이다 / 맛없다 색깔이&amp;hel</description></item><item><title>대수위상에서의 리프팅 정리 증명</title><link>https://freshrimpsushi.github.io/ko/posts/2419/</link><pubDate>Fri, 21 Jul 2023 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/2419/</guid><description>정리 1 2 커버링과 리프트의 정의: 단위구간을 $I = [0,1]$ 과 같이 나타내자. $X$ 의 오픈셋 $U \subset X$ 가 $p$ 에 의해 이븐하게 커버된다evenly Covered by $p$는 것은, 모든 $\alpha</description></item><item><title>데이터의 정의와 어원</title><link>https://freshrimpsushi.github.io/ko/posts/2418/</link><pubDate>Wed, 19 Jul 2023 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/2418/</guid><description>개요 사실 현대사회에서 데이터에 대해 전혀 모르는 지식인은 없다. 전혀 관심없는 비전공자라 하더라도 &amp;lsquo;무언가에 대한 지식&amp;rsquo; 혹은 &amp;ls</description></item><item><title>대수위상에서의 커버링과 리프트</title><link>https://freshrimpsushi.github.io/ko/posts/2417/</link><pubDate>Mon, 17 Jul 2023 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/2417/</guid><description>정의 1 2 두 위상공간 $\widetilde{X}, X$ 에 대해 $p : \widetilde{X} \to X$ 가 연속 함수라 하자. 임의의 인덱스 집합을 $\forall$ 와 같이 나타내고, $\widetilde{U}_{\alpha} \subset \widetilde{X}$ 에서 $p$ 의 제한함수를 간단히 $p |_{\widetilde{U}_{\alpha}} : \widetilde{U}_{\alpha} \to U$ 와 같이</description></item><item><title>줄리아에서 데이터 생략 없이 출력하는 법</title><link>https://freshrimpsushi.github.io/ko/posts/2416/</link><pubDate>Sat, 15 Jul 2023 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/2416/</guid><description>개요 원래 줄리아에서는 데이터를 출력할 때 REPL의 크기에 맞춰서 예쁘게 출력을 해주지만, 때로는 전체 데이터를 편하게 보고싶을 때가 있다. 데이터가 foo라면</description></item><item><title>대수위상에서 기본군</title><link>https://freshrimpsushi.github.io/ko/posts/2415/</link><pubDate>Thu, 13 Jul 2023 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/2415/</guid><description>정의 1 위상공간 $X$ 와 단위구간 $I = [0,1]$ 이 주어져 있다고 하자. $X$ 의 패스 $f, g : I \to X$ 에 대해, $f (1) = g(0)$ 일 때 두 패스의 곱product 혹은 합성composit</description></item><item><title>제1회 생새우초밥집 대회: Graph group</title><link>https://freshrimpsushi.github.io/ko/posts/2414/</link><pubDate>Tue, 11 Jul 2023 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/2414/</guid><description>2022년을 맞아 생새우초밥집은 독자 여러분들이 참가할 수 있는 정기 이벤트를 열게 되었습니다. 한 분기마다 한 개의 과제를 공개합니다. 이번 대회의 섹션은 순수수</description></item><item><title>호모토피의 클래스</title><link>https://freshrimpsushi.github.io/ko/posts/2413/</link><pubDate>Sun, 09 Jul 2023 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/2413/</guid><description>정리 간략한 서술 어떤 위상공간이든, 픽스된 두 점 사이에서 정의된 호모토피 상의 관계는 동치관계다. 자세한 서술 위상공간 $X$ 와 두 점 $x_{0}, x_{1} \in X$ 가 주어져 있다고 하자.</description></item><item><title>줄리아에서 선형대수 패키지 사용하는 법</title><link>https://freshrimpsushi.github.io/ko/posts/2412/</link><pubDate>Fri, 07 Jul 2023 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/2412/</guid><description>개요 줄리아는 매트랩 수준으로 선형대수를 잘 지원한다. 오히려 매트랩 이상으로 발전된, 직관적이고 미려한 문법을 보면 줄리아가 만들어진 시점부터 잘 설계된 느낌을</description></item><item><title>호모토피의 정의</title><link>https://freshrimpsushi.github.io/ko/posts/2411/</link><pubDate>Wed, 05 Jul 2023 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/2411/</guid><description>정의 1 단위 폐구간 $I := [0,1]$ 와 위상공간 $X$ 가 주어져 있다고 하자. 고정된 두 점 $x_{0} , x_{1} \in X$ 에 대해 다음을 만족하는 연속 함수 $p : I \to X$ 를 $x_{0}$ 에서 $x_{1}$ 으로의 경로 혹은 패스</description></item><item><title>줄리아에서 날짜 및 시간 관련 함수 사용하는 법</title><link>https://freshrimpsushi.github.io/ko/posts/2410/</link><pubDate>Mon, 03 Jul 2023 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/2410/</guid><description>개요 1 Dates는 날짜 및 시간과 관련된 함수를 모아놓은 모듈이다. 일반적인 프로그래밍은 물론이고 시계열에 관련된, 아니 관련 없더라도 많은 데이터를 다루는 데</description></item><item><title>추상 심플리셜 컴플렉스의 정의</title><link>https://freshrimpsushi.github.io/ko/posts/2409/</link><pubDate>Sat, 01 Jul 2023 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/2409/</guid><description>정의 1 임의의 집합 $X$ 가 주어져 있다고 하자. $X$ 의 멱집합 $2^{X}$ 의 유한한 부분집합 중 다음을 만족하는 컴플렉스 $A \subset 2^{X}$ 를 (추상 심플리셜) 컴플렉스abstract Simplicial</description></item><item><title>표현자 정리 증명</title><link>https://freshrimpsushi.github.io/ko/posts/2408/</link><pubDate>Thu, 29 Jun 2023 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/2408/</guid><description>정리 인풋 집합input set $X \ne \emptyset$ 과 양정부호 커널 $k: X \times X \to \mathbb{R}$ 이 주어져 있다고 하자. 학습데이터셋training Dataset을 $$ D := \left\{ \left( x_{i} , y_{i} \right) \right\}_{i=1}^{m}</description></item><item><title>대수위상에서의 오일러 지표</title><link>https://freshrimpsushi.github.io/ko/posts/2407/</link><pubDate>Tue, 27 Jun 2023 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/2407/</guid><description>정의 1 심플렉스 $\Delta$ 가 주어져 있다고 하자. $\Delta$ 의 버텍스의 수를 $n$, 에지의 수를 $m$, 페이스의 수를 $f$ 라고 할 때, $\Delta$ 의 오일러 지표Euler Characteristic $\chi$ 를 다음과 같이 정의한다.</description></item><item><title>머신러닝에서의 정부호 커널과 재생 커널 힐베르트 공간</title><link>https://freshrimpsushi.github.io/ko/posts/2406/</link><pubDate>Sun, 25 Jun 2023 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/2406/</guid><description>정의 1 2 인풋 공간input space $X \ne \emptyset$ 이 정의역이고 공역이 복소수의 집합 $\mathbb{C}$ 인 사상 $f: X \to \mathbb{C}$ 들로 이루어진 함수들의 공간 $\left( H , \left&amp;lt; \cdot , \cdot \right&amp;gt; \right) \subset \mathbb{C}^{X}$ 가 힐베르트공간</description></item><item><title>계산위상에서의 바운더리 행렬</title><link>https://freshrimpsushi.github.io/ko/posts/2405/</link><pubDate>Fri, 23 Jun 2023 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/2405/</guid><description>정의 1 심플리셜 컴플렉스 $K$ 가 주어져 있을 때 각 차원 $p$ 에 대해 $p$-심플렉스의 수를 $n_{p}$ 라 하고 $P-1$-심플렉스의 수를 $n_{p-1}$ 라 하자. $p-1$차원의 $i$</description></item><item><title>최적화이론의 라그랑주 승수법</title><link>https://freshrimpsushi.github.io/ko/posts/2404/</link><pubDate>Wed, 21 Jun 2023 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/2404/</guid><description>⚡ 이 포스트는 패스트 트랙Fast Track으로 작성되었습니다. 설명 비선형인 목적 함수를 가지는 비선형 최적화 문제에서 제약조건에 라그랑주 승수lagra</description></item><item><title>체흐 컴플렉스의 정의</title><link>https://freshrimpsushi.github.io/ko/posts/2403/</link><pubDate>Mon, 19 Jun 2023 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/2403/</guid><description>정의 1 2 거리공간 $\left( X, d \right)$ 와 양수 $\varepsilon &amp;gt; 0$ 이 주어져 있다고 하자. 유한집합 $S \subset X$ 에 대해 다음과 같이 정의된 추상 심플리셜 컴플렉스 $\check{C}_{\varepsilon} (S)$ 을 체흐 컴플렉스Čech C</description></item><item><title>서포트 벡터 머신</title><link>https://freshrimpsushi.github.io/ko/posts/2402/</link><pubDate>Sat, 17 Jun 2023 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/2402/</guid><description>모델 1 쉬운 정의 이진분류binary Classification 가능한 데이터를 가장 잘 구분하도록하는 직선이나 평면을 구하는 방법을 서포트 벡터 머신이라 한다. 어려운 정의 내적공간 $X</description></item><item><title>비에토리스-립스 컴플렉스의 정의</title><link>https://freshrimpsushi.github.io/ko/posts/2401/</link><pubDate>Thu, 15 Jun 2023 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/2401/</guid><description>정의 1 2 쉬운 정의 유클리드 공간 $\left( \mathbb{R}^{d} , \left\| \cdot \right\|_{2} \right)$ 와 양수 $\varepsilon &amp;gt; 0$ 이 주어져 있다고 하자. 유한집합 $S \subset \mathbb{R}^{d}$ 에 대해 다음의 두 조건을 만족하는 심플리셜 컴플렉스 $\text{VR}_{\varepsilon} (S)$ 를 비</description></item><item><title>일반적인 컨벡스 함수의 정의</title><link>https://freshrimpsushi.github.io/ko/posts/2400/</link><pubDate>Tue, 13 Jun 2023 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/2400/</guid><description>정의 벡터공간 $V$ 에서 정의된 함수 $f : V \to \mathbb{R}$ 가 모든 $\mathbf{x}, \mathbf{y} \in V$ 와 모든 $t \in [0,1]$ 에 대해 다음을 만족하면 컨벡스 함수convex Funciton라 한다. $$ f \left( (1-t) \mathbf{x}</description></item><item><title>호몰로지 그룹의 베티 수</title><link>https://freshrimpsushi.github.io/ko/posts/2399/</link><pubDate>Sun, 11 Jun 2023 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/2399/</guid><description>개요 기하적인 의미를 생각하지 않을 때 담백하게 정의만 적어보자면, 대수위상algebraic Topology에서 베티 수betti number란 단지 체</description></item><item><title>줄리아에서 분산 컴퓨팅 하는 법</title><link>https://freshrimpsushi.github.io/ko/posts/2398/</link><pubDate>Fri, 09 Jun 2023 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/2398/</guid><description>개요 줄리아에서 복수의 디바이스에게 작업 스케쥴을 내려 계산하는 법을 소개한다1. 솔직히 나도 잘 모르겠다. 코드 using Distributed ip_ = [] for last in [160,161,162,163,164,32,33,34,35,36,43,44,45,46,47] push!(ip_, join([155,230,211,last],&amp;#39;.&amp;#39;)) end sort!(ip_) for ip in ip_ addprocs([(&amp;#34;chaos@&amp;#34; * ip, 8)];</description></item><item><title>유한 생성 아벨군의 기본정리 증명</title><link>https://freshrimpsushi.github.io/ko/posts/2397/</link><pubDate>Wed, 07 Jun 2023 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/2397/</guid><description>정리 유한 생성 프리 그룹 $G$ 가 아벨리안 그룹이고, $T \subset G$ 를 $G$ 의 토션 서브 그룹이라 하자. (1): 유한 랭크 $\beta \ge 0$ 를 가지며 다음을 만족하는 프리 아벨군 $H \subset G$ 이 존재한다</description></item><item><title>유클리드 그래프</title><link>https://freshrimpsushi.github.io/ko/posts/2396/</link><pubDate>Mon, 05 Jun 2023 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/2396/</guid><description>정의 1 쉬운 정의 유클리드 공간의 유한 부분집합 $V \subset \mathbb{R}^{p}$ 와 컷오프cutoff $\delta \ge 0$ 가 주어져 있다고 하자. 유클리드 그래프란 $V$ 를 버텍스vertex로 가지고 두</description></item><item><title>호모몰피즘의 스미스 노멀 폼</title><link>https://freshrimpsushi.github.io/ko/posts/2395/</link><pubDate>Sat, 03 Jun 2023 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/2395/</guid><description>정리 1 프리 아벨리안 그룹 $G$ 와 $G'$ 에 대해 $a_{1} , \cdots , a_{n}$ 가 $G$ 의 기저고, $a_{1}' , \cdots , a_{m}'$ 가 $G'$ 의 기저라 하자. 만약 함수 $f : G \to G'$ 가 호모몰피즘이라면 다음을 만족하는 유일</description></item><item><title>줄리아의 다차원 인덱스</title><link>https://freshrimpsushi.github.io/ko/posts/2394/</link><pubDate>Thu, 01 Jun 2023 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/2394/</guid><description>개요 줄리아에서는 다차원 배열에 참조할 수 있는 인덱스의 타입인 CatesianIndex를 제공한다1. 당연히 카티션catesian이라는 명명은 집합의</description></item><item><title>토션 서브 그룹의 정의</title><link>https://freshrimpsushi.github.io/ko/posts/2393/</link><pubDate>Tue, 30 May 2023 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/2393/</guid><description>정의 1 $G$ 가 아벨리안 그룹이라고 하자. $g \in G$ 가 어떤 $n \in \mathbb{N}$ 에 대해 $ng = 0$ 를 만족하면 $g$ 가 유한 오더finite Order를 가진다고 말한다. $G$ 에서 유한 오더</description></item><item><title>줄리아의 숏 서킷</title><link>https://freshrimpsushi.github.io/ko/posts/2392/</link><pubDate>Sun, 28 May 2023 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/2392/</guid><description>개요 줄리아에서 &amp;amp;&amp;amp;과 ||는 논리곱, 논리합일 뿐만 아니라 숏-서킷 평가short-circuit Evaluation을 수행한다1.</description></item><item><title>프리 그룹의 서브 그룹</title><link>https://freshrimpsushi.github.io/ko/posts/2391/</link><pubDate>Fri, 26 May 2023 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/2391/</guid><description>정리 $F$ 가 프리 아벨리안 그룹이라 하자. [1]: $F$ 의 모든 서브그룹 $R$ 은 프리 그룹이다. [2]: 만약 $F$ 가 랭크 $n$ 이라면, $F$ 의 서브그룹 $R \subset F$ 은 랭크 $r \le n$ 인 프리 아벨리안 그</description></item><item><title>줄리아의 find 함수들</title><link>https://freshrimpsushi.github.io/ko/posts/2390/</link><pubDate>Wed, 24 May 2023 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/2390/</guid><description>개요 줄리아의 기본 내장 함수들로써 알면 알수록 유용하다. 거두절미하고 예시를 보며 익히자. 코드 x = [3, 7, 4, 5, 10, 3, 12, 3, 2, 4] argmin(x) argmax(x) findmin(x) findmax(x) extrema(x) findfirst(x .== 3) findlast(x .== 3) findall(x .== 3) findnext(x .==</description></item><item><title>스미스 노멀 폼의 존재성 증명</title><link>https://freshrimpsushi.github.io/ko/posts/2389/</link><pubDate>Mon, 22 May 2023 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/2389/</guid><description>알고리즘 $R$ 이 주아이디얼정역일 때, 모든 행렬 $A \in R^{m \times n}$ 에 대해 스미스 노멀 폼이 유일하게 존재한다. 다시 말해, 행렬 $A \in R^{m \times n}$ 에 대해 다음을 만족시키는 $d_{1} , \cdots</description></item><item><title>줄리아의 느낌표 컨벤션</title><link>https://freshrimpsushi.github.io/ko/posts/2388/</link><pubDate>Sat, 20 May 2023 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/2388/</guid><description>개요 1 줄리아에서 함수 이름의 가장 마지막에 느낌표bang !을 넣는 것을 뱅 컨벤션이라 한다. 이러한 함수들은 입력받은 인수를 수정하는 특징을 가진다. 코드 function add_1!(x)</description></item><item><title>행렬의 스미스 노멀 폼</title><link>https://freshrimpsushi.github.io/ko/posts/2387/</link><pubDate>Thu, 18 May 2023 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/2387/</guid><description>정의 1 2 PID, 즉 주아이디얼정역 $R$ 이 주어져 있다고 하자. 행렬 $A \in R^{m \times n}$ 에 대해 다음을 만족시키는 $d_{1} , \cdots , d_{r} \in R$ 과 가역행렬 $P \in R^{m \times m}$, $Q \in R^{n \times n}$ 이 존재하면 $PAQ</description></item><item><title>베주 정역</title><link>https://freshrimpsushi.github.io/ko/posts/2386/</link><pubDate>Tue, 16 May 2023 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/2386/</guid><description>정의 정역 $D$ 에서 다음과 같은 등식을 베주 항등식이라 한다. $$ m a + n b = \gcd \left( a, b \right) $$ 모든 $a, b \in D$ 에 대해 베주 항등식을 만족시키는 $m,n \in D$ 가 존재하면 $D$ 를 베주</description></item><item><title>벨츨 알고리즘: 최소내포디스크 문제의 해법</title><link>https://freshrimpsushi.github.io/ko/posts/2385/</link><pubDate>Sun, 14 May 2023 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/2385/</guid><description>문제 최소 내포 디스크 $n &amp;gt; d$ 라고 하자. $d$차원 유클리드 공간에서 주어진 유한 집합 $P = \left\{ p_{k} \right\}_{k=1}^{n} \subset \mathbb{R}^{d}$ 에 대해 다음과 같은 최적화 문제를 최소 내포 디스크 문제sma</description></item><item><title>줄리아에서 부분배열 빠르게 참조하는 법</title><link>https://freshrimpsushi.github.io/ko/posts/2384/</link><pubDate>Fri, 12 May 2023 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/2384/</guid><description>개요 줄리아에서 view는 배열array의 부분배열subarray를 빠르게 참조하게끔 해주는 데이터 구조다1. 실제로 쓰는 입장에서는 번거롭기만하고 차</description></item><item><title>심플리셜 호몰로지 그룹의 정의</title><link>https://freshrimpsushi.github.io/ko/posts/2383/</link><pubDate>Wed, 10 May 2023 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/2383/</guid><description>빌드업 어려운 내용이지만 가능한 이해하기 쉽도록 생략 없이 모든 계산과 설명을 꼼꼼하게 남겼다. 호몰로지에 관심이 있다면 꼭 읽어보길 바란다. 실제로 우리가 관심을</description></item><item><title>줄리아의 브로드캐스팅 문법</title><link>https://freshrimpsushi.github.io/ko/posts/2382/</link><pubDate>Mon, 08 May 2023 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/2382/</guid><description>개요 브로드캐스팅broadcasting은 줄리아에서 가장 중요한 개념으로, 벡터화된 코드를 작성함에 있어서 아주 편리한 문법이다1. 이항연산 앞에 .을 찍</description></item><item><title>델타-컴플렉스의 정의</title><link>https://freshrimpsushi.github.io/ko/posts/2381/</link><pubDate>Sat, 06 May 2023 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/2381/</guid><description>정의 1 심플렉스의 정의: 아핀독립인 $v_{0}, v_{1} , \cdots , v_{n} \in \mathbb{R}^{n+1}$ 의 컨벡스 헐을 $n$-심플렉스$n$-simplex $\Delta^{n}$ 라 하고, 벡터 $v_{k}$ 들을 꼭짓점vertex이라</description></item><item><title>프로그래밍에서 맵과 리듀스</title><link>https://freshrimpsushi.github.io/ko/posts/2380/</link><pubDate>Thu, 04 May 2023 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/2380/</guid><description>정의 맵 함수 $f : X \to Y$ 의 집합을 $F$ 라 하자. 다음과 같이 정의되는 고차 함수 $\text{map}$ 를 맵이라 한다. $$ \text{map} : F \times 2^{X} \to 2^{Y} \\ \text{map} \left( f , \left\{ x_{1} , \cdots , x_{n} \right\} \right) := \left\{ f \left( x_{1} \right) , \cdots, f</description></item><item><title>심플리셜 컴플렉스의 정의</title><link>https://freshrimpsushi.github.io/ko/posts/2379/</link><pubDate>Tue, 02 May 2023 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/2379/</guid><description>정의 어려운 정의 1 $$ \Delta^{k} \in K $$ 유한히 많은 심플렉스들의 집합 $K$ 가 다음 두 조건을 만족하는 컴플렉스면 심플리셜 컴플렉스simplicial Complex라 한</description></item><item><title>프로그래밍에서의 고차 함수</title><link>https://freshrimpsushi.github.io/ko/posts/2378/</link><pubDate>Sun, 30 Apr 2023 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/2378/</guid><description>정의 프로그래밍에서 함수가 일급객체일 때, 함수를 인자로 받거나 반환하는 함수를 고차 함수higher-order function라 한다. 이와 대비되는 표</description></item><item><title>수학에서 토러스란?</title><link>https://freshrimpsushi.github.io/ko/posts/2377/</link><pubDate>Fri, 28 Apr 2023 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/2377/</guid><description>정의 위와 같은 사상map에 따라 $1$-스피어의 제곱인 사각형 $S^{1} \times S^{1} = [0,1] \times [0,1]$ 과 위상동형인 몫공간 $T$ 를 토러스torus라 한다. 그림 상으로는 가장 오른쪽에</description></item><item><title>CW 컴플렉스의 정의</title><link>https://freshrimpsushi.github.io/ko/posts/2376/</link><pubDate>Wed, 26 Apr 2023 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/2376/</guid><description>개요 1 CW 컴플렉스는 셀 컴플렉스cell Complex라고도 불리는 컴플렉스로, 다음의 재귀적인 프로시저로 구축한다. 정의 이산적인discrete 집합</description></item><item><title>줄리아에서 배열로 딕셔너리 만드는 법</title><link>https://freshrimpsushi.github.io/ko/posts/2375/</link><pubDate>Mon, 24 Apr 2023 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/2375/</guid><description>코드 1 julia&amp;gt; Dict([&amp;#34;a&amp;#34;, &amp;#34;bc&amp;#34;] .=&amp;gt; [2,8]) Dict{String, Int64} with 2 entries: &amp;#34;a&amp;#34; =&amp;gt; 2 &amp;#34;bc&amp;#34; =&amp;gt; 8 키Key와 밸류Value로 두고 싶은 두 배열이 주어져 있을 때, Dict(Key .=&amp;gt; Value)를 통해 딕셔너리를 만들 수 있다. 본</description></item><item><title>위상수학에서 컴플렉스란?</title><link>https://freshrimpsushi.github.io/ko/posts/2374/</link><pubDate>Sat, 22 Apr 2023 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/2374/</guid><description>개요 보통 수학에서 컴플렉스complex라 하면 복소수를 일컫는데, 기하학이나 위상수학에서 컴플렉스라고 하면 다음 용어 같은 것을 말한다. 용어 위상적으로 간</description></item><item><title>줄리아에서 복소수 사용하는 법</title><link>https://freshrimpsushi.github.io/ko/posts/2373/</link><pubDate>Thu, 20 Apr 2023 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/2373/</guid><description>개요 줄리아에서는 기본적으로 R처럼 복소수를 지원한다. 코드 허수 im julia&amp;gt; z = 3 + 4im 3 + 4im im은 순허수 $i = \sqrt{-1}$ 를 나타낸다. 우리가 상식적으로 사용하는 사칙연산</description></item><item><title>위상수학에서 디스크와 스피어</title><link>https://freshrimpsushi.github.io/ko/posts/2372/</link><pubDate>Tue, 18 Apr 2023 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/2372/</guid><description>정의 1 유클리드 공간 $\left( \mathbb{R}^{n} , \left\| \cdot \right\| \right)$ 에서 다음과 같은 도형들을 정의한다. 다음과 같이 정의된 $D^{n} \subset \mathbb{R}^{n}$ 를 $n$-유닛 디스크unit Disk라 한다. $$ D^{n} := \left\{ \mathbf{x}</description></item><item><title>마크 뉴먼 네트워크 데이터 소개</title><link>https://freshrimpsushi.github.io/ko/posts/2371/</link><pubDate>Sun, 16 Apr 2023 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/2371/</guid><description>소개 마크 뉴먼mark Newman은 복잡계와 네트워크에 대해 뛰어난 업적을 남긴 물리학자로, 이 분야에 있어서 그 명성은 가히 절대적이라고 할만하다. 링크 그 이</description></item><item><title>약한 위상의 정의</title><link>https://freshrimpsushi.github.io/ko/posts/2370/</link><pubDate>Fri, 14 Apr 2023 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/2370/</guid><description>정의 1 $X$ 가 두 위상 $\mathscr{T}_{1}$, $\mathscr{T}_{2}$ 를 가진 집합이라 하자. 만약 $\mathscr{T}_{1} \subset \mathscr{T}_{2}$ 이면 $\mathscr{T}_{1}$ 가 $\mathscr{T}_{2}$ 보다 약하다weaker, $\mathscr{T}_{2}$ 가 $\mathscr{T}_{1}$ 보다 강하다stronger고 한다. 집합 $X$ 에서 위상공</description></item><item><title>OpenFlights 소개</title><link>https://freshrimpsushi.github.io/ko/posts/2369/</link><pubDate>Wed, 12 Apr 2023 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/2369/</guid><description>소개 오픈 플라이트는 전세계의 공항과 항공망에 대한 데이터를 제공한다. 여러가지 전처리를 좀 거쳐야 하지만 의외로 이 정도 되는 네트워크 데이터가 흔치 않으니 감사하</description></item><item><title>라그랑주 이동 모델</title><link>https://freshrimpsushi.github.io/ko/posts/2368/</link><pubDate>Mon, 10 Apr 2023 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/2368/</guid><description>정의 1 단기적인 집단 간의 상호작용을 다루는 메타개체군 모델을 오일러 이동 모델Eulerian Movement model이라 한다. 예시 간단한 SIR 모델의 확장을 생각해보자</description></item><item><title>스탠포드 네트워크 분석 프로젝트 소개</title><link>https://freshrimpsushi.github.io/ko/posts/2367/</link><pubDate>Sat, 08 Apr 2023 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/2367/</guid><description>소개 SNAP(Stanford Network Analysis Project)는 스탠포드 대학에서 유지보수하는 네트워크 분석/마이닝 라이브러리로, 거대 네트워크라고 할만한 네트워크 데이터를 제공하고 있다</description></item><item><title>오일러 이동 모델</title><link>https://freshrimpsushi.github.io/ko/posts/2366/</link><pubDate>Thu, 06 Apr 2023 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/2366/</guid><description>정의 1 중장기적인 집단 간의 이주를 다루는 메타개체군 모델을 오일러 이동 모델Eulerian Movement model이라 한다. 예시 $n$ 개의 패치가 있고, $N_{k}$ 를 $k$번째</description></item><item><title>World Pop 소개</title><link>https://freshrimpsushi.github.io/ko/posts/2365/</link><pubDate>Tue, 04 Apr 2023 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/2365/</guid><description>소개 세계 항공망 네트워크, 국가 간 이민 통계, 도시화, 연령 및 성별 구조 등에 대한 데이터를 제공한다. 다루는 데이터들 자체가 사이트 이름과 맞게 인구popula</description></item><item><title>메타개체군 모델</title><link>https://freshrimpsushi.github.io/ko/posts/2364/</link><pubDate>Sun, 02 Apr 2023 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/2364/</guid><description>용어 1 공간적으로 분리된 복수의 인구집단에 대한 모형을 메타개체군 모델metapopulation model이라 한다. 이러한 맥락에서, 그 분리된 공간을</description></item><item><title>SEES:lab 소개</title><link>https://freshrimpsushi.github.io/ko/posts/2363/</link><pubDate>Fri, 31 Mar 2023 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/2363/</guid><description>소개 연구실의 이름 SEES는 Science and Engineering of Emerging Systems의 앞글자를 따왔다. 공항, 이메일 등 네트워크에 대한 데이터가 깔끔하게 정제되어 있다. 대부분의 컨텐츠</description></item><item><title>R로 선형계획문제 푸는 법</title><link>https://freshrimpsushi.github.io/ko/posts/2362/</link><pubDate>Wed, 29 Mar 2023 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/2362/</guid><description>개요 lpSolve 패키지를 사용하면 된다1. 행렬 꼴로 나타난 선형계획문제의 $A, \mathbf{b}, \mathbf{c}$ 를 넣어서 쓴다. 코드 $$ \begin{matrix} \text{Maximize} &amp;amp; &amp;amp; x_{1} &amp;amp; + &amp;amp; x_{2} \\ \text{subject to} &amp;amp;-&amp;amp; x_{1} &amp;amp; + &amp;amp; x_{2} &amp;amp; \le &amp;amp; 1 \\ &amp;amp; &amp;amp; x_{1} &amp;amp; &amp;amp;</description></item><item><title>Our World in Data 소개</title><link>https://freshrimpsushi.github.io/ko/posts/2361/</link><pubDate>Mon, 27 Mar 2023 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/2361/</guid><description>소개 Our World in Data는 그 사이트 이름처럼 전세계의 인구, 연령, 경제, 정치, 에너지, 젠더, 질병 등 수백가지 종류의 데이터를 국가별, 연도별로 아무런 대가 없이</description></item><item><title>매트랩으로 선형계획문제 푸는 법</title><link>https://freshrimpsushi.github.io/ko/posts/2360/</link><pubDate>Sat, 25 Mar 2023 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/2360/</guid><description>개요 Optimization Toolbox를 사용하면 된다1. 행렬 꼴로 나타난 선형계획문제의 $A, \mathbf{b}, \mathbf{c}$ 를 넣어서 쓴다. 코드 $$ \begin{matrix} \text{Maximize} &amp;amp; &amp;amp; x_{1} &amp;amp; + &amp;amp; x_{2} \\ \text{subject to} &amp;amp;-&amp;amp; x_{1} &amp;amp; + &amp;amp; x_{2} &amp;amp; \le &amp;amp; 1 \\ &amp;amp;</description></item><item><title>카이제곱분포의 충분통계량</title><link>https://freshrimpsushi.github.io/ko/posts/2359/</link><pubDate>Thu, 23 Mar 2023 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/2359/</guid><description>정리 카이제곱분포를 따르는 랜덤샘플 $\mathbf{X} := \left( X_{1} , \cdots , X_{n} \right) \sim \chi^{2} (r)$ 이 주어져 있다고 하자. $r$ 에 대한 충분통계량 $T$ 는 다음과 같다. $$ T = \left( \prod_{i} X_{i} \right) $$ 증명 감마 분포와</description></item><item><title>파이썬으로 선형계획문제 푸는 법</title><link>https://freshrimpsushi.github.io/ko/posts/2358/</link><pubDate>Tue, 21 Mar 2023 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/2358/</guid><description>개요 scipy 패키지를 사용하면 된다1. 행렬 꼴로 나타난 선형계획문제의 $A, \mathbf{b}, \mathbf{c}$ 를 넣어서 쓴다. 코드 $$ \begin{matrix} \text{Maximize} &amp;amp; &amp;amp; x_{1} &amp;amp; + &amp;amp; x_{2} \\ \text{subject to} &amp;amp;-&amp;amp; x_{1} &amp;amp; + &amp;amp; x_{2} &amp;amp; \le &amp;amp; 1 \\ &amp;amp; &amp;amp; x_{1} &amp;amp; &amp;amp;</description></item><item><title>베타분포의 충분통계량</title><link>https://freshrimpsushi.github.io/ko/posts/2357/</link><pubDate>Sun, 19 Mar 2023 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/2357/</guid><description>정리 베타분포를 따르는 랜덤샘플 $\mathbf{X} := \left( X_{1} , \cdots , X_{n} \right) \sim \text{Beta} \left( \alpha, \beta \right)$ 이 주어져 있다고 하자. $\left( \alpha, \beta \right)$ 에 대한 충분통계량 $T$ 는 다음과 같다. $$ T = \left( \prod_{i} X_{i}, \prod_{i} \left( 1 - X_{i}</description></item><item><title>줄리아로 선형계획문제 푸는 법</title><link>https://freshrimpsushi.github.io/ko/posts/2356/</link><pubDate>Fri, 17 Mar 2023 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/2356/</guid><description>개요 JuMP 패키지를 사용하면 된다1. JuMP는 Julia Mathematical Programming의 준말이다. 다른 언어와 비교해보자면 줄리아에서의 코딩은 거의 수식을 있는 그대로 옮</description></item><item><title>감마분포의 충분통계량</title><link>https://freshrimpsushi.github.io/ko/posts/2355/</link><pubDate>Wed, 15 Mar 2023 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/2355/</guid><description>정리 감마분포를 따르는 랜덤샘플 $\mathbf{X} := \left( X_{1} , \cdots , X_{n} \right) \sim \Gamma \left( k, \theta \right)$ 이 주어져 있다고 하자. $\left( k, \theta \right)$ 에 대한 충분통계량 $T$ 는 다음과 같다. $$ T = \left( \prod_{i} X_{i}, \sum_{i} X_{i} \right) $$ 증</description></item><item><title>엑셀로 선형계획문제 푸는 법</title><link>https://freshrimpsushi.github.io/ko/posts/2354/</link><pubDate>Mon, 13 Mar 2023 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/2354/</guid><description>가이드 Step 1. 해 찾기 추가 기능 활성화 파일/옵션/추가 기능 탭에서 관리(A)의 Excel 추가 기능 옆에 있는 이동(G) 버튼을 클릭한다. 다음과 같이 추가 기능이라는 창이</description></item><item><title>정규분포의 충분통계량과 최대우도추정량</title><link>https://freshrimpsushi.github.io/ko/posts/2353/</link><pubDate>Sat, 11 Mar 2023 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/2353/</guid><description>정리 정규분포를 따르는 랜덤샘플 $\mathbf{X} := \left( X_{1} , \cdots , X_{n} \right) \sim N \left( \mu , \sigma^{2} \right)$ 이 주어져 있다고 하자. $\left( \mu, \sigma^{2} \right)$ 에 대한 충분통계량 $T$ 와 최대우도추정량 $\left( \hat{\mu}, \widehat{\sigma^{2}} \right)$ 는 다음과 같</description></item><item><title>선형계획법에서의 강한 쌍대성 정리 증명</title><link>https://freshrimpsushi.github.io/ko/posts/2352/</link><pubDate>Thu, 09 Mar 2023 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/2352/</guid><description>정리 $$ \begin{align*} \text{Maximize} &amp;amp; \sum_{j=1}^{n} c_{j} x_{j} &amp;amp; \text{(Primal)} \\ \text{subject to} &amp;amp; \sum_{j=1}^{n} a_{ij} x_{j} \le b_{i} &amp;amp; i = 1 ,\cdots , m \\ &amp;amp; x_{j} \ge 0 &amp;amp; j = 1, \cdots , n \end{align*} $$ $$ \begin{align*} \text{Minimize} &amp;amp; \sum_{i=1}^{m} b_{i} y_{i} &amp;amp; \text{(Dual)} \\ \text{subject to} &amp;amp; \sum_{i=1}^{m} y_{i} a_{ij} \ge c_{j} &amp;amp; j = 1 ,\cdots , n \\ &amp;amp; y_{i} \ge</description></item><item><title>선형계획법에서의 약한 쌍대성 정리 증명</title><link>https://freshrimpsushi.github.io/ko/posts/2350/</link><pubDate>Sun, 05 Mar 2023 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/2350/</guid><description>정리 $$ \begin{align*} \text{Maximize} &amp;amp; \sum_{j=1}^{n} c_{j} x_{j} &amp;amp; \text{(Primal)} \\ \text{subject to} &amp;amp; \sum_{j=1}^{n} a_{ij} x_{j} \le b_{i} &amp;amp; i = 1 ,\cdots , m \\ &amp;amp; x_{j} \ge 0 &amp;amp; j = 1, \cdots , n \end{align*} $$ $$ \begin{align*} \text{Minimize} &amp;amp; \sum_{i=1}^{m} b_{i} y_{i} &amp;amp; \text{(Dual)} \\ \text{subject to} &amp;amp; \sum_{i=1}^{m} y_{i} a_{ij} \ge c_{j} &amp;amp; j = 1 ,\cdots , n \\ &amp;amp; y_{i} \ge</description></item><item><title>지수분포의 충분통계량과 최대우도추정량</title><link>https://freshrimpsushi.github.io/ko/posts/2349/</link><pubDate>Fri, 03 Mar 2023 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/2349/</guid><description>정리 지수분포를 따르는 랜덤샘플 $\mathbf{X} := \left( X_{1} , \cdots , X_{n} \right) \sim \exp \left( \lambda \right)$ 이 주어져 있다고 하자. $\lambda$ 에 대한 충분통계량 $T$ 와 최대우도추정량 $\hat{\lambda}$ 는 다음과 같다. $$ \begin{align*} T =&amp;amp; \sum_{k=1}^{n} X_{k}</description></item><item><title>선형계획법에서의 듀얼</title><link>https://freshrimpsushi.github.io/ko/posts/2348/</link><pubDate>Wed, 01 Mar 2023 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/2348/</guid><description>빌드업 $x_{1} , x_{2} \ge 0$ 에 대해 다음과 같은 선형계획문제가 주어져 있다고 하자. $$ \begin{matrix} \text{Maximize} &amp;amp; &amp;amp; 2x_{1} &amp;amp; + &amp;amp; 3x_{2} \\ \text{subject to} &amp;amp; &amp;amp; 4x_{1} &amp;amp; + &amp;amp; 8x_{2} &amp;amp; \le &amp;amp; 12 \\ &amp;amp; &amp;amp; 2x_{1} &amp;amp; + &amp;amp; x_{2} &amp;amp; \le &amp;amp; 3 \\ &amp;amp;</description></item><item><title>푸아송분포의 충분통계량과 최대우도추정량</title><link>https://freshrimpsushi.github.io/ko/posts/2347/</link><pubDate>Mon, 27 Feb 2023 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/2347/</guid><description>정리 푸아송분포를 따르는 랜덤샘플 $\mathbf{X} := \left( X_{1} , \cdots , X_{n} \right) \sim \text{Poi} \left( \lambda \right)$ 이 주어져 있다고 하자. $\lambda$ 에 대한 충분통계량 $T$ 와 최대우도추정량 $\hat{\lambda}$ 는 다음과 같다. $$ \begin{align*} T =&amp;amp; \sum_{k=1}^{n}</description></item><item><title>선형계획법의 기본정리 증명</title><link>https://freshrimpsushi.github.io/ko/posts/2346/</link><pubDate>Sat, 25 Feb 2023 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/2346/</guid><description>정리 방정식 폼의 선형계획문제에 대해, 다음 셋 중 하나는 참이다. (1): 만약 최적해가 존재하지 않는다면, 애초에 문제 자체가 비가용infeasible이거나 언바</description></item><item><title>기하분포의 충분통계량과 최대우도추정량</title><link>https://freshrimpsushi.github.io/ko/posts/2345/</link><pubDate>Thu, 23 Feb 2023 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/2345/</guid><description>정리 기하분포를 따르는 랜덤샘플 $\mathbf{X} := \left( X_{1} , \cdots , X_{n} \right) \sim \text{Geo} \left( p \right)$ 이 주어져 있다고 하자. $p$ 에 대한 충분통계량 $T$ 와 최대우도추정량 $\hat{p}$ 는 다음과 같다. $$ \begin{align*} T =&amp;amp; \sum_{k=1}^{n} X_{k}</description></item><item><title>심플렉스 메소드의 브랜드 룰</title><link>https://freshrimpsushi.github.io/ko/posts/2344/</link><pubDate>Tue, 21 Feb 2023 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/2344/</guid><description>정리 딕셔너리: $i = 1 , \cdots , m$ 에 대해서 다음과 같은 꼴의 연립방정식을 딕셔너리dictionary라 한다. $$ \begin{align*} \zeta &amp;amp;=&amp;amp; &amp;amp; &amp;amp; \sum_{j=1}^{n} c_{j} x_{j} \\ x_{n+i} &amp;amp;=&amp;amp; b_{i} &amp;amp;-&amp;amp; \sum_{j=1}^{n} a_{ij} x_{j} \end{align*} $$ $\zeta$ 를</description></item><item><title>일양분포의 충분통계량과 최대우도추정량</title><link>https://freshrimpsushi.github.io/ko/posts/2343/</link><pubDate>Sun, 19 Feb 2023 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/2343/</guid><description>정리 일양분포를 따르는 랜덤샘플 $\mathbf{X} := \left( X_{1} , \cdots , X_{n} \right) \sim U \left( 0 , \theta \right)$ 이 주어져 있다고 하자. $\theta$ 에 대한 충분통계량 $T$ 와 최대우도추정량 $\hat{\theta}$ 는 다음과 같다. $$ \begin{align*} T =&amp;amp;</description></item><item><title>심플렉스 메소드의 사이클링</title><link>https://freshrimpsushi.github.io/ko/posts/2342/</link><pubDate>Fri, 17 Feb 2023 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/2342/</guid><description>정의 $$ \begin{matrix} \text{Maximize} &amp;amp; \mathbf{c}^{T} \mathbf{x} \\ \text{subject to} &amp;amp; A \mathbf{x} = \mathbf{b} \\ &amp;amp; \mathbf{x} \ge \mathbf{0} \end{matrix} $$ 행렬 $A \in \mathbb{R}^{m \times n}$ 과 $\mathbf{b} \in \mathbb{R}^{m \times 1}$ 와 $\mathbf{c} \in \mathbb{R}^{n}$ 에 대해 선형계획문제가 위와 같이 방정식 폼으로 나타난다고 하고, $i =</description></item><item><title>줄리아에서 조건문 짧게 쓰는 법</title><link>https://freshrimpsushi.github.io/ko/posts/2341/</link><pubDate>Wed, 15 Feb 2023 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/2341/</guid><description>개요 줄리아에서 &amp;lt;condition&amp;gt; &amp;amp;&amp;amp; &amp;lt;statement&amp;gt;는 &amp;lt;condition&amp;gt;이 참일 때 &amp;lt;statement&amp;gt;가 실행된다</description></item><item><title>선형계획법에서 목적 함수의 무한성</title><link>https://freshrimpsushi.github.io/ko/posts/2340/</link><pubDate>Mon, 13 Feb 2023 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/2340/</guid><description>설명 $$ \begin{matrix} \text{Maximize} &amp;amp; \mathbf{c}^{T} \mathbf{x} \\ \text{subject to} &amp;amp; A \mathbf{x} = \mathbf{b} \\ &amp;amp; \mathbf{x} \ge \mathbf{0} \end{matrix} $$ 행렬 $A \in \mathbb{R}^{m \times n}$ 과 $\mathbf{b} \in \mathbb{R}^{m \times 1}$ 와 $\mathbf{c} \in \mathbb{R}^{n}$ 에 대해 선형계획문제가 위와 같이 방정식 폼으로 나타난다고 하자. 제약</description></item><item><title>심플렉스 메소드의 초기화와 보조문제</title><link>https://freshrimpsushi.github.io/ko/posts/2338/</link><pubDate>Thu, 09 Feb 2023 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/2338/</guid><description>빌드업 $$ \begin{matrix} \text{Maximize} &amp;amp; \mathbf{c}^{T} \mathbf{x} \\ \text{subject to} &amp;amp; A \mathbf{x} = \mathbf{b} \\ &amp;amp; \mathbf{x} \ge \mathbf{0} \end{matrix} $$ 행렬 $A \in \mathbb{R}^{m \times n}$ 과 $\mathbf{b} \in \mathbb{R}^{m \times 1}$ 와 $\mathbf{c} \in \mathbb{R}^{n}$ 에 대해 선형계획문제가 위와 같이 방정식 폼으로 나타난다고 하자. 그</description></item><item><title>유니모달 분포의 최단 신뢰구간</title><link>https://freshrimpsushi.github.io/ko/posts/2337/</link><pubDate>Tue, 07 Feb 2023 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/2337/</guid><description>정리 유니모달 함수의 정의 함수 $f : \mathbb{R} \to \mathbb{R}$ 이 $x \le x^{\ast}$ 에서 감소하지 않고, $x \ge x^{\ast}$ 에서 증가하지 않게끔 하는 모드mode $x^{\ast}$ 가 존재하면 $f$ 를 유니모달unimoda</description></item><item><title>선형계획법의 심플렉스 메소드</title><link>https://freshrimpsushi.github.io/ko/posts/2336/</link><pubDate>Sun, 05 Feb 2023 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/2336/</guid><description>빌드업 1 $x_{1} , x_{2} \ge 0$ 에 대해 다음과 같은 선형계획문제가 주어져 있다고 하자. $$ \begin{matrix} \text{Maximize} &amp;amp; &amp;amp; x_{1} &amp;amp; + &amp;amp; x_{2} \\ \text{subject to} &amp;amp;-&amp;amp; x_{1} &amp;amp; + &amp;amp; x_{2} &amp;amp; \le &amp;amp; 1 \\ &amp;amp; &amp;amp; x_{1} &amp;amp; &amp;amp; &amp;amp; \le &amp;amp; 3 \\ &amp;amp; &amp;amp; &amp;amp;</description></item><item><title>확률적 증감함수와 신뢰구간</title><link>https://freshrimpsushi.github.io/ko/posts/2335/</link><pubDate>Fri, 03 Feb 2023 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/2335/</guid><description>정리 1 확률적 증감함수의 정의 누적분포함수 $F \left( t ; \theta \right)$ 가 $\theta$ 에 대해 증가(감소) 함수면 확률적 증가(감소) 함수stochastic Increasing</description></item><item><title>선형계획법에서의 딕셔너리와 태블로</title><link>https://freshrimpsushi.github.io/ko/posts/2334/</link><pubDate>Wed, 01 Feb 2023 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/2334/</guid><description>노테이션 $$ \begin{matrix} \text{Maximize} &amp;amp; \mathbf{c}^{T} \mathbf{x} \\ \text{subject to} &amp;amp; A \mathbf{x} = \mathbf{b} \\ &amp;amp; \mathbf{x} \ge \mathbf{0} \end{matrix} $$ 행렬 $A \in \mathbb{R}^{m \times n}$ 과 $\mathbf{b} \in \mathbb{R}^{m \times 1}$ 와 $\mathbf{c} \in \mathbb{R}^{n}$ 에 대해 선형계획문제가 위와 같이 방정식 폼으로 나타난다고 하고,</description></item><item><title>최정확 신뢰집합</title><link>https://freshrimpsushi.github.io/ko/posts/2333/</link><pubDate>Mon, 30 Jan 2023 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/2333/</guid><description>정의 1 $\theta$ 에 대한 가설검정의 $1 - \alpha$ 신뢰집합을 $C \left( \mathbf{x} \right)$ 이라 하고, 채택역을 $A \left( \theta \right) = C \left( \mathbf{x} \right)^{c}$ 이라 하자. $P_{\theta} \left( \theta ' \in C \left( \mathbf{X} \right) \right)$ 를 $\theta ' \ne \theta$ 에 대한 펄스 커버리</description></item><item><title>가설검정과 신뢰집합의 일대일 대응관계</title><link>https://freshrimpsushi.github.io/ko/posts/2332/</link><pubDate>Sat, 28 Jan 2023 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/2332/</guid><description>정리 모수공간 $\Theta$ 와 공간 $\mathcal{X}$ 가 주어져 있다고 하자. 각각의 $\theta_{0} \in \Theta$ 에 대해 $A \left( \theta_{0} \right)$ 을 가설검정 $H_{0} : \theta = \theta_{0}$ 의 레벨 $\alpha$ 채택역이라 하자. 각각의 $\mathbf{x} \in \mathcal{X}$ 에 대해 다음과 같이</description></item><item><title>수리통계학에서 피벗의 정의</title><link>https://freshrimpsushi.github.io/ko/posts/2331/</link><pubDate>Thu, 26 Jan 2023 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/2331/</guid><description>정의 1 확률변수 $Q \left( \mathbf{X} ; \theta \right) := Q \left( X_{1} , \cdots , X_{n} ; \theta \right)$ 의 확률분포가 모든 모수 $\theta$ 에 독립이면 $Q$ 를 피벗pivot 혹은 피버탈 퀀터티pivotal Quanti</description></item><item><title>줄리아 데이터프레임에서 NaN을 0으로 바꾸는 법</title><link>https://freshrimpsushi.github.io/ko/posts/2330/</link><pubDate>Tue, 24 Jan 2023 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/2330/</guid><description>개요 특정 값으로 바꾸는 방법은 한 열씩 바꾸기 때문에 불편하고, 데이터프레임 전체에서 NaN을 처리할 땐 더 좋은 트릭을 사용해봄직하다. 코드 julia&amp;gt; df = DataFrame(rand(1:9,3,3), :auto) ./ DataFrame(rand(0:1,3,3), :auto) 3</description></item><item><title>수리통계적인 신뢰집합의 정의</title><link>https://freshrimpsushi.github.io/ko/posts/2329/</link><pubDate>Sun, 22 Jan 2023 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/2329/</guid><description>정의 1 모수 $\theta$ 의 구간추정량 $\left[ L \left( \mathbf{X} \right), U \left( \mathbf{X} \right) \right]$ 에 대해 다음을 커버리지 확률coverage Probability라 한다. $$ P_{\theta} \left( \theta \in \left[ L \left( \mathbf{X} \right), U \left( \mathbf{X}</description></item><item><title>줄리아의 삼항연산자 ? :</title><link>https://freshrimpsushi.github.io/ko/posts/2328/</link><pubDate>Fri, 20 Jan 2023 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/2328/</guid><description>개요 줄리아에서 A ? B : C는 이른바 삼항연산자ternary Operator로써, A가 참이면 B, 거짓이면 C를 리턴하는 함수다. 수학적으로 이항연산이 함</description></item><item><title>구간추정량</title><link>https://freshrimpsushi.github.io/ko/posts/2327/</link><pubDate>Wed, 18 Jan 2023 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/2327/</guid><description>정의 1 모수 $\theta \in \mathbb{R}$ 에 대해 순서쌍 $\left( L \left( x_{1} , \cdots , x_{n} \right), U \left( x_{1} , \cdots , x_{n} \right) \right)$ 이 모든 $\mathbf{x} \in \mathcal{X}$ 에 대해 $L \left( \mathbf{x} \right) \le U \left( \mathbf{x} \right)$ 을 만족하면 $\theta$ 의 구간추정치interval</description></item><item><title>줄리아에서 데이터프레임 특정 값 변경하는 법</title><link>https://freshrimpsushi.github.io/ko/posts/2326/</link><pubDate>Mon, 16 Jan 2023 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/2326/</guid><description>개요 replace!() 메소드를 사용하면 된다1. 첫번째 인자로는 변경할 데이터프레임의 칼럼이 들어가고, 두번째 인자로는 페어 A =&amp;gt; B 가 들어간다. 여기서 데이터프레임의 칼럼</description></item><item><title>SIRD 모델: 죽음과 치명률</title><link>https://freshrimpsushi.github.io/ko/posts/2325/</link><pubDate>Sat, 14 Jan 2023 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/2325/</guid><description>개요 SIRD 모델은 SIR 모델에 죽음을 추가한 역학 구획 모델이다. 모델 $$ \begin{align*} {{d S} \over {d t}} =&amp;amp; - {{ \beta } \over { N }} I S \\ {{d I} \over {d t}} =&amp;amp; {{ \beta } \over { N }} S I - \mu I \\ {{d R} \over {d t}}</description></item><item><title>줄리아에서 빈도수 계산하는 법</title><link>https://freshrimpsushi.github.io/ko/posts/2324/</link><pubDate>Thu, 12 Jan 2023 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/2324/</guid><description>개요 1 FreqTables.jl 패키지의 freqtable() 함수를 사용하면 된다. R에서의 freq() 함수와 유사한 기능을 한다. 코드 배열 julia&amp;gt; compartment = rand([&amp;#39;S&amp;#39;,&amp;#39;I&amp;#39;,&amp;#39;R&amp;#39;], 1000); julia&amp;gt; freqtable(compartment) 3-element Named Vector{Int64} Dim1 │ ──────┼──── &amp;#39;I&amp;#39; │ 316 &amp;#39;R&amp;#39; │ 342 &amp;#39;S&amp;#39;</description></item><item><title>SIRV 모델: 백신과 돌파감염</title><link>https://freshrimpsushi.github.io/ko/posts/2323/</link><pubDate>Tue, 10 Jan 2023 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/2323/</guid><description>개요 SIRV 모델은 SIR 모델에 백신을 추가한 역학 구획 모델이다. 모델 $$ \begin{align*} {{d S} \over {d t}} =&amp;amp; - {{ \beta } \over { N }} I S - vS \\ {{d I} \over {d t}} =&amp;amp; {{ \beta } \over { N }} S I - \mu I \\ {{d R} \over</description></item><item><title>줄리아에서 csv 파일 컬럼만 읽어들이는 법</title><link>https://freshrimpsushi.github.io/ko/posts/2322/</link><pubDate>Sun, 08 Jan 2023 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/2322/</guid><description>가이드 가령 위와 같은 example.csv 파일이 있다고 하자. 이를 데이터프레임으로 불러들일 때, 데이터 전체가 아니라 열이름만 유지되어있고 텅 빈 데이터프레임을 만들고 싶을 때가</description></item><item><title>SEIR 모델: 잠복기와 잠재기</title><link>https://freshrimpsushi.github.io/ko/posts/2321/</link><pubDate>Fri, 06 Jan 2023 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/2321/</guid><description>개요 SEIR 모델은 SIR 모델에 접촉군을 추가한 역학 구획 모델이다. 모델 1 2 $$ \begin{align*} {{d S} \over {d t}} =&amp;amp; - {{ \beta } \over { N }} I S \\ {{d E} \over {d t}} =&amp;amp; {{ \beta } \over { N }} S I - {{ 1 } \over {</description></item><item><title>줄리아에서 데이터 프레임 요약보는 법</title><link>https://freshrimpsushi.github.io/ko/posts/2320/</link><pubDate>Wed, 04 Jan 2023 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/2320/</guid><description>가이드 1 using RDatasets iris = dataset(&amp;#34;datasets&amp;#34;, &amp;#34;iris&amp;#34;) describe(iris) describe() 함수를 사용하면 된다. iris 데이터를 요약해보자. julia&amp;gt; describe(iris) 5×7 DataFrame Row │ variable mean min median max nmissing eltype │ Symbol Union… Any Union… Any Int64 DataType ────</description></item><item><title>대각행렬곱을 통한 행렬의 행별, 열별 스칼라곱</title><link>https://freshrimpsushi.github.io/ko/posts/2319/</link><pubDate>Mon, 02 Jan 2023 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/2319/</guid><description>정리 대각행렬 $D := \text{diag} \left( d_{1} , \cdots , d_{n} \right)$ 와 행렬 $A := \left( a_{ij} \right) \in \mathbb{C}^{n \times n}$ 에 대해 다음이 성립한다. $$ \begin{align*} D A =&amp;amp; \begin{bmatrix} d_{1} a_{11} &amp;amp; d_{1} a_{12} &amp;amp; \cdots &amp;amp; d_{1} a_{1n} \\ d_{2} a_{21} &amp;amp; d_{2} a_{22} &amp;amp; \cdots &amp;amp; d_{2} a_{2n} \\ \vdots &amp;amp; \vdots</description></item><item><title>줄리아의 범주형 배열</title><link>https://freshrimpsushi.github.io/ko/posts/2318/</link><pubDate>Sat, 31 Dec 2022 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/2318/</guid><description>개요 줄리아의 CategoricalArrays.jl 패키지는 R에서의 factor와 비슷한 역할을 한다. 코드 julia&amp;gt; A = [&amp;#34;red&amp;#34;, &amp;#34;blue&amp;#34;, &amp;#34;red&amp;#34;, &amp;#34;green&amp;#34;] 4-element Vector{String}: &amp;#34;red&amp;#34; &amp;#34;blue&amp;#34; &amp;#34;red&amp;#34; &amp;#34;green&amp;#34; julia&amp;gt; B = categorical(A) 4-element CategoricalArray{String,1,UInt32}: &amp;#34;red&amp;#34; &amp;#34;blue&amp;#34; &amp;#34;red&amp;#34; &amp;#34;green&amp;#34; julia&amp;gt; levels(B) 3-element Vector{String}: &amp;#34;blue&amp;#34; &amp;#34;green&amp;#34; &amp;#34;red&amp;#34; categorical() categorical() 함수로 일반</description></item><item><title>심플렉스의 정의</title><link>https://freshrimpsushi.github.io/ko/posts/2317/</link><pubDate>Thu, 29 Dec 2022 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/2317/</guid><description>정의 1 아핀독립인 $v_{0}, v_{1} , \cdots , v_{n} \in \mathbb{R}^{n+1}$ 의 컨벡스 헐을 $n$-심플렉스$n$-simplex $\Delta^{n}$ 라 하고, 벡터 $v_{k}$ 들을 꼭짓점vertex이라 부른다. 수식적으</description></item><item><title>줄리아에서 R에서 쓰던 내장데이터셋 불러오는 법</title><link>https://freshrimpsushi.github.io/ko/posts/2316/</link><pubDate>Tue, 27 Dec 2022 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/2316/</guid><description>가이드 RDatasets.jl 패키지를 사용하면 된다. 다음은 제일 만만한 iris 데이터를 불러오는 예제다. 기본 내장 데이터셋 외에도 여러가지 데이터셋을 포함하고 있으니 깃허브를 참고하</description></item><item><title>아핀 독립의 정의</title><link>https://freshrimpsushi.github.io/ko/posts/2315/</link><pubDate>Sun, 25 Dec 2022 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/2315/</guid><description>정의 1 벡터들의 집합 $S := \left\{ v_{0} , v_{1}, \cdots , v_{n} \right\} \subset V$ 에 대해 다음이 선형독립이면 $S$ 속하는 벡터들 혹은 $S$ 그 자체를 아핀 독립affinely independent</description></item><item><title>레즐리 연령 구조 모델</title><link>https://freshrimpsushi.github.io/ko/posts/2314/</link><pubDate>Fri, 23 Dec 2022 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/2314/</guid><description>정의 1 집단에서 연령의 단계가 $m \in \mathbb{N}$ 가지 있고, $t$ 시점에서 $a \in \left\{ 1 , \cdots , m \right\}$ 단계의 인구수를 $x_{a}(t)$ 라 나타내자. 같은 기간동안 연령인 $a$ 단계인 집단의 평균적인 자</description></item><item><title>줄리아에서 패키지 버전 확인하는 법</title><link>https://freshrimpsushi.github.io/ko/posts/2313/</link><pubDate>Wed, 21 Dec 2022 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/2313/</guid><description>가이드 예로써 Plots.jl 패키지의 버전을 확인해보자. REPL에서 ] 키를 누르면 패키지 모드로 진입한다. 여기서 status foo을 입력하면 다음과 같이 foo 패키지의 버전을 확인</description></item><item><title>포커-플랑크 방정식 유도</title><link>https://freshrimpsushi.github.io/ko/posts/2312/</link><pubDate>Mon, 19 Dec 2022 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/2312/</guid><description>정리 $$ d X_{t} = f \left( t, X_{t} \right) dt + g \left( t , X_{t} \right) d W_{t} \qquad , t \in \left[ t_{0} , T \right] $$ 확률미분방정식이 위와 같이 주어져 있고, $F \in C_{0}^{\infty} \left( \mathbb{R} \right)$라 하자. 그러면 $t$</description></item><item><title>줄리아에서 배열이 비어있는지 확인하는 법</title><link>https://freshrimpsushi.github.io/ko/posts/2311/</link><pubDate>Sat, 17 Dec 2022 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/2311/</guid><description>개요 isempty() 함수를 사용하면 된다. 코드 julia&amp;gt; isempty([]) true julia&amp;gt; isempty(Set()) true julia&amp;gt; isempty(&amp;#34;&amp;#34;) true 제목에서는 배열이라고 했지만 사실 배열이 아니라 집합이나 문자열이어도 된다. 최적화 물론 배열이 비어있는</description></item><item><title>호몰로지 그룹의 정의</title><link>https://freshrimpsushi.github.io/ko/posts/2310/</link><pubDate>Thu, 15 Dec 2022 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/2310/</guid><description>정의 1 2 $n \in \mathbb{N}_{0}$ 이라 하자. 아벨리안 그룹 $C_{n}$ 와 호모몰피즘 $\partial_{n} : C_{n} \longrightarrow C_{n-1}$ 의 체인 $$ \cdots \longrightarrow C_{n+1} \overset{\partial_{n+1}}{\longrightarrow} C_{n} \overset{\partial_{n}}{\longrightarrow} C_{n-1} \longrightarrow \cdots \longrightarrow C_{1} \overset{\partial_{1}}{\longrightarrow} C_{0} \overset{\partial_{0}}{\longrightarrow} 0 $$ 이 모든 $n$ 에 대해 $$ \partial_{n} \circ \partial_{n+1} = 0 $$ 를 만족하면 $\mathcal{C}</description></item><item><title>줄리아에서 예외처리하는 법</title><link>https://freshrimpsushi.github.io/ko/posts/2309/</link><pubDate>Tue, 13 Dec 2022 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/2309/</guid><description>개요 지독한 외로움에 쩔쩔매본 사람은 알게되지 음 알게되지 코딩을 하다가 알수없는 에러에 고생해본 사람은 알게된다, 프로그래밍에 있어서 에러가 정말 중요하다는 사</description></item><item><title>제로멀피즘</title><link>https://freshrimpsushi.github.io/ko/posts/2308/</link><pubDate>Sun, 11 Dec 2022 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/2308/</guid><description>정의 1 $$ W \to X \overset{f}{\to} Y \to Z $$ 몰피즘morphism $f : X \to Y$ 을 생각해보자. 모든 몰피즘 $g,h : W \to X$ 에 대해 $fg = fh$ 면 $f$ 를 컨스턴트멀피즘constant M</description></item><item><title>줄리아에서 데이터프레임 사이즈 확인하는 법</title><link>https://freshrimpsushi.github.io/ko/posts/2307/</link><pubDate>Fri, 09 Dec 2022 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/2307/</guid><description>개요 nrow(), ncol(), size() 등을 사용할 수 있다. R과 달리 length()는 에러를 낸다. 코드 julia&amp;gt; df = DataFrame(rand(100000,5), :auto) 100000×5 DataFrame Row │ x1 x2 x3 x4 x5 │ Float64 Float64 Float64 Float64 Float64 ────────</description></item><item><title>추상대수학에서의 프리 그룹</title><link>https://freshrimpsushi.github.io/ko/posts/2306/</link><pubDate>Wed, 07 Dec 2022 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/2306/</guid><description>정의 1 인덱스 집합 $I \ne \emptyset$ 에 대해 집합 $A := \left\{ a_{i} : i \in I \right\}$ 를 알파벳alphabet이라 하고, 그 원소 $a_{i} \in A$ 를 레터letter라 하자. 정수 $n \in \mathbb{Z}$ 에 대해 $a_{i}^{n}$</description></item><item><title>줄리아에서 변수이름을 칼럼명으로 가지는 데이터프레임 만드는 법</title><link>https://freshrimpsushi.github.io/ko/posts/2305/</link><pubDate>Mon, 05 Dec 2022 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/2305/</guid><description>개요 네임드 튜플을 사용하면 된다. 네임드 튜플을 만드는 방법은 왼쪽 괄호 바로 뒤에 세미콜론 ;을 붙이는 것이다. 가령 DataFrame(; x, y)이라고 하면 칼럼명이 :x, &amp;quot;y 이고 내용도</description></item><item><title>수리통계적인 유의확률의 정의</title><link>https://freshrimpsushi.github.io/ko/posts/2304/</link><pubDate>Sat, 03 Dec 2022 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/2304/</guid><description>정의 1 가설검정 $H_{0} \text{ vs } H_{1}$ 이 주어져 있다고 하자. 모든 실현 $\mathbf{x} \in \Omega$ 에 대해 $0 \le p \left( \mathbf{x} \right) \le 1$ 를 만족시키는 검정 통계량 $p \left( \mathbf{X} \right)$ 를 유의확률 혹은 p-밸류p-va</description></item><item><title>줄리아의 네임드 튜플</title><link>https://freshrimpsushi.github.io/ko/posts/2303/</link><pubDate>Thu, 01 Dec 2022 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/2303/</guid><description>개요 네임드 튜플named Tuple은 일반적인 튜플과 달리 딕셔너리나 구조체structure처럼 사용할 수 있는 튜플이다1. 심볼symbol의 배열을</description></item><item><title>미분소 행렬을 통한 푸아송 프로세스의 정의</title><link>https://freshrimpsushi.github.io/ko/posts/2302/</link><pubDate>Tue, 29 Nov 2022 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/2302/</guid><description>정의 $\lambda &amp;gt; 0$ 가 주어져 있다고 하자. $X(0) = 0$ 이면서 다음과 같은 미소 확률infinitesimal Probabilities을 가지는 연속 확률과정 $\left\{ X(t) : t</description></item><item><title>충분통계량이 포함된 최강력검정</title><link>https://freshrimpsushi.github.io/ko/posts/2301/</link><pubDate>Sun, 27 Nov 2022 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/2301/</guid><description>정리 가설검정: $$ \begin{align*} H_{0} :&amp;amp; \theta = \theta_{0} \\ H_{1} :&amp;amp; \theta = \theta_{1} \end{align*} $$ 위와 같은 가설검정에서 $\theta$ 에 대한 충분통계량 $T$ 의 $\theta_{0}, \theta_{1}$ 에 대한 확률밀도함수 혹은 확률질량함수를 $g \left( t | \theta_{0} \right), g</description></item><item><title>추상대수학에서의 F-벡터스페이스</title><link>https://freshrimpsushi.github.io/ko/posts/2300/</link><pubDate>Fri, 25 Nov 2022 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/2300/</guid><description>정의 링 $R = F$ 가 필드인 $R$-모듈을 $F$-벡터스페이스$F$-vector space라 한다. 설명 시크함까지 느껴지는 정의로, 모듈이 벡터필드의 일</description></item><item><title>칼린-루빈 정리 증명</title><link>https://freshrimpsushi.github.io/ko/posts/2299/</link><pubDate>Wed, 23 Nov 2022 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/2299/</guid><description>정리 가설검정: $$ \begin{align*} H_{0} :&amp;amp; \theta \le \theta_{0} \\ H_{1} :&amp;amp; \theta &amp;gt; \theta_{0} \end{align*} $$ 위와 같은 가설검정에서 $T$ 를 $\theta$ 의 충분통계량이라 하고, $t$ 의 확률밀도함수 혹은 확률질량함수의 패밀리 $\left\{ g(t | \theta)</description></item><item><title>추상대수학에서의 R-모듈</title><link>https://freshrimpsushi.github.io/ko/posts/2298/</link><pubDate>Mon, 21 Nov 2022 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/2298/</guid><description>정의 1 아벨리안 그룹 $(G,+)$ 와 곱셈에 대한 항등원 $1 \ne 0$ 를 가지는 링 $(R,+,\cdot)$에 대해 이항연산 $$ \mu : R \times G \to G $$ 가 다음의 세가지 조건을 만족하면</description></item><item><title>단조우도비의 정의</title><link>https://freshrimpsushi.github.io/ko/posts/2297/</link><pubDate>Sat, 19 Nov 2022 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/2297/</guid><description>정의 모수 $\theta \in \mathbb{R}$ 와 일변량 확률변수 $T$ 에 대한 확률질량함수 혹은 확률밀도함수의 패밀리를 $G := \left\{ g ( t | \theta) : \theta \in \Theta \right\}$ 라 하자. 모든 $\theta_{2} &amp;gt; \theta_{1}$ 에 대해 $$ {{ g \left( t | \theta_{2}</description></item><item><title>원소나열법에서의 햇표기</title><link>https://freshrimpsushi.github.io/ko/posts/2296/</link><pubDate>Thu, 17 Nov 2022 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/2296/</guid><description>설명 $$ \left\{ 1, \cdots , \hat{k} , \cdots , n \right\} $$ 집합을 나타낼 때 위와 같이 특정 인덱스에 햇을 씌워놓는 경우가 있는데, 그 원소를 뺀다는 의미다. 가령 $\left\{ 0,1,2,3,4 \right\}$ 에서 원소를 딱 하나만 뺀</description></item><item><title>네이만-피어슨 보조정리 증명</title><link>https://freshrimpsushi.github.io/ko/posts/2295/</link><pubDate>Tue, 15 Nov 2022 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/2295/</guid><description>정리 가설검정: $$ \begin{align*} H_{0} :&amp;amp; \theta = \theta_{0} \\ H_{1} :&amp;amp; \theta = \theta_{1} \end{align*} $$ 위와 같은 가설검정에서 $\theta_{0}, \theta_{1}$ 에 대한 확률밀도함수 혹은 확률질량함수를 $f \left( \mathbf{x} | \theta_{0} \right), f \left( \mathbf{x} | \theta_{1} \right)$ 이라 하고 기각</description></item><item><title>일변량 확률 변수 샘플링하는 법</title><link>https://freshrimpsushi.github.io/ko/posts/2294/</link><pubDate>Sun, 13 Nov 2022 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/2294/</guid><description>개요 확률변수의 구체적인 실현을 구하는 방법이다. 정리 일변량 확률변수 $T$ 의 누적분포함수 $F = F_{T}$ 가 증가 함수라 하자. 그러면 일양분포를 따르는 확률 변수 $U \sim U \left(</description></item><item><title>불편 검정력 함수와 최강력검정</title><link>https://freshrimpsushi.github.io/ko/posts/2293/</link><pubDate>Fri, 11 Nov 2022 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/2293/</guid><description>정의 1 가설검정: $$ \begin{align*} H_{0} :&amp;amp; \theta \in \Theta_{0} \\ H_{1} :&amp;amp; \theta \in \Theta_{0}^{c} \end{align*} $$ 검정력 함수 $\beta (\theta)$가 모든 $\theta_{0} \in \Theta_{0}$ 와 $\theta_{1} \in \Theta_{0}^{c}$ 에 대해 다음을 만족하면 불편unbiased 검정</description></item><item><title>스펙트럴 래디어스의 정의</title><link>https://freshrimpsushi.github.io/ko/posts/2292/</link><pubDate>Wed, 09 Nov 2022 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/2292/</guid><description>정의 행렬 $A \in \mathbb{C}^{n \times n}$ 의 고유값 $\lambda_{1} , \cdots , \lambda_{n}$ 중 모듈러스가 가장 큰 고유값 $\rho (A) = \argmax_{\lambda} \left| \lambda \right|$ 을 스펙트럴 래디어스spectral Radius라 한다. 설명 보통 행렬</description></item><item><title>가설 검정의 검정력 함수</title><link>https://freshrimpsushi.github.io/ko/posts/2291/</link><pubDate>Mon, 07 Nov 2022 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/2291/</guid><description>정의 1 가설검정: $$ \begin{align*} H_{0} :&amp;amp; \theta \in \Theta_{0} \\ H_{1} :&amp;amp; \theta \in \Theta_{0}^{c} \end{align*} $$ 위와 같은 가설검정이 주어져 있고 $\alpha \in [0,1]$ 이라 하자. 모수 $\theta$ 에 대해 기각역이 $R$ 인 함수 $\beta (\theta) := P_{\theta} \left( \mathbf{X} \in \mathbb{R} \right)$ 을 검</description></item><item><title>길레스피 확률 시뮬레이션 알고리즘</title><link>https://freshrimpsushi.github.io/ko/posts/2290/</link><pubDate>Sat, 05 Nov 2022 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/2290/</guid><description>알고리즘 1 $\mathbf{x}_{t} = i$ 에 대해 $$ P \left( \mathbf{X}_{t + \tau} = j | \mathbf{x}_{t} = i \right) = a_{j} \left( \mathbf{x}_{t} \right) \qquad , j = 1, \cdots , n $$ 와 같이 표현되는 연속마코프체인 $\left\{ \mathbf{X}_{t} \right\}$ 의 실현을 구하는 시뮬레이션 방법을</description></item><item><title>충분통계량이 포함된 우도비검정</title><link>https://freshrimpsushi.github.io/ko/posts/2289/</link><pubDate>Thu, 03 Nov 2022 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/2289/</guid><description>정리 가설검정: $$ \begin{align*} H_{0} :&amp;amp; \theta \in \Theta_{0} \\ H_{1} :&amp;amp; \theta \in \Theta_{0}^{c} \end{align*} $$ 우도비검정통계량: $$ \lambda \left( \mathbf{x} \right) := {{ \sup_{\Theta_{0}} L \left( \theta \mid \mathbf{x} \right) } \over { \sup_{\Theta} L \left( \theta \mid \mathbf{x} \right) }} $$ 만약 $T \left( \mathbf{X} \right)$ 가 모수 $\theta$ 의 충분</description></item><item><title>콜모고로프 미분방정식 유도</title><link>https://freshrimpsushi.github.io/ko/posts/2288/</link><pubDate>Tue, 01 Nov 2022 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/2288/</guid><description>정리 전이확률행렬 $P(t)$ 과 미분소 행렬 $Q$ 에 대해 다음의 미분방정식이 성립한다. $$ {{ d P(t) } \over { dt }} = Q P(t) = P(t) Q $$ 설명 굳이 구분할 땐 $dP/dt = P(t) Q$ 을 후방backwa</description></item><item><title>수리통계적인 우도비검정의 정의</title><link>https://freshrimpsushi.github.io/ko/posts/2287/</link><pubDate>Sun, 30 Oct 2022 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/2287/</guid><description>정의 1 $$ \begin{align*} H_{0} :&amp;amp; \theta \in \Theta_{0} \\ H_{1} :&amp;amp; \theta \in \Theta_{0}^{c} \end{align*} $$ 위와 같은 가설검정에 대해 다음의 통계량 $\lambda$ 를 우도비검정 통계량likelihood Ratio test statistic이라 한다</description></item><item><title>연속 마코프 체인</title><link>https://freshrimpsushi.github.io/ko/posts/2286/</link><pubDate>Fri, 28 Oct 2022 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/2286/</guid><description>정의 모든 시점들의 유한 시퀀스 $0 \le t_{0} \le \cdots \le t_{n} \le t_{n+1}$ 에 대해 상태공간이 가산집합이면서 다음을 만족하는 연속적 확률과정 $\left\{ X_{t} \right\}$ 를 연속 마코프 체인cTMC이라고 한</description></item><item><title>로케이션 패밀리의 충분통계량과 최대우도추정량</title><link>https://freshrimpsushi.github.io/ko/posts/2285/</link><pubDate>Wed, 26 Oct 2022 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/2285/</guid><description>정리 확률밀도함수가 $f_{X} \left( x ; \theta \right) = f_{X} \left( x - \theta \right)$ 인 로케이션 패밀리에서 얻은 랜덤샘플 $X_{1} , \cdots , X_{n} \sim X$ 이 주어져 있다고 하자. 충분통계량과 최대우도추정량은 $X$</description></item><item><title>확률과정의 전이확률</title><link>https://freshrimpsushi.github.io/ko/posts/2284/</link><pubDate>Mon, 24 Oct 2022 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/2284/</guid><description>정의 상태공간이 가산집합인 확률과정 $\left\{ X_{t} \right\}$ 가 주어져 있다고 하자. 두 시점 $t_{1} &amp;lt; t_{2}$ 에 대해 전이확률transition Probability $p_{ij} \left( t_{1} , t_{2} \right)$ 를 다음과 같이 정의한다.</description></item><item><title>수리통계적인 가설검정의 정의</title><link>https://freshrimpsushi.github.io/ko/posts/2283/</link><pubDate>Sat, 22 Oct 2022 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/2283/</guid><description>정의 1 모수에 관한 명제를 가설hypothesis이라 한다. 주어진 샘플에 따라 가설 $H_{0}$ 을 참으로 받아들이게 만들거나 가설 $H_{0}$ 을 기각하고 $H_{1}$ 을 채택하는 문제를 가</description></item><item><title>터미널에서 텍스트 파일 인코딩 확인하는 법</title><link>https://freshrimpsushi.github.io/ko/posts/2282/</link><pubDate>Thu, 20 Oct 2022 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/2282/</guid><description>가이드 1 이 방법은 파이썬이 설치되어 있어야 사용할 수 있다. 터미널에 pip install chardet 을 입력해 chardet 을 설치하고 인코딩을 확인할 파일이 있는 경로에서 다음과 같이 명령하면 어떤</description></item><item><title>랜덤샘플의 표본평균의 평균과 분산</title><link>https://freshrimpsushi.github.io/ko/posts/2281/</link><pubDate>Tue, 18 Oct 2022 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/2281/</guid><description>공식 랜덤샘플 $X_{1} , \cdots , X_{n} \overset{\text{iid}}{\sim} X$ 이 주어져 있다고 하면 그 표본평균 $\bar{X}$ 의 평균과 분산은 다음과 같다. $$ \begin{align*} E \bar{X} =&amp;amp; E X \\ \Var \bar{X} =&amp;amp; {{ 1 } \over { n }} \Var X \end{align*} $$ 설명 너무 쉬워서</description></item><item><title>줄리아에서 명령줄 인수 넣는 법</title><link>https://freshrimpsushi.github.io/ko/posts/2280/</link><pubDate>Sun, 16 Oct 2022 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/2280/</guid><description>코드 println(ARGS[1] * &amp;#34; + &amp;#34; * ARGS[2] * &amp;#34; = &amp;#34; * string(parse(Float64, ARGS[1]) + parse(Float64, ARGS[2]))) 위와 같이 한 줄로 이루어진 example.jl 파일이 있다고 해보자. 줄리아에서는 ARGS를 통해 커맨드라인에서의 인수를 배열로 받아</description></item><item><title>유일한 최대우도추정량은 충분통계량에 종속된다</title><link>https://freshrimpsushi.github.io/ko/posts/2279/</link><pubDate>Fri, 14 Oct 2022 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/2279/</guid><description>정리 만약 모수 $\theta$ 에 대한 충분통계량 $T$ 가 존재하고 $\theta$ 의 최대우도추정량 $\hat{\theta}$ 가 유일하게 존재한다면, $\hat{\theta}$ 는 $T$ 에 대한 함수로 나타난다. 증명 1 확률밀도함수 $f \left( x ; \theta</description></item><item><title>줄리아에서 외부 프로그램 실행하는 법</title><link>https://freshrimpsushi.github.io/ko/posts/2278/</link><pubDate>Wed, 12 Oct 2022 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/2278/</guid><description>코드 줄리아에서는 run() 함수를 통해 백틱backtick `으로 감싸진 문자열을 실행한다. 파이썬으로 치자면 os 모듈의 os.system() 을 사용한것 비슷하다. julia&amp;gt; txt = &amp;#34;helloworld&amp;#34; &amp;#34;helloworld&amp;#34; julia&amp;gt; typeof(`echo $txt`)</description></item><item><title>레만-셰페 정리 증명</title><link>https://freshrimpsushi.github.io/ko/posts/2277/</link><pubDate>Mon, 10 Oct 2022 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/2277/</guid><description>정리 1 2 완비 충분 통계량에 종속된 불편추정량은 유일하다. 다시 말해, $\theta$ 의 완비충분통계량 $T$ 에 대해 만약 $E \left[ \phi (T) \right] = \tau (\theta)$ 면 $\phi (T)$ 는 $\tau (\theta)$ 의 유일한 불편추정량,</description></item><item><title>줄리아에서 문자열 숫자로 바꾸는 법</title><link>https://freshrimpsushi.github.io/ko/posts/2276/</link><pubDate>Sat, 08 Oct 2022 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/2276/</guid><description>코드 parse(type, str)를 사용하면 된다. 문자열 str을 type 타입의 숫자로 변경해준다. julia&amp;gt; parse(Int, &amp;#34;21&amp;#34;) 21 julia&amp;gt; parse(Float64, &amp;#34;3.14&amp;#34;) 3.14 왜 파이썬처럼 Int64(&amp;quot;21&amp;quot;) 같은 게 안되느냐&amp;hellip; 그건 &amp;ls</description></item><item><title>최소분산불편추정량의 유일성</title><link>https://freshrimpsushi.github.io/ko/posts/2275/</link><pubDate>Thu, 06 Oct 2022 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/2275/</guid><description>정리 1 만약 $W$ 가 $\tau (\theta)$ 의 최선불편추정량이라면, $W$ 는 유일하다. 증명 코시-슈바르츠 부등식: 확률변수 $X, Y$ 에 대해 다음이 성립한다. $$ \operatorname{Cov} (X,Y) \le \Var X \Var Y $$ 등호가</description></item><item><title>수리통계학에서의 코시-슈바르츠 부등식 증명</title><link>https://freshrimpsushi.github.io/ko/posts/2274/</link><pubDate>Tue, 04 Oct 2022 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/2274/</guid><description>정리 확률변수 $X, Y$ 에 대해 다음이 성립한다. $$ \operatorname{Cov} (X,Y) \le \Var X \Var Y $$ 등호가 성립하는 필요충분조건은 다음과 같다1. $$ \exist a \ne 0 , b \in \mathbb{R} : a X + b = Y $$ 증명 $X,Y$ 의</description></item><item><title>최선불편추정량, 최소분산불편추정량 UMVUE</title><link>https://freshrimpsushi.github.io/ko/posts/2273/</link><pubDate>Sun, 02 Oct 2022 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/2273/</guid><description>정의 1 모수 $\theta$ 가 주어져 있다고 하자. 불편추정량 $W^{\ast}$ 가 다른 모든 불편추정량 $W$ 에 대해 다음을 만족하면 최선불편추정량best unbiased estimator 혹은 최소분산불편추정량UMV</description></item><item><title>골턴-왓슨 프로세스</title><link>https://freshrimpsushi.github.io/ko/posts/2272/</link><pubDate>Fri, 30 Sep 2022 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/2272/</guid><description>정의 1 기초재생산률basic Reproductive rate $m = EX &amp;lt; \infty$ 인 확률변수 $X$ 가 주어져 있다고 하자. 브랜칭 프로세스의 $n$ 번째 세대generation의 $i$번째 파티클p</description></item><item><title>불편추정량의 라오-크래머 하한</title><link>https://freshrimpsushi.github.io/ko/posts/2271/</link><pubDate>Wed, 28 Sep 2022 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/2271/</guid><description>정리 정칙조건: (R0): 확률밀도함수 $f$ 는 $\theta$ 에 대해 단사다. 수식으로는 다음을 만족시킨다. $$ \theta \ne \theta ' \implies f \left( x_{k} ; \theta \right) \ne f \left( x_{k} ; \theta ' \right) $$ (R1): 확률밀도함수 $f$ 는 모든</description></item><item><title>브랜칭 프로세스</title><link>https://freshrimpsushi.github.io/ko/posts/2270/</link><pubDate>Mon, 26 Sep 2022 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/2270/</guid><description>정의 1 개인(Individual), 세포(Cell), 분자(Molecule) 등의 파티클particle의 시스템으로써, 생존시간lifeti</description></item><item><title>최대우도추정량의 불변성질 증명</title><link>https://freshrimpsushi.github.io/ko/posts/2269/</link><pubDate>Sat, 24 Sep 2022 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/2269/</guid><description>정리 최대우도추정량은 함수를 취하는 것에 대해 불변invariant 하다. 다시 말해 만약 $\hat{\theta}$ 가 모수 $\theta$ 의 최대우도추정량면, 모든 함수 $\tau$ 에 대해 $\tau \left( \hat{\theta} \right)$ 역시 $\tau</description></item><item><title>스탈린 정렬</title><link>https://freshrimpsushi.github.io/ko/posts/2268/</link><pubDate>Thu, 22 Sep 2022 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/2268/</guid><description>알고리즘 1 길이가 $n$ 인 배열이 주어져있다고 하자. 배열을 처음부터 뒤로 읽어가면서 뒤쪽이 앞쪽보다 크면 제거하는 것을 반복하면 &amp;lsquo;순서대로는&amp;rs</description></item><item><title>새터스화이트 근사</title><link>https://freshrimpsushi.github.io/ko/posts/2267/</link><pubDate>Tue, 20 Sep 2022 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/2267/</guid><description>빌드업 자유도가 $r_{k}$ 인 카이제곱분포를 따르는 독립적인 $n$ 개의 확률변수 $Y_{k} \sim \chi_{r_{k}}^{2}$ 가 주어져 있다고 하자. 널리 알려진대로, 이들의 합인 $\sum_{k=1}^{n} Y_{k}$ 는 자유도가 $\sum_{k=1}^{n} r_{k}$ 인 카이제곱</description></item><item><title>줄리아에서 가변 인자 함수 정의하는 법</title><link>https://freshrimpsushi.github.io/ko/posts/2266/</link><pubDate>Sun, 18 Sep 2022 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/2266/</guid><description>개요 1 가변인자 함수란 보통 프로그래밍에서 Varargs Function이라 불리는 것으로, 복수의 인자가 제한 없이 들어올 수 있는 함수를 말한다. 줄리아에서는 간단히 변</description></item><item><title>로케이션-스케일 패밀리의 보조통계량</title><link>https://freshrimpsushi.github.io/ko/posts/2265/</link><pubDate>Fri, 16 Sep 2022 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/2265/</guid><description>정리 1 $X_{1} , \cdots , X_{n}$ 가 로케이션 패밀리면서 스케일 패밀리에서 나온 랜덤샘플이라 하자. 두 통계량 $T_{1} \left( X_{1} , \cdots, X_{n} \right)$ 과 $T_{2} \left( X_{1} , \cdots , X_{n} \right)$ 가 모든 $x_{1} , \cdots , x_{n}$ 와 모든 상수</description></item><item><title>줄리아 컨테이너 내부 원소 타입 체크하는 법</title><link>https://freshrimpsushi.github.io/ko/posts/2264/</link><pubDate>Wed, 14 Sep 2022 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/2264/</guid><description>개요 eltype() 함수를 사용하면 된다. 아마 element type에서 나온 명명일 것이다. 코드 julia&amp;gt; set_primes = Set([2,3,5,7,11,13]) Set{Int64} with 6 elements: 5 13 7 2 11 3 julia&amp;gt; arr_primes = Array([2,3,5,7,11,13]) 6-element Vector{Int64}: 2 3 5 7 11 13 위와 같이 $13$ 까지의 소수를</description></item><item><title>최소충분통계량이 주어진 불편추정량의 분산은 최소가 된다</title><link>https://freshrimpsushi.github.io/ko/posts/2263/</link><pubDate>Mon, 12 Sep 2022 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/2263/</guid><description>정리 1 모수 $\theta$ 가 주어져 있다고 하자. $U$ 는 그 불편추정량, $T_{1}$ 은 충분통계량이고 $T_{2}$ 은 최소충분통계량이고 다음과 같이 $$ \begin{align*} U_{1} :=&amp;amp; E \left( U | T_{1} \right) \\ U_{2} :=&amp;amp; E \left( U | T_{2} \right) \end{align*}</description></item><item><title>줄리아 그림 기본 설정 바꾸는 법</title><link>https://freshrimpsushi.github.io/ko/posts/2262/</link><pubDate>Sat, 10 Sep 2022 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/2262/</guid><description>코드 default() 함수를 사용하면 된다. using Plots default(size = (400,400), color = :red) default(:size, (400,400)) for key in [:size, :color], value in [(400,400), :red] default(key, value) end 일반 plot() 함수처럼 세팅하는 방법이 있고, 키와 밸류를 줘서 하나씩 바꾸는 방법이 있다</description></item><item><title>지수족 확률분포의 완비통계량</title><link>https://freshrimpsushi.github.io/ko/posts/2261/</link><pubDate>Thu, 08 Sep 2022 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/2261/</guid><description>정리 1 모수 $\mathbf{\theta} = \left( \theta_{1} , \cdots , \theta_{k} \right)$ 가 주어져 있고, 랜덤샘플 $X_{1} , \cdots , X_{n}$ 의 확률밀도함수 혹은 확률질량함수가 다음과 같이 지수족확률분포를 따른다고 하자. $$ f(x; \mathbf{\theta}) =</description></item><item><title>줄리아에서 데이터프레임 특정 행만 제거하는 법</title><link>https://freshrimpsushi.github.io/ko/posts/2260/</link><pubDate>Tue, 06 Sep 2022 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/2260/</guid><description>개요 인덱싱할 때 Not() 함수를 사용하면 된다1. 칼럼명 그대로의 심볼이나 심볼의 배열을 넣으면 그 칼럼들만 제외하고 인덱싱된다. 코드 using DataFrames WJSN = DataFrame( member = [&amp;#34;다</description></item><item><title>모먼트 메소드</title><link>https://freshrimpsushi.github.io/ko/posts/2259/</link><pubDate>Sun, 04 Sep 2022 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/2259/</guid><description>정의 1 주어진 분포의 모수를 모를 때, 적률로써 모수에 대한 연립방정식을 세우고 그 해를 모수의 추정량으로 보는 방법을 모먼트 메소드moment method라 한</description></item><item><title>줄리아에서 그림에 수직선 수평선 넣는 법</title><link>https://freshrimpsushi.github.io/ko/posts/2258/</link><pubDate>Fri, 02 Sep 2022 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/2258/</guid><description>개요 vline!(), hline!() 함수를 사용하면 된다. 코드 @time using Plots plot(rand(100)) hline!([0.5], linewidth = 2) vline!([25, 75], linewidth = 2) png(&amp;#34;result&amp;#34;) 선이 그어지는 위치는 배열로 넘겨준다. 배열의 요소가 여러개면 여러개의 선을 한 번에 그어준다</description></item><item><title>바수 정리 증명</title><link>https://freshrimpsushi.github.io/ko/posts/2257/</link><pubDate>Wed, 31 Aug 2022 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/2257/</guid><description>정리 만약 $T \left( \mathbf{X} \right)$ 이 완비통계량이면서 최소충분통계량이면, $T \left( \mathbf{X} \right)$ 은 모든 보조통계량과 독립이다. 설명 바수 정리는 충분통계량에 관한 정리 중에 가장 중요한 정</description></item><item><title>줄리아에서 그림 양식 만드는 법</title><link>https://freshrimpsushi.github.io/ko/posts/2256/</link><pubDate>Mon, 29 Aug 2022 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/2256/</guid><description>개요 RecipesBase.jl은 유저가 직접 새로운 그림의 양식을 만들게 해주는 패키지다. R 프로그래밍 언어에서 ggplot이 그러하듯 원래의 줄리아와</description></item><item><title>완비통계량</title><link>https://freshrimpsushi.github.io/ko/posts/2255/</link><pubDate>Sat, 27 Aug 2022 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/2255/</guid><description>정의 1 $\Omega$ 를 모수의 집합이라고 하자. 샘플 $\mathbf{X}$ 의 통계량 $T := T \left( \mathbf{X} \right)$ 의 확률밀도함수 혹은 확률질량함수 $f \left( t ; \theta \right)$ 들을 모아놓은 패밀리 $\left\{ f \left( t ; \theta \right) : \theta \in \Theta</description></item><item><title>줄리아에서 데이터프레임 그룹별로 나누고 계산하는 법</title><link>https://freshrimpsushi.github.io/ko/posts/2254/</link><pubDate>Thu, 25 Aug 2022 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/2254/</guid><description>개요 groupby()를 사용해 그룹별로 나누고 combine()을 사용해 계산하면 된다1. groupby(df, :colname) :colname을 기준으로 groupedDataF</description></item><item><title>스케일 패밀리</title><link>https://freshrimpsushi.github.io/ko/posts/2253/</link><pubDate>Tue, 23 Aug 2022 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/2253/</guid><description>정의 누적분포함수 $F$ 에 대해 $F_{\sigma}$ 는 모든 $x$ 에 대해 $F_{\sigma} (x) = F \left( x / \sigma \right)$ 를 만족한다고 하자. $\left\{ F_{\sigma} : \sigma &amp;gt; 0 \right\}$ 을 스케일 패밀리scale Family라 한다. 예시 1</description></item><item><title>줄리아에서 데이터프레임 중복된 행 삭제하는 법</title><link>https://freshrimpsushi.github.io/ko/posts/2252/</link><pubDate>Sun, 21 Aug 2022 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/2252/</guid><description>개요 unique()를 사용하면 된다. 정확하게는 중복된 행을 삭제한다기보단 하나만 남기는 것이다. 코드 using DataFrames WJSN = DataFrame( member = [&amp;#34;다영&amp;#34;,&amp;#</description></item><item><title>로케이션 패밀리</title><link>https://freshrimpsushi.github.io/ko/posts/2251/</link><pubDate>Fri, 19 Aug 2022 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/2251/</guid><description>정의 누적분포함수 $F$ 에 대해 $F_{\theta}$ 는 모든 $x$ 에 대해 $F_{\theta} (x) = F \left( x - \theta \right)$ 를 만족한다고 하자. $\left\{ F_{\theta} : \theta \in \mathbb{R} \right\}$ 을 로케이션 패밀리location Family라 한다</description></item><item><title>줄리아에서 레이아웃 주고 서브플랏 그리는 법</title><link>https://freshrimpsushi.github.io/ko/posts/2250/</link><pubDate>Wed, 17 Aug 2022 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/2250/</guid><description>개요 줄리아에서 서브플랏에 관련된 옵션은 layout 옵션을 통해 제어할 수 있다. 정수를 입력하면 해당 수만큼의 그리드를 눈치껏 만들어준다. 정수의 2-튜플을 입력하면 정</description></item><item><title>보조통계량</title><link>https://freshrimpsushi.github.io/ko/posts/2249/</link><pubDate>Mon, 15 Aug 2022 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/2249/</guid><description>정의 1 $S$ 가 샘플 $\mathbf{X}$ 의 통계량이라고 하자. $S \left( \mathbf{X} \right)$ 의 분포가 모수 $\theta$ 에 종속되지 않으면 보조통계량ancillary statistic이라 한다. 설명 사실 말</description></item><item><title>줄리아에서 그림 범례 위치 조정하는 법</title><link>https://freshrimpsushi.github.io/ko/posts/2248/</link><pubDate>Sat, 13 Aug 2022 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/2248/</guid><description>개요 1 plot() 함수의 legend 옵션으로 범례의 위치를 자유롭게 조정할 수 있다. $0$ 부터 $1$ 사이의 값으로 이루어진 2-튜플을 주면 정확히 그 위치에 찍히고, 그 외에는 심볼로 제어</description></item><item><title>최소충분통계량</title><link>https://freshrimpsushi.github.io/ko/posts/2247/</link><pubDate>Thu, 11 Aug 2022 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/2247/</guid><description>정의 1 $T \left( \mathbf{X} \right)$ 가 충분통계량이라고 하자. 모든 다른 충분통계량 $T ' \left( \mathbf{X} \right)$ 에 대해 $T \left( \mathbf{x} \right)$ 가 $T ' \left( \mathbf{x} \right)$ 의 함수로 나타나면 $T \left( \mathbf{X} \right)$ 를 최소충분통계량mini</description></item><item><title>줄리아 그림 가로세율 비율 조정하는 법</title><link>https://freshrimpsushi.github.io/ko/posts/2246/</link><pubDate>Tue, 09 Aug 2022 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/2246/</guid><description>개요 1 그림의 가로세로를 조절하기 위해서는 옵션에 ratio를 넣으면 된다. 추천하는 다른 가명으로는 aspect_ratios, axis_ratio가 있다. ratio = :none: 기본값으로, 그</description></item><item><title>페론-프로베니우스 정리</title><link>https://freshrimpsushi.github.io/ko/posts/2245/</link><pubDate>Sun, 07 Aug 2022 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/2245/</guid><description>정리 보조정의 행렬에 퍼뮤테이션permutation을 취한다는 것은 말 그대로 행과 열의 순서를 바꾸는 것을 말한다. 행렬 $A$ 축소가능reducible하다</description></item><item><title>줄리아에서 CSV 출력 시 깨진 문자 해결법</title><link>https://freshrimpsushi.github.io/ko/posts/2244/</link><pubDate>Fri, 05 Aug 2022 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/2244/</guid><description>에러 using DataFrames, CSV example = DataFrame(x = 1:10, 가 = &amp;#34;나다&amp;#34;) CSV.write(&amp;#34;example.csv&amp;#34;, example) 줄리아에서 CSV 파일로 출력하다보면 위와 같이 한글이 깨지는 현상을 볼 수가 있다. 원인 사실 한글이 깨지</description></item><item><title>지시함수의 곱</title><link>https://freshrimpsushi.github.io/ko/posts/2243/</link><pubDate>Wed, 03 Aug 2022 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/2243/</guid><description>정리 $x_{1} , \cdots , x_{n} \in \mathbb{R}$ 과 상수 $\theta \in \mathbb{R}$ 에 대해 $I_{\cdot} \left( x_{i} \right)$ 의 곱은 다음과 같다. $$ \prod_{i=1}^{n} I_{[\theta,\infty)} \left( x_{i} \right) = I_{[\theta,\infty)} \left( \min_{i \in [n]} x_{i} \right) $$ $I_{A}$ 는 집합 $A$ 에 대한 지시함수다. $$ I_{A} (x) = \begin{cases} 1 &amp;amp; , x \in</description></item><item><title>줄리아에서 텍스트 출력 꾸미는 패키지</title><link>https://freshrimpsushi.github.io/ko/posts/2242/</link><pubDate>Mon, 01 Aug 2022 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/2242/</guid><description>개요 줄리아에서 텍스트 출력을 꾸미는 패키지로는 Crayons.jl이 알려져있다1. 내장 함수만으로 꾸미고 싶다면 printstyled()를 사용하면</description></item><item><title>여러 부등식을 요약하는 부등식꼴</title><link>https://freshrimpsushi.github.io/ko/posts/2241/</link><pubDate>Sat, 30 Jul 2022 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/2241/</guid><description>정리 $x_{1} , \cdots , x_{n}$ 와 양수 $a_{1} , \cdots , a_{n} &amp;gt; 0$ 들과 상수 $\theta \in \mathbb{R}$ 가 주어져 있다고 하자. $$ \forall i \in [n] : x_{i} &amp;lt; a_{i} \theta \iff \max_{i \in [n]} {{ x_{i} } \over { a_{i} }} &amp;lt; \theta $$ 증명 $(\implies)$ 모든 $i \in [n]$ 에 대해 $x_{i}</description></item><item><title>줄리아 그림에 선분 넣는 법</title><link>https://freshrimpsushi.github.io/ko/posts/2240/</link><pubDate>Thu, 28 Jul 2022 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/2240/</guid><description>코드 using Plots scatter(rand(100), randn(100)) plot!([0,1],[0,1]) png(&amp;#34;example1&amp;#34;) plot!([.00,.25,.50],[-2,0,-2]) png(&amp;#34;example2&amp;#34;) θ = 0:0.01:2π plot!(.5 .+ cos.(θ)/3, 1.5sin.(θ)) png(&amp;#34;example3&amp;#34;) 위 코드를 실행해 그림에 선분을 넣는 방법을 알아보자. 선분</description></item><item><title>우도함수의 정의</title><link>https://freshrimpsushi.github.io/ko/posts/2239/</link><pubDate>Tue, 26 Jul 2022 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/2239/</guid><description>정의 1 샘플 $\mathbf{X} := \left( X_{1} , \cdots , X_{n} \right)$ 의 조인트 확률밀도함수 혹은 확률질량함수를 $f(\mathbf{x}|\theta)$ 라 하자. 그 실현 $\mathbf{x}$ 가 주어져 있을 때, $f(\mathbf{x}|\theta)$ 를 $\theta$ 에 대한 함수로 본 $$ L \left( \theta | \mathbf{x} \right) := f \left(</description></item><item><title>줄리아에서 데이터프레임 정렬하는 법</title><link>https://freshrimpsushi.github.io/ko/posts/2238/</link><pubDate>Sun, 24 Jul 2022 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/2238/</guid><description>코드 using DataFrames Unit1 = DataFrame( member = [&amp;#34;다영&amp;#34;,&amp;#34;루다&amp;#34;,&amp;#34;수빈&amp;#34;,&amp;#34;진숙&amp;#34;], birth = [99,97,96,99], height = [161,157,159,162] )</description></item><item><title>수리통계학에서의 델타 메소드</title><link>https://freshrimpsushi.github.io/ko/posts/2237/</link><pubDate>Fri, 22 Jul 2022 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/2237/</guid><description>정리 상수 $\theta \in \mathbb{R}$ 와 확률변수의 시퀀스 $\left\{ Y_{n} \right\}_{n \in \mathbb{N}}$ 에 대해 $\sqrt{n} \left( Y_{n} - \theta \right)$ 가 정규분포 $N \left(0, \sigma^{2} \right)$ 로 분포수렴한다고 하자. $1$계 델타 메소드 1 $g ' (\theta) \ne 0$ 이 존재한다</description></item><item><title>줄리아에서 데이터프레임에 새 행 넣는 법</title><link>https://freshrimpsushi.github.io/ko/posts/2236/</link><pubDate>Wed, 20 Jul 2022 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/2236/</guid><description>코드 using DataFrames Unit1 = DataFrame( member = [&amp;#34;다영&amp;#34;,&amp;#34;루다&amp;#34;,&amp;#34;수빈&amp;#34;,&amp;#34;진숙&amp;#34;], birth = [99,97,96,99], height = [161,157,159,162] )</description></item><item><title>스털링 공식의 수리통계적 증명</title><link>https://freshrimpsushi.github.io/ko/posts/2235/</link><pubDate>Mon, 18 Jul 2022 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/2235/</guid><description>정리 $$ \lim_{n \to \infty} {{n!} \over {e^{n \ln n - n} \sqrt{ 2 \pi n} }} = 1 $$ 설명 스털링 근사 혹은 스털링 공식stirling formula은 통계학이나 물리학 등 여러 곳에서 유용하게 쓰</description></item><item><title>줄리아에서 무한대 사용하는 법</title><link>https://freshrimpsushi.github.io/ko/posts/2234/</link><pubDate>Sat, 16 Jul 2022 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/2234/</guid><description>개요 Infinities.jl은 줄리아에서 무한대 기호를 사용하게 도와주는 패키지다1. 과학계산에 관련된 코딩에 있어서 무한대는 의외로 유용하다. 코드 julia&amp;gt;</description></item><item><title>t-분포에서 F-분포 유도</title><link>https://freshrimpsushi.github.io/ko/posts/2233/</link><pubDate>Thu, 14 Jul 2022 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/2233/</guid><description>정리 1 자유도 $\nu &amp;gt; 0$ 인 t-분포를 따르는 확률변수 $X \sim t(\nu)$ 에 대해 다음과 같이 정의된 $Y$ 는 F-분포 $F (1,\nu)$ 을 따른다. $$ Y := X^{2} \sim F (1,\nu) $$ 증명 카이제곱분포를 통한 우회</description></item><item><title>줄리아에서 패키지 특정 버전으로 설치하는 법</title><link>https://freshrimpsushi.github.io/ko/posts/2232/</link><pubDate>Tue, 12 Jul 2022 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/2232/</guid><description>가이드 1 (@v1.6) pkg&amp;gt; status JuMP Status `C:\Users\rmsms\.julia\environments\v1.6\Project.toml` [4076af6c] JuMP v0.20.0 REPL에서 ] 키를 누르면 패키지 모드로 진입한다. 예로써 위와 같이 버전이 v0.20.0인 패키지를 v0.21로 버전업하고 싶</description></item><item><title>F-분포에서 베타 분포 유도</title><link>https://freshrimpsushi.github.io/ko/posts/2231/</link><pubDate>Sun, 10 Jul 2022 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/2231/</guid><description>정리 1 자유도 $r_{1} , r_{2}$ 인 F-분포를 따르는 확률변수 $X \sim F \left( r_{1}, r_{2} \right)$ 에 대해 다음과 같이 정의된 $Y$ 는 베타분포 $\text{Best} \left( {{ r_{1} } \over { 2 }} , {{ r_{2} } \over { 2 }} \right)$ 를 따른다. $$</description></item><item><title>줄리아에서 빈 데이터프레임 만드는 법</title><link>https://freshrimpsushi.github.io/ko/posts/2230/</link><pubDate>Fri, 08 Jul 2022 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/2230/</guid><description>개요 많은 언어에서 데이터프레임을 지원함에도 의외로 할 때마다 새롭고 짜증나는 게 빈 배열 생성이다. 코드 타입 지정 julia&amp;gt; using DataFrames julia&amp;gt; df1 = DataFrame(x = Int64[], y = String[]) 0×2 DataFrame 실제로 빈 배</description></item><item><title>선형계획문제에서 최적해가 존재한다면 그 중 하나는 기저가용해다</title><link>https://freshrimpsushi.github.io/ko/posts/2229/</link><pubDate>Wed, 06 Jul 2022 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/2229/</guid><description>정리 1 $$ \begin{matrix} \text{Maximize} &amp;amp; \mathbf{c}^{T} \mathbf{x} \\ \text{subject to} &amp;amp; A \mathbf{x} = \mathbf{b} \\ &amp;amp; \mathbf{x} \ge \mathbf{0} \end{matrix} $$ 행렬 $A \in \mathbb{R}^{m \times n}$ 과 $\mathbf{b} \in \mathbb{R}^{m \times 1}$ 와 $\mathbf{c} \in \mathbb{R}^{n}$ 에 대해 선형계획문제가 위와 같이 방정식 폼으로 나타난다고 하자. 만</description></item><item><title>컨벡스 헐의 정의</title><link>https://freshrimpsushi.github.io/ko/posts/2228/</link><pubDate>Mon, 04 Jul 2022 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/2228/</guid><description>정의 1 벡터공간 $V$ 의 부분집합 $X$ 의 컨벡스 헐convex Hull $C$ 란 $X$ 를 포함하는 모든 컨벡스 셋의 교집합을 말하며, 수식적으로는 다음과 같다. $$ C = \left\{ \sum_{k} t_{k} \mathbf{x}_{k} : \mathbf{x}_{k}</description></item><item><title>선형계획문제의 방정식 폼에서 최적해의 존재성 증명</title><link>https://freshrimpsushi.github.io/ko/posts/2227/</link><pubDate>Sat, 02 Jul 2022 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/2227/</guid><description>정리 1 $$ \begin{matrix} \text{Maximize} &amp;amp; \mathbf{c}^{T} \mathbf{x} \\ \text{subject to} &amp;amp; A \mathbf{x} = \mathbf{b} \\ &amp;amp; \mathbf{x} \ge \mathbf{0} \end{matrix} $$ 행렬 $A \in \mathbb{R}^{m \times n}$ 과 $\mathbf{b} \in \mathbb{R}^{m \times 1}$ 와 $\mathbf{c} \in \mathbb{R}^{n}$ 에 대해 선형계획문제가 위와 같이 방정식 폼으로 나타난다고 하자. 만</description></item><item><title>줄리아 문자열에서 특정 패턴 위치 찾는 법</title><link>https://freshrimpsushi.github.io/ko/posts/2226/</link><pubDate>Thu, 30 Jun 2022 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/2226/</guid><description>코드 julia&amp;gt; findfirst(&amp;#34;li&amp;#34;, &amp;#34;multicolinearlity&amp;#34;) 8:9 julia&amp;gt; findlast(&amp;#34;li&amp;#34;, &amp;#34;multicolinearlity&amp;#34;) 14:15 julia&amp;gt; findnext(&amp;#34;l&amp;#34;, &amp;#34;multicolinearlity&amp;#34;, 1) 3:3 julia&amp;gt; findnext(&amp;#34;l&amp;#34;, &amp;#34;multicolinearlity&amp;#34;, 4) 8:8 julia&amp;gt; findnext(&amp;#34;l&amp;#34;, &amp;#34;multicolinearlity&amp;#34;, 9) 14:14 julia&amp;gt; findfirst(r&amp;#34;t.+t&amp;#34;, &amp;#34;multicolinearlity&amp;#34;) 4:16 findfirst(pattern, A) 문자열 A에서 pattern과 일치하는 구간을 Range로 리턴한다. 패턴에는 정규표</description></item><item><title>기저가용해의 유일성 증명</title><link>https://freshrimpsushi.github.io/ko/posts/2225/</link><pubDate>Tue, 28 Jun 2022 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/2225/</guid><description>정리 1 $$ \begin{matrix} \text{Maximize} &amp;amp; \mathbf{c}^{T} \mathbf{x} \\ \text{subject to} &amp;amp; A \mathbf{x} = \mathbf{b} \\ &amp;amp; \mathbf{x} \ge \mathbf{0} \end{matrix} $$ 행렬 $A \in \mathbb{R}^{m \times n}$ 과 $\mathbf{b} \in \mathbb{R}^{m \times 1}$ 와 $\mathbf{c} \in \mathbb{R}^{n}$ 에 대해 선형계획문제가 위와 같이 방정식 폼으로 나타난다고 할 때, 그</description></item><item><title>줄리아에서 특정 문자열 포함 여부 확인하는 법</title><link>https://freshrimpsushi.github.io/ko/posts/2224/</link><pubDate>Sun, 26 Jun 2022 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/2224/</guid><description>코드 julia&amp;gt; contains(&amp;#34;qwerty&amp;#34;, &amp;#34;er&amp;#34;) true julia&amp;gt; contains(&amp;#34;qwerty&amp;#34;, &amp;#34;et&amp;#34;) false julia&amp;gt; contains(&amp;#34;qwerty&amp;#34;, r&amp;#34;q?&amp;#34;) true contains(haystack::AbstractString, needle) haystack에 needle이 포함되었는지 확인해 불리언으로 리턴한다. needle에는 r&amp;quot;...&amp;</description></item><item><title>선형 계획 문제의 기저가용해</title><link>https://freshrimpsushi.github.io/ko/posts/2223/</link><pubDate>Fri, 24 Jun 2022 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/2223/</guid><description>정의 1 $$ \begin{matrix} \text{Maximize} &amp;amp; \mathbf{c}^{T} \mathbf{x} \\ \text{subject to} &amp;amp; A \mathbf{x} = \mathbf{b} \\ &amp;amp; \mathbf{x} \ge \mathbf{0} \end{matrix} $$ 행렬 $A \in \mathbb{R}^{m \times n}$ 과 $\mathbf{b} \in \mathbb{R}^{m \times 1}$ 와 $\mathbf{c} \in \mathbb{R}^{n}$ 에 대해 선형계획문제가 위와 같이 방정식 폼으로 나타난다고 할 때, 그</description></item><item><title>줄리아에서 소인수분해 및 소수관련 함수 사용하는 법</title><link>https://freshrimpsushi.github.io/ko/posts/2222/</link><pubDate>Wed, 22 Jun 2022 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/2222/</guid><description>개요 Primes.jl은 소수에 관련된 함수 및 소인수분해를 다루는 패키지다. 해석적 정수론에 관련된 함수에 대한 구현은 아직 미비한 편이다. 패키지의 모든 기능</description></item><item><title>선형 계획 문제의 방정식 폼</title><link>https://freshrimpsushi.github.io/ko/posts/2221/</link><pubDate>Mon, 20 Jun 2022 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/2221/</guid><description>정의 1 행렬 $A \in \mathbb{R}^{m \times n}$ 과 $\mathbf{b} \in \mathbb{R}^{m \times 1}$ 와 $\mathbf{c} \in \mathbb{R}^{n}$ 에 대해 다음과 같은 선형계획문제를 표준형standard form 혹은 방정식 폼equational form이라 한</description></item><item><title>줄리아에서 다항함수 사용하는 법</title><link>https://freshrimpsushi.github.io/ko/posts/2220/</link><pubDate>Sat, 18 Jun 2022 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/2220/</guid><description>개요 Polynomials.jl은 다항 함수의 표현 및 계산 등을 포함한 패키지다. 다항함수라는 게 수학적으로 쉬워서 그런지 코딩도 간단하게 생각하는 경우가 있</description></item><item><title>베이불 분포</title><link>https://freshrimpsushi.github.io/ko/posts/2219/</link><pubDate>Thu, 16 Jun 2022 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/2219/</guid><description>정의 스케일scale 파라미터 $\lambda &amp;gt; 0$ 와 쉐이프shape 파라미터 $k &amp;gt; 0$ 에 대해 다음과 같은 확률 밀도 함수를 가지는 확률분포를 베이불 분포weibull di</description></item><item><title>줄리아에서 문자열 합치는 법</title><link>https://freshrimpsushi.github.io/ko/posts/2218/</link><pubDate>Tue, 14 Jun 2022 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/2218/</guid><description>코드 문자열 합치기 * julia&amp;gt; &amp;#34;oh&amp;#34; * &amp;#34;my&amp;#34; * &amp;#34;girl&amp;#34; &amp;#34;ohmygirl&amp;#34; 파이썬의 +에 해당한다. 여러 문자열 합치기 string() julia&amp;gt; string(&amp;#34;oh&amp;#34;,&amp;#34;my&amp;#34;, &amp;#34;girl&amp;#34;) &amp;#34;ohmygirl&amp;#34; R의 paste0()에 해당한다. 문자열의 리스트의 아이템으로써</description></item><item><title>피타고리안 승률</title><link>https://freshrimpsushi.github.io/ko/posts/2217/</link><pubDate>Sun, 12 Jun 2022 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/2217/</guid><description>공식 1 특정 종목 스포츠 리그의 팀 하나가 주어져 있다고 하자. 팀 득점scores $S$ 와 팀 실점allows $A$ 에 대해, 이 팀의 시즌 기대 승률 $p$ 는 다음과 같다. $$ p</description></item><item><title>줄리아 그림에서 특정 데이터만 라벨 숨기는 법</title><link>https://freshrimpsushi.github.io/ko/posts/2216/</link><pubDate>Fri, 10 Jun 2022 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/2216/</guid><description>코드 1 using Plots x = rand(30) y = rand(30) z = rand(30) plot(x) plot!(y) plot!(z) png(&amp;#34;result1&amp;#34;) 위와 같이 세 데이터에 대한 라벨 중 특정 데이터만 범례에서 나타나지 않게 하고 싶을 수 있다. label = &amp;quot;&amp;quot; plot(x, label = &amp;#34;&amp;#34;) plot!(y) png(&amp;#34;result2&amp;#34;) 그럴 땐 위와</description></item><item><title>VS code Ctrl+Shift+C 기본 터미널 변경하는 법</title><link>https://freshrimpsushi.github.io/ko/posts/2215/</link><pubDate>Wed, 08 Jun 2022 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/2215/</guid><description>가이드 비주얼 스튜디오 코드에서 Ctrl + Shift + C를 누르면 터미널 창을 띄울 수 있다. 다양한 테스트나 여러 이유로 생각보다 많이 쓰게 되는 기능인데, cmd 대신 powers</description></item><item><title>줄리아 그림에 텍스트 넣는 법</title><link>https://freshrimpsushi.github.io/ko/posts/2214/</link><pubDate>Mon, 06 Jun 2022 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/2214/</guid><description>코드 1 annotate!()를 사용하면 된다. 다음 코드는 브라운 모션에서 최대점과 최소점을 표시한 그림을 그려주는 코드다. using Plots cd(@__DIR__) data = cumsum(randn(100)) plot(data, color = :black, legend = :none) annotate!(argmax(data),</description></item><item><title>지수족 확률분포</title><link>https://freshrimpsushi.github.io/ko/posts/2213/</link><pubDate>Sat, 04 Jun 2022 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/2213/</guid><description>정의 1 2 모수 $\theta$ 인 확률분포의 확률질량함수 혹은 확률밀도함수가 어떤 함수 $p,K,H,q,h,c,w_{i},t_{i}$ 들에 대해 다음과 같이 나타낼 수 있으면 지수족exponential Family 혹은 익스포넨</description></item><item><title>줄리아 그림에 한글 넣는 법</title><link>https://freshrimpsushi.github.io/ko/posts/2212/</link><pubDate>Thu, 02 Jun 2022 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/2212/</guid><description>환경 OS: Windows julia: v1.6.2 에러 julia&amp;gt; plot(data, color = :black, label = &amp;#34;값&amp;#34;, title = &amp;#34;브라운모션&amp;#34;) GKS: glyph missing from current font: 48652 GKS: glyph missing from current font: 46972 GKS: glyph missing from current font: 50868 GKS: glyph missing from</description></item><item><title>확률 밀도 함수의 컨볼루션 공식</title><link>https://freshrimpsushi.github.io/ko/posts/2211/</link><pubDate>Tue, 31 May 2022 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/2211/</guid><description>공식 1 독립인 두 연속확률변수 $X, Y$ 의 확률밀도함수가 $f_{X}, f_{Y}$ 로 주어져 있다고 하자. 그러면 $Z := X + Y$ 의 확률밀도함수는 두 확률밀도함수의 합성곱 $f_{Z} = f_{X} \ast f_{Y}$ 이다.</description></item><item><title>레일리 분포</title><link>https://freshrimpsushi.github.io/ko/posts/2210/</link><pubDate>Sun, 29 May 2022 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/2210/</guid><description>정의 1 스케일 파라미터 $\sigma &amp;gt; 0$ 에 대해 다음과 같은 확률 밀도 함수를 가지는 연속 확률 분포를 레일리 분포rayleigh distribution라 한다. $$ f(x) =</description></item><item><title>함수를 취한 확률변수꼴 합의 기대값</title><link>https://freshrimpsushi.github.io/ko/posts/2209/</link><pubDate>Fri, 27 May 2022 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/2209/</guid><description>정리 1 $X_{1} , \cdots , X_{n}$ 이 랜덤 샘플이고, $E g \left( X_{1} \right)$ 과 $\Var g \left( X_{1} \right)$ 가 존재하게끔 하는 함수 $g : \mathbb{R} \to \mathbb{R}$ 가 주어져 있다고 하자. 그러면 다음이 성립한다. [1] 평균: $$ E \left(</description></item><item><title>야구에서 OPS의 정의</title><link>https://freshrimpsushi.github.io/ko/posts/2208/</link><pubDate>Wed, 25 May 2022 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/2208/</guid><description>정의 1 출루율 OBP과 장타율 SLG의 합을 OPSon-base Plus Slugging이라 한다. $$ OPS := OBP + SLG $$ 설명 높은 출루율은 팀 전체로 보았을 때 기대 득점을 올리고, 높은 장타</description></item><item><title>선형 계획 문제의 정의</title><link>https://freshrimpsushi.github.io/ko/posts/2207/</link><pubDate>Mon, 23 May 2022 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/2207/</guid><description>정의 1 목적 함수objective function와 제약constraint들이 리니어한 최적화 문제를 선형 계획 문제linear Programming Problem, 짧게는 선형 문제</description></item><item><title>야구에서 출루율의 정의</title><link>https://freshrimpsushi.github.io/ko/posts/2206/</link><pubDate>Sat, 21 May 2022 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/2206/</guid><description>정의 1 2 타자가 타석에서 얼마나 출루를 많이 하는지를 나타낸 비율을 출루율on-base Percentage, 줄여서 OBP라 부른다. 안타 H, 볼넷 BB와 몸에 맞는 공 HBP, 타수 AB, 희생</description></item><item><title>줄리아에서 파이썬처럼 문자열 다루는 법</title><link>https://freshrimpsushi.github.io/ko/posts/2205/</link><pubDate>Thu, 19 May 2022 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/2205/</guid><description>코드 1 2 3 julia&amp;gt; replace(&amp;#34;qwerty&amp;#34;, &amp;#34;q&amp;#34;=&amp;gt;&amp;#34;Q&amp;#34;) &amp;#34;Qwerty&amp;#34; julia&amp;gt; join(&amp;#34;qwerty&amp;#34;, &amp;#34;,&amp;#34;) &amp;#34;q,w,e,r,t,y&amp;#34; julia&amp;gt; split(&amp;#34;qwerty&amp;#34;, &amp;#34;&amp;#34;) 6-element Vector{SubString{String}}: &amp;#34;q&amp;#34; &amp;#34;w&amp;#34; &amp;#34;e&amp;#34; &amp;#34;r&amp;#34; &amp;#34;t&amp;#34; &amp;#34;y&amp;#34; 줄리아는 문자열 처리에 특출난 언어는 아니지만, 그 때문인지 파이썬을 많이 따라해서 쉽고 빠르게 배울 수 있다</description></item><item><title>야구에서 장타율의 정의</title><link>https://freshrimpsushi.github.io/ko/posts/2204/</link><pubDate>Tue, 17 May 2022 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/2204/</guid><description>정의 1 2 타자의 타격으로 얻어낸 루의 갯수를 루수total Bases, 줄여서 TB라 부른다. 루수 TB를 타수 AB로 나눈 비율을 장타율slugging Percentage, 줄여서 SLG</description></item><item><title>줄리아에서 근사값 체크하는 법</title><link>https://freshrimpsushi.github.io/ko/posts/2203/</link><pubDate>Sun, 15 May 2022 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/2203/</guid><description>코드 비교연산자로써 $\approx$ 를 사용하면 두 값이 충분히 비슷할 때만 참을 반환한다. ≈ 는 $\TeX$에서와 마찬가지로 \approx 을 입력하고 탭(Tab)을 치면 쓸 수 있다. julia&amp;gt;</description></item><item><title>야구에서 타율의 정의</title><link>https://freshrimpsushi.github.io/ko/posts/2202/</link><pubDate>Fri, 13 May 2022 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/2202/</guid><description>정의 1 안타 H를 타수 AB로 나눈 비율을 타율batting Average, 줄여서 AVG라 부른다. 다시 말해, 타율은 다음과 같이 정의된다. $$ AVG := {{ H } \over { AB }} $$ 정설 [1]:</description></item><item><title>줄리아에서 딕셔너리와 페어</title><link>https://freshrimpsushi.github.io/ko/posts/2201/</link><pubDate>Wed, 11 May 2022 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/2201/</guid><description>코드 1 julia&amp;gt; d = Dict(&amp;#34;A&amp;#34;=&amp;gt;1, &amp;#34;B&amp;#34;=&amp;gt;2) Dict{String, Int64} with 2 entries: &amp;#34;B&amp;#34; =&amp;gt; 2 &amp;#34;A&amp;#34; =&amp;gt; 1 julia&amp;gt; push!(d,(&amp;#34;C&amp;#34;,3)) ERROR: MethodError: no method matching push!(::Dict{String, Int64}, ::Tuple{String, Int64}) julia&amp;gt; push!(d,&amp;#34;C&amp;#34; =&amp;gt; 3) Dict{String, Int64} with 3 entries: &amp;#34;B&amp;#34; =&amp;gt; 2 &amp;#34;A&amp;#34; =&amp;gt; 1 &amp;#34;C&amp;#34; =&amp;gt; 3 julia&amp;gt; typeof(&amp;#34;C&amp;#34; =&amp;gt; 3) Pair{String, Int64} 줄리아의 딕셔너리dictiona</description></item><item><title>야구에서 희생타의 정의</title><link>https://freshrimpsushi.github.io/ko/posts/2200/</link><pubDate>Mon, 09 May 2022 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/2200/</guid><description>정의 1 2 타자는 아웃되었지만 주자를 진루시키는 번트에 성공한 횟수를 희생 번트sacrifice Bunt, 줄여서 SH라 부른다. 타자는 플라이 아웃되었지만 주자가 점</description></item><item><title>줄리아에서 .mat처럼 데이터를 저장하는 법</title><link>https://freshrimpsushi.github.io/ko/posts/2199/</link><pubDate>Sat, 07 May 2022 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/2199/</guid><description>개요 JLD.jl는 줄리아를 사용하면서 생기는 임시 데이터들을 저장할 수 있도록 해주는 패키지다1. 퓨어 줄리아 프로젝트를 하면서 데이터의 입출력이 번거롭다면</description></item><item><title>야구에서 볼넷과 몸에 맞는 공의 정의</title><link>https://freshrimpsushi.github.io/ko/posts/2198/</link><pubDate>Thu, 05 May 2022 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/2198/</guid><description>정의 1 타석에서 4개의 공이 스트라이크 존 밖으로 투구pitches out of the strike zone되어 출루한 횟수를 볼넷base on Balls 혹은 4구, 줄여서 BB라 부른다. 타</description></item><item><title>줄리아의 반복문에서 인덱스와 값을 동시에 참조하는 방법</title><link>https://freshrimpsushi.github.io/ko/posts/2197/</link><pubDate>Tue, 03 May 2022 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/2197/</guid><description>코드 1 Base.Iterators.enumerate() 는 파이썬과 같이 배열의 인덱스와 값을 동시에 참조할 수 있는 반복자iterator를 반환한다. julia&amp;gt; x = [3,5,4,1,2] 5-element Vector{Int64}: 3 5 4 1 2 julia&amp;gt; for (idx, value) in enumerate(x) println(&amp;#34;x[$idx]: $value&amp;#34;) end x[1]: 3 x[2]: 5</description></item><item><title>야구에서 홈런의 정의</title><link>https://freshrimpsushi.github.io/ko/posts/2196/</link><pubDate>Sun, 01 May 2022 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/2196/</guid><description>정의 1 타자가 페어 볼을 타격하고 득점한 타구의 수를 홈런home Run, 줄여서 HR이라 부른다. 설명 홈런은 야구의 꽃이며, 루상의 주자 수에 따라 한 번에 4점을 올릴 수</description></item><item><title>줄리아에서의 심볼</title><link>https://freshrimpsushi.github.io/ko/posts/2195/</link><pubDate>Fri, 29 Apr 2022 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/2195/</guid><description>개요 줄리아를 처음 접하면서 적잖이 당황할 수 있는 것이 바로 심볼symbol 자료형이다. 심볼은 맨 앞에 :을 붙여서 사용하며, 어떤 내부 데이터도 없이 그 이름 그 자</description></item><item><title>야구에서 안타의 정의</title><link>https://freshrimpsushi.github.io/ko/posts/2194/</link><pubDate>Wed, 27 Apr 2022 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/2194/</guid><description>정의 1 타자가 친 공이 유효한 영역에 떨어진 것 중 야수 선택과 실책을 제외한 타구의 수를 안타hit, 줄여서 H라 부른다. 안타는 1루타singles, 2루타do</description></item><item><title>줄리아에서 배열의 원소들이 어떤 리스트에 속하는지 체크하는 법</title><link>https://freshrimpsushi.github.io/ko/posts/2193/</link><pubDate>Mon, 25 Apr 2022 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/2193/</guid><description>가이드 1 julia&amp;gt; x = rand(&amp;#39;a&amp;#39;:&amp;#39;c&amp;#39;, 10) 10-element Vector{Char}: &amp;#39;a&amp;#39;: ASCII/Unicode U+0061 (category Ll: Letter, lowercase) &amp;#39;a&amp;#39;: ASCII/Unicode U+0061 (category Ll: Letter, lowercase) &amp;#39;b&amp;#39;: ASCII/Unicode U+0062 (category Ll: Letter, lowercase) &amp;#39;c&amp;#39;: ASCII/Unicode U+0063 (category Ll: Letter, lowercase) &amp;#39;b&amp;#39;: ASCII/Unicode U+0062 (category Ll: Letter, lowercase) &amp;#39;c&amp;#39;: ASCII/Unicode U+0063 (category Ll: Letter, lowercase) &amp;#39;c&amp;#39;: ASCII/Unicode U+0063 (category Ll: Letter, lowercase) &amp;#39;c&amp;#39;: ASCII/Unicode U+0063 (category Ll: Letter, lowercase) &amp;#39;b&amp;#39;: ASCII/Unicode U+0062</description></item><item><title>야구에서 타수의 정의</title><link>https://freshrimpsushi.github.io/ko/posts/2192/</link><pubDate>Sat, 23 Apr 2022 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/2192/</guid><description>정의 1 타자가 안타를 치거나 야수 선택으로 출루하거나 실책으로 출루하거나 아웃(희생타는 제외)된 횟수를 타수at Bat, 줄여서 AB라 부른다. 정리 [1]: 한 타자의 타석</description></item><item><title>줄리아에서 우아한 반복문을 사용하는 방법</title><link>https://freshrimpsushi.github.io/ko/posts/2191/</link><pubDate>Thu, 21 Apr 2022 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/2191/</guid><description>가이드 while while 문은 여타 언어들과 다를 게 없다. julia&amp;gt; while x &amp;lt; 10 x += 1 print(&amp;#34;$x - &amp;#34;) end 1 - 2 - 3 - 4 - 5 - 6 - 7 - 8 - 9 - 10 - for julia&amp;gt; for i in 1:10 print(&amp;#34;$i - &amp;#34;) end 1 - 2 - 3 - 4 - 5</description></item><item><title>야구에서 타석의 정의</title><link>https://freshrimpsushi.github.io/ko/posts/2190/</link><pubDate>Tue, 19 Apr 2022 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/2190/</guid><description>정의 1 타자가 타석에 들어서서 타격을 끝낸(어떠한 방식으로든 타석에서 내려가는) 횟수를 타석plate Appearance, 줄여서 PA라 부른다. 정리 [1]: 한 타자의 타석 PA 와 타수</description></item><item><title>네트워크 이론에서의 허브 노드</title><link>https://freshrimpsushi.github.io/ko/posts/2189/</link><pubDate>Sun, 17 Apr 2022 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/2189/</guid><description>정의 1 네트워크에서 다른 많은 노드와 연결된 노드를 허브hub라 한다. 설명 네트워크 이론에서의 중심성이란 그 중에서 &amp;lsquo;중요한 노드가 무엇인가&amp;r</description></item><item><title>KDX 한국데이터거래소 소개</title><link>https://freshrimpsushi.github.io/ko/posts/2188/</link><pubDate>Fri, 15 Apr 2022 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/2188/</guid><description>소개 일반적인 데이터 허브와 달리 유료로 데이터를 판매하는 기업이다. 유료인만큼 한국 실정에 맞는 데이터의 양과 질로는 최고 수준이며, 무료 데이터도 적지않게 판매</description></item><item><title>바라바시-알버트 모델</title><link>https://freshrimpsushi.github.io/ko/posts/2187/</link><pubDate>Wed, 13 Apr 2022 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/2187/</guid><description>알고리즘 1 Input 링크 파라미터 $m \in \mathbb{N}$ 과 네트워크 사이즈 $N$ 이 주어져 있다고 하자. Step 1. 초기화 노드가 $m$ 개인 최초의 네트워크를 구성한다. 별 다른 이유가 없다면 그 네트</description></item><item><title>ITS 국가교통정보센터 소개</title><link>https://freshrimpsushi.github.io/ko/posts/2186/</link><pubDate>Mon, 11 Apr 2022 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/2186/</guid><description>소개 국가교통정보센터는 국내의 교통소통, 공사사고, CCTV, 교통예측, 차량검지기, VMS, 교통안전도우미, 가변속도표지, 취약구간정보 및 전국표준노드링크를 제공</description></item><item><title>청-루 피트니스 모델</title><link>https://freshrimpsushi.github.io/ko/posts/2185/</link><pubDate>Sat, 09 Apr 2022 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/2185/</guid><description>정의 각 노드 별로 가중치weight를 주고 그에 따라 링크가 연결되는 확률을 다르게 주는 랜덤 네트워크를 피트니스 모델fitness model이라 한다. 알고</description></item><item><title>기상자료개방포털 소개</title><link>https://freshrimpsushi.github.io/ko/posts/2184/</link><pubDate>Thu, 07 Apr 2022 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/2184/</guid><description>소개 기상자료개방포털은 종관기상관측, 기후, 지진화산 등의 다양한 데이터셋과 오픈 API를 제공하고 있다. 기온, 강수량, 미세먼지, 풍속, 습도, 일조량 등</description></item><item><title>스케일 프리 네트워크</title><link>https://freshrimpsushi.github.io/ko/posts/2183/</link><pubDate>Tue, 05 Apr 2022 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/2183/</guid><description>정의 1 차수분포가 파레토 분포인 랜덤 네트워크를 무척도 네트워크scale-free network라고 한다. 설명 스케일-프리(SF) 네트워크라는 명명</description></item><item><title>환경 빅데이터 플랫폼 소개</title><link>https://freshrimpsushi.github.io/ko/posts/2182/</link><pubDate>Sun, 03 Apr 2022 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/2182/</guid><description>소개 환경 빅데이터 플랫폼은 환경 데이터 마켓과 시각화, 교육 서비스, 공모전 등을 제공하고 있다. 마켓이라고 하나 무료 데이터도 많고 UI, 데이터 설명도 깔끔해 사용하</description></item><item><title>파레토 분포</title><link>https://freshrimpsushi.github.io/ko/posts/2181/</link><pubDate>Fri, 01 Apr 2022 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/2181/</guid><description>정의 1 스케일scale 파라미터 $x_{0} &amp;gt; 0$ 과 쉐이프shape 파라미터 $\alpha &amp;gt; 0$ 에 대해 다음과 같은 확률함수를 가지는 확률분포를 파레토 분포pareto distribution 혹은 멱</description></item><item><title>줄리아에서 plot에 tex 사용하는 법</title><link>https://freshrimpsushi.github.io/ko/posts/2180/</link><pubDate>Wed, 30 Mar 2022 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/2180/</guid><description>코드 1 LaTeXStrings 라이브러리를 부르고 L&amp;quot;...&amp;quot; 과 같이 문자열 앞에 L을 적어주면 된다. @time using Plots @time using LaTeXStrings plot(0:0.1:2π, sin.(0:0.1:2π), xlabel = L&amp;#34;x&amp;#34;, ylabel</description></item><item><title>Let 뒤에는 무조건 동사원형이 온다</title><link>https://freshrimpsushi.github.io/ko/posts/2179/</link><pubDate>Mon, 28 Mar 2022 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/2179/</guid><description>문법 주어 S 와 동사 V 에 대해 &amp;ldquo;Let S V ~&amp;rdquo; 절의 V는 동사원형으로 쓰여야한다. 예문 &amp;ldquo;자아! 살육을 시작하자.&amp;rdquo; &amp;ldquo;Let the killing begin.&amp;rdquo; - 복한규, 전 LOL</description></item><item><title>investing.com 소개</title><link>https://freshrimpsushi.github.io/ko/posts/2178/</link><pubDate>Sat, 26 Mar 2022 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/2178/</guid><description>소개 인베스팅닷컴은 세계적인 금융정보 사이트로써 코스피, 코스닥 등 종목의 차트 정보를 무료로 간편하게 제공한다. 다만 실시간 데이터라든가 더욱 다양한 데이터가</description></item><item><title>영문법: a의 확률로 V하다</title><link>https://freshrimpsushi.github.io/ko/posts/2177/</link><pubDate>Thu, 24 Mar 2022 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/2177/</guid><description>문형 동사 V와 확률rate $a \in [0,1]$ 가 주어져있다고 하자. &amp;ldquo;It V at the rate $a$.&amp;rdquo; $\iff$ &amp;ldquo;$a$의 확률로 V하다.&amp;rdquo; 예문 &amp;ldquo;질병이 확</description></item><item><title>창원시 빅데이터 포털 소개</title><link>https://freshrimpsushi.github.io/ko/posts/2176/</link><pubDate>Tue, 22 Mar 2022 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/2176/</guid><description>소개 창원 빅데이터 포털은 창원시를 중심으로 한 공공데이터 포털로써 9억건 이상의 데이터와 빅데이터 스튜디오, 상권분석 등의 서비스를 제공하고 분석대회 공모전을</description></item><item><title>커플드 다이내믹 시스템</title><link>https://freshrimpsushi.github.io/ko/posts/2175/</link><pubDate>Sun, 20 Mar 2022 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/2175/</guid><description>정의 1 상태공간 $X$ 가 주어져 있다고 하자. $N$ 개의 노드를 가지는 네트워크 $\Gamma$ 의 인접 행렬을 $A$, 노드 $i \in V \left( \Gamma \right)$ 의 상태를 $x_{i} \in X$ 와 같이 나타낼 때, 다음의 미분방정식</description></item><item><title>CYBOS Plus로 공매도 추이 불러오는 법</title><link>https://freshrimpsushi.github.io/ko/posts/2174/</link><pubDate>Fri, 18 Mar 2022 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/2174/</guid><description>코드 CpSysDib.CpSvr7238 는 종목별 공매도 추이를 요청하고 수신한다. 주식회사 씨젠의 공매도 데이터를 불러우는 파이썬 예제로 사용법을 익혀보자. 만약 CYBOS API에 익숙하지 않다면 다</description></item><item><title>줄리아에서 그림 배경 투명하게 출력하는 법</title><link>https://freshrimpsushi.github.io/ko/posts/2173/</link><pubDate>Wed, 16 Mar 2022 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/2173/</guid><description>코드 1 브라우저를 다크모드로 보면 확실히 배경이 투명하게 출력되었음을 확인할 수 있다. background_color 옵션에 :transparent 심볼을 넣어주면 된다. *.png로는 잘 저장하지만 *.pd</description></item><item><title>CYBOS Plus로 기관, 외국인 매매량 불러오는 법</title><link>https://freshrimpsushi.github.io/ko/posts/2172/</link><pubDate>Mon, 14 Mar 2022 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/2172/</guid><description>가이드1 CpSysDib.CpSvr7254는 투자주체별현황을 일별-기간별,순매수-매매비중, 수량-금액을 일자별로 확인한다. 주식회사 씨젠의 투</description></item><item><title>All 뒤에는 가산명사 복수형이나 비가산명사 단수형이 온다</title><link>https://freshrimpsushi.github.io/ko/posts/2171/</link><pubDate>Sat, 12 Mar 2022 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/2171/</guid><description>문법 All 뒤에 올 명사를 N이라 하자. All 뒤에 오는 N은 가산명사 복수형이나 비가산명사 단수형이어야하고, &amp;ldquo;All N&amp;rdquo; 의 수는 N의 수와 일치해야한다. 예문 복수형 &amp;ldq</description></item><item><title>CYBOS Plus로 종목 주가 불러오는 법 CpSysDib.StockChart</title><link>https://freshrimpsushi.github.io/ko/posts/2170/</link><pubDate>Thu, 10 Mar 2022 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/2170/</guid><description>가이드 1 CpSysDib.StockChart는 주식, 업종, ELW의 차트데이터를 수신한다. API를 사용하는 것에 익숙하지 않다면 이 체계를 이해하기</description></item><item><title>Every와 Each 뒤에는 반드시 단수명사가 온다</title><link>https://freshrimpsushi.github.io/ko/posts/2169/</link><pubDate>Tue, 08 Mar 2022 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/2169/</guid><description>문법 E가 Every 혹은 Each이라 하고, E 뒤에 올 명사를 N이라 하자. E 뒤에 오는 N 은 단수여야하고, &amp;ldquo;E N&amp;rdquo; 은 통째로 단수 취급된다. 예문 Every &amp;ldquo;결론적으</description></item><item><title>CYBOS Plus로 종목 코드 불러오는 법 CpUtil.CpStockCode</title><link>https://freshrimpsushi.github.io/ko/posts/2168/</link><pubDate>Sun, 06 Mar 2022 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/2168/</guid><description>가이드 1 CpUtil.CpStockCode는 종목 코드에 관련된 메소드를 제공한다. NameToCode(): 종목 이름을 문자열로 받아 코드를 문자열로 리턴한다. CodeToName(): 코드를 문자</description></item><item><title>프랙털 브라운 운동</title><link>https://freshrimpsushi.github.io/ko/posts/2167/</link><pubDate>Fri, 04 Mar 2022 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/2167/</guid><description>정의 $E \left( X_{t} \right) = 0$ 인 $X_{t}$ 가 가우시안 프로세스고 $H \in (0, 1)$ 이라 하자. 프랙셔널 브라우니안 모션fractional Brownian motion은 다음과 같이 두가지 방법으로</description></item><item><title>CYBOS Plus 설치 튜토리얼</title><link>https://freshrimpsushi.github.io/ko/posts/2166/</link><pubDate>Wed, 02 Mar 2022 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/2166/</guid><description>환경 OS: Windows IDE: VS code 가이드 윈도우즈에서 CYBOS Plus를 설치하고 파이썬으로 연결상태를 확인하는 튜토리얼이다. 파이썬의 객체지향성이나 IDE를 다루는 부분에서는</description></item><item><title>TeX에서 큰 괄호를 한 쪽에만 치는 법</title><link>https://freshrimpsushi.github.io/ko/posts/2165/</link><pubDate>Mon, 28 Feb 2022 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/2165/</guid><description>코드 $$ \left. \int {{ 1 } \over { g (u) }} du \right|\_{u = X\_{t}} $$ $$ \left. \int {{ 1 } \over { g (u) }} du \right|_{u = X_{t}} $$ 큰 괄호에서 좌우 중 한 쪽이 필요 없으면 \left., \right. 로 크기만 유지하면서 렌더링을 생략할 수 있</description></item><item><title>투자 정보 Open API CYBOS Plus 소개</title><link>https://freshrimpsushi.github.io/ko/posts/2164/</link><pubDate>Sat, 26 Feb 2022 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/2164/</guid><description>소개 CYBOS는 대신증권에서 개발한 트레이딩 시스템으로, CYBOS Plus라는 Open APIapplication Programming Interface로써 증권 데이터를 제공하고 있다. 요구사항 대신증권 계</description></item><item><title>소수와 합성수</title><link>https://freshrimpsushi.github.io/ko/posts/2163/</link><pubDate>Thu, 24 Feb 2022 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/2163/</guid><description>정의 1 자연수 $p \ge 2$ 의 약수가 $1$ 과 $p$ 뿐이면 소수prime NUmber라 한다. 자연수 $m \ge 2$ 가 소수가 아니면 합성수composite number라 한다</description></item><item><title>Kaggle 소개</title><link>https://freshrimpsushi.github.io/ko/posts/2162/</link><pubDate>Tue, 22 Feb 2022 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/2162/</guid><description>소개 캐글kaggle은 전 세계적으로 가장 유명한 오픈 데이터 허브로, 셀 수 없을만큼 다양한 데이터를 공개하고 작은 대회도 많이 열고 있다. 모든 데이터가 캐글에 있</description></item><item><title>확률과정의 자기유사성과 허스트 인덱스</title><link>https://freshrimpsushi.github.io/ko/posts/2161/</link><pubDate>Sun, 20 Feb 2022 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/2161/</guid><description>정의 1 2 확률과정 $\left\{ X_{t} \right\}$ 이 모든 $a &amp;gt; 0$ 에 대해 다음을 만족하면 $H$-자기유사$H$-self-similar하다고 한다. $$ X_{at} \overset{D}{=} a^{H} X_{t} $$ 여기서 $\overset{D}{=}$ 은 분포</description></item><item><title>kaggle API로 데이터 받는 법, OSError: Could not find kaggle.json. 해결</title><link>https://freshrimpsushi.github.io/ko/posts/2160/</link><pubDate>Fri, 18 Feb 2022 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/2160/</guid><description>개요 예시 데이터 링크 캐글에 있는 데이터는 그 용량이 만만치 않기 때문에 웹브라우저의 다운로드 기능에만 맡기기엔 조금 불안한 감이 있다. 그래서 고용량 데이터를 안정</description></item><item><title>가우스 과정</title><link>https://freshrimpsushi.github.io/ko/posts/2159/</link><pubDate>Wed, 16 Feb 2022 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/2159/</guid><description>정의 1 확률과정 $\left\{ X_{t} \right\}$ 의 모든 유한 부분집합 $S = \left\{ X_{t_{k}} \right\}_{k=1}^{n} \subset \left\{ X_{t} \right\}$ 에 대해 $S$ 의 원소들의 모든 선형결합 $$ \sum_{k=1}^{n} a_{k} X_{t_{k}} \qquad , \left\{ a_{k} \right\}_{k=1}^{n} \subset \mathbb{R} $$ 가 다변량 정규분포를 따르면 $\left\{ X_{t} \right\}$</description></item><item><title>AI Hub 소개</title><link>https://freshrimpsushi.github.io/ko/posts/2158/</link><pubDate>Mon, 14 Feb 2022 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/2158/</guid><description>소개 음성, 자연어, 비전, 헬스케어, 자율주행, 안전, 농축수산, 국토환경, 교육 등의 분야에서 이미지, 비디오, 텍스트, 오디오, 3D, 센서 데이터와 같이 다양</description></item><item><title>줄리아에서 ==과 ===의 차이점</title><link>https://freshrimpsushi.github.io/ko/posts/2157/</link><pubDate>Sat, 12 Feb 2022 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/2157/</guid><description>코드 1 ==는 값이 같은지를 비교하고, ===는 비교할 값이 가변mutable인지 아닌지에 따라 다르게 작동한다. Mutable: 두 항이 같은 오브젝트인지 확인한다. 다시</description></item><item><title>블랙-숄즈 모델 유도</title><link>https://freshrimpsushi.github.io/ko/posts/2156/</link><pubDate>Thu, 10 Feb 2022 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/2156/</guid><description>모델 1 $t$ 시점에서 $S_{t}$ 를 기초자산 $1$단위의 가격이라 하고 $S_{t}$ 가 기하 브라운 운동을 한다고 가정하자. 즉, 표준 브라운 운동 $W_{t}$ 와 추세drift $\mu \in \mathbb{R}$ 와 확산di</description></item><item><title>파이썬 패키지, 라이브러리, 모듈 버전 체크하는 법</title><link>https://freshrimpsushi.github.io/ko/posts/2155/</link><pubDate>Tue, 08 Feb 2022 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/2155/</guid><description>가이드 콘솔에서 다음과 같은 명령을 통해 버전을 확인할 수 있다. 전체적으로 보기에는 list가 더 깔끔하지만 특정 패키지의 버전을 확인할 땐 freeze가 더 읽기</description></item><item><title>기하 브라운 운동</title><link>https://freshrimpsushi.github.io/ko/posts/2154/</link><pubDate>Sun, 06 Feb 2022 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/2154/</guid><description>정의 1 $\mu \in \mathbb{R}$ 과 $\sigma^{2} &amp;gt; 0$ 에 대해 다음과 같은 확률미분방정식이 주어져 있다고 하자. $$ d X_{t} = X_{t} \left( \mu dt + \sigma d B_{t} \right) $$ 이 SDE의 솔루션은 초기값 $X_{0}$ 에 대해 다음과 같은</description></item><item><title>로그-정규분포</title><link>https://freshrimpsushi.github.io/ko/posts/2153/</link><pubDate>Fri, 04 Feb 2022 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/2153/</guid><description>정의 1 $\mu \in \mathbb{R}$ 과 $\sigma^{2} &amp;gt; 0$ 에 대해 다음과 같은 확률 밀도 함수를 가지는 연속 확률 분포 $\log N \left( \mu,\sigma^{2} \right)$ 를 로그-정규분포normal distribution라고 한다.</description></item><item><title>쇼지-오자키 국소 선형화 메소드</title><link>https://freshrimpsushi.github.io/ko/posts/2152/</link><pubDate>Wed, 02 Feb 2022 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/2152/</guid><description>빌드업 1 $$ d X_{t} = f \left( t, X_{t} \right) dt + g \left( X_{t} \right) d W_{t} $$ 디퓨전 $g$ 가 $X_{t}$ 에만 종속이고 시간 $t$ 에 독립인 확률미분방정식이 위와 같이 주어져 있다고 하자. $Y_{t}$ 가 어떤 상수 $\sigma$ 에</description></item><item><title>파이썬 shutil 모듈 총정리</title><link>https://freshrimpsushi.github.io/ko/posts/2151/</link><pubDate>Mon, 31 Jan 2022 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/2151/</guid><description>개요 1 shutil 은 파일이나 디렉터리 등에 대한 고수준 명령을 모아놓은 기본 모듈이다. 파이썬을 사용하는 이유 중 하나가 빠르고 간편하게 프로그램을 작성하기 용이하다는 것</description></item><item><title>람페르티 변환</title><link>https://freshrimpsushi.github.io/ko/posts/2150/</link><pubDate>Sat, 29 Jan 2022 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/2150/</guid><description>정의 1 $$ d X_{t} = f \left( t , X_{t} \right) dt + g \left( X_{t} \right) d W_{t} $$ 디퓨전 $g$ 가 $X_{t}$ 에만 종속이고 시간 $t$ 에 독립인 확률미분방정식이 위와 같이 주어져 있다고 하자. 다음과 같은 변환 $F</description></item><item><title>줄리아에서 비트 배열 반전시키는 법</title><link>https://freshrimpsushi.github.io/ko/posts/2149/</link><pubDate>Thu, 27 Jan 2022 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/2149/</guid><description>코드 1 아주 간단한데 부정 연산 !과 ~을 그냥 단항 연산이 아니라 함수로 보고 !. 혹은 ~.을 취하는 실수를 많이 한다. .!이나 .~으로 쓰면 된다. julia&amp;gt; a = rand(1,10) .&amp;lt; 0.5 1×</description></item><item><title>밀슈타인 메소드 유도</title><link>https://freshrimpsushi.github.io/ko/posts/2148/</link><pubDate>Tue, 25 Jan 2022 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/2148/</guid><description>메소드 1 $$ d X(t) = f \left( X_{t} \right) dt + g \left( X_{t} \right) d W_{t} \qquad , t \in [t_{0}, T] $$ 이토 프로세스가 위와 같은 자율 확률미분방정식의 솔루션으로써 주어져 있다고 하자. 간격이 $h$ 으로 일</description></item><item><title>파이썬 os 모듈 총정리</title><link>https://freshrimpsushi.github.io/ko/posts/2147/</link><pubDate>Sun, 23 Jan 2022 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/2147/</guid><description>개요 1 os 은 운영체제 종속 기능에 대한 간단한 명령을 모아놓은 기본 모듈이다. 파이썬을 사용하는 이유 중 하나가 빠르고 간편하게 프로그램을 작성하기 용이하다는 것인</description></item><item><title>오일러-마루야마 메소드 유도</title><link>https://freshrimpsushi.github.io/ko/posts/2146/</link><pubDate>Fri, 21 Jan 2022 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/2146/</guid><description>메소드 1 $$ d X(t) = f \left( X_{t} \right) dt + g \left( X_{t} \right) d W_{t} \qquad , t \in [t_{0}, T] $$ 이토 프로세스가 위와 같은 자율 확률미분방정식의 솔루션으로써 주어져 있다고 하자. 간격이 $h$ 으로 일</description></item><item><title>파이썬에서 프로그램 일시중지하는 세가지 방법</title><link>https://freshrimpsushi.github.io/ko/posts/2145/</link><pubDate>Wed, 19 Jan 2022 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/2145/</guid><description>코드 1 input() input() 모듈을 불러올 필요가 없고 아무런 메세지를 출력하지 않아 간편하게 가장 많이 사용하는 방법이다. 입력을 기다리는 동안 프로그램은 정지되며, 입력받은 값</description></item><item><title>이토-테일러 전개 유도</title><link>https://freshrimpsushi.github.io/ko/posts/2144/</link><pubDate>Mon, 17 Jan 2022 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/2144/</guid><description>정리 1 $$ d X(t) = f \left( X_{t} \right) dt + g \left( X_{t} \right) d W_{t} \qquad , t \in [0, T] $$ 이토 프로세스가 위와 같은 자율 확률미분방정식의 솔루션으로써 주어져 있다고 하자. $f,g : \mathbb{R} \to \mathbb{R}$ 가 리니</description></item><item><title>줄리아에서 file.choose()처럼 대화창 열어서 파일 선택하는 법</title><link>https://freshrimpsushi.github.io/ko/posts/2143/</link><pubDate>Sat, 15 Jan 2022 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/2143/</guid><description>코드 1 using Gtk file_name = open_dialog(&amp;#34;파일 열기&amp;#34;) 첫번째 인수로 주어지는 문자열은 대화창의 타이틀이다. 실행하면 다음과 같이 &amp;ls</description></item><item><title>SDE 수치적 해의 강한 수렴과 약한 수렴</title><link>https://freshrimpsushi.github.io/ko/posts/2142/</link><pubDate>Thu, 13 Jan 2022 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/2142/</guid><description>빌드업 $$ d X_{t} = f \left( t, X_{t} \right) dt + g \left( t , X_{t} \right) d W_{t} \qquad , t \in \left[ t_{0} , T \right] $$ 확률미분방정식이 위와 같이 주어져 있고, 시간은 $t_{0} &amp;lt; t_{1} &amp;lt; \cdots &amp;lt; t_{N}$ 와 같이 이산화disc</description></item><item><title>짝수의 정의</title><link>https://freshrimpsushi.github.io/ko/posts/2141/</link><pubDate>Tue, 11 Jan 2022 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/2141/</guid><description>정의 쉬운 정의 $2$ 로 나눈 나머지가 $0$ 인 정수를 짝수라 한다. 어려운 정의 $$ a = 2 \cdot k $$ 정수 $a$ 에 대해 위를 만족하는 정수 $k$ 가 존재하면 $a$ 가 짝수even라 한다. 짝</description></item><item><title>CKLS 평균 복귀 감마 확률미분방정식</title><link>https://freshrimpsushi.github.io/ko/posts/2140/</link><pubDate>Sun, 09 Jan 2022 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/2140/</guid><description>모델 1 $$ d X_{t} = \left( \alpha - \beta X_{t} \right) dt + \sigma X_{t}^{\gamma} d W_{t} \qquad , X_{0} &amp;gt; 0 $$ $\alpha, \beta, \sigma, \gamma &amp;gt; 0$ 라고 하자. 위 확률미분방정식을 CKLS 평균 복귀 감마 확률미분방정식이라고 한다. 변수 $X_{t}$: 이자</description></item><item><title>몫과 나머지</title><link>https://freshrimpsushi.github.io/ko/posts/2139/</link><pubDate>Fri, 07 Jan 2022 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/2139/</guid><description>정의 1 두 정수 $A$ 와 $B \ne 0$ 에 대해 $B &amp;gt; R \ge 0$ 과 $$ A = Q \cdot B + R $$ 을 만족하는 정수 $Q$, $R$ 이 있다고 하자. 이 때 $Q$ 를 몫quotient, $R$ 을 나머지remain</description></item><item><title>칵스-잉거솔-로스 모델, CIR Model</title><link>https://freshrimpsushi.github.io/ko/posts/2138/</link><pubDate>Wed, 05 Jan 2022 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/2138/</guid><description>모델 1 $$ d X_{t} = \left( \alpha - \beta X_{t} \right) dt + \sigma \sqrt{X_{t}} d W_{t} \qquad , X_{0} &amp;gt; 0 $$ $\alpha, \beta, \sigma &amp;gt; 0$ 가 $2 \alpha &amp;gt; \sigma^{2}$ 을 만족시킨다고 하자. 위 확률미분방정식을 CIR 모델이라고 한다. $$ X_{t} = {{ \alpha } \over</description></item><item><title>최대공약수와 서로소</title><link>https://freshrimpsushi.github.io/ko/posts/2137/</link><pubDate>Mon, 03 Jan 2022 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/2137/</guid><description>정의 1 두 정수 $n$ 과 $m \ne 0$ 에 대해 다음을 만족하는 정수 $k$ 가 존재하면 $n$ 을 $m$ 이 나눈다고 한다. $$ n = mk $$ 이 때 $n$ 을 $m$ 의 배수multiple, $m$ 을 $n$ 의 약수di</description></item><item><title>온스테인-울렌벡 방정식</title><link>https://freshrimpsushi.github.io/ko/posts/2136/</link><pubDate>Sat, 01 Jan 2022 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/2136/</guid><description>정의 1 $$ d X_{t} = a X_{t} dt + \sigma d W_{t} $$ $a , \sigma \in \mathbb{R}$ 이라고 하자. 위 확률미분방정식을 온스테인-울렌벡 방정식Ornstein-Uhlenbeck equati</description></item><item><title>거리공간이 컴팩트인 것과 완비이면서 완전 유계인 것은 동치다</title><link>https://freshrimpsushi.github.io/ko/posts/2135/</link><pubDate>Thu, 30 Dec 2021 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/2135/</guid><description>정리 1 거리공간이 컴팩트인 것과 완비이면서 완전 유계인 것은 동치다. 증명 $(\Rightarrow)$ 거리공간 $X$ 가 컴팩트라 하자. 완비 거리 공간의 성질들: $(X,d)$ 가 거리 공간이고 $K \subset X$ 라 하</description></item><item><title>2021년 독자 전공 조사 결과</title><link>https://freshrimpsushi.github.io/ko/posts/2351/</link><pubDate>Tue, 28 Dec 2021 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/2351/</guid><description>독자전공조사 결과 생새우초밥집은 국내 최대의 형식과학 블로그를 지향하며, 22년에는 커뮤니티와 연계해서 작은 공모전과 같은 이벤트를 준비하고 있습니다. 20</description></item><item><title>브라운의 다리</title><link>https://freshrimpsushi.github.io/ko/posts/2134/</link><pubDate>Tue, 28 Dec 2021 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/2134/</guid><description>정의 1 2 $$ d Y_{t} = {{ b - Y_{t} } \over { 1 - t }} dt + d W_{t} \qquad, t \in [0,1), Y_{0} = a $$ $a, b \in \mathbb{R}$ 이라고 하자. 위의 $1$차원 확률미분방정식의 솔루션인 확률과정 $Y_{t}$ 를 ($a$ 에서 $b$</description></item><item><title>줄리아에서 소수점 아래 특정 자리에서 반올림하는 법</title><link>https://freshrimpsushi.github.io/ko/posts/2133/</link><pubDate>Sun, 26 Dec 2021 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/2133/</guid><description>코드 사실 줄리아는 문자열 포맷 등이 아주 편리한 언어는 아니다. 콘솔에 출력할 때 문자열 자체 기능을 사용하는 방법도 있지만 round() 함수의 기본 옵션인 digits를 사용</description></item><item><title>전형적인 확률미분방정식들의 해</title><link>https://freshrimpsushi.github.io/ko/posts/2132/</link><pubDate>Fri, 24 Dec 2021 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/2132/</guid><description>방정식 1 (G) General Form: $$ d X_{t} = f \left( t , X_{t} \right) dt + g \left( t , X_{t} \right) d W_{t} $$ (L) Linear: $\begin{cases} f \left( t , X_{t} \right) = a_{t} + b_{t} X_{t} \\ g \left( t , X_{t} \right) = c_{t} + e_{t} X_{t} \end{cases}$ $$ d X_{t} = \left( a_{t} + b_{t} X_{t} \right) dt + \left( c_{t} +</description></item><item><title>그뢴발 부등식 증명</title><link>https://freshrimpsushi.github.io/ko/posts/2131/</link><pubDate>Wed, 22 Dec 2021 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/2131/</guid><description>정리 최소값 $a \in \mathbb{R}$ 를 가지는 구간 $I \subset \mathbb{R}$ 에서 두 연속함수 $f,w : I \to \mathbb{R}$ 가 정의되어 있다고 하자. $w$ 가 $\forall t \in I$ 에서 $w(t) \ge 0$ 이고 어떤 상수 $C \in \mathbb{R}$ 에 대해 $$ f(t) \le C + \int_{a}^{t} w(s)</description></item><item><title>선형, 동차, 자율 확률미분방정식</title><link>https://freshrimpsushi.github.io/ko/posts/2130/</link><pubDate>Mon, 20 Dec 2021 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/2130/</guid><description>정의 1 확률 공간 $( \Omega , \mathcal{F} , P)$ 와 필트레이션 $\left\{ \mathcal{F}_{t} \right\}_{t \ge 0}$ 이 주어져 있다고 하자. 두 함수 $f$, $g$ 와 $\mathcal{F}_{t}$-어댑티드인 $m$차원 위너</description></item><item><title>프로베니우스 놈</title><link>https://freshrimpsushi.github.io/ko/posts/2129/</link><pubDate>Sat, 18 Dec 2021 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/2129/</guid><description>정의 1 행렬 $A = \left( a_{ij} \right) \in \mathbb{C}^{m \times n}$ 에 대해 행렬의 놈 $\left\| \cdot \right\|_{F}$ 을 다음과 같이 정의하고 프로베니우스 놈Frobenius norm이라 부른다. $$ \left\| A \right\|_{F} = \sqrt{ \sum_{ij} \left| a_{ij} \right|^{2}</description></item><item><title>확률미분방정식의 해의 존재성과 유일성, 강한 해와 약한 해</title><link>https://freshrimpsushi.github.io/ko/posts/2128/</link><pubDate>Thu, 16 Dec 2021 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/2128/</guid><description>정의 1 확률 공간 $( \Omega , \mathcal{F} , P)$ 와 필트레이션 $\left\{ \mathcal{F}_{t} \right\}_{t \ge 0}$ 이 주어져 있다고 하자. $$ \begin{align*} f &amp;amp;: [0,T] \times \mathbb{R}^{n} \to \mathbb{R}^{n} \\ g &amp;amp;: [0,T] \times \mathbb{R}^{n} \to \mathbb{R}^{n \times m} \end{align*} $$ 두 함수 $f$, $g$ 와 $\mathcal</description></item><item><title>D-데이터 허브 소개</title><link>https://freshrimpsushi.github.io/ko/posts/2127/</link><pubDate>Tue, 14 Dec 2021 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/2127/</guid><description>소개 D-데이터허브는 대구광역시를 중심으로 한 공공데이터 포털로써 4,000가지 이상의 데이터셋과 13,000개 이상의 서비스를 제공하고 있다. 지역데이</description></item><item><title>줄리아에서 히트맵 색 범위 지정하는 법</title><link>https://freshrimpsushi.github.io/ko/posts/2126/</link><pubDate>Sun, 12 Dec 2021 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/2126/</guid><description>코드 1 히트맵을 그릴 때 수치에 따라 값의 스케일이 고정되지 않으면 곤란할 때가 있다. 기본 히트맵 함수에서 clim 옵션을 통해 색의 범위를 고정할 수 있다. using Plots cd(@__DIR__) heatmap(rand(4,4)); png(&amp;#34;1.png&amp;#34;) heatmap(rand(4,4), clim</description></item><item><title>확률미분방정식이란?</title><link>https://freshrimpsushi.github.io/ko/posts/2125/</link><pubDate>Fri, 10 Dec 2021 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/2125/</guid><description>정의 1 $$ d X(t) = f \left( t, X(t) \right) dt + g \left( t, X(t) \right) d W_{t} \qquad , t \in \left[ t_{0} , T \right], T &amp;gt; 0 $$ 위와 같은 꼴의 방정식을 확률미분방정식, 줄여서 SDE(Stochastic Differential Equation)라 한다.</description></item><item><title>줄리아에서 zfill() 사용하는 법</title><link>https://freshrimpsushi.github.io/ko/posts/2124/</link><pubDate>Wed, 08 Dec 2021 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/2124/</guid><description>개요 1 파이썬에서 zfill()은 사실 문자열 클래스의 메소드로써, 좌측을 0으로 채워주는 기능을 가지고 있다. 줄리아에서는 이보다 범용적이고 쓰임새가 많은</description></item><item><title>이토 표현 정리와 마틴게일 표현 정리</title><link>https://freshrimpsushi.github.io/ko/posts/2123/</link><pubDate>Mon, 06 Dec 2021 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/2123/</guid><description>정리 1 2 확률 공간 $( \Omega , \mathcal{F} , P)$ 와 필트레이션 $\left\{ \mathcal{F}_{t} \right\}_{t \ge 0}$ 이 주어져 있다고 위너 프로세스 $\left\{ W_{t} \right\}_{t \ge 0}$ 가 $\mathcal{F}_{t}$-어댑티드라고 하자</description></item><item><title>네트워크에서 차수의 분포</title><link>https://freshrimpsushi.github.io/ko/posts/2122/</link><pubDate>Sat, 04 Dec 2021 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/2122/</guid><description>빌드업 랜덤 네트워크는 그 함수값이 네트워크인 랜덤 엘러먼트이므로, 샘플링을 할 때마다 다른 네트워크를 얻는다. 네트워크를 구축하는 방법에 따라, 즉 모델에 따라</description></item><item><title>이토 공식</title><link>https://freshrimpsushi.github.io/ko/posts/2121/</link><pubDate>Thu, 02 Dec 2021 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/2121/</guid><description>정리 1 이토 프로세스 $\left\{ X_{t} \right\}_{t \ge 0}$ 가 주어져 있다고 하자. $$ d X_{t} = u dt + v d W_{t} $$ 함수 $V \left( t, X_{t} \right) = V \in C^{2} \left( [0,\infty) \times \mathbb{R} \right)$ 에 대해 $Y_{t} := V \left( t, X_{t} \right)$ 라 두면 $\left\{ Y_{t} \right\}$ 역시 이</description></item><item><title>줄리아에서 구조체 속성 확인하는 법</title><link>https://freshrimpsushi.github.io/ko/posts/2120/</link><pubDate>Tue, 30 Nov 2021 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/2120/</guid><description>코드 propertynames() propertynames() 함수로 확인하면 된다1. 줄리아에는 클래스가 없고 구조체만 있으니2 이 함수로 리턴되는 모든 심볼들은 정확히 프로퍼티들만의 이름들이다. 다음은 Graphs 패키</description></item><item><title>이토 프로세스</title><link>https://freshrimpsushi.github.io/ko/posts/2119/</link><pubDate>Sun, 28 Nov 2021 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/2119/</guid><description>정의 1 확률 공간 $( \Omega , \mathcal{F} , P)$ 와 필트레이션 $\left\{ \mathcal{F}_{t} \right\}_{t \ge 0}$ 이 주어져 있다고 하자. 위너 프로세스 $\left\{ W_{t} \right\}_{t \ge 0}$ 가 $\mathcal{F}_{t}$-어댑티드고,</description></item><item><title>길버트 모델</title><link>https://freshrimpsushi.github.io/ko/posts/2118/</link><pubDate>Fri, 26 Nov 2021 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/2118/</guid><description>정의 1 2 쉬운 정의 심플 네트워크의 링크가 각각 독립적으로 확률 $p \in [0,1]$ 에 따라 연결되는 랜덤 네트워크를 길버트 모델gilbert model $\mathbb{G}_{n,p}$ 라 한다. 어려운 정의 확률 공</description></item><item><title>이토 부분 적분</title><link>https://freshrimpsushi.github.io/ko/posts/2117/</link><pubDate>Wed, 24 Nov 2021 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/2117/</guid><description>정리 1 $[0,t]$ 에서 바운드 된 연속함수 $f(s,\omega) = f(s)$ 가 $s$ 에만 종속되어있다고 하면 $$ \int_{0}^{t} f(s) d W_{s} = f (t) W_{t} - \int_{0}^{t} W_{s} d f (s) $$ $W_{t}$ 는 위너 프로세스다. 설명 이토 적분에 대한 정리일 뿐 흔</description></item><item><title>에르되시-레니 모델</title><link>https://freshrimpsushi.github.io/ko/posts/2116/</link><pubDate>Mon, 22 Nov 2021 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/2116/</guid><description>빌드업 $n$ 개의 라벨링 된labeled 버텍스와 $m$ 개의 에지를 가진 심플 그래프라는 프로퍼티 $\mathscr{G}_{n,m} \subset 2^{\binom{n}{2}}$ 를 생각해보자. 정확히 $m$ 개의 링크를 가진 랜덤 그래프는 $\mathbb{G}_{n, m} :</description></item><item><title>이토 곱셈 테이블</title><link>https://freshrimpsushi.github.io/ko/posts/2115/</link><pubDate>Sat, 20 Nov 2021 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/2115/</guid><description>빌드업 $s&amp;lt; t &amp;lt; t+u$ 라고 할 때, 다음의 조건들을 만족하는 확률과정 $\left\{ W_{t} \right\}$ 를 위너 프로세스라 한다. (i): $W_{0} = 0$ (ii): $\left( W_{t+u} - W_{t} \right) \perp W_{s}$ (iii): $\left( W_{t+u} - W_{t} \right) \sim N ( 0, u )$ (iv): $W_{t}$ 의 샘플</description></item><item><title>랜덤 그래프</title><link>https://freshrimpsushi.github.io/ko/posts/2114/</link><pubDate>Thu, 18 Nov 2021 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/2114/</guid><description>정의 쉬운 정의 비결정론적인 절차로 만들어지거나 어떤 확률 분포에 따라 표현되는 그래프를 랜덤 그래프random graph라 한다. 어려운 정의 확률 공간 $( \Omega ,</description></item><item><title>이토 등거리 등식</title><link>https://freshrimpsushi.github.io/ko/posts/2113/</link><pubDate>Tue, 16 Nov 2021 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/2113/</guid><description>정리 1 모든 $f \in m^{2}[a,b]$ 에 대해 다음 등식이 성립한다. $$ E \left[ \left( \int_{a}^{b} f d W_{t} \right)^{2} \right] = E \left[ \int_{a}^{b} f^{2} dt \right] $$ 설명 적분기호 밖의 제곱 $^{2}$ 이 넘나드는 것도 맞지만, 적분자 $d W_{t}$ 와 $dt$ 역시</description></item><item><title>그래프의 패밀리와 프로퍼티</title><link>https://freshrimpsushi.github.io/ko/posts/2112/</link><pubDate>Sun, 14 Nov 2021 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/2112/</guid><description>빌드업 $n$ 개의 라벨링 된labeled 버텍스의 집합 $V = [n] = \left\{ 1 ,\cdots , n \right\}$ 를 가진 심플 그래프를 생각해보자. 이 그래프의 에지는 서로 다른 두 버텍스를 고르는 경우</description></item><item><title>이토 적분</title><link>https://freshrimpsushi.github.io/ko/posts/2111/</link><pubDate>Fri, 12 Nov 2021 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/2111/</guid><description>빌드업 확률적 적분을 생각하기 이전에 아주 중요한 확률 프로세스인 초등 프로세스elementary process을 정의하려고 한다. 초등 프로세스란 측도론</description></item><item><title>접평면과 노멀 벡터</title><link>https://freshrimpsushi.github.io/ko/posts/2110/</link><pubDate>Wed, 10 Nov 2021 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/2110/</guid><description>정의 1 $2$차원 유클리드 공간의 개집합 $U \subset \mathbb{R}^{2}$ 이 두 좌표 $u_{1}$, $u_{2}$ 를 가졌다고 할 때, $\mathbf{x}_{1}$, $\mathbf{x}_{2}$를 다음과 같이 단순곡면 $\mathbf{x} : U \to \mat</description></item><item><title>m2 공간</title><link>https://freshrimpsushi.github.io/ko/posts/2109/</link><pubDate>Mon, 08 Nov 2021 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/2109/</guid><description>정의 1 2 확률 공간 $( \Omega , \mathcal{F} , P)$ 이 주어져 있다고 하자. $\mathcal{F}$ 의 서브 시그마 필드의 시퀀스 $\left\{ \mathcal{F}_{t} \right\}_{t \ge 0}$ 이 다음을 만족하면 필트레이션filtration이라 부른다</description></item><item><title>곡면 이론에서의 좌표 변환</title><link>https://freshrimpsushi.github.io/ko/posts/2108/</link><pubDate>Sat, 06 Nov 2021 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/2108/</guid><description>정의 1 $2$차원 유클리드 공간의 $U \subset \mathbb{R}^{2}$ 이 개집합이라고 하자. $k \in \mathbb{N}$ 에 대해 전단사 함수 $f : U \to \mathbb{R}^{3}$ 와 그 역함수 $f^{-1}$ 가 모두 $C^{k}$ 함수면 좌표 변환coordinat</description></item><item><title>라오-블랙웰 정리 증명</title><link>https://freshrimpsushi.github.io/ko/posts/2107/</link><pubDate>Thu, 04 Nov 2021 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/2107/</guid><description>정리 1 2 모수 $\theta$ 가 주어져 있다고 하자. $T$ 가 $\theta$ 의 충분통계량이고 $W$ 가 $\tau \left( \theta \right)$ 의 불편추정량이라고 할 때 $\phi \left( T \right) := E \left( W | T \right)$ 를 정의하면 모든 $\theta$ 에 대해 다음이</description></item><item><title>단순 곡면, 좌표조각사상</title><link>https://freshrimpsushi.github.io/ko/posts/2106/</link><pubDate>Tue, 02 Nov 2021 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/2106/</guid><description>정의1 1 두 좌표 $u_{1}$, $u_{2}$ 를 가진 $2$차원 유클리드 공간의 부분집합 $U \subset \mathbb{R}^{2}$가 개집합이라고 하자. $k \in \mathbb{N}$ 에 대해 $C^{k}$ 단사 함수 $\mathbf{x} : U \to</description></item><item><title>동역학계 간 위상적 동치</title><link>https://freshrimpsushi.github.io/ko/posts/2105/</link><pubDate>Sun, 31 Oct 2021 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/2105/</guid><description>정의 1 $$ \left\{ T , \mathbb{R}^{n} , \varphi^{t} \right\} \\ \left\{ T , \mathbb{R}^{n} , \psi^{t} \right\} $$ 두 동역학계가 위와 같이 주어져 있다고 하자. 시간의 방향을 유지하면서 첫번째 시스템의 각 오빗을 두번째 시스템의 모든</description></item><item><title>등주 부등식 증명</title><link>https://freshrimpsushi.github.io/ko/posts/2104/</link><pubDate>Fri, 29 Oct 2021 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/2104/</guid><description>정리 1 길이가 $L$ 인 평면 정칙 단순 폐곡선 $\alpha$ 가 있다고 하자. $\alpha$ 로 둘러싸인 내부의 면적을 $A$ 라 하면 $$ L^{2} \ge 4 \pi A $$ 이다. 특히, $L^{2} = 4 \pi A$ 가 되는 조건은 $\alpha$ 가 원인 것</description></item><item><title>확률미분방정식에서의 백색 잡음</title><link>https://freshrimpsushi.github.io/ko/posts/2103/</link><pubDate>Wed, 27 Oct 2021 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/2103/</guid><description>모티브 $$ \xi (t) \overset{?}{:=} \dot{W}(t) = {{d W (t)} \over {dt}} $$ 위와 같이 위너 프로세스의 도함수로써 정의된 $\xi$ 를 상상해보자. 브라운 모션을 생각해봤을 때 이 $\xi (t)$ 는 시점 $t$ 에 무작위적인 등락을</description></item><item><title>평면 단순 폐곡선으로 둘러싸인 영역의 넓이 공식 유도</title><link>https://freshrimpsushi.github.io/ko/posts/2102/</link><pubDate>Mon, 25 Oct 2021 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/2102/</guid><description>공식 1 영역 $R$ 을 둘러싼 평면 단순 폐곡선 $\alpha$ 가 반시계방향으로 돈다고 하면 $$ V (R) = \int_{\alpha} x dy = - \int_{\alpha} y dx $$ $V(R)$ 은 영역 $R$ 의 볼륨, 다시 말해 $R$ 의 면적을 의미한다. 증명 그</description></item><item><title>줄리아에서 특정 값으로 채운 배열 만드는 법</title><link>https://freshrimpsushi.github.io/ko/posts/2101/</link><pubDate>Sat, 23 Oct 2021 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/2101/</guid><description>코드 fill() 함수를 사용하면 된다. R에서의 rep() 함수와 비슷한 기능을 한다. julia&amp;gt; fill(1, 4) 4-element Vector{Int64}: 1 1 1 1 julia&amp;gt; fill(false, 2, 3) 2×3 Matrix{Bool}: 0 0 0 0 0 0 julia&amp;gt; fill(3.14, 2, 3, 2) 2×3×2 Array{Float64, 3}: [:, :, 1] = 3.14</description></item><item><title>회전수 정리 증명</title><link>https://freshrimpsushi.github.io/ko/posts/2100/</link><pubDate>Thu, 21 Oct 2021 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/2100/</guid><description>정리 1 평면 단순 폐곡선의 회전수는 $i_{\alpha} = \pm 1$ 이다. 설명 짧지만 아주 직관적이고 중요한 정리다. 증명은 다소 독특하다. 증명 $\alpha (s)$ 가 정리의 조건을 만족하면서 길이 $L$</description></item><item><title>윈도우즈에서 파이썬 텐서플로 GPU 설치하는 법</title><link>https://freshrimpsushi.github.io/ko/posts/2099/</link><pubDate>Tue, 19 Oct 2021 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/2099/</guid><description>가이드 텐서플로 GPU는 보통 프로그램처럼 그냥 설치파일 하나로 쉽게 설치하기 어렵다. 이런 저런 문제가 있다면 컴퓨터 자체를 밀고 처음부터 설치하는 게 편하고, 처</description></item><item><title>평면곡선의 회전수</title><link>https://freshrimpsushi.github.io/ko/posts/2098/</link><pubDate>Sun, 17 Oct 2021 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/2098/</guid><description>빌드업 평면 곡선의 탄젠트가 얼마나 도는지를 논하기 이전에, 알맞는 각도 함수같은 것을 먼저 생각해 보려 한다. 평면에서 수평선(x축)과 점 $p$ 에서 탄젠트 $t$ 로 만들</description></item><item><title>줄리아에서 shp 파일 읽는 법</title><link>https://freshrimpsushi.github.io/ko/posts/2097/</link><pubDate>Fri, 15 Oct 2021 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/2097/</guid><description>코드 위와 같이 XsDB_주거인구_100M_TM.shp라는 shp 파일을 읽어들이는 코드는 다음과 같다. using Shapefile cd(@__DIR__) path = &amp;#34;XsDB_주거인구_100</description></item><item><title>폐곡선의 회전수</title><link>https://freshrimpsushi.github.io/ko/posts/2096/</link><pubDate>Wed, 13 Oct 2021 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/2096/</guid><description>빌드업 평면 곡선의 탄젠트가 얼마나 도는지를 논하기 이전에, 알맞는 각도 함수같은 것을 먼저 생각해 보려 한다. 평면에서 수평선(x축)과 점 $p$ 에서 탄젠트 $t$ 로 만들</description></item><item><title>줄리아에서 소수점 아래 버리고 정수형으로 바꾸는 법</title><link>https://freshrimpsushi.github.io/ko/posts/2095/</link><pubDate>Mon, 11 Oct 2021 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/2095/</guid><description>요약 trunc 함수의 첫번째 인수로써 Int 를 넣으면 된다. 코드 julia&amp;gt; @time for t in 1:10^8 Int64(ceil(t/1000)) end 0.189653 seconds julia&amp;gt; @time for t in 1:10^8 trunc(Int64, ceil(t/1000)) end 0.128472 seconds 두 반복문은 정확히 같은 기능을 하지만 1.5배 정도의 속도차</description></item><item><title>단순 곡선의 정의</title><link>https://freshrimpsushi.github.io/ko/posts/2094/</link><pubDate>Sat, 09 Oct 2021 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/2094/</guid><description>정의 1 정칙 곡선 $\beta (t)$ 가 단순simple하다는 것은 $\beta$ 가 단사 함수거나 어떤 정수 $n \in \mathbb{Z}$ 에 대해 다음을 만족하는 주기 $a &amp;gt; 0$ 의 폐곡선인 것이다. $$ \beta \left( t_{1} \right) = \beta \left(</description></item><item><title>줄리아에서 데이터프레임의 열 이름 바꾸는 법</title><link>https://freshrimpsushi.github.io/ko/posts/2093/</link><pubDate>Thu, 07 Oct 2021 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/2093/</guid><description>개요 rename!() 함수로 바꾸면 된다1. 문자열의 리스트를 줘서 한번에 바꾸는 방법도 있고, 개별적으로 바꾸는 방법도 있다. 코드 using DataFrames df = DataFrame(rand(1:9, 10, 3), :auto) rename!(df, [&amp;#34;X&amp;#34;, &amp;#34;Y&amp;#34;, &amp;#34;Z&amp;#34;]) rename!(df, :X =&amp;gt; :A) 실행 시</description></item><item><title>폐곡선의 정의</title><link>https://freshrimpsushi.github.io/ko/posts/2092/</link><pubDate>Tue, 05 Oct 2021 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/2092/</guid><description>정의 1 정칙 곡선 $\beta (t)$ 가 폐곡선closed curve이라는 것은 $\beta$ 주기 함수인 것과 동치다. 공식: 폐곡선의 길이 $\alpha (s)$ 가 주기 $a&amp;gt;0$ 인 폐곡선 $\beta (t)$ 에 대한 현의 길이 재</description></item><item><title>역삼각함수</title><link>https://freshrimpsushi.github.io/ko/posts/2091/</link><pubDate>Sun, 03 Oct 2021 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/2091/</guid><description>정의1 삼각함수의 역함수를 역삼각함수라 하고, 삼각함수의 이름에 arc-를 붙여 표기한다. $$ \begin{align*} \arcsin x &amp;amp;= \sin^{-1} x \qquad &amp;amp; \operatorname{arccsc} x &amp;amp;= \csc^{-1} x \\ \arccos x &amp;amp;= \cos^{-1} x \qquad &amp;amp; \operatorname{arcsec} x &amp;amp;= \sec^{-1} x \\ \arctan</description></item><item><title>평면곡선의 탄젠트, 노멀, 곡률</title><link>https://freshrimpsushi.github.io/ko/posts/2090/</link><pubDate>Fri, 01 Oct 2021 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/2090/</guid><description>정의 1 단위 스피드 평면 곡선 $\alpha : (a,b) \to \mathbb{R}^{2}$ 가 주어져 있다고 하자. 탄젠트 (벡터필드)를 $t (s) := \alpha^{\prime} (s)$ 와 같이 정의한다. $\left\{ t(s), n(s) \right\}$ 가 $\mathbb{R}^{2}$ 의 시계반대방향 기저가 되게끔 하</description></item><item><title>QGIS로 shp 파일 열어보는 방법</title><link>https://freshrimpsushi.github.io/ko/posts/2089/</link><pubDate>Wed, 29 Sep 2021 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/2089/</guid><description>개요 shp 확장자는 Shapefile을 나타낸다. 많은 지리정보 데이터들이 *.shp 파일과 동봉된 *.dbf, *.sbn, *.sbx, *.shx 등의 포맷으로 관리된다. 데이터를 받았을 때 가장 황당한 것은</description></item><item><title>줄리아에서 NearstNeighbors.jl로 빠르게 거리 계산하는 법</title><link>https://freshrimpsushi.github.io/ko/posts/2088/</link><pubDate>Mon, 27 Sep 2021 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/2088/</guid><description>개요 $n$ 개의 좌표끼리 거리를 계산하는데, 행렬을 만들 필요까지는 없고 단순히 거리만 계산하면 되는 경우 다차원 탐색에 유리한 자료구조인 k-d 트리1를 사용해 속도를 높</description></item><item><title>곡선의 기본정리 증명</title><link>https://freshrimpsushi.github.io/ko/posts/2087/</link><pubDate>Sat, 25 Sep 2021 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/2087/</guid><description>정리 1 $a,b$ 가 $0$ 을 포함하는 구간이라고 하자. 그리고 다음이 성립한다고 하자. (i): $\overline{\kappa}(s) &amp;gt; 0$ 이 $(a,b)$ 에서 $C^{1}$ (ii): $\overline{\tau}(s)$ 가 $(a,b)$ 에서 연속 (iii): $\mathbf{x}_{0}$ 가 $\mathbb{R}^{3}$ 의 고정된 한 점 (iV): $\left\{ D,E,F \right\}$ 가 $\mathbb{R}^{3}$ 의 오른손</description></item><item><title>리눅스에서 스왑 메모리 초기화하는 법</title><link>https://freshrimpsushi.github.io/ko/posts/2086/</link><pubDate>Thu, 23 Sep 2021 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/2086/</guid><description>가이드 sudo swapoff -a sudo swapon -a 메모리가 부족한 문제를 스왑 메모리로 당장은 넘어갈 수 있지만, 관련된 작업이 끝났을 때 스왑 메모리를 비워주지 않으면 매우 버벅이는 현상이 있다</description></item><item><title>재매개변수화와 프레네-세레의 도구</title><link>https://freshrimpsushi.github.io/ko/posts/2085/</link><pubDate>Tue, 21 Sep 2021 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/2085/</guid><description>정의 $\beta : [a,b] \to \mathbb{R}^{3}$ 를 정칙 곡선이라고 하자. 현의 길이 재매개변수화 $t = t(s)$ 는 $s(t) = \int_{a}^{t} \left| \beta^{\prime}(t) \right| dt$ 을 만족하고, 단위 스피드 커브 $\alpha (s) := \beta \left( t (s) \right)$ 의 프레네-세레 도구 $$</description></item><item><title>네이만 인수분해 정리 증명</title><link>https://freshrimpsushi.github.io/ko/posts/2084/</link><pubDate>Sun, 19 Sep 2021 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/2084/</guid><description>정리 랜덤 샘플 $X_{1} , \cdots , X_{n}$ 이 모수 $\theta \in \Theta$ 에 대해 같은 확률질량/밀도함수 $f \left( x ; \theta \right)$ 를 가진다고 하자. 통계량 $Y = u_{1} \left( X_{1} , \cdots , X_{n} \right)$ 이 $\theta$ 의 충분통계량인 것은 다</description></item><item><title>구면에 놓이는 곡선에 대한 공식</title><link>https://freshrimpsushi.github.io/ko/posts/2083/</link><pubDate>Fri, 17 Sep 2021 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/2083/</guid><description>공식 1 단위 스피드 커브 $\alpha : I \to \mathbb{R}^{3}$ 이 중심 $m$ 에 반지름 $r$ 인 구면 위에 놓인다고 하자. 즉 $$ \alpha (I) \subset S_{r,m} = \left\{ x \in \mathbb{R}^{3} : \left&amp;lt; x - m , x - m \right&amp;gt; = r^{2} \right\} $$ 이라고 하면 $\kappa \ne 0$ 이</description></item><item><title>복소함수의 적분</title><link>https://freshrimpsushi.github.io/ko/posts/2082/</link><pubDate>Wed, 15 Sep 2021 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/2082/</guid><description>정의 1 $$ g(t) := p(t) + i q(t) \qquad , t \in [a,b] $$ 실함수 $p, q : [a,b] \to \mathbb{R}$ 에 대해 복소함수 $g : [a,b] \to \mathbb{C}$ 가 위와 같이 나타난다고 하자. 구간 $[a,b]$ 에서 $g$ 의 정적분은 다음과 같이 정의된다</description></item><item><title>접평면과 법평면</title><link>https://freshrimpsushi.github.io/ko/posts/2081/</link><pubDate>Mon, 13 Sep 2021 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/2081/</guid><description>정의 1 곡선 $\alpha$ 가 주어져 있다고 하자. $B$ 에 수직인 평면 $\text{span} \left\{ T, N \right\}$ 을 접평면osculating plane이라 한다. $T$ 에 수직인 평면 $\text{span} \left\{ N, B \right\}$ 을 법평면no</description></item><item><title>복소해석에서의 영점</title><link>https://freshrimpsushi.github.io/ko/posts/2080/</link><pubDate>Sat, 11 Sep 2021 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/2080/</guid><description>정의 1 $\alpha \in \mathbb{C}$ 가 함수 $f : \mathbb{C} \to \mathbb{C}$ 의 $n$차 영점zero of Order $n$이라는 것은 $\displaystyle \lim_{z \to \alpha} g(z) \ne 0$ 인 어떤 함수 $g$ 에 대해 $f$ 가 다음과 같이 나타날 수 있다는 것과 동치다</description></item><item><title>랑크레 정리 증명</title><link>https://freshrimpsushi.github.io/ko/posts/2079/</link><pubDate>Thu, 09 Sep 2021 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/2079/</guid><description>정리 1 $\kappa \ne 0$ 인 단위 스피드 커브 $\alpha$ 가 나선인 것은 어떤 상수 $c \in \mathbb{R}$ 에 대해 $\tau = c \kappa$ 인 것과 동치다. $\tau, \kappa$ 는 토션, 곡률이다. 증명 나선의 정의: 정칙 곡선 $\alpha$ 가 어떤 픽</description></item><item><title>조화 함수</title><link>https://freshrimpsushi.github.io/ko/posts/2078/</link><pubDate>Tue, 07 Sep 2021 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/2078/</guid><description>정의 1 함수 $\phi (x,y)$ 가 영역 $\mathscr{R}$ 에서 연속이계도함수를 가지며 라플라스 방정식의 솔루션이면 하모닉harmonic하다고 말한다. 다시 말해, 하모닉 함수는 다음을 만</description></item><item><title>일반적인 나선의 정의</title><link>https://freshrimpsushi.github.io/ko/posts/2077/</link><pubDate>Sun, 05 Sep 2021 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/2077/</guid><description>정의 1 정칙 곡선 $\alpha$ 가 어떤 픽스된 단위 벡터 $\mathbf{u}$ 에 대해 $\left&amp;lt; T, \mathbf{u} \right&amp;gt;$ 가 상수면 나선helix이라 하고, $\mathbf{u}$ 를 축axis라 부른다. $T$ 는 탄젠트다. $\left&amp;lt; \cdot , \cdot \right&amp;gt;$ 는 내적이</description></item><item><title>복소함수의 극한</title><link>https://freshrimpsushi.github.io/ko/posts/2076/</link><pubDate>Fri, 03 Sep 2021 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/2076/</guid><description>정의 1 함수 $f : \mathbb{C} \to \mathbb{C}$ 가 오픈셋 $A \subset \mathbb{C}$ 에서 정의된 복소함수 $f : A \to \mathbb{C}$ 이고 $\alpha \in \overline{A}$ 라 하자. $f(z)$ 가 $z \to \alpha$ 일 때 극한limit $l$ 로 수렴한다는 것은 모든 $\varepsilon &amp;gt; 0$ 에 대</description></item><item><title>3차원 유클리드 공간에서 곡선이 평면 속에 놓이는 동치조건</title><link>https://freshrimpsushi.github.io/ko/posts/2075/</link><pubDate>Wed, 01 Sep 2021 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/2075/</guid><description>정리 1 $\kappa \ne 0$ 인 단위 스피드 커브 $\alpha : I \to \mathbb{R}^{3}$ 에 대해 다음 세가지는 동치다. (a): $\alpha$ 는 평면에 놓이는 커브다. (b): $B$ 는 상수다. (c): $\tau = 0$ 이다. 설명 이는 프레네-세레 공</description></item><item><title>동역학에서의 오빗과 페이즈 포트레이트</title><link>https://freshrimpsushi.github.io/ko/posts/2074/</link><pubDate>Mon, 30 Aug 2021 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/2074/</guid><description>정의 1 $$ O \left( x_{0} \right) := \left\{ x \in X : x = \varphi^{t} x_{0} , \forall t \in T \right\} $$ 동역학계 $\left( T, X, \varphi^{t} \right)$ 에서 $x_{0} \in X$ 의 오빗orbit을 위와 같이 나타낸다고 하자. 오빗들로 이루어진 $X$ 의</description></item><item><title>줄리아에서 2차원 배열 csv 파일로 출력하는 법</title><link>https://freshrimpsushi.github.io/ko/posts/2073/</link><pubDate>Sat, 28 Aug 2021 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/2073/</guid><description>코드 using CSV, DataFrames A = rand(1:10, 10) B = zeros(10) AB = DataFrame(hcat(A,B), [&amp;#34;A&amp;#34;, &amp;#34;B&amp;#34;]) CSV.write(&amp;#34;AB.csv&amp;#34;, AB) CSV 패키지의 write 함수를 통해 간단하게 2차원 배열을 출력할 수 있다. A, B는 1차원 배열로, hcat 함수로 묶어 데이터프레임으</description></item><item><title>프레네-세레 공식</title><link>https://freshrimpsushi.github.io/ko/posts/2072/</link><pubDate>Thu, 26 Aug 2021 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/2072/</guid><description>공식 1 $\alpha$ 가 $\kappa (s) \ne 0$ 인 단위 스피드 커브라고 하면 $$ \begin{align*} T^{\prime}(s) =&amp;amp; \kappa (s) N(s) \\ N^{\prime}(s) =&amp;amp; - \kappa (s) T(s) + \tau (s) B(s) \\ B^{\prime}(s) =&amp;amp; - \tau (s) N(s) \end{align*} $$ 설명 행렬 폼으로 나타내면 다음과 같다. $$ \begin{bmatrix} T \\ N</description></item><item><title>동역학계의 엄밀한 정의</title><link>https://freshrimpsushi.github.io/ko/posts/2071/</link><pubDate>Tue, 24 Aug 2021 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/2071/</guid><description>정의 1 (상태) 공간 $X$ 와 시점 $t \in T$ 에 대해 오퍼레이터 $\varphi^{t}$ 를 플로우flow라 한다. 플로우의 집합 $F := \left\{ \varphi^{t} \right\}_{t \in T}$ 이 함수합성 연산 $\circ$ 에 대해 $\left( F , \circ \right)$ 가 다음을</description></item><item><title>프레네-세레의 도구: 곡률, 접선, 법선, 종법선, 비틀림</title><link>https://freshrimpsushi.github.io/ko/posts/2070/</link><pubDate>Sun, 22 Aug 2021 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/2070/</guid><description>정의 1 $\alpha$ 가 단위 스피드 커브라고 하자. 탄젠트 $T(s) = \alpha^{\prime} (s)$ 의 스피드speed, 속력 $\kappa (s) := \left| T^{\prime}(s) \right|$ 를 $\alpha (s)$ 의 곡률curvature이라 한다. $\alpha$ 의 탄젠트의 속도</description></item><item><title>현의 정의</title><link>https://freshrimpsushi.github.io/ko/posts/2068/</link><pubDate>Wed, 18 Aug 2021 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/2068/</guid><description>정의 1 곡선 $\alpha : (c,d) \to \mathbb{R}^{3}$ 가 주어져 있다고 하자. $c &amp;lt; a &amp;lt; b &amp;lt; d$ 일 때, 모든 $t \in [a,b]$ 에 대해 $\alpha (t) = \gamma (t)$ 를 만족하는 $\gamma : [a,b] \to \mathbb{R}^{3}$ 를 현chord 혹은 곡선분curve</description></item><item><title>접선과 탄젠트 벡터필드</title><link>https://freshrimpsushi.github.io/ko/posts/2066/</link><pubDate>Sat, 14 Aug 2021 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/2066/</guid><description>정의 정칙 곡선 $\alpha (t)$ 이 주어져 있다고 하자. 벡터필드 $\displaystyle T(t) := {{ d \alpha / d t } \over { \left| d \alpha / d t \right| }}$ 를 탄젠트 벡터필드tangent vector field라 한다. 다음과</description></item><item><title>줄리아 변수 이름에 그리스 문자, 첨자 쓰는 법</title><link>https://freshrimpsushi.github.io/ko/posts/2065/</link><pubDate>Thu, 12 Aug 2021 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/2065/</guid><description>개요 줄리아에서는 변수 이름으로 유니코드(UTF-8)을 허용한다. 따라서 그리스 문자는 물론 윗첨자, 아랫첨자, 심지어는 한글이나 이모지까지 쓸 수 있다. 굳</description></item><item><title>재매개변수화</title><link>https://freshrimpsushi.github.io/ko/posts/2064/</link><pubDate>Tue, 10 Aug 2021 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/2064/</guid><description>정의 1 $k \in \mathbb{N}$ 이고 곡선 $\alpha : (a,b) \to \mathbb{R}^{3}$ 가 주어져 있다고 하자. 전단사 $g: (c,d) \to (a,b)$ 가 $g , g^{-1} \in C^{k}$ 를 만족하면 $g$ 를 $\alpha$ 의 재매개변수화reparametrization</description></item><item><title>로그 함수의 정의</title><link>https://freshrimpsushi.github.io/ko/posts/2063/</link><pubDate>Sun, 08 Aug 2021 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/2063/</guid><description>정의 지수 함수의 역함수 를 로그 함수 $\log : (0,\infty) \to \mathbb{R}$ 라 정의한다. 만약 모든 $x \in (0,\infty)$ 에 대해 $x = e^y$ 면 로그 함수는 다음과 같이 나타난다. $$ \log x := y $$ 설명 로그는 간단한 정</description></item><item><title>곡선의 정의</title><link>https://freshrimpsushi.github.io/ko/posts/2062/</link><pubDate>Fri, 06 Aug 2021 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/2062/</guid><description>정의 1 사상 $\alpha : (a,b) \to \mathbb{R}^{3}$ 을 곡선curve이라고 한다. 곡선에서 $\alpha^{\prime} = \dfrac{d \alpha}{d t} = \mathbf{0}$ 인 점 $t = t_{0}$ 을 특이점singular point라 한다. 어떤 $k \in \mathbb{N}$ 에 대해 모</description></item><item><title>충분통계량</title><link>https://freshrimpsushi.github.io/ko/posts/2061/</link><pubDate>Wed, 04 Aug 2021 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/2061/</guid><description>정의 수식적인 정의 1 모수 $\theta \in \Theta$ 에 대해 랜덤 샘플 $X_{1} , \cdots , X_{n}$ 의 확률질량/밀도함수를 $f(x;\theta)$, 통계량 $Y_{1} := u_{1} \left( X_{1} , \cdots , X_{n} \right)$ 의 확률질량/밀도함수를 $f_{Y_{1}} \left( y_{1}; \theta \right)$ 이라 하</description></item><item><title>지수 함수</title><link>https://freshrimpsushi.github.io/ko/posts/2060/</link><pubDate>Mon, 02 Aug 2021 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/2060/</guid><description>개요 지수 함수exponential function는 거듭 제곱의 일반화로써, 수학 전반에서 분과를 가리지 않고 등장한다. 원래 거듭제곱에서 밑 $a &amp;gt; 0$ 은 반</description></item><item><title>효율적추정량</title><link>https://freshrimpsushi.github.io/ko/posts/2059/</link><pubDate>Sat, 31 Jul 2021 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/2059/</guid><description>정의 1 $Y$ 가 모수 $\theta$ 에 대한 불편추정량이라고 하자. 라오-크래머 하한 $\text{RC}$ 에 대해 다음을 추정량 $Y$ 의 효율성efficiency이라고 한다. $$ {{ \text{RC} } \over { \Var (Y) }}</description></item><item><title>다항 함수</title><link>https://freshrimpsushi.github.io/ko/posts/2058/</link><pubDate>Thu, 29 Jul 2021 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/2058/</guid><description>정의 1 $n \in \mathbb{N}_{0}$ 과 $\left\{ a_{k} \right\}_{k=0}^{n} \subset \mathbb{C}$ 에 대해 다음과 같이 정의된 $P: \mathbb{C} \to \mathbb{C}$ 를 $n$차 다항 함수polynomial of degree $n$라 한다. $$ P(z) := a_{0} + a_{1} z + \cdots a_{n} z^{n} \qquad , a_{n} \ne</description></item><item><title>라오-크래머 하한</title><link>https://freshrimpsushi.github.io/ko/posts/2057/</link><pubDate>Tue, 27 Jul 2021 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/2057/</guid><description>정리 1 정칙조건: (R0): 확률밀도함수 $f$ 는 $\theta$ 에 대해 단사다. 수식으로는 다음을 만족시킨다. $$ \theta \ne \theta ' \implies f \left( x_{k} ; \theta \right) \ne f \left( x_{k} ; \theta ' \right) $$ (R1): 확률밀도함수 $f$ 는 모</description></item><item><title>삼각함수의 정의</title><link>https://freshrimpsushi.github.io/ko/posts/2056/</link><pubDate>Sun, 25 Jul 2021 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/2056/</guid><description>개요 삼각함수는 직각삼각형의 밑각에 삼각비를 대응시킨 함수다. 정의 삼각함수 사인, 코사인 $\sin, \cos : \mathbb{R} \to \mathbb{R}$ 는 다음과 같이 정의된다. $$ \sin \theta := {{ y } \over { \sqrt{x^{2} + y^{2}} }}</description></item><item><title>바틀렛 항등식</title><link>https://freshrimpsushi.github.io/ko/posts/2055/</link><pubDate>Fri, 23 Jul 2021 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/2055/</guid><description>정리 정칙조건: (R0): 확률밀도함수 $f$ 는 $\theta$ 에 대해 단사다. 수식으로는 다음을 만족시킨다. $$ \theta \ne \theta ' \implies f \left( x_{k} ; \theta \right) \ne f \left( x_{k} ; \theta ' \right) $$ (R1): 확률밀도함수 $f$ 는 모든</description></item><item><title>수학에서의 질량 작용 법칙</title><link>https://freshrimpsushi.github.io/ko/posts/2054/</link><pubDate>Wed, 21 Jul 2021 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/2054/</guid><description>법칙 1 화학반응의 정도는 반응에 관여하는 각종 분자수에 같은 힘을 야기하는 물질의 농도에 비례한다. 설명 2 수리적 모델링에서 질량 작용 법칙law of Mass Actio</description></item><item><title>생존 함수</title><link>https://freshrimpsushi.github.io/ko/posts/2053/</link><pubDate>Mon, 19 Jul 2021 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/2053/</guid><description>정의 1 $S(0)=1$ 이면서 증가하지 않는 함수 $S : [0,\infty) \to [0,1]$ 를 생존 함수survival function라 정의한다. 설명 생존 함수란 쉽게 말해 시간 $t$ 에 생존해있을 확률 $S(t)</description></item><item><title>에이즈 전염 모델</title><link>https://freshrimpsushi.github.io/ko/posts/2052/</link><pubDate>Sat, 17 Jul 2021 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/2052/</guid><description>개요 에이즈AIDS, 후천면역결핍증후군은 바이러스인 HIV에 의해 발병하며 수십년간 인류를 괴롭혀오고 있는 전염병이다. 에이즈의 전파 경로는 동성애, 이성</description></item><item><title>복소수의 극좌표 표기법</title><link>https://freshrimpsushi.github.io/ko/posts/2051/</link><pubDate>Thu, 15 Jul 2021 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/2051/</guid><description>정의 1 복소수 $z \ne 0$ 는 복소평면 상의 점 $P(x,y)$ 에 대응되며, 선분 $\overline{OP}$ 의 길이 $r := |z|$ 와 $x$ 축과 $\overline{OP}$ 가 만드는 시계반대방향의 각 $\theta$ 을 통해 다음과 같이 극좌표 표기polar r</description></item><item><title>주기 함수</title><link>https://freshrimpsushi.github.io/ko/posts/2050/</link><pubDate>Tue, 13 Jul 2021 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/2050/</guid><description>정의 함수 $f : \mathbb{R} \to \mathbb{R}$ 이 어떤 상수 $T \ne 0$ 와 모든 $t \in \mathbb{R}$ 에 대해 다음을 만족하면 $T$-주기 함수$T$-periodic function라 한다. $$ f(t + T) =</description></item><item><title>깁스 부등식</title><link>https://freshrimpsushi.github.io/ko/posts/2049/</link><pubDate>Sun, 11 Jul 2021 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/2049/</guid><description>개요 깁스 부등식gibbs Inequality은 샤넌 엔트로피와 크로스 엔트로피 사이의 관계를 말해주며, 쿨백-라이블러 발산의 하한을 보장해주는 부등식이</description></item><item><title>함수로써의 대각행렬, 대각성분</title><link>https://freshrimpsushi.github.io/ko/posts/2048/</link><pubDate>Fri, 09 Jul 2021 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/2048/</guid><description>정의 대각성분 행렬에 대한 $\text{diag} : \mathbb{R}^{n \times n} \to \mathbb{R}^{n}$ 는 다음과 같이 행렬의 대각 성분으로 이루어진 벡터를 의미한다. $$ \text{diag} A = \begin{bmatrix} A_{11} \\ A_{22} \\ \vdots \\ A_{nn} \end{bmatrix} $$ 대각행렬 벡터에 대한 $\text{diag} :</description></item><item><title>상대적 엔트로피, 쿨백-라이블러 발산</title><link>https://freshrimpsushi.github.io/ko/posts/2047/</link><pubDate>Wed, 07 Jul 2021 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/2047/</guid><description>빌드업 두 확률분포 $P$ 와 $Q$ 가 있을 때, 이 둘이 얼마나 다른지 궁금할 상황은 얼마든지 쉽게 상상해볼 수 있다. 가령 카메라에 찍힌 숫자가 정확히 어떤 숫자인지에 대해 맞추</description></item><item><title>복소수의 정의</title><link>https://freshrimpsushi.github.io/ko/posts/2046/</link><pubDate>Mon, 05 Jul 2021 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/2046/</guid><description>정의 1 이차방정식 $x^{2} +1 = 0$ 의 해 $x = \sqrt{-1}$ 을 허수imaginary number라 한다. 두 실수 $x,y \in \mathbb{R}$ 에 대해 $z = x + iy$ 꼴의 수를 복소수complex num</description></item><item><title>크로스 엔트로피</title><link>https://freshrimpsushi.github.io/ko/posts/2045/</link><pubDate>Sat, 03 Jul 2021 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/2045/</guid><description>개요 크로스 엔트로피cross Entropy는 두 확률분포를 구분하기 위해 필요한 평균 비트수로써, 보통 참으로 가정되는 (레퍼런스) 확률분포 $p$ 와 이를 추정</description></item><item><title>푸앙카레 맵</title><link>https://freshrimpsushi.github.io/ko/posts/2044/</link><pubDate>Thu, 01 Jul 2021 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/2044/</guid><description>정의 1 유클리드 공간 $\mathbb{R}^{n}$ 와 오픈 셋 $U \subset \mathbb{R}^{n}$ 에서 연속인 함수 $f : U \to \mathbb{R}^{n}$ 에 대해 다음과 같은 벡터필드가 미분 방정식으로 주어져 있다고 하자. $$ \dot{x} = f(x) $$ 그 플로우를 $\phi_t \left(</description></item><item><title>조건부 엔트로피</title><link>https://freshrimpsushi.github.io/ko/posts/2043/</link><pubDate>Tue, 29 Jun 2021 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/2043/</guid><description>정의 1 확률변수 $X_{1}, \cdots , X_{n}$ 의 결합확률질량함수 $p$ 혹은 결합확률밀도함수 $f$ 가 주어져 있다고 하자. $H \left( X_{1}, \cdots , X_{n} | X_{k} \right)$ 을 $X_{k}$ 가 주어져 있을 때 $X_{1}, \cdots , X_{n}$ 의 조건부 엔트</description></item><item><title>일반적인 직선, 평면, 구의 정의</title><link>https://freshrimpsushi.github.io/ko/posts/2042/</link><pubDate>Sun, 27 Jun 2021 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/2042/</guid><description>정의 1 벡터공간 $X$ 가 주어져 있다고 하자. 다음의 방정식을 만족시키는 점들의 집합 $L \subset X$ 혹은 $\alpha (t)$ 그 자체를 점 $\mathbf{x}_{0} \in X$ 를 지나고 벡터 $\mathbf{v} \ne 0$ 와 평행한 직선line이</description></item><item><title>줄리아에서 변수의 값을 편리하게 출력하는 법, 보간법</title><link>https://freshrimpsushi.github.io/ko/posts/2041/</link><pubDate>Fri, 25 Jun 2021 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/2041/</guid><description>개요 줄리아의 편의 기능인 보간법interpolation에 대해 설명한다. 인터폴레이션을 잘 이용하면 출력문을 쉽고 깔끔하게 쓸 수 있어 아주 편리하다. 수치</description></item><item><title>벡터공간에서 정의되는 기저의 방향</title><link>https://freshrimpsushi.github.io/ko/posts/2040/</link><pubDate>Wed, 23 Jun 2021 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/2040/</guid><description>정의 1 $$ U = \left\{ \mathbf{u}_{1}, \cdots, \mathbf{u}_{n} \right\} \\ V = \left\{ \mathbf{v}_{1}, \cdots, \mathbf{v}_{n} \right\} $$ 위의 두 순서 있는 집합 $U,V$ 가 벡터공간 $X$ 의 기저라고 하고 행렬 $\left( a_{ij} \right) \in \mathbb{C}^{n \times n}$ 을 다음 식이 만족되도록 정의하자. $$ \mathbf{v}_{j} =</description></item><item><title>천장 함수와 바닥 함수</title><link>https://freshrimpsushi.github.io/ko/posts/2039/</link><pubDate>Mon, 21 Jun 2021 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/2039/</guid><description>정의 1 천장 함수ceil $\lceil \cdot \rceil : \mathbb{R} \to \mathbb{Z}$ 와 바닥 함수floor $\lfloor \cdot \rfloor : \mathbb{R} \to \mathbb{Z}$ 는 다음과 같이 정의된다. $$ \lceil x \rceil := \min \left\{ n \in \mathbb{Z} : x \le n \right\} \\ \lfloor x \rfloor := \max \left\{ n \in</description></item><item><title>일반적인 각도와 수직의 정의</title><link>https://freshrimpsushi.github.io/ko/posts/2038/</link><pubDate>Sat, 19 Jun 2021 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/2038/</guid><description>정의 1 $V$ 가 벡터공간이라고 하자. 두 벡터 $\mathbf{u}, \mathbf{v} \in V$ 에 대해 다음을 만족하는 $\theta$ 를 두 벡터 사이의 각도angle라 정의한다. $$ \cos \theta = {{ \left&amp;lt; \mathbf{u}, \mathbf{v} \right&amp;gt; } \over { \left| \mathbf{u} \right| \left| \mathbf{v}</description></item><item><title>조인트 엔트로피</title><link>https://freshrimpsushi.github.io/ko/posts/2037/</link><pubDate>Thu, 17 Jun 2021 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/2037/</guid><description>정의 확률변수 $X_{1}, \cdots , X_{n}$ 의 결합확률질량함수 $p$ 혹은 결합확률밀도함수 $f$ 가 주어져 있다고 하자. 이산 $$ H \left( X_{1}, \cdots , X_{n} \right) := - \sum_{x_{1}} \cdots \sum_{x_{n}} p \left( x_{1} , \cdots , x_{n} \right) \log_{2} p \left( x_{1} , \cdots</description></item><item><title>윈도 cmd, powershell에서 줄리아 사용하는 법</title><link>https://freshrimpsushi.github.io/ko/posts/2036/</link><pubDate>Tue, 15 Jun 2021 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/2036/</guid><description>가이드 Step 0. julia 1.6 이상 버전 설치 1.6 버전 이상부터는 인스톨 과정에서 환경변수에 넣을 수 있다. 표시된 옵션을 체크하고 설치하면 된다. 구버전을 사용하고 있다면 1.6 이상</description></item><item><title>샤넌 엔트로피: 확률변수로 정의되는 엔트로피</title><link>https://freshrimpsushi.github.io/ko/posts/2035/</link><pubDate>Sun, 13 Jun 2021 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/2035/</guid><description>개요 샤넌 엔트로피shannon Entropy 혹은 정보 엔트로피는 확률변수로 정의되는 무질서에 대한 척도로써, 확률분포 상 얼마나 불확실한지에 대한 계량화로 볼 수 있다.</description></item><item><title>피셔 정보</title><link>https://freshrimpsushi.github.io/ko/posts/2034/</link><pubDate>Fri, 11 Jun 2021 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/2034/</guid><description>빌드업 스코어 함수 모수 $\theta \in \Theta$ 에 대해 확률밀도함수가 $f \left( x ; \theta \right)$ 인 확률변수 $X$ 를 생각해보자. 로그우도함수가 가장 커지는 추정량인 최대우도추정량은 다음과 같</description></item><item><title>샤넌 정보: 확률론으로 정의되는 정보</title><link>https://freshrimpsushi.github.io/ko/posts/2033/</link><pubDate>Wed, 09 Jun 2021 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/2033/</guid><description>빌드업 카드 맞추기 게임 앨리스와 밥이 조커 없는 트럼프 카드 덱 52장 중 하나를 뒷면으로 뽑고 어떤 카드인지 맞추는 내기를 한다고 상상해보자. 앨리스: 뽑은 카드는 조</description></item><item><title>종간 전염 모델: 3개 집단 간의 질병 전파</title><link>https://freshrimpsushi.github.io/ko/posts/2032/</link><pubDate>Mon, 07 Jun 2021 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/2032/</guid><description>개요 종간 장벽species Barrier이란 감염원이 종래의 숙주에서 다른 종에 전염되기 어려운 현상을 말한다. 이러한 종간 장벽을 뛰어넘어 병이 전염되는 것</description></item><item><title>최적해: 최대인수와 최소인수</title><link>https://freshrimpsushi.github.io/ko/posts/2031/</link><pubDate>Sat, 05 Jun 2021 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/2031/</guid><description>어려운 정의 임의의 집합 $X$ 과 전순서집합 $\left( Y, \le \right)$ 가 주어져 있다고 하자. $X$ 의 부분집합 $S \subset X$ 에 대해 함수 $f : X \to Y$ 의 최대인수argument of Maxima $\argmax_{S} : Y^{X} \to 2^{X}$</description></item><item><title>성병 모델: 2개 집단 간의 질병 전파</title><link>https://freshrimpsushi.github.io/ko/posts/2030/</link><pubDate>Thu, 03 Jun 2021 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/2030/</guid><description>개요 쿡cooke과 요크yorke에 의해 제안된 성병 전파의 수학적 모델에 대해 알아본다. 레퍼런스에서는 성병의 구체적인 예로써 임질gonorrhea을 고</description></item><item><title>수리통계학에서의 정칙성 조건</title><link>https://freshrimpsushi.github.io/ko/posts/2029/</link><pubDate>Tue, 01 Jun 2021 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/2029/</guid><description>개요 수학을 사용하는 과목에서 대개 정칙성regularity conditions이란 대개 응용될 구석이 많으면서 이론적인 전개가 편해지는 조건들을 말하며</description></item><item><title>SIS 모델: 재감염과 고질병</title><link>https://freshrimpsushi.github.io/ko/posts/2028/</link><pubDate>Sun, 30 May 2021 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/2028/</guid><description>개요 SIS 모델은 전염이나 정보의 확산에서 면역, 무관심 등을 고려하지 않는 모델이다. 주로 유행병epidemic이 아닌 풍토병endemic, 예를 들어 감기,</description></item><item><title>최적값: 최대값과 최소값</title><link>https://freshrimpsushi.github.io/ko/posts/2027/</link><pubDate>Fri, 28 May 2021 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/2027/</guid><description>쉬운 정의 최대값maximum과 최소값minimum을 통틀어 최적값optimum이라 한다. 집합 $X$ 에서 가장 큰 원소를 최대값 $\max X$, 가장 작은 원소를 최소값</description></item><item><title>최대우도추정량</title><link>https://freshrimpsushi.github.io/ko/posts/2026/</link><pubDate>Wed, 26 May 2021 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/2026/</guid><description>빌드업 모수 $\theta \in \Theta$ 에 대해 확률밀도함수가 $f \left( x ; \theta \right)$ 인 확률변수 $X$ 를 생각해보자. $X$ 와 같은 분포로 iid하게 뽑은 랜덤샘플 $X_{1} , \cdots , X_{n}$ 는 같은 확률밀도함수 $f(x</description></item><item><title>SIR 모델: 가장 기본적인 확산 모델</title><link>https://freshrimpsushi.github.io/ko/posts/2025/</link><pubDate>Mon, 24 May 2021 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/2025/</guid><description>개요 SIR 모델은 가장 간단하고 수많은 변형이 있는 역학 구획 모델로써, 질병이나 정보 등의 확산 자체를 간단하면서도 직관적으로 잘 설명한다. 모델 1 $$ \begin{align*} {{d S} \over {d t}} =&amp;amp;</description></item><item><title>줄리아에서의 메타 프로그래밍</title><link>https://freshrimpsushi.github.io/ko/posts/2024/</link><pubDate>Sat, 22 May 2021 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/2024/</guid><description>코드 1 줄리아에서는 메타 프로그래밍을 언어 차원에서 지원한다. 다음은 문자열을 코드 그 자체로 읽고 실행한 결과다. julia&amp;gt; text = &amp;#34;f(x) = 2x + 1; f(2)&amp;#34; &amp;#34;f(x) = 2x + 1; f(2)&amp;#34; julia&amp;gt; code = Meta.parse(text) :($(Expr(:toplevel,</description></item><item><title>전염병 확산 모델에서 기초감염재생산수란?</title><link>https://freshrimpsushi.github.io/ko/posts/2023/</link><pubDate>Thu, 20 May 2021 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/2023/</guid><description>정의 기초감염재생산수basic Reproduction number $\mathcal{R}_{0}$ 는 전염병이 확산되는 속도를 나타낸 값으로써, 기본적으로 한 명의 감염자가 다른 이를 얼마나 감염시킬지에 대한 기대값로 표</description></item><item><title>줄리아에서 배열 Flatten 하는 법</title><link>https://freshrimpsushi.github.io/ko/posts/2022/</link><pubDate>Tue, 18 May 2021 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/2022/</guid><description>코드 vec() 함수를 쓰면 된다. julia&amp;gt; A = rand(0:9, 3,4) 3×4 Array{Int64,2}: 6 8 7 3 2 9 3 2 5 0 6 7 julia&amp;gt; vec(A) 12-element Array{Int64,1}: 6 2 5 8 9 0 7 3 6 3 2 7 사람이 생각하기로, 사람에게 보이기로는 똑같이 1</description></item><item><title>일치추정량</title><link>https://freshrimpsushi.github.io/ko/posts/2021/</link><pubDate>Sun, 16 May 2021 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/2021/</guid><description>정의 1 확률변수 $X$ 가 누적분포함수 $F ( x ; \theta), \theta \in \Theta$ 를 가진다고 하자. $X_{1} , \cdots , X_{n}$ 을 $X$ 에서 뽑은 샘플이라고 할 때, 통계량 $T_{n}$ 이 다음을 만족하면 모수 $\theta$ 에 대한 일치</description></item><item><title>줄리아에서 거리 행렬 계산 최적화하는 법</title><link>https://freshrimpsushi.github.io/ko/posts/2020/</link><pubDate>Fri, 14 May 2021 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/2020/</guid><description>결론 $n$ 개의 좌표끼리 거리를 계산한다고 하자. 모든 좌표끼리 계산할 필요가 없다면 그룹을 나누어 직사각 거리 행렬을 만들면 된다. 직사각 거리행렬은 pairwise() 함수로 쉽고 빠</description></item><item><title>역학 구획 모델</title><link>https://freshrimpsushi.github.io/ko/posts/2019/</link><pubDate>Wed, 12 May 2021 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/2019/</guid><description>개요 1 역학 구획 모델은 전염병의 창궐에 대한 모델로써, 인구 동역학에 전염병을 가미하고 &amp;lsquo;인구&amp;rsquo;을 몇가지 구획compartmen</description></item><item><title>줄리아에서 가중치를 주고 랜덤 샘플링 하는 법</title><link>https://freshrimpsushi.github.io/ko/posts/2018/</link><pubDate>Mon, 10 May 2021 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/2018/</guid><description>개요 줄리아에서 R에서의 sample()이나 파이썬 패키지 numpy의 random.choice()와 같은 역할을 하는 함수인 sample()과 Weights 함</description></item><item><title>스미스-워터맨 정렬: 국소 서열 정렬</title><link>https://freshrimpsushi.github.io/ko/posts/2017/</link><pubDate>Sat, 08 May 2021 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/2017/</guid><description>개요 두 염기서열에서 가장 비슷한 부분의 정렬을 찾는 것을 국소 정렬local Alignment이라 하는데, 그 방법으로 가장 널리 쓰이는 스미스-워터맨 알고리</description></item><item><title>줄리아에서 문자와 정수의 이퀄 오퍼레이터 == 속도 비교</title><link>https://freshrimpsushi.github.io/ko/posts/2016/</link><pubDate>Thu, 06 May 2021 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/2016/</guid><description>결론 배열의 각 원소를 Equal Operator ==를 통해 비교하면 정수보다 Char가 빠르다. 속도 비교 julia&amp;gt; integer = rand(1:5, N); print(typeof(integer)) Array{Int64,1} julia&amp;gt; character = rand([&amp;#39;S&amp;#39;,&amp;#39;E&amp;#39;,&amp;#39;I&amp;#39;,&amp;#39;R&amp;#39;,&amp;#39;D&amp;#39;], N); print(typeof(character)) Array{Char,1} julia&amp;gt; @time integer .== 1; 0.009222 seconds (6 allocations: 1.196 MiB) julia&amp;gt; @time character .== &amp;#39;S&amp;#39;; 0.005266 seconds (7</description></item><item><title>이항분포에서 근사시킨 정규분포의 분산 안정화</title><link>https://freshrimpsushi.github.io/ko/posts/2015/</link><pubDate>Tue, 04 May 2021 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/2015/</guid><description>예시 1 $Y = Y_{n}$ 가 이항분포 $\text{Bin} (n,p)$ 를 따른다고 하면 $$ \arcsin \sqrt{ {{ Y } \over { n }} } \overset{D}{\to} N \left( \arcsin \sqrt{p} , n/4 \right) $$ $N \left( \mu , \sigma^{2} \right)$ 는 정규분포를 의미한다. $\overset{D}{\to}$ 는 분포수렴을 의미한다. 설</description></item><item><title>2차원 배열의 행우선과 열우선</title><link>https://freshrimpsushi.github.io/ko/posts/2014/</link><pubDate>Sun, 02 May 2021 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/2014/</guid><description>개요 1 행렬 혹은 2차원 배열의 행우선row-major, 열우선column-major에 대해 설명한다. 행우선이냐 열우선이냐는 쉽게 말해 배열을 참조하</description></item><item><title>스튜던트의 정리 증명</title><link>https://freshrimpsushi.github.io/ko/posts/203/</link><pubDate>Fri, 30 Apr 2021 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/203/</guid><description>정리 1 확률 변수 $X_{1} , \cdots , X_{n}$ 들이 iid로 정규분포 $N\left( \mu,\sigma^{2} \right)$ 를 따른다고 하면 (a): $$ \overline{X} \sim N\left( \mu , { {\sigma^2} \over {n} } \right) $$ (b): $$ \overline{X} \perp S^2 $$ (c): $$ (n-1) { {S^2} \over {\sigma^2} } \sim \chi^2 (n-1) $$ (d): $$ T = { {\overline{X}</description></item><item><title>RGB 색상 치트 시트</title><link>https://freshrimpsushi.github.io/ko/posts/2013/</link><pubDate>Wed, 28 Apr 2021 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/2013/</guid><description>개요 자주 사용되는 RGB색상표다. 코드</description></item><item><title>니들맨-분쉬 알고리즘: 전역 서열 정렬</title><link>https://freshrimpsushi.github.io/ko/posts/2012/</link><pubDate>Mon, 26 Apr 2021 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/2012/</guid><description>개요 두 염기서열의 공통 부분이 가장 많아지는 정렬을 찾는 것을 전역 정렬global Alignment이라 하는데, 그 방법으로 가장 널리 쓰이는 니들맨-분쉬 알</description></item><item><title>유사 역행렬</title><link>https://freshrimpsushi.github.io/ko/posts/2011/</link><pubDate>Sat, 24 Apr 2021 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/2011/</guid><description>개요 유사역행렬pseudoinvers matrix은 역행렬의 일반화로써, 행과 열의 크기가 같지 않아서 정방행렬이 아닌 행렬 $A \in \mathbb{R}^{m \times n}$ 에 대해 &amp;lsqu</description></item><item><title>일제사격 전투 모델</title><link>https://freshrimpsushi.github.io/ko/posts/2010/</link><pubDate>Thu, 22 Apr 2021 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/2010/</guid><description>개요 란체스터 법칙이 근대전과 현대전의 양상을 묘사하는 모델이라면, 일제사격 전투 모델은 현대전 중에서도 특히 스케일이 큰 함대전을 묘사한다. 함대전에서 공격의</description></item><item><title>다변량 확률 변수의 분포 수렴</title><link>https://freshrimpsushi.github.io/ko/posts/2009/</link><pubDate>Tue, 20 Apr 2021 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/2009/</guid><description>정의1 $p$차원 랜덤 벡터 $\mathbf{X}$ 와 랜덤 벡터의 시퀀스 $\left\{ \mathbf{X}_{n} \right\}$ 가 다음을 만족하면 $n \to \infty$ 일 때 $\mathbf{X}_{n}$ 이 $\mathbf{X}$ 로 분포 수렴한다고 말하고, $\mathbf{X}_{n} \overset{D}{\to} \mathbf{X}$ 와 같이 나타낸다. $$\lim_{n \to \infty} F_{\mathbf{X}_{n}} (x) =</description></item><item><title>란체스터 법칙</title><link>https://freshrimpsushi.github.io/ko/posts/2008/</link><pubDate>Sun, 18 Apr 2021 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/2008/</guid><description>법칙 제1법칙 근대전 혹은 근접전투에서 전투력은 부대 규모에 비례한다. 제2법칙 현대전 혹은 원거리전투에서는 전투력은 부대 규모의 제곱에 비례한다. 설명 란체스</description></item><item><title>git warning: LF will be replaced by LF in … 해결법</title><link>https://freshrimpsushi.github.io/ko/posts/2007/</link><pubDate>Fri, 16 Apr 2021 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/2007/</guid><description>명령 git config --global core.safecrlf false 리눅스랑 윈도우즈 차이 때문에 나오는 경고인데 무시하면 된다. 위와 같이 입력하면 된다.</description></item><item><title>메이-레너드 경쟁 모델</title><link>https://freshrimpsushi.github.io/ko/posts/2006/</link><pubDate>Mon, 12 Apr 2021 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/2006/</guid><description>개요 메이-레너드 경쟁 모델은 세 가지 집단이 포함된 경쟁 상태에서의 인구 동역학 모델로, 세 집단이 서로 먹고 먹히는 삼각 관계를 묘사한다. 세 개의 당이나 기업, 혹은</description></item><item><title>1+2+3+4+5+⋯=-1/12 의 해석적 증명</title><link>https://freshrimpsushi.github.io/ko/posts/2005/</link><pubDate>Sat, 10 Apr 2021 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/2005/</guid><description>정리 $$ \begin{align*} &amp;amp; 1 + 2 + 3 + 4 + 5 + \cdots \\ =&amp;amp; \sum_{n \in \mathbb{N}} {{ 1 } \over { n^{-1} }} \\ =&amp;amp; \zeta (-1) \\ =&amp;amp; -{{ 1 } \over { 12 }} \end{align*} $$ 설명 양수를 계속 더했는데 어떻게 음수가 나오는가에만 집중한다</description></item><item><title>롯카-볼테라 경쟁 모델</title><link>https://freshrimpsushi.github.io/ko/posts/2004/</link><pubDate>Sun, 04 Apr 2021 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/2004/</guid><description>개요 롯카-볼테라 경쟁 모델은 두 집단 사이의 경쟁적 배제 원리principle of Competitive Exclusion을 설명할 수 있는 모델로써, 특히 두 집단이 서로를 견제하</description></item><item><title>다변량 t-분포</title><link>https://freshrimpsushi.github.io/ko/posts/2003/</link><pubDate>Fri, 02 Apr 2021 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/2003/</guid><description>정의 로케이션 벡터 $\mathbf{\mu} \in \mathbb{R}^{p}$ 와 양의 정부호인 스케일 행렬 $\Sigma \in \mathbb{R}^{p \times p}$ 에 대해 다음과 같은 확률 밀도 함수를 가지는 다변량 분포 $t_{p} \left(\nu; \mu , \Sigma \right)$ 를 다변량 t-분포multi</description></item><item><title>롯카-볼테라 포식자-피식자 모델</title><link>https://freshrimpsushi.github.io/ko/posts/2002/</link><pubDate>Wed, 31 Mar 2021 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/2002/</guid><description>개요 롯카-볼테라 포식자-피식자 모델은 종간의 상호작용을 시스템으로써 모델링하며, 특히 포식자-피식자 모델은 두 종의 포식관계를 나타낸다. 두 종에 대해서만</description></item><item><title>git 비밀번호 저장하는 법</title><link>https://freshrimpsushi.github.io/ko/posts/2001/</link><pubDate>Mon, 29 Mar 2021 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/2001/</guid><description>명령 git config credential.helper store 위와 같이 입력하면 된다.</description></item><item><title>줄리아 패키지 설치 시 \General\registry.toml: No such file or directory 해결</title><link>https://freshrimpsushi.github.io/ko/posts/2069/</link><pubDate>Sat, 20 Mar 2021 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/2069/</guid><description>에러 ERROR: SystemError: opening file &amp;quot;C:\\Users\\rmsms\\.julia\\registries\\General\\registry.toml&amp;quot;: No such file or directory 원인 사람 정말 열 받게 하는 에러인데, 말 그대로 해당 경로에 Registry.toml 파일이 없어서 일어나는 에러다. 해결법 C:\Users\사용자이름\</description></item><item><title>윈도우즈에서 줄리아 최신 버전 설치하는 법</title><link>https://freshrimpsushi.github.io/ko/posts/2067/</link><pubDate>Tue, 16 Mar 2021 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/2067/</guid><description>가이드 줄리아 버전 1.10 이후 터미널에서 위와 같이 winget install julia -s msstore 커맨드를 입력하면 된다. 줄리아 버전 1.10 이전 Step 1. 줄리아 설치 줄리아 다운로드 페이지에서 설치 파일을 받고</description></item><item><title>고유값과 고유벡터</title><link>https://freshrimpsushi.github.io/ko/posts/319/</link><pubDate>Wed, 10 Mar 2021 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/319/</guid><description>정의1 $n\times n$ 행렬 $A$가 주어졌다고 하자. $\mathbf{0}$이 아닌 $n\times 1$ 열벡터 $\mathbf{x}$, 그리고 상수 $\lambda$에 대해서 다음의 식을 고유값 방정식e</description></item><item><title>정부호 행렬</title><link>https://freshrimpsushi.github.io/ko/posts/336/</link><pubDate>Sat, 06 Mar 2021 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/336/</guid><description>정의1 정부호 행렬 이차 형식 $\mathbf{x}^{\ast} A \mathbf{x}$가 모든 $\mathbf{x} \ne \mathbf{0}$ 에 대해서 $\mathbf{x}^{\ast} A \mathbf{x} &amp;gt; 0$ 을 만족하면 이차 형식 혹은 행렬 $A$를 양의 정부호positive</description></item><item><title>행렬식</title><link>https://freshrimpsushi.github.io/ko/posts/252/</link><pubDate>Sat, 27 Feb 2021 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/252/</guid><description>정의 $A$를 다음과 같은 $2 \times 2$ 행렬이라고 하자. $$ A = \begin{bmatrix} a &amp;amp; b \\ c &amp;amp; d \end{bmatrix} $$ $A$의 행렬식determinant을 다음과 같이 정의하고 $\det(A</description></item><item><title>에르미트 행렬의 서로 다른 고유값의 고유벡터는 서로 수직이다</title><link>https://freshrimpsushi.github.io/ko/posts/330/</link><pubDate>Tue, 16 Feb 2021 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/330/</guid><description>정리 $A$를 크기가 $n \times n$인 에르미트 행렬이라고 하자. $A$ 의 서로 다른 두 고유값 $\lambda , \mu$ 에 대한 고유 벡터를 $\mathbf{x}$, $\mathbf{y}$라고 하자. 즉 $$ \begin{align*} A \mathbf{x}</description></item><item><title>에르미트 행렬의 고유값은 항상 실수다</title><link>https://freshrimpsushi.github.io/ko/posts/310/</link><pubDate>Mon, 15 Feb 2021 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/310/</guid><description>정리 $A$를 크기가 $n \times n$인 에르미트 행렬이라고 하자. 그러면 $A$ 의 고유값은 모두 실수다. 설명 일반적인 행렬에서 고유값이 실수라는 보장은 없고, 에르미트 행</description></item><item><title>다변량 정규 분포</title><link>https://freshrimpsushi.github.io/ko/posts/1954/</link><pubDate>Sun, 07 Feb 2021 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/1954/</guid><description>정의 모평균 벡터 $\mathbf{\mu} \in \mathbb{R}^{p}$ 와 공분산 행렬 $\Sigma \in \mathbb{R}^{p \times p}$ 에 대해 다음과 같은 확률 밀도 함수를 가지는 다변량 분포 $N_{p} \left( \mu , \Sigma \right)$ 를 다변량 정규 분포multivariate</description></item><item><title>다변량 확률 변수의 확률 수렴</title><link>https://freshrimpsushi.github.io/ko/posts/1952/</link><pubDate>Sun, 07 Feb 2021 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/1952/</guid><description>정의 1 $p$차원 랜덤 벡터 $\mathbf{X}$ 와 랜덤 벡터의 시퀀스 $\left\{ \mathbf{X}_{n} \right\}$ 가 다음을 만족하면 $n \to \infty$ 일 때 $\mathbf{X}_{n}$ 이 $\mathbf{X}$ 로 확률 수렴convergence in Probability한</description></item><item><title>1+1+1+1+1+⋯=-12 의 해석적 증명</title><link>https://freshrimpsushi.github.io/ko/posts/1944/</link><pubDate>Sat, 06 Feb 2021 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/1944/</guid><description>정리 $$ \begin{align*} &amp;amp; 1 + 1 + 1 + 1 + 1 + \cdots \\ =&amp;amp; \sum_{n \in \mathbb{N}} {{ 1 } \over { n^{0} }} \\ =&amp;amp; \zeta (0) \\ =&amp;amp; -{{ 1 } \over { 2 }} \end{align*} $$ 설명 양수를 계속 더했는데 어떻게 음수가 나오는가에만 집중한다</description></item><item><title>공분산 행렬</title><link>https://freshrimpsushi.github.io/ko/posts/1950/</link><pubDate>Sat, 06 Feb 2021 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/1950/</guid><description>정의1 $p$차원 랜덤 벡터 $\mathbf{X} = \left( X_{1}, \cdots , X_{p} \right)$ 에 대해 다음과 같이 정의된 $\operatorname{Cov} (\mathbf{X})$ 를 공분산 행렬covariance matrix이라 한다. $$ \left( \operatorname{Cov} \left( \mathbf{X} \right) \right)_{ij} := \operatorname{Cov} \left(</description></item><item><title>바스 확산 모델: 혁신과 모방</title><link>https://freshrimpsushi.github.io/ko/posts/1946/</link><pubDate>Sat, 06 Feb 2021 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/1946/</guid><description>모델 1 2 $$ \dot{N} = \left( p + q {{ N } \over { K }} \right) \left( 1 - {{ N } \over { K }} \right) $$ 변수 $N(t)$: $t$ 시점에서 집단의 개체수를 나타낸다. 파라미터 $K$: 환경 용량carrying ca</description></item><item><title>곰페르츠 성장 모델: 시간에 따른 성장 지연</title><link>https://freshrimpsushi.github.io/ko/posts/1943/</link><pubDate>Fri, 05 Feb 2021 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/1943/</guid><description>모델 1 $$ {{ d N } \over { dt }} = r e^{ - \alpha t} N \qquad, \alpha 0 $$ 변수 $N(t)$: $t$ 시점에서 집단의 개체수를 나타낸다. 파라미터 $r \in \mathbb{R}$ : 고유 성장률intrinsic Rate of Inc</description></item><item><title>수리생물학에서의 앨리 효과</title><link>https://freshrimpsushi.github.io/ko/posts/1941/</link><pubDate>Thu, 04 Feb 2021 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/1941/</guid><description>앨리 효과란? 1 개체군의 밀도가 낮을 때 인구수가 감소하는 효과를 앨리 효과Allee effect라 한다. 수식적으로는 다음과 같이 모델에서 $N$ 에 대한 함수 $a: \mathbb{R}</description></item><item><title>격자 모델 시뮬레이션에서의 확산</title><link>https://freshrimpsushi.github.io/ko/posts/1939/</link><pubDate>Tue, 02 Feb 2021 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/1939/</guid><description>시뮬레이션 이 포스트에서는 격자 공간에서 어떤 성분(Ingredient)의 확산 현상을 모방하려고 한다. 이는 그 동시에 SI 질병 확산 모델의 시뮬레이션이기도</description></item><item><title>라마누잔 합</title><link>https://freshrimpsushi.github.io/ko/posts/1936/</link><pubDate>Tue, 02 Feb 2021 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/1936/</guid><description>정의 발산하는 급수에 값을 매기는 것을 라마누잔 합Ramanujan summation이라 하고, 심볼 $\re$ 을 통해 나타낸다. 정리 [1] 그란디 급수Grandi series1:</description></item><item><title>중심극한 정리 증명</title><link>https://freshrimpsushi.github.io/ko/posts/43/</link><pubDate>Tue, 02 Feb 2021 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/43/</guid><description>정리 1 $\left\{ X_{k} \right\}_{k=1}^{n}$ 이 iid 확률 변수들이고 확률분포 $\left( \mu, \sigma^2 \right) $를 따른다고 하면 $n \to \infty$ 일 때 $$ \sqrt{n} {{ \overline{X}_n - \mu } \over {\sigma}} \overset{D}{\to} N (0,1) $$ $\overset{D}{\to}$ 는 분포 수렴을 의미한다. 설명 통계학에선 대수</description></item><item><title>격자 모델 시뮬레이션 첫걸음: 히트맵으로 나타내기</title><link>https://freshrimpsushi.github.io/ko/posts/1932/</link><pubDate>Mon, 01 Feb 2021 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/1932/</guid><description>시뮬레이션 코드 리뷰 Step 1. 격자 공간 생성 julia&amp;gt; colormap\_SI = [colorant&amp;#34;#EEEEEE&amp;#34;, colorant&amp;#34;#111111&amp;#34;] julia&amp;gt; row\_size = 5 5 julia&amp;gt; column\_size = 5 5 julia&amp;gt; Random.seed!(3); julia&amp;gt; stage\_lattice = rand([&amp;#39;S&amp;#39;], row\_size, column\_size) 5×5 Array{Char,2}: &amp;#39;S&amp;#39; &amp;#39;S&amp;#39; &amp;#39;S&amp;#39; &amp;#39;S&amp;#39; &amp;#39;S&amp;#39; &amp;#39;S&amp;#39; &amp;#39;S&amp;#39; &amp;#39;S&amp;#39; &amp;#39;S&amp;#39; &amp;#39;S&amp;#39; &amp;#39;S&amp;#39; &amp;#39;S&amp;#39; &amp;#39;S&amp;#39; &amp;#39;S&amp;#39; &amp;#39;S&amp;#39; &amp;#39;S&amp;#39; &amp;#39;S&amp;#39; &amp;#39;S&amp;#39; &amp;#39;S&amp;#39; &amp;#39;S&amp;#39; &amp;#39;S&amp;#39; &amp;#39;S&amp;#39; &amp;#39;S&amp;#39; &amp;#39;S&amp;#39; &amp;#39;S&amp;#39; 위</description></item><item><title>리만 제타 함수의 로랑 전개 유도</title><link>https://freshrimpsushi.github.io/ko/posts/1934/</link><pubDate>Mon, 01 Feb 2021 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/1934/</guid><description>정리 리만 제타 함수 $\zeta$ 의 로랑 전개는 다음과 같다. $$ \zeta (s) = {{ 1 } \over { s-1 }} + \sum_{n=0}^{\infty} \gamma_{n} {{ (1-s)^{n} } \over { n! }} \qquad , s &amp;gt; 1 $$ 여기서 $\gamma_{n}$ 은 $n$번째 스틸체스 상수stielt</description></item><item><title>약한 대수의 법칙 증명</title><link>https://freshrimpsushi.github.io/ko/posts/32/</link><pubDate>Mon, 01 Feb 2021 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/32/</guid><description>법칙 $\left\{ X_{k} \right\}_{k=1}^{n}$ 이 iid 확률 변수들이고 확률분포 $\left( \mu, \sigma^2 \right) $를 따른다고 하면 $n \to \infty$ 일 때 $$ \overline{X}_n \overset{P}{\to} \mu $$ $\overset{P}{\to}$ 는확률 수렴을 의미한다. 설명 중심극한정리와 더불어 통계학에서 가</description></item><item><title>해석적 연속</title><link>https://freshrimpsushi.github.io/ko/posts/1931/</link><pubDate>Mon, 01 Feb 2021 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/1931/</guid><description>정의 1 해석적 함수 $f_{1}: \mathscr{R}_{1} \to \mathbb{C}$ 에 대해 $$ \mathscr{S} := \mathscr{R}_{1} \cap \mathscr{R}_{2} \ne \emptyset \\ f_{1} (z) = f_{2} (z) \qquad , z \in \mathscr{S} $$ 를 만족하면서 $\mathscr{R}_{2} \subset \mathbb{C}$ 에서 해석적 함수 $f_{2}: \mathscr{R}_{2} \to \mathbb{C}$ 가 존재하면 $f_{2}$ 가 $\mathscr{R}_{2}$ 에서 $f_{1}$ 의 해석적</description></item><item><title>분포수렴하면 확률유계다</title><link>https://freshrimpsushi.github.io/ko/posts/176/</link><pubDate>Fri, 29 Jan 2021 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/176/</guid><description>정리 확률변수의 시퀀스 $\left\{ X_{n} \right\}$ 가 분포수렴하면 확률유계다. $\overset{D}{\to}$ 는 분포 수렴을 의미한다. 설명 앞서 확률수렴하면 분포수렴함을 보였으므로, 이 대우 명제를 생각해보</description></item><item><title>해석적 함수</title><link>https://freshrimpsushi.github.io/ko/posts/1929/</link><pubDate>Fri, 29 Jan 2021 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/1929/</guid><description>정의 열린 집합 $A \subset \mathbb{C}$ 과 $f: A \to \mathbb{C}$ 가 정의되어있고 $\alpha \in A$ 라고 하자. $\displaystyle \lim_{z \to \alpha } f(z) = f (\alpha)$ 면 $f$ 가 $\alpha$ 에서 연속이라고 하고 복소영역 $\mathscr{R}$ 의 모든 점에서 연속이면 $f$ 가 $\mathscr{R}$ 상</description></item><item><title>확률수렴하면 분포수렴한다</title><link>https://freshrimpsushi.github.io/ko/posts/175/</link><pubDate>Thu, 28 Jan 2021 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/175/</guid><description>정리1 확률변수 $X$ 와 확률변수의 시퀀스 $\left\{ X_{n} \right\}$ 에 대해 $$ X_{n} \overset{P}{\to} X \implies X_{n} \overset{D}{\to} X $$ $\overset{P}{\to}$ 는 확률 수렴을 의미한다. $\overset{D}{\to}$ 는 분포 수렴을 의미한다. 설명 직관적인 단어로 다시 말하자</description></item><item><title>수리통계학에서의 확률 유계</title><link>https://freshrimpsushi.github.io/ko/posts/1922/</link><pubDate>Wed, 27 Jan 2021 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/1922/</guid><description>정의 1 확률 변수의 시퀀스 $\left\{ X_{n} \right\}$ 가 주어져 있다고 하자. 모든 $\varepsilon &amp;gt; 0$ 에 대해 다음을 만족시키는 $N_{\varepsilon} \in \mathbb{N}$ 과 상수 $B_{\varepsilon} &amp;gt; 0$ 가 존재하면 $\left\{ X_{n} \right\}$ 가 확률 유계bounded in</description></item><item><title>스튜던트 t-분포의 극한분포로써 표준정규분포 유도</title><link>https://freshrimpsushi.github.io/ko/posts/195/</link><pubDate>Tue, 26 Jan 2021 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/195/</guid><description>정리 $T_n \sim t(n)$ 이면 $$ T_n \ \overset{D}{\to} N(0,1) $$ $N \left( \mu , \sigma^{2} \right)$ 는 평균이 $\mu$ 고 분산이 $\sigma^{2}$ 인 정규 분포다. $t(r)$ 은 자유도 $r$ 인 t-분포다. $\overset{D}{\to}$ 는 각각 분포 수렴을 의미한다. 애초에 스튜던트</description></item><item><title>줄리아에서 16진법 RGB 코드(HEX) 사용하는 법</title><link>https://freshrimpsushi.github.io/ko/posts/1921/</link><pubDate>Tue, 26 Jan 2021 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/1921/</guid><description>코드 줄리아에서 색깔을 다루기 위해 제공되는 패키지는 Colors.jl이다. 시각화 패키지인 Plots.jl을 불러오면 Colors.jl 내의 기능도 같이 사용할 수 있다.</description></item><item><title>줄리아에서 데이터프레임과 2차원배열 간 변환 방법</title><link>https://freshrimpsushi.github.io/ko/posts/1930/</link><pubDate>Mon, 25 Jan 2021 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/1930/</guid><description>코드 Matrix(df) 혹은 Array(df) 함수를 통해 데이터프레임을 같은 크기의 배열로 변환할 수 있다. 배열을 데이터프레임으로 만들 땐 DataFrmae(array, :auto)를 사용한다. 예전에는 convert 함수를 사용</description></item><item><title>푸아송분포의 극한분포로써 표준정규분포 유도</title><link>https://freshrimpsushi.github.io/ko/posts/197/</link><pubDate>Mon, 25 Jan 2021 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/197/</guid><description>정리 $X_{n} \sim \text{Poi} \left( n \right)$ 이고 $\displaystyle Y_{n} := {{ X_{n} - n } \over { \sqrt{n} }}$ 이면 $$ Y_{n} \overset{D}{\to} N(0,1) $$ $N \left( \mu , \sigma^{2} \right)$ 는 평균이 $\mu$ 고 분산이 $\sigma^{2}$ 인 정규 분포다. $\text{Poi} (\lambda)$ 는 평균과 분산이 $\lambda$ 인 푸아송 분포다.</description></item><item><title>리만 가설</title><link>https://freshrimpsushi.github.io/ko/posts/1920/</link><pubDate>Sun, 24 Jan 2021 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/1920/</guid><description>추측 $\zeta (s) = 0$ 을 만족하는 모든 비자명 해 $s$ 는 $\displaystyle \operatorname{Re} (s) = {{ 1 } \over { 2 }}$ 를 만족할 것이다. $\zeta$ 는 리만 제타 함수다. $\re(z)$ 는 복소수 $z \in \mathbb{C}$ 의 실수부를 의미한다. 설명 리만</description></item><item><title>줄리아에서 *.csv 파일 읽어들이는 법</title><link>https://freshrimpsushi.github.io/ko/posts/1923/</link><pubDate>Sun, 24 Jan 2021 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/1923/</guid><description>가이드 구버전 julia v1.5.0에서는 다음과 같이 *.csv파일을 읽었다. 사실 줄리아는 아직 데이터 입력 면에서 특출나게 편리한 언어는 아니다. 그래도 빠른 속도</description></item><item><title>로지스틱 성장 모델: 집단 성장의 한계</title><link>https://freshrimpsushi.github.io/ko/posts/1915/</link><pubDate>Sat, 23 Jan 2021 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/1915/</guid><description>모델 $$ \dot{N} = {{ r } \over { K }} N ( K - N) $$ 변수 $N(t)$: $t$ 시점에서 집단의 개체수를 나타낸다. 파라미터 $r \in \mathbb{R}$ : 고유 성장률intrinsic Rate of Increase</description></item><item><title>윈도우즈에서 줄리아 병렬연산 시 사용하는 쓰레드 수 바꾸는 법</title><link>https://freshrimpsushi.github.io/ko/posts/1933/</link><pubDate>Sat, 23 Jan 2021 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/1933/</guid><description>가이드 줄리아에서는 병렬 연산을 일상적으로 사용하기 때문에 경우에 따라서는 컴퓨터의 모든 소스를 계산에 집중할 필요가 있다. 이때 쓰레드 수를 바꾸는 방법은 여러가</description></item><item><title>이항분포의 극한분포로써 표준정규분포 유도</title><link>https://freshrimpsushi.github.io/ko/posts/196/</link><pubDate>Fri, 22 Jan 2021 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/196/</guid><description>정리 드 무아브르-라플라스 정리 $X_i \sim B(1,p)$ 이고 $Y_n = X_1 + X_2 + \cdots + X_n$ 이라고 하면 $Y_n \sim B(n,p)$ 이고 $$ { { Y_n - np } \over {\sqrt{ np(1-p) } } }\overset{D}{\to} N(0,1) $$ $N \left( \mu , \sigma^{2} \right)$ 는 평균이 $\mu$ 고 분산이 $\sigma^{2}$ 인</description></item><item><title>줄리아에서 실행되는 코드 파일의 위치 확인하는 법</title><link>https://freshrimpsushi.github.io/ko/posts/1935/</link><pubDate>Fri, 22 Jan 2021 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/1935/</guid><description>가이드 줄리아를 사용하는 사람이라면 서버를 포함해서 여러 운영 체제나 여러 컴퓨터를 사용하는 것에 익숙할 가능성이 높다. 만약 파일 입출력이 있다면 개발환경이 달라</description></item><item><title>리눅스에서 줄리아 병렬연산 시 사용하는 쓰레드 수 바꾸는 법</title><link>https://freshrimpsushi.github.io/ko/posts/1937/</link><pubDate>Thu, 21 Jan 2021 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/1937/</guid><description>가이드 줄리아에서는 병렬 연산을 일상적으로 사용하기 때문에 경우에 따라서는 컴퓨터의 모든 소스를 계산에 집중할 필요가 있다. 이때 쓰레드 수를 바꾸는 방법은 여러가</description></item><item><title>이항분포의 극한분포로써 푸아송분포 유도</title><link>https://freshrimpsushi.github.io/ko/posts/198/</link><pubDate>Thu, 21 Jan 2021 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/198/</guid><description>정리 $X_{n} \sim B(n,p)$이라고 하자. $\mu \approx np$ 이면 $$ X_{n} \overset{D}{\to} \text{Poi} (\mu) $$ $B(n,p)$ 은 시행 $n$ 번에 확률 $p$ 인 이항 분포다. $\text{Poi} (\lambda)$ 는 평균과 분산이 $\lambda$ 인 푸아송 분포다. $\overset{D}{\to}$ 는 분포 수렴을</description></item><item><title>줄리아에서 합성함수 사용하는 법</title><link>https://freshrimpsushi.github.io/ko/posts/1942/</link><pubDate>Wed, 20 Jan 2021 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/1942/</guid><description>코드 julia&amp;gt; f(x) = 2x + 1 f (generic function with 1 method) julia&amp;gt; g(x) = x^2 g (generic function with 1 method) julia&amp;gt; (g ∘ f)(3) 49 설명 줄리아에서 함수의 합성은 프로그래밍적으로는 파이프 오퍼레이터와 흡사하다. 이러한 합성</description></item><item><title>수리통계학에서의 분포 수렴</title><link>https://freshrimpsushi.github.io/ko/posts/1888/</link><pubDate>Mon, 18 Jan 2021 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/1888/</guid><description>정의 1 확률변수 $X$ 와 확률 변수의 시퀀스 $\left\{ X_{n} \right\}$ 가 다음을 만족하면 $n \to \infty$ 일 때 $X_{n}$ 이 $X$ 로 분포 수렴convergence in distribution한다고 말하</description></item><item><title>에이전트 기반 모델 시뮬레이션에서의 사망</title><link>https://freshrimpsushi.github.io/ko/posts/1884/</link><pubDate>Sat, 16 Jan 2021 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/1884/</guid><description>시뮬레이션 이 포스트에서는 생성된 에이전트가 사망하는 액션을 주어 거시적인 관점에서 집단의 역성장을 모방하려고 한다. 이 시뮬레이션에서 공간이나 이동에 관련된</description></item><item><title>에이전트 기반 모델 시뮬레이션에서의 번식</title><link>https://freshrimpsushi.github.io/ko/posts/1880/</link><pubDate>Tue, 12 Jan 2021 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/1880/</guid><description>시뮬레이션 이 포스트에서는 생성된 에이전트에게 스스로 복제하는 액션을 주어 거시적인 관점에서 집단의 성장을 모방하려고 한다. 이 시뮬레이션에서 공간이나 이동에</description></item><item><title>서열정렬 점수와 갭 페널티</title><link>https://freshrimpsushi.github.io/ko/posts/1878/</link><pubDate>Sun, 10 Jan 2021 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/1878/</guid><description>정의 레퍼런스 서열과 쿼리 서열이 주어져 있다고 하자. 서열정렬 점수sequence Alignment Score란 두 서열을 비교했을 때 얼마나 일치하는지를 수치화하는 것과 그</description></item><item><title>서열정렬에서의 치환행렬</title><link>https://freshrimpsushi.github.io/ko/posts/1881/</link><pubDate>Sun, 10 Jan 2021 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/1881/</guid><description>정의 서열정렬 점수를 매길 때 매치와 미스매치의 기준이 되는 행렬을 치환행렬substitution matrix이라 한다. 예시 using BioAlignments EDNAFULL BLOSUM45 PAM30 거두절미하고 예시</description></item><item><title>벡터의 정의</title><link>https://freshrimpsushi.github.io/ko/posts/1947/</link><pubDate>Fri, 08 Jan 2021 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/1947/</guid><description>정의 수의 나열을 벡터라 한다. 설명 보통 교과과정에서 벡터는 &amp;lsquo;크기와 방향을 가진 기하학적 객체&amp;rsquo;로 배우게 된다. 아무래도 물리학에서</description></item><item><title>에이전트 기반 시뮬레이션 첫걸음: 산점도로 나타내기</title><link>https://freshrimpsushi.github.io/ko/posts/1875/</link><pubDate>Fri, 08 Jan 2021 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/1875/</guid><description>시뮬레이션 코드 리뷰 Step 1. 패키지 로드, 초기값 설정 julia&amp;gt; cd(@\_\_DIR\_\_) # 파일 저장 경로cd(@\_\_DIR\_\_) # 파일 저장 경로 julia&amp;gt; @time using Plots 19.989912 seconds (31.16 M allocations: 1.628 GiB, 4.49% gc Time) julia&amp;gt; @time</description></item><item><title>서열정렬이란?</title><link>https://freshrimpsushi.github.io/ko/posts/1874/</link><pubDate>Wed, 06 Jan 2021 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/1874/</guid><description>정의 염기서열 간의 유사도를 근거로 나열하는 것을 서열정렬sequence Alignment이라 한다. 1 설명 생명정보공학에서 유전체의 길이는 무척 길기 때</description></item><item><title>동역학적 모델 시뮬레이션</title><link>https://freshrimpsushi.github.io/ko/posts/1873/</link><pubDate>Mon, 04 Jan 2021 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/1873/</guid><description>설명 위의 움짤은 멜서스 성장 모델을 에이전트 기반 시뮬레이션으로 시각화한 것이다. 시뮬레이션simulation이란 현상을 설명하는 모델을 가상으로 구현해</description></item><item><title>문자열의 편집 거리</title><link>https://freshrimpsushi.github.io/ko/posts/1872/</link><pubDate>Sat, 02 Jan 2021 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/1872/</guid><description>빌드업 1 문자열에는 다음과 같이 네가지 작용이 있다: 삽입: 문자열에 새로운 문자를 끼워넣는다. 제거: 문자열에서 문자 하나를 없앤다. 교체: 문자열에서 문자 하</description></item><item><title>-</title><link>https://freshrimpsushi.github.io/ko/posts/1998/</link><pubDate>Fri, 01 Jan 2021 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/1998/</guid><description>줄리아 커맨드라인으로 특정 버전 실행시키는 법 줄리아 특정 버전 실행 커맨드라인에서 julia +1.12 vscode에서 줄리아에서 설치된 패키지 목록 가져오는 법 installed_packages = keys(Pkg.dependencies()) 줄리아</description></item><item><title>세미나</title><link>https://freshrimpsushi.github.io/ko/posts/2000/</link><pubDate>Fri, 01 Jan 2021 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/2000/</guid><description>원드라이브 lab book $$ \begin{align*} {\frac{ \partial u }{ \partial x }} + {\frac{ \partial v }{ \partial y }} =&amp;amp; 0 \\ {\frac{ \partial u }{ \partial t }} + u {\frac{ \partial u }{ \partial x }} + v {\frac{ \partial u }{ \partial y }} =&amp;amp; {\frac{ \partial^{2} u }{ \partial x^{2} }} + {\frac{ \partial^{2} u }{ \partial y^{2} }} - u</description></item><item><title>홈</title><link>https://freshrimpsushi.github.io/ko/posts/1999/</link><pubDate>Fri, 01 Jan 2021 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/1999/</guid><description>퍼뮤테이션 엔트로피 https://journals.aps.org/prl/abstract/10.1103/PhysRevLett.88.174102 http://materias.df.uba.ar/dnla2019c1/files/2019/03/permutation_entropy.pdf 오토마타 폰 노이만 네이버후드 유전 알고리즘 MEP https://arxiv.org/pdf/2110.00367 의사결정나무 배깅과 부스팅 랜덤포레스트 그래디언트 부스팅 DBscan 집합과 집합 사이의 거리 https://arxiv.org/abs/1808.02574</description></item><item><title>맬서스 성장 모델: 이상적인 집단 성장</title><link>https://freshrimpsushi.github.io/ko/posts/1871/</link><pubDate>Thu, 31 Dec 2020 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/1871/</guid><description>모델 $$ \dot{N} = rN $$ 변수 $N(t)$: $t$ 시점에서 집단의 개체수를 나타낸다. 파라미터 $r \in \mathbb{R}$ : 고유 성장률intrinsic Rate of Increase로써, $0$ 보다 크면 성장하</description></item><item><title>생명정보공학에서의 유전체와 유전자</title><link>https://freshrimpsushi.github.io/ko/posts/1864/</link><pubDate>Tue, 29 Dec 2020 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/1864/</guid><description>정의 한 개체의 염기서열을 모두 모은 것을 유전체genome라고 한다. 유전체의 일부를 차지하는 구간으로, 유전 형질의 단위가 되는 것을 유전자gene라고 한다</description></item><item><title>줄리아에서 움짤 찌는 법</title><link>https://freshrimpsushi.github.io/ko/posts/1863/</link><pubDate>Sun, 27 Dec 2020 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/1863/</guid><description>코드 원래 생새우초밥집에서는 이보다는 훨씬 자세한 설명을 추가하는 편이지만, 줄리아에서 움짤을 찌는 게 얼마나 쉬운지를 강조하기 위해 가능한한 짧게 설명하도록 하</description></item><item><title>생명정보공학에서의 인트론과 엑손</title><link>https://freshrimpsushi.github.io/ko/posts/1862/</link><pubDate>Fri, 25 Dec 2020 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/1862/</guid><description>정의 진핵 생물의 DNA에서 실제로 단백질의 합성에 관여하는 부분을 엑손exon, 그렇지 않은 부분을 인트론intron이라고 한다. 설명 원핵 생물과 진핵 생물</description></item><item><title>R 파일 읽기나 경로 변경 시 Error: 'C:\U' used without hex digits in character string starting 'C:\U' 해결</title><link>https://freshrimpsushi.github.io/ko/posts/1860/</link><pubDate>Wed, 23 Dec 2020 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/1860/</guid><description>해결만을 위한다면 어떻게 수정하는지만 봐도 되는데, 원리를 알고 다시는 같은 에러를 겪고 싶지 않다면 모두 읽는 것을 추천한다. 에러 진단 가령 바탕화면에 위와 같이 exampe.csv</description></item><item><title>염기서열의 상류와 하류</title><link>https://freshrimpsushi.github.io/ko/posts/1855/</link><pubDate>Mon, 21 Dec 2020 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/1855/</guid><description>빌드업 1 염기서열의 방향은 위의 그림처럼 오탄당의 탄소 원자 위치에 따라 번호를 부여함으로써 나타낼 수 있다. RNA와 DNA는 구체적으로 3번 탄소 $3&amp;rsq</description></item><item><title>딥러닝의 수학적 근거, 시벤코 정리 증명</title><link>https://freshrimpsushi.github.io/ko/posts/1853/</link><pubDate>Sat, 19 Dec 2020 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/1853/</guid><description>정리 $\sigma$ 가 연속 시그모이달 함수라고 하면 $$ S := \left\{ G(x) = \sum_{k=1}^{N} \alpha_{k} \sigma \left( y_{k}^{T} x+ \theta_{k} \right) : y_{k} \in \mathbb{R}^{n} \land \alpha_{k} , \theta_{k} \in \mathbb{R} \land N \in \mathbb{N} \right\} $$ 는 $C\left( I_{n} \right)$ 에서 균등 조밀하다. 달리 말하자면, 모든 $f</description></item><item><title>생명정보공학에서의 코돈과 아미노산 유전 부호</title><link>https://freshrimpsushi.github.io/ko/posts/1852/</link><pubDate>Thu, 17 Dec 2020 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/1852/</guid><description>정의 DNA의 염기 3개를 순서쌍으로 묶은 단위를 트리플렛 코드triplet Code라 한다. 센트럴 도그마에 따라 전사된 mRNA의 트리플렛 코드를 코돈co</description></item><item><title>시그모이달 함수란?</title><link>https://freshrimpsushi.github.io/ko/posts/1851/</link><pubDate>Tue, 15 Dec 2020 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/1851/</guid><description>정의 다음을 만족하는 함수 $\sigma : \mathbb{R} \to \mathbb{R}$ 을 시그모이달 함수sigmoidal function라 한다. $$ \sigma (t) \to \begin{cases} 1 &amp;amp; \text{as } t \to + \infty \\ 0 &amp;amp; \text{as } t \to - \infty \end{cases} $$ 정</description></item><item><title>분자생물학의 중심원리</title><link>https://freshrimpsushi.github.io/ko/posts/1850/</link><pubDate>Sun, 13 Dec 2020 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/1850/</guid><description>원리 분자생물학의 중심원리 혹은 센트럴 도그마central dogma란 유전 정보는 DNA에서 RNA로, RNA에서 단백질로 전달된다는 가설로써 다음과 같</description></item><item><title>차별 함수란?</title><link>https://freshrimpsushi.github.io/ko/posts/1838/</link><pubDate>Fri, 11 Dec 2020 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/1838/</guid><description>정의 모든 $y \in \mathbb{R}^{n}$ 과 $\theta \in \mathbb{R}$ 와 어떤 $\mu \in M \left( I_{n} \right)$ 에 대해 $$ \int_{I_{n}} \sigma \left( y^{T} x + \theta \right) d \mu (x) = 0 \implies \mu =0 $$ 를 만족하는 함수 $\sigma : \mathbb{R} \to \mathbb{R}$ 를 차별적 함수discriminat</description></item><item><title>정칙 측도</title><link>https://freshrimpsushi.github.io/ko/posts/1834/</link><pubDate>Wed, 09 Dec 2020 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/1834/</guid><description>정의: 측도의 정칙성 1 $\mu$ 가 가측 공간 $(X, \Sigma)$ 에서 정의된 측도라고 하자. $\mu$ 에 대해 가측 집합 $A \in \Sigma$ 가 다음을 만족하면 내적 정칙inner Regular이라 한다.</description></item><item><title>생명정보공학에서의 주요 염기와 염기쌍</title><link>https://freshrimpsushi.github.io/ko/posts/1832/</link><pubDate>Mon, 07 Dec 2020 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/1832/</guid><description>정의 다음의 다섯가지 염기를 주요 염기canonical Base라고 한다. 퓨린 염기: 아데닌adenin $A$, 구아닌guanine $G$ 피리미딘 염기: 사이토</description></item><item><title>라살 불변 원리 증명</title><link>https://freshrimpsushi.github.io/ko/posts/1831/</link><pubDate>Sat, 05 Dec 2020 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/1831/</guid><description>원리 빌드업 공간 $X$ 와 함수 $f : X \to X$ 에 대해 다음과 같은 벡터필드가 미분 방정식으로 주어져 있다고 하자. $$ \dot{x} = f(x) $$ 플로우 $\phi_t \left( \cdot \right)$ 하에서의 컴팩트 양불변집합을</description></item><item><title>어트랙팅 셋의 베이신</title><link>https://freshrimpsushi.github.io/ko/posts/978/</link><pubDate>Fri, 04 Dec 2020 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/978/</guid><description>정의 1 공간 $\mathbb{R}^{p}$ 와 스무스한 함수 $f , g : \mathbb{R}^{p} \to \mathbb{R}^{p}$ 에 대해 동역학계가 다음과 같이 벡터필드 혹은 맵으로 표현된다고 하자. $$ \dot{x} = f(x) \\ x \mapsto g(x) $$ $\phi (t, \cdot)$ 은 벡터필드 $\dot{x} = f(x)$</description></item><item><title>생명정보공학에서의 염기서열</title><link>https://freshrimpsushi.github.io/ko/posts/1828/</link><pubDate>Wed, 02 Dec 2020 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/1828/</guid><description>빌드업 화학적 합성에 의해 단위체가 반복되어 연결된 고분자를 중합체polymer라고 한다. 인산phosphoric Acid은 무기 산소산의 일종으로, 화</description></item><item><title>동역학에서의 어트랙터</title><link>https://freshrimpsushi.github.io/ko/posts/1493/</link><pubDate>Tue, 01 Dec 2020 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/1493/</guid><description>빌드업 공간 $X$ 와 함수 $f,g : X \to X$ 에 대해 벡터필드, 맵이 다음과 같이 표현된다고 하자. $$ \dot{x} = f(x) \\ x \mapsto g(x) $$ $\phi (t, \cdot)$ 은 벡터필드 $\dot{x} = f(x)$ 의 플로우, $g^{n}$ 는 맵 $g$ 를 $n$ 번 취</description></item><item><title>생명정보공학에서의 DNA, RNA, 염색체</title><link>https://freshrimpsushi.github.io/ko/posts/1827/</link><pubDate>Sun, 29 Nov 2020 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/1827/</guid><description>빌드업 화학적 합성에 의해 단위체가 반복되어 연결된 고분자를 중합체polymer라고 한다. 인산phosphoric Acid은 무기 산소산의 일종으로, 화</description></item><item><title>미분방정식로 표현되는 시스템의 오메가 리미트 셋</title><link>https://freshrimpsushi.github.io/ko/posts/1822/</link><pubDate>Fri, 27 Nov 2020 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/1822/</guid><description>정의 거리 공간 $X$ 와 함수 $f : X \to X$ 에 대해 다음과 같은 벡터필드가 미분 방정식으로 주어져 있다고 하자. $$ \dot{x} = f(x) $$ 이 시스템의 플로우 $\phi ( t, x )$ 와 한 점 $x_{0} \in X$ 에 대</description></item><item><title>생명정보공학에서의 원핵 생물과 진핵 생물</title><link>https://freshrimpsushi.github.io/ko/posts/1810/</link><pubDate>Wed, 25 Nov 2020 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/1810/</guid><description>정의 핵막이 없는 생물을 원핵 생물prokaryotes이라 한다. 핵막이 있는 핵으로 이루어진 생물을 진핵 생물eukaryotes이라 한다. 설명 진핵 생물</description></item><item><title>줄리아에서 거리 행렬 계산하는 법</title><link>https://freshrimpsushi.github.io/ko/posts/1799/</link><pubDate>Mon, 23 Nov 2020 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/1799/</guid><description>개요 거리 행렬distance matrix은 파티클 다이나믹스particle dynamics 및 무빙 에이전트moving Agent 기반 시뮬레이션 등에 흔히 사용되나, 막상</description></item><item><title>푸앙카레 재귀 정리 증명</title><link>https://freshrimpsushi.github.io/ko/posts/1798/</link><pubDate>Sat, 21 Nov 2020 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/1798/</guid><description>정리 유클리드 공간에서 정의된 다차원 맵 $g : \mathbb{R}^{n} \to \mathbb{R}^{n}$ 이 단사면서 연속이고 $D \subset \mathbb{R}^{n}$ 이 컴팩트 불변집합, 다시 말해 $g(D) = D$ 라고 하자. 임의의 $\overline{x} \in D$ 의 임의의 근방을 $U$ 라</description></item><item><title>줄리아에서 빈 배열 만드는 법</title><link>https://freshrimpsushi.github.io/ko/posts/1797/</link><pubDate>Thu, 19 Nov 2020 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/1797/</guid><description>코드 크기 지정 julia&amp;gt; empty = Array{Float64, 2}(undef, 3, 4) 3×4 Array{Float64,2}: 3.39519e-313 3.18299e-313 4.66839e-313 1.061e-313 4.03179e-313 5.51719e-313 1.6976e-313 4.24399e-314 2.97079e-313 4.66839e-313 7.00259e-313 5.0e-324 위의 코드를 실행시키면 빈 배열이 만들어진다. 간혹 1.76297e-315처럼 이상한 값이</description></item><item><title>동역학에서의 리우빌 정리 증명</title><link>https://freshrimpsushi.github.io/ko/posts/1792/</link><pubDate>Tue, 17 Nov 2020 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/1792/</guid><description>정리 유클리드 공간 $\mathbb{R}^{n}$ 과 함수 $f : \mathbb{R}^{n} \to \mathbb{R}^{n}$ 에 대해 다음과 같은 벡터필드가 미분 방정식으로 주어져 있다고 하자. $$ \dot{x} = f(x) $$ 이 시스템의 플로우 $\phi_t ( \cdot )$ 과 영역 $D_{0} \subset \mathbb{R}^{n}$ 에</description></item><item><title>수리통계학에서의 확률 수렴</title><link>https://freshrimpsushi.github.io/ko/posts/1789/</link><pubDate>Sun, 15 Nov 2020 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/1789/</guid><description>정의 1 확률변수 $X$ 와 확률 변수의 시퀀스 $\left\{ X_{n} \right\}$ 가 다음을 만족하면 $n \to \infty$ 일 때 $X_{n}$ 이 $X$ 로 확률 수렴convergence in Probability한다고 말하고</description></item><item><title>미분방정식로 표현되는 시스템의 보존량</title><link>https://freshrimpsushi.github.io/ko/posts/1770/</link><pubDate>Fri, 13 Nov 2020 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/1770/</guid><description>정의 공간 $X$ 와 함수 $f : X \to X$ 에 대해 다음과 같은 벡터필드가 미분 방정식으로 주어져 있다고 하자. $$ \dot{x} = f(x) $$ 주어진 시스템에 종속된 상수함수 $h : X \to \mathbb{R}$ 가 존재하</description></item><item><title>연속 사상 정리 증명</title><link>https://freshrimpsushi.github.io/ko/posts/1787/</link><pubDate>Wed, 11 Nov 2020 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/1787/</guid><description>정리 1 다음은 연속 사상 정리의 측도론적 서술이다. 거리 공간 $\left( S , d \right)$ 와 $\left( S' , d&amp;rsquo; \right)$ 에 대해 $g : S \to S'$ 가 $C_{g} \subset S$ 에서 연속이라고 하자. $S$ 의 확률 원소 $X$ 에 대해 $P</description></item><item><title>벡터필드에서의 다이벌전스</title><link>https://freshrimpsushi.github.io/ko/posts/1777/</link><pubDate>Mon, 09 Nov 2020 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/1777/</guid><description>정의 유클리드 공간에서 정의된 벡터필드 $\textbf{f} : \mathbb{R}^{n} \to \mathbb{R}^{n}$ 을 $\textbf{f} = (f_{1} , \cdots , f_{n})$ 과 같이 나타내고 축의 방향을 $u_{1} , \cdots , u_{n}$ 이라고 할 때, $\textbf{f}$ 의 다이벌전스 를 다음과 같이 정의한다</description></item><item><title>로지스틱 함수란?</title><link>https://freshrimpsushi.github.io/ko/posts/1775/</link><pubDate>Sat, 07 Nov 2020 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/1775/</guid><description>정의 1 로지스틱 함수란 미분 방정식의 해 $y ' = y(1-y)$ 로써, 다음과 같이 구해진다. $$ y(t) = {{ 1 } \over { 1 + e^{-t} }} $$ 설명 조금 더 일반적인 형태로써 $\displaystyle f(x) := {{ L } \over { 1 +</description></item><item><title>벡터필드에서의 볼륨</title><link>https://freshrimpsushi.github.io/ko/posts/1772/</link><pubDate>Thu, 05 Nov 2020 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/1772/</guid><description>정의 유클리드 공간의 부분공간 $D \subset \mathbb{R}^{n}$ 의 볼륨 $V$ 는 직교좌표 $\textbf{u} = (u_{1}, u_{2}, \cdots , u_{n})$ 으로 나타낼 때 다음과 같이 정의된다. $$ V(D) = \int_{D} du_{1} du_{2} \cdots d u_{n} $$ $\textbf{u} \in \mathbb{R}^{n}$ 가 벡터 함수 $\textbf{f} : \mathbb{R}^{n} \to</description></item><item><title>2차원 자율 시스템에선 혼돈이 일어나지 않는다 푸앙카레-벤딕슨 정리 증명</title><link>https://freshrimpsushi.github.io/ko/posts/1788/</link><pubDate>Tue, 03 Nov 2020 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/1788/</guid><description>정리 $2$차원 매니폴드 $\mathcal{P}$ 와 함수 $f,g \in C^{r} \left( \mathcal{P} \right)$ 에 대해 다음과 같은 벡터필드가 미분 방정식으로 주어져 있다고 하자. $$ \dot{x} = f(x,y) \\ \dot{y} = g(x,y) $$ $\mathcal{M}$ 이 벡터필드의 유한한 수</description></item><item><title>시그모이드 함수란?</title><link>https://freshrimpsushi.github.io/ko/posts/1769/</link><pubDate>Sun, 01 Nov 2020 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/1769/</guid><description>정의 1 유계 미분가능 스칼라 함수 $\sigma : \mathbb{R} \to \mathbb{R}$ 이 모든 $x \in \mathbb{R}$ 에서 $\sigma ' (x) \ge 0$ 이고 단 하나의 변곡점을 가지면 시그모이드 함수sigmoid function라고 한</description></item><item><title>2차원 자율 시스템에서 피리어딕 오빗의 부재성</title><link>https://freshrimpsushi.github.io/ko/posts/1761/</link><pubDate>Fri, 30 Oct 2020 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/1761/</guid><description>피리어딕 오빗에 대한 고찰 보통 자율 시스템에서 피리어딕 오빗이 존재하는지에 대한 질문은 상당히 까다로운데, $1,2$차원 공간이라면 비교적 간단하게 그 부재성</description></item><item><title>순서통계량</title><link>https://freshrimpsushi.github.io/ko/posts/1757/</link><pubDate>Wed, 28 Oct 2020 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/1757/</guid><description>정리1 랜덤 샘플 $X_{1} , \cdots , X_{n}$ 가 서포트 $\mathcal{S} =(a,b)$ 인 확률밀도함수 $f(x)$ 를 가지는 연속확률분포를 따른다고 하자. 이들을 크기 순으로 나열한 확률 변수들을 $Y_{1} &amp;lt; \cdots &amp;lt; Y_{n}$ 와 같이 나</description></item><item><title>벤딕슨 판정법</title><link>https://freshrimpsushi.github.io/ko/posts/1751/</link><pubDate>Mon, 26 Oct 2020 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/1751/</guid><description>벤딕슨 판정법 공간 $\mathbb{R}^{2}$ 와 함수 $f,g \in C^{1} \left( \mathbb{R}^{2} \right)$ 에 대해 다음과 같은 벡터필드가 미분 방정식으로 주어져 있다고 하자. $$ \dot{x} = f(x,y) \\ \dot{y} = g(x,y) $$ 단순 연결 영역 $D \subset \mathbb{R}^{2}$ 에서 $$ {{ \partial</description></item><item><title>표본 분산을 n-1으로 나누는 이유</title><link>https://freshrimpsushi.github.io/ko/posts/1747/</link><pubDate>Sat, 24 Oct 2020 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/1747/</guid><description>왜 n-1로 나누지? $X_{i} \sim \left( \mu , \sigma^{2} \right)$ 이라고 하면 표본분산 $S^{2}$ 는 다음과 같다. $$ S^{2} := {{1} \over {n-1}} \sum_{i=1}^{n} \left( X_{i} - \overline{X} \right)^{2} $$ 알다시피 표본 평균과 달리 표본 분산은 편차의 제곱을 모두</description></item><item><title>불변 매니폴드의 안정성과 불안정성</title><link>https://freshrimpsushi.github.io/ko/posts/1746/</link><pubDate>Thu, 22 Oct 2020 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/1746/</guid><description>정의 불변집합의 안정성과 불안정성 1 동역학계 $\left( T, X , \varphi^{t} \right)$ 의 한 고정점 $\overline{x}$ 에 대해 두 불변집합을 다음과 같이 정의하자. $$ \begin{align*} W^{s} \left( \overline{x} \right) :=&amp;amp; \left\{ x : \varphi^{t} x \to \overline{x} , t \to + \infty</description></item><item><title>불편추정량</title><link>https://freshrimpsushi.github.io/ko/posts/1745/</link><pubDate>Tue, 20 Oct 2020 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/1745/</guid><description>정의 1 $\theta$ 의 추정량 $T$ 가 다음을 만족하면 $T$ 를 $\theta$ 의 불편추정량unbiased estimator이라고 한다. $$ E T = \theta $$ 설명 특히 $\theta$ 에 대한 불편추정량 중 가</description></item><item><title>동역학에서의 불변집합</title><link>https://freshrimpsushi.github.io/ko/posts/1079/</link><pubDate>Sun, 18 Oct 2020 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/1079/</guid><description>정의 엄밀한 정의 1 동역학계 $\left( T, X , \varphi^{t} \right)$ 에서 부분집합 $S \subset X$ 가 다음을 만족하면 $S$ 를 불변집합invariant set이라 한다. $$ x_{0} \in S \implies \varphi^{t} x_{0} \in S \qquad , \forall</description></item><item><title>편의-분산 트레이드 오프</title><link>https://freshrimpsushi.github.io/ko/posts/1739/</link><pubDate>Fri, 16 Oct 2020 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/1739/</guid><description>정의 $$ \text{MSE} \left( \widehat{\theta} \right) = \Var \widehat{\theta} + \left( \text{Bias} \widehat{\theta} \right)^{2} $$ 설명 평균제곱오차 $\text{MSE}$ 는 통계 모형의 평가나 머신 러닝에서의 손실 함수로써 즐겨쓰이는 척도로써, 특히 편의와 분산에 대한 트레이</description></item><item><title>랴푸노프 함수</title><link>https://freshrimpsushi.github.io/ko/posts/1738/</link><pubDate>Wed, 14 Oct 2020 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/1738/</guid><description>정의1 공간 $X$ 와 함수 $f : X \to X$ 에 대해 다음과 같은 벡터필드가 미분 방정식으로 주어져 있다고 하자. $$ \dot{x} = f(x) $$ 위와 같은 자율 시스템의 한 점 $x_{0} \in X$ 이 주어져 있다고</description></item><item><title>수리통계학에서의 편의</title><link>https://freshrimpsushi.github.io/ko/posts/1735/</link><pubDate>Mon, 12 Oct 2020 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/1735/</guid><description>정의 모수 $\theta$ 에 대한 추정량 $\widehat{\theta}$ 에 대해 다음과 같이 정의된 $\text{Bias}$ 를 편의라 한다. $$ \text{Bias} ( \theta ) = E(\widehat{\theta}) - \theta $$ 설명 Bias는 편의 또는 편향으로 순화되지만, 역시 가장 많이 쓰이</description></item><item><title>미분방정식으로 표현되는 시스템에서 고정점의 분류</title><link>https://freshrimpsushi.github.io/ko/posts/1733/</link><pubDate>Sat, 10 Oct 2020 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/1733/</guid><description>정의 공간 $X$ 와 함수 $f \in C^{1}(X,X)$ 에 대해 다음과 같은 벡터필드가 미분 방정식으로 주어져 있다고 하자. $$ \dot{x} = f(x) $$ $\overline{x}$ 가 이 미분방정식로 표현되는 시스템의 한 고정점이라 하고</description></item><item><title>신뢰구간의 쉬운 정의</title><link>https://freshrimpsushi.github.io/ko/posts/1732/</link><pubDate>Thu, 08 Oct 2020 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/1732/</guid><description>정의 1 확률 밀도 함수 $f (x; \theta)$ 를 가지는 확률 변수 $X$ 의 샘플 $X_{1} , \cdots , X_{n}$ 와 신뢰 계수confidence coefficient $\alpha \in (0,1)$ 가 주어져 있다고 하자. $$ L := L \left( X_{1} , \cdots , X_{n} \right) \\</description></item><item><title>더핑 오실레이터</title><link>https://freshrimpsushi.github.io/ko/posts/1731/</link><pubDate>Tue, 06 Oct 2020 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/1731/</guid><description>더핑 방정식1 $$ \ddot{x} + \delta \dot{x} + \alpha x + \beta x^{3} = \gamma \cos \left( \omega t \right) $$ 변수 $t$: 시간을 나타낸다. $x$: $1$차원 상에서 (이를 테면 입자의) 위치를 나타낸다. $\dot{x}$: (입자의) 속도</description></item><item><title>수리통계학에서의 통계량과 추정량</title><link>https://freshrimpsushi.github.io/ko/posts/1730/</link><pubDate>Sun, 04 Oct 2020 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/1730/</guid><description>정의 1 2 확률 변수 $X$ 의 샘플 $X_{1} , \cdots , X_{n}$ 의 함수 $T$ 를 통계량statistic이라 한다. $$ T := T \left( X_{1} , \cdots , X_{n} \right) $$ $X$ 의 분포 함수가 $f(x; \theta)$ 혹은 $p(x; \theta)$ 와 같이 나타날</description></item><item><title>랴푸노프 안정성과 오빗 안정성</title><link>https://freshrimpsushi.github.io/ko/posts/1716/</link><pubDate>Fri, 02 Oct 2020 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/1716/</guid><description>정의 랴푸노프 안정성 1 거리공간 $\left( X , \left\| \cdot \right\| \right)$ 과 함수 $f : X \to X$ 에 대해 다음과 같은 벡터필드가 미분 방정식으로 주어져 있다고 하자. $$ \dot{x} = f(x) $$ $t_{0} \in \mathbb{R}$ 이라 하자</description></item><item><title>수리통계학에서의 랜덤 샘플</title><link>https://freshrimpsushi.github.io/ko/posts/1715/</link><pubDate>Wed, 30 Sep 2020 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/1715/</guid><description>정의 1 확률 변수 $X$ 가 실제로 뽑힌 것을 실현realization이라 하고 보통 소문자 $x$ 로 나타낸다. 확률 변수 $X$ 와 같은 확률 분포에서 샘플 사이즈sample</description></item><item><title>비선형 시스템의 선형화</title><link>https://freshrimpsushi.github.io/ko/posts/1709/</link><pubDate>Mon, 28 Sep 2020 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/1709/</guid><description>빌드업 공간 $\left( X, \left\| \cdot \right\| \right)$ 와 함수 $f : X \to X$ 에 대해 다음과 같은 벡터필드가 미분 방정식으로 주어져 있다고 하자. $$ \dot{x} = f(x) $$ 위와 같은 미분방정식로 표현되는 시스템</description></item><item><title>코시 분포: 모평균이 존재하지 않는 분포</title><link>https://freshrimpsushi.github.io/ko/posts/147/</link><pubDate>Wed, 23 Sep 2020 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/147/</guid><description>정의 다음과 같은 확률 밀도 함수를 가지는 연속 확률 분포 $C$ 를 코시 분포라고 한다. $$ f(x) = {1 \over \pi} {1 \over {x^2 + 1}} \qquad , x \in \mathbb{R} $$ 설명 모든 확률 분포가 평균과 분산을 가질 것 같</description></item><item><title>미분방정식로 표현되는 시스템의 오빗과 리미트 사이클</title><link>https://freshrimpsushi.github.io/ko/posts/1693/</link><pubDate>Tue, 22 Sep 2020 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/1693/</guid><description>정의 공간 $X$ 와 함수 $f : X \to X$ 에 대해 다음과 같은 벡터필드가 미분 방정식으로 주어져 있다고 하자. $$ \dot{x} = f(x) $$ 초기시점 $t_{0}$ 과 초기점 $x_{0}$ 에 대한 위 자율 시스템의 플로우</description></item><item><title>t-분포의 평균과 분산</title><link>https://freshrimpsushi.github.io/ko/posts/1669/</link><pubDate>Sun, 20 Sep 2020 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/1669/</guid><description>공식 $X \sim t (\nu)$ 이면 $$ E(X) = 0 \qquad , \nu &amp;gt;1 \\ \Var(X) = {{ \nu } \over { \nu - 2 }} \qquad , \nu &amp;gt; 2 $$ 유도 전략: t-분포 역시 카이제곱분포와 비슷하게 적률 공식이 알려져 있어, 이 공식</description></item><item><title>리만 함수 방정식과 리만 제타 함수의 자명근</title><link>https://freshrimpsushi.github.io/ko/posts/1668/</link><pubDate>Fri, 18 Sep 2020 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/1668/</guid><description>공식 다음을 리만 함수 방정식이라 한다. $$ \zeta (s) = 2^{s} \pi^{s - 1} \sin \left( {{ \pi s } \over { 2 }} \right) \Gamma (1-s) \zeta (1-s) $$ $\Gamma$ 는 감마 함수다. $\zeta$ 는 리만 제타 함수다. 설명 리만 함수 방정식에서</description></item><item><title>t-분포</title><link>https://freshrimpsushi.github.io/ko/posts/1667/</link><pubDate>Wed, 16 Sep 2020 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/1667/</guid><description>정의 1 자유도 $\nu &amp;gt; 0$ 에 대해 다음과 같은 확률 밀도 함수를 가지는 연속 확률 분포 $t \left( \nu \right)$ 를 t-분포라고 한다. $$ f(x) = {{ \Gamma \left( {{ \nu + 1 } \over { 2 }} \right) } \over { \sqrt{\nu \pi} \Gamma \left(</description></item><item><title>리만 자이 함수</title><link>https://freshrimpsushi.github.io/ko/posts/1664/</link><pubDate>Mon, 14 Sep 2020 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/1664/</guid><description>정의 다음과 같이 정의된 함수 $\xi$ 를 리만 자이 함수riemann xi function라고 한다. $$ \xi (s) := {{ 1 } \over { 2 }} s ( s-1) \pi^{-s/2} \zeta (s) \Gamma \left( {{ s } \over { 2 }} \right) $$ $\zeta$</description></item><item><title>독립인 정규 분포와 카이제곱 분포에서 스튜던트 t-분포 유도</title><link>https://freshrimpsushi.github.io/ko/posts/204/</link><pubDate>Sun, 13 Sep 2020 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/204/</guid><description>정리 두 확률 변수 $W,V$ 가 독립이고 $W \sim N(0,1)$, $V \sim \chi^{2} (r)$ 이라 하면 $$ T = { {W} \over {\sqrt{V/r} } } \sim t(r) $$ $N \left( \mu , \sigma^{2} \right)$ 는 평균이 $\mu$ 고 분산이 $\sigma^{2}$ 인 정규 분포다. $\chi^{2} \left( r \right)$ 은 자유도 $r$ 인 카</description></item><item><title>완벽 그래프</title><link>https://freshrimpsushi.github.io/ko/posts/1662/</link><pubDate>Sat, 12 Sep 2020 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/1662/</guid><description>정의 그래프 $G$ 의 모든 유도 서브 그래프 $H$ 가 다음을 만족하면 완벽 그래프라 한다. $$ \chi (H) = \omega (H) $$ $\chi (H)$ 는 그래프 $H$ 의 크로마틱 수다. $\omega (H)$ 는 그래프 $H$ 의 클리크 수다.</description></item><item><title>표준정규분포의 제곱은 자유도가 1인 카이제곱분포를 따름을 증명</title><link>https://freshrimpsushi.github.io/ko/posts/148/</link><pubDate>Fri, 11 Sep 2020 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/148/</guid><description>정리 $X \sim N(\mu,\sigma ^2)$면 $$ V=\left( { X - \mu \over \sigma} \right) ^2 \sim \chi ^2 (1) $$ $N \left( \mu , \sigma^{2} \right)$ 는 평균이 $\mu$ 고 분산이 $\sigma^{2}$ 인 정규 분포다. $\chi^{2} \left( 1 \right)$ 은 자유도 $1$ 인 카이제곱 분포다. 설명 정리</description></item><item><title>정규 분포의 평균과 분산</title><link>https://freshrimpsushi.github.io/ko/posts/1661/</link><pubDate>Thu, 10 Sep 2020 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/1661/</guid><description>공식 $X \sim N\left( \mu , \sigma^{2} \right)$ 면 $$ E(X) = \mu \\ \Var (X) = \sigma^{2} $$ 유도 전략: 정규 분포는 적률생성함수가 미분하기 쉬우니 그냥 바로 직접연역한다. 정규 분포의 적률생성함수: $$ m(t) =</description></item><item><title>리눅스에서 gcc 컴파일러로 c 코드 컴파일 하는 법</title><link>https://freshrimpsushi.github.io/ko/posts/1653/</link><pubDate>Tue, 08 Sep 2020 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/1653/</guid><description>가이드 보통 C/C++을 이용한 프로그램 개발은 윈도우즈에서 비주얼 스튜디오를 쓰는 것이 권장되나, 간단한 테스트나 수치계산, 시뮬레이션 등을 리눅스로 진행할</description></item><item><title>정규분포</title><link>https://freshrimpsushi.github.io/ko/posts/1645/</link><pubDate>Sun, 06 Sep 2020 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/1645/</guid><description>정의 평균 $\mu \in \mathbb{R}$ 과 분산 $\sigma^{2} &amp;gt; 0$ 에 대해 다음과 같은 확률 밀도 함수를 가지는 연속 확률 분포 $N \left( \mu,\sigma^{2} \right)$ 를 정규 분포normal distribution라고 한다. $$</description></item><item><title>야코비 세타 함수</title><link>https://freshrimpsushi.github.io/ko/posts/1644/</link><pubDate>Fri, 04 Sep 2020 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/1644/</guid><description>정의 다음과 같이 정의된 함수 $\vartheta$ 를 야코비 세타 함수jacobi theta function라고 한다. $$ \vartheta (\tau) := \sum_{n \in \mathbb{Z}} e^{-\pi n^{2} \tau } $$ 설명 야코비 함수는 원래 더 일반적으로 정</description></item><item><title>독립인 두 카이제곱 분포에서 F-분포 유도</title><link>https://freshrimpsushi.github.io/ko/posts/1643/</link><pubDate>Wed, 02 Sep 2020 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/1643/</guid><description>정리 두 확률 변수 $U,V$ 가 독립이고 $U \sim \chi^{2} ( r_{1})$, $V \sim \chi^{2} ( r_{2})$ 이라 하면 $$ {{ U / r_{1} } \over { V / r_{2} }} \sim F \left( r_{1} , r_{2} \right) $$ 설명 두 데이터가 카이제곱 분포를 따르고 독립이라면,</description></item><item><title>푸아송 합 공식 유도</title><link>https://freshrimpsushi.github.io/ko/posts/1642/</link><pubDate>Mon, 31 Aug 2020 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/1642/</guid><description>공식 $f : \mathbb{R} \to \mathbb{C}$ 가 슈바르츠 함수라고 하자. 그러면 $$ \sum_{n \in \mathbb{Z}} f(n) = \sum_{k \in \mathbb{Z}} \widehat{f}(k) $$ 슈바르츠 함수 $f \in C^{\infty}(\mathbb{R})$ 란 $x \to \pm \infty$ 일 때 함숫값의 크기 $\left| f (x) \right|$ 가 빠르게 $0$ 으로 수렴하는</description></item><item><title>감마함수와 리만 제타 함수 디리클레 에타 함수와의 관계</title><link>https://freshrimpsushi.github.io/ko/posts/1641/</link><pubDate>Sat, 29 Aug 2020 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/1641/</guid><description>정리 $\operatorname{Re} (s) &amp;gt; 1$ 이면 $$ \zeta (s) \Gamma (s) = \mathcal{M} \left[ {{ 1 } \over { e^{x} - 1 }} \right] (s) = \int_{0}^{\infty} {{ x^{s-1} } \over { e^{x} - 1 }} dx \\ \eta (s) \Gamma (s) = \mathcal{M} \left[ {{ 1 } \over { e^{x} + 1 }} \right] (s) = \int_{0}^{\infty} {{ x^{s-1} } \over { e^{x} + 1 }} dx</description></item><item><title>작용소로써의 푸리에 변환</title><link>https://freshrimpsushi.github.io/ko/posts/1640/</link><pubDate>Thu, 27 Aug 2020 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/1640/</guid><description>정의1 함수 $f$ 의 푸리에 변환 $$ \widehat{f} (\gamma ) := \int_{\mathbb{R}} f(x) e^{-2 \pi i x \gamma} dx, \quad \gamma \in \mathbb{R} $$ 을 다음과 같은 작용소 $\mathcal{F}$와 같이 표현하기도 한다. $$ (\mathcal{F} f) (\gamma ) := \widehat{f}</description></item><item><title>L2 공간에서 트랜슬레이션, 모듈레이션, 다일레이션의 교환관계</title><link>https://freshrimpsushi.github.io/ko/posts/1639/</link><pubDate>Tue, 25 Aug 2020 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/1639/</guid><description>정리1 모든 $a, b \in \mathbb{R}$ 과 $c &amp;gt; 0$ 에 대해 $T_{a}, E_{b}, D_{c}$ 는 다음과 같은 관계를 가진다. $$ \begin{equation} (T_{a} E_{b} f ) (x) = e^{- 2 \pi i b a} (E_{b} T_{a} f ) (x) \end{equation} $$ $$ \begin{equation} (T_{a} D_{c} f ) (x) = (D_{c} T_{a/c} f ) (x) \end{equation} $$ $$ \begin{equation}</description></item><item><title>거리공간에서 연속과 균등연속</title><link>https://freshrimpsushi.github.io/ko/posts/384/</link><pubDate>Mon, 24 Aug 2020 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/384/</guid><description>정의 두 거리 공간 $\left( X , d_{X} \right)$, $\left( Y , d_{Y} \right)$와 부분집합 $E\subset X$ 에 대해 함수 $f : E \to Y$ 를 정의하자. $p \in E$라고 하자. 임의의 $\varepsilon &amp;gt; 0$ 에 대해 $$ x \in E \quad</description></item><item><title>보렐-르벡 정리</title><link>https://freshrimpsushi.github.io/ko/posts/1422/</link><pubDate>Mon, 24 Aug 2020 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/1422/</guid><description>정리 거리 공간 $(X, \rho)$ 에 대해 다음은 모두 동치다. (a) $X$ 는 컴팩트 공간이다. (b) $X$ 는 시퀀셜리 컴팩트 공간이다. (c) $X$ 는 완비 공간이고 완전 유계 공간이다. 설명 거리공간</description></item><item><title>완비 거리 공간의 성질들</title><link>https://freshrimpsushi.github.io/ko/posts/1425/</link><pubDate>Mon, 24 Aug 2020 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/1425/</guid><description>성질 $(X,d)$ 가 거리 공간이고 $K \subset X$ 라 하자. [1]: $K$ 는 완비 부분 공간이다. $\iff$ $X$ 에서 $K$가 닫힌 집합이다. [2]: $K$ 는 완전 유계 공간 $\iff$ $X$에서 닫힌 집합 $K$ 는 컴팩트이다</description></item><item><title>디리클레 에타 함수</title><link>https://freshrimpsushi.github.io/ko/posts/1635/</link><pubDate>Sun, 23 Aug 2020 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/1635/</guid><description>정의 다음과 같이 정의된 함수 $\eta : \mathbb{C} \to \mathbb{C}$ 를 디리클레 에타 함수dirichlet eta function라고 한다. $$ \eta (s) := \sum_{n \in \mathbb{N}} (-1)^{n-1} n^{-s} $$ 디리클레 에타 함수는 교대</description></item><item><title>L2 공간에서 트랜슬레이션, 모듈레이션, 다일레이션의 역작용소</title><link>https://freshrimpsushi.github.io/ko/posts/1630/</link><pubDate>Fri, 21 Aug 2020 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/1630/</guid><description>정리1 $T_{a}, E_{b}, D_{c}$ 는 유니터리며, 역작용소는 다음과 같다. $$ T_{a}^{-1} = T_{-a} = \left( T_{a} \right)^{ \ast } $$ $$ E_{b}^{-1} = E_{-b} = \left( E_{b} \right)^{ \ast } $$ $$ D_{c}^{-1} = D_{1/c} = \left( D_{c} \right)^{ \ast } $$ 이때 $T_{a}, E_{b}, D_{c}$ 는 각각 $L^{2}$ 에서 정의</description></item><item><title>하이네-보렐 정리</title><link>https://freshrimpsushi.github.io/ko/posts/377/</link><pubDate>Thu, 20 Aug 2020 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/377/</guid><description>정리 정의 실수의 부분집합 $E \subset \mathbb{R}$ 에 대해 $\displaystyle E \subset \bigcup_{\alpha \in \forall} ( x_{\alpha} , y_{\alpha})$ 을 만족하는 개구간의 집합 $\mathcal{O} = \left\{ ( x , y ) \ | \ x &amp;lt; y \right\}$ 을 $E$ 의 오픈 커버링open cover</description></item><item><title>리만 제타 함수</title><link>https://freshrimpsushi.github.io/ko/posts/1626/</link><pubDate>Wed, 19 Aug 2020 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/1626/</guid><description>정의 다음과 같이 정의된 함수 $\zeta : \mathbb{C} \setminus \left\{ 1 \right\} \to \mathbb{C}$ 를 리만 제타 함수riemann zeta Function&amp;lt;/sup라고 한다. $$ \zeta (s) := \sum_{n \in \mathbb{N}} n^{-s} = \prod_{p : \text{prime}} \left(</description></item><item><title>L2 공간의 트랜슬레이션, 모듈레이션, 다일레이션</title><link>https://freshrimpsushi.github.io/ko/posts/1616/</link><pubDate>Mon, 17 Aug 2020 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/1616/</guid><description>정의1 $a \in \mathbb{R}$ 에 대해 다음과 같이 정의된 $T_{a} : L^{2} \to L^{2}$ 를 트랜슬레이션translation, 평행이동이라 한다. $$ \left( T_{a} f \right) (x) := f(x-a) $$ $b \in \mathbb{R}$ 에 대해 다음과 같이</description></item><item><title>수론에서의 p-진수</title><link>https://freshrimpsushi.github.io/ko/posts/1707/</link><pubDate>Mon, 17 Aug 2020 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/1707/</guid><description>정의 1 소수 $p$ 와 정수 $a \in \mathbb{Z}$ 에 대해 다음과 같이 정의된 $v_{p}$ 를 $a$ 의 $p$-진수 부치$p$-adic Valuation라 한다. $$ v_{p} (a) := \sup \left\{ e \in \mathbb{Z} : p^{e} \mid a \right\}</description></item><item><title>지수승강 보조정리 증명</title><link>https://freshrimpsushi.github.io/ko/posts/1708/</link><pubDate>Mon, 17 Aug 2020 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/1708/</guid><description>정리 $n \in \mathbb{N}$, $x , y \in \mathbb{Z}$, 소수 $p \ne 2$ 가 $$ \gcd (n,p) = 1 \\ p \mid (x - y) \\ p \nmid x \\ p \nmid y $$ 를 만족하면 $$ v_{p} \left( x^{n} - y^{n} \right) = v_{p} \left( x - y \right) + v_{p} (n) $$ $v_{p} (a)$ 는 $a$ 의 $p$-진수</description></item><item><title>F-분포의 평균과 분산</title><link>https://freshrimpsushi.github.io/ko/posts/1608/</link><pubDate>Sat, 15 Aug 2020 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/1608/</guid><description>공식 $X \sim F ( r_{1} , r_{2})$ 면 $$ E(X) = {{ r_{2} } \over { r_{2} - 2 }} \qquad , r_{2} &amp;gt; 2 \\ \Var(X) = {{ 2 d_{2}^{2} (d_{1} + d_{2} - 2) } \over { d_{1} (d_{2} -2)^{2} (d_{2} - 4) }} \qquad , r_{2} &amp;gt; 4 $$ 유도 전략: F-분포 역시 카이제곱분</description></item><item><title>앤더슨-리빙스톤 정리 증명</title><link>https://freshrimpsushi.github.io/ko/posts/20/</link><pubDate>Fri, 14 Aug 2020 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/20/</guid><description>정리 1 $R$ 이 유니티 $1$ 을 가지는 가환 링이고 그 영인자들의 집합을 $Z(R)$ 라 하면 그 영인자 그래프 $\Gamma (R)$ 는 연결 그래프고 $\text{diam}(\Gamma (R)) \le 3$ $\text{diam}$ 은 그래프의 지름을 의미한다. 설명 앤더슨</description></item><item><title>산술 함수의 부분합에 대한 일반화된 디리클레 곱 표현</title><link>https://freshrimpsushi.github.io/ko/posts/1607/</link><pubDate>Thu, 13 Aug 2020 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/1607/</guid><description>정리 1 $h = f \ast g$ 인 산술 함수 $f,g,h$ 에 대해 $F, G, H$ 를 다음과 같이 정의하자. $$ F (x) := \sum_{n \le x} f(x) \\ G (x) := \sum_{n \le x} g(x) \\ H (x) := \sum_{n \le x} h(x) $$ 그러면 $$ H = f \circ G = g \circ F $$</description></item><item><title>F-분포</title><link>https://freshrimpsushi.github.io/ko/posts/1606/</link><pubDate>Tue, 11 Aug 2020 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/1606/</guid><description>정의 1 자유도 $r_{1}, r_{2} &amp;gt; 0$ 에 대해 다음과 같은 확률 밀도 함수를 가지는 연속 확률 분포 $F \left( r_{1} , r_{2} \right)$ 를 F-분포라고 한다. $$ f(x) = {{ 1 } \over { B \left( r_{1}/2 , r_{2} / 2 \right) }} \left( {{ r_{1}</description></item><item><title>영인자 그래프</title><link>https://freshrimpsushi.github.io/ko/posts/1604/</link><pubDate>Sun, 09 Aug 2020 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/1604/</guid><description>정의 가환 링 $R$ 이 주어져 있다고 하자. $R$ 의 영인자 집합을 $Z(R)$ 이라고 할 때, 다음과 같이 정의된 그래프 $\Gamma (R)$ 을 $R$ 에 대한 영인자 그래프zero divisor graph라고 한다.</description></item><item><title>일반화된 디리클레 곱</title><link>https://freshrimpsushi.github.io/ko/posts/1603/</link><pubDate>Fri, 07 Aug 2020 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/1603/</guid><description>정의 1 $F : \mathbb{R}^{+} \to \mathbb{C}$ 는 $x \in (0,1)$ 에서 $F(x) = 0$ 인 함수라고 하자. 임의의 산술 함수 $\alpha$ 에 대해 다음과 같은 연산 $\circ$ 을 일반화된 디리클레 곱이라 정의한다. $$ (\alpha \circ F)(x) := \sum_{n \le x} \alpha</description></item><item><title>카이제곱 분포의 평균과 분산</title><link>https://freshrimpsushi.github.io/ko/posts/1601/</link><pubDate>Wed, 05 Aug 2020 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/1601/</guid><description>공식 $X \sim \chi^{2} (r)$ 이면 $$ E(X) = r \\ \Var (X) = 2r $$ 유도 전략: 카이제곱분포는 고맙게도 적률 공식이 알려져있다. 카이제곱 분포의 적률: $X \sim \chi^{2} (r)$ 이라고 하자. $k &amp;gt; - r/ 2$</description></item><item><title>카이제곱 분포</title><link>https://freshrimpsushi.github.io/ko/posts/1600/</link><pubDate>Sat, 01 Aug 2020 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/1600/</guid><description>정의 1 자유도 $r &amp;gt; 0$ 에 대해 다음과 같은 확률 밀도 함수를 가지는 연속 확률 분포 $\chi^{2} (r)$ 를 카이제곱 분포chi-square distribution라고 한다. $$</description></item><item><title>독립인 두 감마 분포에서 베타 분포 유도</title><link>https://freshrimpsushi.github.io/ko/posts/1596/</link><pubDate>Tue, 28 Jul 2020 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/1596/</guid><description>정리 두 확률 변수 $X_{1},X_{2}$ 가 독립이고 $X_{1} \sim \Gamma ( \alpha_{1} , 1)$, $X_{2} \sim \Gamma ( \alpha_{2} , 1)$ 이라 하면 $$ {{ X_{1} } \over { X_{1} + X_{2} }} \sim \text{beta} \left( \alpha_{1} , \alpha_{2} \right) $$ 설명 두 데이터가 감마 분포를 따르고 독립이라면,</description></item><item><title>힐베르트 공간의 프레임</title><link>https://freshrimpsushi.github.io/ko/posts/1595/</link><pubDate>Sun, 26 Jul 2020 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/1595/</guid><description>정의1 힐베르트 공간 $H$의 시퀀스 $\left\{ \mathbf{v}_{k} \right\}_{k \in \mathbb{N}}$에 대해 다음을 만족하는 $A,B &amp;gt; 0$이 존재하면 $\left\{ \mathbf{v}_{k} \right\}_{k \in \mathbb{N}}$ 을 프레임frame이라 부르고</description></item><item><title>함수의 서포트와 연속함수 공간의 클래스</title><link>https://freshrimpsushi.github.io/ko/posts/1594/</link><pubDate>Fri, 24 Jul 2020 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/1594/</guid><description>정의 함수공간 $\mathbb{C}^{\mathbb{R}}$ 의 함수 $f : \mathbb{R} \to \mathbb{C}$ 를 생각해보자. 함수 $f$ 의 서포트support란 다음과 같이 함수값이 $0$ 이 아닌 점들의 집합에 클로져를 취한 클로즈 셋이다. $$</description></item><item><title>힐베르트 공간의 정규직교 기저와 유니터리 작용소</title><link>https://freshrimpsushi.github.io/ko/posts/1593/</link><pubDate>Wed, 22 Jul 2020 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/1593/</guid><description>정의 힐베르트공간 $H$ 의 샤우더 기저 $\left\{ \mathbf{e}_{k} \right\}_{k \in \mathbb{N}}$ 가 정규직교 시스템이면, $\left\{ \mathbf{e}_{k} \right\}_{k \in \mathbb{N}}$ 를 $H$ 의 정규직교 기저orthonormal Basis라 한다. 정리1 정규</description></item><item><title>4색 지도 문제</title><link>https://freshrimpsushi.github.io/ko/posts/1592/</link><pubDate>Mon, 20 Jul 2020 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/1592/</guid><description>빌드업 4색 지도 문제란 어떤 지도든 이웃된 구역이 서로 구별되도록 채색하는데 4가지 색이면 충분한지 묻는 문제다. 지도가 복잡할수록 색은 많아져야할 것 같지만, 바</description></item><item><title>가분 힐베르트 공간은 l2 공간과 등거리동형임을 증명</title><link>https://freshrimpsushi.github.io/ko/posts/1591/</link><pubDate>Sat, 18 Jul 2020 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/1591/</guid><description>정리1 모든 무한차원 가분 힐베르트 공간 $H$는 $\ell^{2}$와 등거리 동형이다. 설명 가분성을 가지는 힐베르트 공간이 $\ell^{2}$와 등거리</description></item><item><title>5색 정리 증명</title><link>https://freshrimpsushi.github.io/ko/posts/1590/</link><pubDate>Thu, 16 Jul 2020 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/1590/</guid><description>정리 1 모든 심플 평면 그래프는 $5$-채색가능하다. 설명 이 정리는 4색 문제와 구분하는 의미에서 5색 정리라는 이름이 붙었다. 역사적으로는 4색 정리를 증명하</description></item><item><title>가분 힐베르트 공간의 그램-슈미트 정규직교화</title><link>https://freshrimpsushi.github.io/ko/posts/1589/</link><pubDate>Tue, 14 Jul 2020 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/1589/</guid><description>정리1 모든 가분 힐베르트 공간은 정규직교 기저를 가진다. 증명 전략: 유한차원 벡터 공간에서의 그램-슈미트 정규직교화와 본질적으로 같다. 일반적인 힐베르트 공</description></item><item><title>그래프 이론에서 지도의 정의</title><link>https://freshrimpsushi.github.io/ko/posts/1586/</link><pubDate>Sun, 12 Jul 2020 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/1586/</guid><description>정의 1 $3$-연결 평면 그래프를 지도라 정의한다. 같은 에지를 사이에 두고 이웃한 페이스끼리 다른 색이 되도록 $k$ 개의 색을 칠할 수 있는 지도를 $k$-페이스 채색</description></item><item><title>벡터 공간의 리오더링</title><link>https://freshrimpsushi.github.io/ko/posts/1585/</link><pubDate>Fri, 10 Jul 2020 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/1585/</guid><description>정의 1 벡터 공간 $V$의 시퀀스 $\left\{ \mathbf{v}_{k} \right\}_{k \in \mathbb{N}}$이 주어져 있다고 하자. 주어진 전단사 $\sigma : \mathbb{N} \to \mathbb{N}$ 에 대해 다음을 $\left\{ \mathbf{v}_{k} \right\}_{k \in \mathbb{N</description></item><item><title>심플 평면 그래프의 성질</title><link>https://freshrimpsushi.github.io/ko/posts/1584/</link><pubDate>Wed, 08 Jul 2020 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/1584/</guid><description>정리 1 $G$ 가 심플 평면 그래프라고 하자. [1]: $G$ 가 연결 그래프고 $n \ge 3$ 개의 버텍스, $m$ 개의 에지를 가지면 $m \le 3n - 6$ [2]: 모든 심플 평면 그래프 $G$ 는 $\deg v \le 5$ 인 버텍스 $v</description></item><item><title>무한 차원 벡터 공간의 샤우더 베이시스</title><link>https://freshrimpsushi.github.io/ko/posts/1583/</link><pubDate>Mon, 06 Jul 2020 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/1583/</guid><description>정의1 $(X, \left\| \cdot \right\|)$를 놈 공간이라고 하자. $X$의 모든 원소 $\mathbf{x}\in X$ 에 대해 다음을 만족하는 스칼라의 시퀀스 $\left\{ a_{k} \right\}_{k \in \mathbb{N}}$ 가 유일하게 존재하면 $\left\{ \mathbf{e}_{k} \right\}_{k</description></item><item><title>추상적 듀얼 그래프</title><link>https://freshrimpsushi.github.io/ko/posts/1582/</link><pubDate>Sat, 04 Jul 2020 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/1582/</guid><description>빌드업 기하적 듀얼 그래프의 성질 [3]: 평면 그래프 $G$ 와 그 기하적 듀얼 그래프 $G^{ \ast }$ 에 대해,$C \subset E(G)$ 가 사이클 $\iff$ $C^{ \ast } \subset E \left( G^{ \ast } \right)$ 는 컷셋 추상적 듀얼 그래프는 직</description></item><item><title>조밀한 부분공간을 갖는 힐베르트 공간의 베셀 시퀀스</title><link>https://freshrimpsushi.github.io/ko/posts/1581/</link><pubDate>Thu, 02 Jul 2020 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/1581/</guid><description>정리1 힐베르트 공간 $H$가 주어져 있을 때 $\left\{ \mathbf{v}_{k} \right\}_{k \in \mathbb{N}} \subset H$와 $\overline{V} = H$인 $V \subset H$가 다음을 만족한다고 하자. $$ \sum_{k \in \mathbb{N}} \left| \left\langle \mathbf{v} , \mathbf{v}_{k} \right\rangle \right|^{2} \le B \left\| \mathbf{v} \right\|^{2} \qquad , \mathbf{v} \in V</description></item><item><title>기하적 듀얼 그래프</title><link>https://freshrimpsushi.github.io/ko/posts/1570/</link><pubDate>Tue, 30 Jun 2020 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/1570/</guid><description>정의 1 주어진 평면 그래프 $G$ 에 대해 기하적 듀얼 그래프 $G^{ \ast }$ 는 다음과 같이 만들어진다. Step 1. $G$ 의 각 페이스 $f$ 에 대응되는 버텍스 $v^{ \ast }$ 를 찍는다. Step 2. $G$ 의 각 에지</description></item><item><title>힐베르트 공간으로 일반화된 베셀 부등식 증명</title><link>https://freshrimpsushi.github.io/ko/posts/1578/</link><pubDate>Sun, 28 Jun 2020 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/1578/</guid><description>정리1 $\left\{ \mathbf{v}_{k} \right\}_{k \in \mathbb{N}}$이 힐베르트 공간 $H$의 정규직교집합이라고 하면 다음이 성립한다. (a) 모든 $\left\{ c_{k} \right\}_{k \in \mathbb{N}} \in \ell^{2}$에 대해</description></item><item><title>그래프의 k-연결성과 멩거 정리</title><link>https://freshrimpsushi.github.io/ko/posts/1576/</link><pubDate>Fri, 26 Jun 2020 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/1576/</guid><description>정의 주어진 그래프 $G$ 에 대해 컴포넌트의 수를 $\text{comp} (G)$ 라고 나타내자. 에지-연결성 다음을 만족하는 에지의 집합 $D \subset E(G)$ 를 $G$ 의 단절 집합disconnecting s</description></item><item><title>힐베르트 공간에서의 베셀 시퀀스</title><link>https://freshrimpsushi.github.io/ko/posts/1569/</link><pubDate>Wed, 24 Jun 2020 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/1569/</guid><description>정의1 힐베르트 공간 $H$의 시퀀스 $\left\{ \mathbf{v}_{k} \right\}_{k \in \mathbb{N}} \subset H$에 대해 다음을 만족하는 $B &amp;gt; 0$가 존재하면 $\left\{ \mathbf{v}_{k} \right\}_{k \in \mathbb{N}}$를 베셀 시퀀스besse</description></item><item><title>오일러의 다면체 정리 증명</title><link>https://freshrimpsushi.github.io/ko/posts/82/</link><pubDate>Tue, 23 Jun 2020 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/82/</guid><description>개요 오일러의 다면체 정리는 오일러의 표수 , 그래프 이론에서는 그냥 오일러 공식 으로도 불린다. 기하학적으로는 공간도형의 점, 선, 면이 #점-#선+#면=2 의</description></item><item><title>리즈 기저</title><link>https://freshrimpsushi.github.io/ko/posts/1568/</link><pubDate>Mon, 22 Jun 2020 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/1568/</guid><description>정의1 힐베르트 공간 $H$의 정규 직교 기저 $\left\{ \mathbf{e}_{k} \right\}_{k \in \mathbb{N}}$이 주어져 있다고 하자. 전단사 $U : H \to H$가 선형이고 유계인 작용소 모든 $k \in \</description></item><item><title>힐베르트 공간에서 l2 공간으로의 수반 작용소</title><link>https://freshrimpsushi.github.io/ko/posts/1566/</link><pubDate>Thu, 18 Jun 2020 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/1566/</guid><description>정리1 $\left\{ \mathbf{v}_k \right\}_{k \in \mathbb{N}}$이 힐베르트 공간 $H$에서 정의된 시퀀스라 하자. 유계 선형 작용소 $T : \ell^{2} \to H$ 가 다음과 같이 정의되어있다고 하자. $$</description></item><item><title>평면 그래프와 쿠라토프스키 정리</title><link>https://freshrimpsushi.github.io/ko/posts/1565/</link><pubDate>Tue, 16 Jun 2020 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/1565/</guid><description>정의 평면 그래프 그래프를 평면에 그렸을 때 에지가 겹치지 않게 그릴 수 있으면 그 그래프를 평면 그래프라 한다. 설명 평면 그래프가 그려지면서 평면 상에서 구분되는 영역</description></item><item><title>힐베르트 공간에서의 직교 사영</title><link>https://freshrimpsushi.github.io/ko/posts/1564/</link><pubDate>Sun, 14 Jun 2020 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/1564/</guid><description>정의1 힐베르트 공간 $H$의 닫힌 부분공간 $V$가 주어져있다고 하자. $\mathbf{v} \in H$가 $\mathbf{v}_{1} \in V$와 $\mathbf{v}_{2} \in V^{\perp}$에 대해 $\mathbf{v} = \mathbf{v}_{1} + \mathbf{v}_{2}$ 와 같이 나타난다고</description></item><item><title>그래프의 호메오멀피즘</title><link>https://freshrimpsushi.github.io/ko/posts/1563/</link><pubDate>Fri, 12 Jun 2020 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/1563/</guid><description>정의 1 두 그래프 $G_{1}$ 와 $G_{2}$ 가 주어져 있다고 하자. $G_{1}$ 의 어떤 세분 $G_{1} ' $ 과 $G_{2}$ 의 어떤 세분 $G_{2} ' $ 에 대해 그래프 아이소멀피즘이 존재하면 $G_{1}$ 와 $G_{2}$ 가 호메오멀픽homeo</description></item><item><title>힐베르트 공간의 수반 작용소</title><link>https://freshrimpsushi.github.io/ko/posts/1562/</link><pubDate>Wed, 10 Jun 2020 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/1562/</guid><description>빌드업1 힐베르트 공간 $\left( H, \left\langle \cdot , \cdot \right\rangle_{H} \right)$ 과 $\left( K, \left\langle \cdot , \cdot \right\rangle_{K} \right)$ 에 대해 유계 선형 작용소 $T : K \to H$ 가 주어져있다고 하자. 그러면 임의의 고정된 원소 $\mathbf{w} \in H$ 에 대해 다</description></item><item><title>그래프 컬러링과 브룩스 정리</title><link>https://freshrimpsushi.github.io/ko/posts/1561/</link><pubDate>Mon, 08 Jun 2020 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/1561/</guid><description>정의 루프가 없는 그래프 $G$ 에 대해 다음과 같은 함수 $f : V(G) \to [k]$ 를 $G$ 의 $k$-컬러링이라 한다. $$ u \sim v \implies f(u) \ne f(v) $$ 그래프 $G$ 가 $k$-컬러링을 가지면 $k$-</description></item><item><title>셀버그 항등식 증명</title><link>https://freshrimpsushi.github.io/ko/posts/1560/</link><pubDate>Sat, 06 Jun 2020 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/1560/</guid><description>정리 1 $$ \Lambda (n) \log n + \sum_{d \mid n } \Lambda (d) \Lambda \left( {{ n } \over { d }} \right) = \sum_{d \mid n} \mu (d) \log^{2} {{ n } \over { d }} $$ 증명 전략: 보이는 것만큼 어렵지 않다. 산술함수의 미분만 있다면 아주</description></item><item><title>하벨-하키미 알고리즘 증명</title><link>https://freshrimpsushi.github.io/ko/posts/1559/</link><pubDate>Thu, 04 Jun 2020 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/1559/</guid><description>정리 증가하지 않는 시퀀스 $D = (d_{1} , \cdots , d_{n})$ 가 주어져있다고 하자. $D$ 가 그래픽하다면 다음과 같은 방법으로 $D$ 의 실현 $G$ 를 찾을 수 있다. Step 1. $n$ 개의 버텍스 $v_{1} , \cdots , v_{n}$</description></item><item><title>산술 함수의 미분</title><link>https://freshrimpsushi.github.io/ko/posts/1558/</link><pubDate>Tue, 02 Jun 2020 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/1558/</guid><description>정의 1 산술 함수 $f$ 의 미분 혹은 도함수 $f '$ 를 다음과 같이 정의한다. $$ f ' (n) := f(n) \log n \qquad , n \in \mathbb{N} $$ 기초 성질 [1] 합의 미분법: $(f+g)' = f '+g'$ [2] 곱의 미분법: $\left( f \ast g \right)'</description></item><item><title>에르되시-갈라이 정리</title><link>https://freshrimpsushi.github.io/ko/posts/1557/</link><pubDate>Sat, 30 May 2020 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/1557/</guid><description>빌드업 그래프 $G$ 의 차수를 중복을 포함해 모아놓은 집합을 그래프 스코어graph Score라 하고, $G$ 의 그래프 스코어를 내림차순으로 정렬한 시퀀스를 $G$ 의 디그</description></item><item><title>산술 함수의 벨 급수</title><link>https://freshrimpsushi.github.io/ko/posts/1556/</link><pubDate>Thu, 28 May 2020 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/1556/</guid><description>정의 1 주어진 산술 함수 $f$ 와 소수 $p$ 에 대해 다음과 같이 정의된 $f_{p}(x)$ 를 모듈로 $p$ 에서 $f$ 의 벨 급수 라한다. $$ f_{p}(x) := \sum_{n=0}^{\infty} f \left( p^{n} \right) x^{n} $$ 기초 성질 [1] 유일성: 두 산술 함수 $f,g$ 가 승</description></item><item><title>레이블 트리와 케일리 정리</title><link>https://freshrimpsushi.github.io/ko/posts/1555/</link><pubDate>Tue, 26 May 2020 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/1555/</guid><description>정의 각 버텍스에 서로 다른 수가 부여된 트리를 레이블 트리라 한다. 설명 레이블은 버텍스의 집합과 같이 실제로 원소가 같은지 다른지 구분하는 것과는 다른 개념이다. 가</description></item><item><title>해석적 수론에서의 리우빌 함수</title><link>https://freshrimpsushi.github.io/ko/posts/1553/</link><pubDate>Sun, 24 May 2020 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/1553/</guid><description>정의 1 소수 $p_{1} , \cdots , p_{k}$ 에 대해 자연수 $n$ 을 $n = p_{1}^{a_{1}} \cdots p_{k}^{a_{k}}$ 과 같이 나타낸다고 하자. 다음과 같이 정의된 산술 함수 $\lambda$ 를 리우빌 함수라 한다. $$ \lambda (n) = (-1)^{a_{1} + \cdots a_{k}} $$ 기초 성질</description></item><item><title>트리 그래프</title><link>https://freshrimpsushi.github.io/ko/posts/1552/</link><pubDate>Fri, 22 May 2020 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/1552/</guid><description>정의 1 사이클이 존재하지 않는 연결 그래프를 트리라 한다. 설명 트리는 컴퓨터 공학의 자료 구조 등에서 흔히 볼 수 있는 개념으로써, 컴퓨터를 조금이라도 다루는 이공계</description></item><item><title>해석적 수론에서의 망골트 함수</title><link>https://freshrimpsushi.github.io/ko/posts/1551/</link><pubDate>Wed, 20 May 2020 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/1551/</guid><description>정의 1 다음과 같이 정의된 산술 함수 $\Lambda$ 를 망골트 함수라 한다. $$ \Lambda (n) := \begin{cases} \log p &amp;amp; n = p^{m} , p \text{ is prime}, m \in \mathbb{N} \\ 0 &amp;amp; \text{otherwise} \end{cases} $$ 기초 성질 [1] 망골트 급수: 로그 함수 $\log$ 다. 다</description></item><item><title>그래프 이론에서의 디락 정리 증명</title><link>https://freshrimpsushi.github.io/ko/posts/1550/</link><pubDate>Mon, 18 May 2020 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/1550/</guid><description>정리 1 $G$ 가 $n ( \ge 3)$ 개의 버텍스를 가진 심플 그래프라고 하자. [1] 디락 정리: $G$ 의 모든 버텍스 $v$ 에 대해 $\deg (v) \ge n / 2$ 면 $G$ 는 해밀톤 그래프다. [2] 오레 정리: $G$ 의 모</description></item><item><title>뫼비우스 역 공식 유도</title><link>https://freshrimpsushi.github.io/ko/posts/1549/</link><pubDate>Sat, 16 May 2020 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/1549/</guid><description>공식 1 $f$ 와 $g$ 가 산술 함수고 $\mu$ 는 뫼비우스 함수다. $$ f(n) = \sum_{d \mid n} g(d) \iff g(n) = \sum_{d \mid n} f(d) \mu \left( {{ n } \over { d }} \right) $$ 설명 뫼비우스 함수는 그 정의만 보았을 땐 부자연스러운</description></item><item><title>해밀톤 그래프</title><link>https://freshrimpsushi.github.io/ko/posts/1548/</link><pubDate>Thu, 14 May 2020 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/1548/</guid><description>정의 1 $G$ 가 연결 그래프라고 하자. $G$ 의 모든 버텍스를 포함하는 닫힌 패스가 존재하면 $G$ 를 해밀톤 그래프라 하고 그 사이클을 해밀턴 사이클이라 한다. 모든 버텍스를 포</description></item><item><title>해석적 수론에서의 유닛 함수</title><link>https://freshrimpsushi.github.io/ko/posts/1547/</link><pubDate>Tue, 12 May 2020 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/1547/</guid><description>정의 1 다음과 같이 정의된 산술 함수 $u$ 를 유닛 함수라 한다. $$ u(n) := 1 $$ 기초 성질 [1] 유닛 급수: 약수의 갯수 $\sigma_{0}$ 다. 다시 말해, $$ \sum_{d \mid n} u(d) = \sigma_{0} (n) $$ [2] 완전 승법성: 모</description></item><item><title>플뢰리 알고리즘 증명</title><link>https://freshrimpsushi.github.io/ko/posts/1546/</link><pubDate>Sun, 10 May 2020 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/1546/</guid><description>정의 1 $G$ 가 오일러 그래프라고 하자. 그러면 다음과 같은 방법으로 오일러 트레일을 만들 수 있다. 임의의 버텍스 $u$ 에서 시작해서 다음의 두 규칙을 따라 트레일을 만든다</description></item><item><title>쾨니히스베르크의 다리 문제와 풀이</title><link>https://freshrimpsushi.github.io/ko/posts/1542/</link><pubDate>Wed, 06 May 2020 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/1542/</guid><description>문제 1 쾨니히스베르크의 다리 문제는 다음과 같이 도시에 놓인 7개의 다리를 한 번씩만 건너면서 처음 있는 위치로 돌아올 수 있는지에 관한 것이었다. 해법을 모른다면 언</description></item><item><title>베타 분포의 평균과 분산</title><link>https://freshrimpsushi.github.io/ko/posts/97/</link><pubDate>Tue, 05 May 2020 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/97/</guid><description>공식 $X \sim \text{Beta}(\alpha,\beta)$ 면 $$ E(X)={\alpha \over {\alpha + \beta} } \\ \Var (X)={ { \alpha \beta } \over {(\alpha + \beta + 1) { ( \alpha + \beta ) }^2 } } $$ 유도 전략: 베타 분포의 정의와 감마 함수의 기본적인 성질로 직접 연역한다. 베타</description></item><item><title>오일러 그래프</title><link>https://freshrimpsushi.github.io/ko/posts/1541/</link><pubDate>Mon, 04 May 2020 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/1541/</guid><description>정의 $G$ 가 연결 그래프라고 하자. $G$ 의 모든 에지를 포함하는 닫힌 트레일이 존재하면 $G$ 를 오일러 그래프라 하고 그 트레일을 오일러 트레일이라 한다. 모든 에지를 포함하</description></item><item><title>베타 분포</title><link>https://freshrimpsushi.github.io/ko/posts/1540/</link><pubDate>Sat, 02 May 2020 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/1540/</guid><description>정의 1 $\alpha , \beta &amp;gt; 0$ 에 대해 다음과 같은 확률 밀도 함수를 가지는 연속 확률 분포 $\text{Beta}(\alpha,\beta)$ 를 베타 분포beta distribution라고 한다. $$ f(x) = {{ 1 } \over { B(\alpha,\beta) }} x^{\alpha</description></item><item><title>쾨닉의 정리 증명</title><link>https://freshrimpsushi.github.io/ko/posts/1534/</link><pubDate>Thu, 30 Apr 2020 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/1534/</guid><description>정리 1 $G$ 가 국소적으로 유한인 연결 그래프라고 하자. 그러면 모든 $v \in V(G)$ 에 대해 $v$ 가 시점인 원웨이 무한 패스가 존재한다. 증명 $G$ 는 연결 그래프이므로 $v$ 가 아닌 모든</description></item><item><title>해석적 수론에서의 오일러 토션트 함수</title><link>https://freshrimpsushi.github.io/ko/posts/1533/</link><pubDate>Tue, 28 Apr 2020 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/1533/</guid><description>정의 1 다음과 같이 정의된 산술 함수 $\varphi$ 을 토션트 함수라 한다. $$ \varphi (n) := \sum_{\gcd ( k , n ) = 1} 1 $$ 기초 성질 [1] 토션트 급수: 놈 $N$ 이다. 다시 말해, $$ \sum_{d \mid n } \varphi (d) = N(n)</description></item><item><title>그래프의 오리엔테이션</title><link>https://freshrimpsushi.github.io/ko/posts/1532/</link><pubDate>Sun, 26 Apr 2020 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/1532/</guid><description>빌드업 유향 그래프 $D$ 가 주어져 있다고 하자. 아크의 유한 시퀀스를 유향 워크directed walk라 하고 다음과 같이 나타낸다. $$ v_{0} v_{1} , v_{1} v_{2} , \cdots , v_{m-1} v_{m} \\ v_{0}</description></item><item><title>해석적 수론에서의 뫼비우스 함수</title><link>https://freshrimpsushi.github.io/ko/posts/1531/</link><pubDate>Fri, 24 Apr 2020 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/1531/</guid><description>정의 1 소수 $p_{1} , \cdots , p_{k}$ 에 대해 자연수 $n$ 을 $n = p_{1}^{a_{1}} \cdots p_{k}^{a_{k}}$ 과 같이 나타낸다고 하자. 다음과 같이 정의된 산술 함수 $\mu$ 을 뫼비우스 함수라 한다. $$ \mu (n) := \begin{cases} 1 &amp;amp;, n=1 \\ (-1)^{k} &amp;amp;, a_{1}</description></item><item><title>그래프에서의 거리, 네이버후드, 지름, 둘레</title><link>https://freshrimpsushi.github.io/ko/posts/1530/</link><pubDate>Wed, 22 Apr 2020 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/1530/</guid><description>정의 그래프 $G$ 에서 시점이 $v \in V(G)$ 고 종점이 $w \in V(G)$ 인 패스의 집합을 $P(v,w)$ 이라 하고 $v \in V(G)$ 를 포함하는 사이클의 집합을 $C(v)$ 라 하자. 그리고 워크 $x$ 의 길이를 $l(x)$ 과 같이 나타내</description></item><item><title>해석적 정수론에서의 놈</title><link>https://freshrimpsushi.github.io/ko/posts/1529/</link><pubDate>Mon, 20 Apr 2020 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/1529/</guid><description>정의 1 다음과 같이 정의된 산술 함수 $N$ 을 놈이라 한다. $$ N(n) := n $$ 기초 성질 [1] 놈 급수: 시그마 함수 $\sigma = \sigma_{1}$ 다. 다시 말해, $$ \sum_{d \mid n } N(d) = \sigma_{1}(n) $$ [2] 완전 승법성: 모든</description></item><item><title>그래프 이론에서의 워크, 트레일, 패스, 사이클</title><link>https://freshrimpsushi.github.io/ko/posts/1528/</link><pubDate>Sat, 18 Apr 2020 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/1528/</guid><description>정의 1 그래프 $G$ 가 주어져 있다고 하자. 에지의 유한 시퀀스를 워크라 하고 다음과 같이 나타낸다. $$ v_{0} v_{1} , v_{1} v_{2} , \cdots , v_{m-1} v_{m} \\ v_{0} \rightarrow v_{1} \rightarrow v_{2} \rightarrow \cdots \rightarrow v_{m-1} \rightarrow v_{m} $$ 이 때 $v_{0}$ 을 시</description></item><item><title>해석적 수론에서의 디바이저 함수</title><link>https://freshrimpsushi.github.io/ko/posts/1527/</link><pubDate>Thu, 16 Apr 2020 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/1527/</guid><description>정의 1 $\alpha \in \mathbb{C}$ 에 대해 다음과 같이 정의된 $\sigma_{\alpha} : \mathbb{N} \to \mathbb{C}$ 을 디바이저 함수라 부른다. $$ \sigma_{\alpha} (n) := \sum_{d \mid n} d^{\alpha} $$ 기초 성질 [1] 승법성: $\gcd (m,n) = 1$ 을 만족하는 모든 $m, n \in \mathbb{N}$ 에 대해</description></item><item><title>무한 그래프</title><link>https://freshrimpsushi.github.io/ko/posts/1526/</link><pubDate>Tue, 14 Apr 2020 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/1526/</guid><description>정의 1 그래프 $G$ 의 버텍스 집합 $V(G)$ 나 에지 집합 $E(G)$ 가 무한 집합이면 $G$ 를 무한 그래프라고 한다. $V(G)$ 와 $E(G)$ 가 모두 가산 집합인 무한 그래프 $G$ 를 가산 그래프countabl</description></item><item><title>승법적 함수의 아벨리안 그룹</title><link>https://freshrimpsushi.github.io/ko/posts/1525/</link><pubDate>Sun, 12 Apr 2020 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/1525/</guid><description>정리 1 승법적 함수 들의 집합 $M$ 과 이항 연산 $\ast$ 에 대해 $(M,*)$ 는 아벨리안 그룹이다. 설명 산술 함수의 집합 $A$ 가 컨볼루션 $\ast$과 더불어 아벨리안 그룹 $(A,*)$ 가 되듯, 승</description></item><item><title>이분 그래프</title><link>https://freshrimpsushi.github.io/ko/posts/1524/</link><pubDate>Fri, 10 Apr 2020 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/1524/</guid><description>정의 1 그래프 $G$ 의 버텍스 $V(G)$ 에 대해 파티션 $\left\{ A,B \right\}$ 가 존재하고 모든 $xy \in E(G)$ 에 대해 $x \in A, y \in B$ 혹은 $x \in B , y \in A$ 이면 $G$ 를 이분 그래프라 부르고 $G = G(A,B)$ 와 같이 나타</description></item><item><title>디리클레 곱과 승법적 성질</title><link>https://freshrimpsushi.github.io/ko/posts/1523/</link><pubDate>Wed, 08 Apr 2020 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/1523/</guid><description>정리 1 [1]: $f$ 와 $g$ 가 승법적 함수면 $f \ast\ g$ 도 승법적 함수다. [2]: $g$ 와 $f \ast g$ 가 승법적 함수면 $f$ 도 승법적 함수다. 설명 이 성질들은 승법적 함수들의 대수적인 성질을 논할</description></item><item><title>감마 분포와 카이제곱 분포의 관계</title><link>https://freshrimpsushi.github.io/ko/posts/135/</link><pubDate>Tue, 07 Apr 2020 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/135/</guid><description>정리 $$ \Gamma \left( { r \over 2 } , 2 \right) \iff \chi ^2 (r) $$ 설명 감마 분포와 카이제곱 분포는 위와 같은 성질을 가진다. 증명 전략: 두 분포의 적률생성함수가 같은 형태로 나타날 수 있음</description></item><item><title>레귤러 그래프</title><link>https://freshrimpsushi.github.io/ko/posts/1522/</link><pubDate>Mon, 06 Apr 2020 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/1522/</guid><description>정의 1 모든 버텍스의 차수가 같은 그래프를 레귤러 그래프regular graph라고 한다. 특히 모든 버텍스의 차수가 $r$ 이면 $r$-레귤러 그래프라고 한다.</description></item><item><title>감마 분포와 지수 분포의 관계</title><link>https://freshrimpsushi.github.io/ko/posts/133/</link><pubDate>Sun, 05 Apr 2020 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/133/</guid><description>정리 $$ \Gamma \left(1, { 1 \over \lambda } \right) \iff \text{exp} (\lambda) $$ 설명 지수 분포의 직관적인 정의를 생각해보면 어떤 사건이 일어날때까지 걸리는 시간에 관심이 있는 것이다. 이산 확률 분포로 따지자</description></item><item><title>산술 함수의 승법적 성질</title><link>https://freshrimpsushi.github.io/ko/posts/1521/</link><pubDate>Sat, 04 Apr 2020 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/1521/</guid><description>정의 1 $\forall n \in \mathbb{N}$ 에 대해 $f(n) = 0$ 은 아닌 산술 함수 $f$ 가 다음을 만족시키면 승법적 함수라 한다. $$ f(mn) = f(m) f(n) \qquad,\gcd(m,n)=1 $$ 승법적 함수가 다음 조건을 만족시키면 완전 승법적 함수라</description></item><item><title>감마 분포와 푸아송 분포의 관계</title><link>https://freshrimpsushi.github.io/ko/posts/98/</link><pubDate>Fri, 03 Apr 2020 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/98/</guid><description>정리 모든 자연수 $k$ 에 대해 다음이 성립한다. $$ \int_{\mu}^{\infty} { { z^{k-1} e^{-z} } \over { \Gamma (k) } } dz = \sum_{x=0}^{k-1} { { {\mu}^{x} e^{-\mu} } \over {x!} } $$ $\Gamma$ 는 감마함수다. 설명 $k, \theta &amp;gt; 0$ 에 대해 다음과 같은 확률 밀도</description></item><item><title>널 그래프와 컴플리트 그래프</title><link>https://freshrimpsushi.github.io/ko/posts/1520/</link><pubDate>Thu, 02 Apr 2020 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/1520/</guid><description>정의 1 심플 그래프 $G$ 가 주어져 있다고 하자. $E(G) = \emptyset$ 이면 $G$ 를 널 그래프라고 한다. $E \left( \overline{G} \right) = \emptyset$ 이면 $G$ 를 컴플리트 그래프라고 한다. 설명 널 그래프는 말 그대로 비어</description></item><item><title>감마 분포의 평균과 분산</title><link>https://freshrimpsushi.github.io/ko/posts/132/</link><pubDate>Wed, 01 Apr 2020 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/132/</guid><description>공식 확률변수 $X$ 가 감마분포 $\Gamma \left( k , \theta \right)$ 에 대해 $X \sim \Gamma \left( k , \theta \right)$ 라고 하자. $$ E(X) = k \theta \\ \Var (X) = k \theta^{2} $$ 유도 전략: 감마 분포의 정의와 감마 함수의 기본적인 성질</description></item><item><title>감마 분포</title><link>https://freshrimpsushi.github.io/ko/posts/1517/</link><pubDate>Tue, 31 Mar 2020 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/1517/</guid><description>정의 1 $k, \theta &amp;gt; 0$ 에 대해 다음과 같은 확률 밀도 함수를 가지는 연속 확률 분포 $\Gamma ( k , \theta )$ 를 감마 분포gamma distribution라고 한다. $$ f(x) = {{ 1 }</description></item><item><title>그래프 컴플리먼트</title><link>https://freshrimpsushi.github.io/ko/posts/1515/</link><pubDate>Sun, 29 Mar 2020 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/1515/</guid><description>정의 1 심플 그래프 $G$ 에 대해 다음을 만족하는 그래프 $\overline{G}$ 를 $G$ 의 컴플리먼트라 한다. $$ V \left( \overline{G} \right) = V(G) \\ vw \in E \left( \overline{G} \right) \iff vw \notin E(G) $$ 설명 보통의 수학에서 컴플리먼트co</description></item><item><title>산술 함수의 아벨리안 그룹</title><link>https://freshrimpsushi.github.io/ko/posts/1514/</link><pubDate>Fri, 27 Mar 2020 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/1514/</guid><description>정리 1 $f(1) \ne 0$ 이 아닌 산술 함수 들의 집합 $A = \left\{ f : \mathbb{N} \to \mathbb{C} \mid f(1) \ne 0 \right\}$ 과 이항 연산 $\ast$ 에 대해 $(A,*)$ 는 아벨리안 그룹이다. 설명 엄밀히 말하면 모든 산술 함수의 집합이 아벨</description></item><item><title>기하 분포의 무기억성</title><link>https://freshrimpsushi.github.io/ko/posts/217/</link><pubDate>Thu, 26 Mar 2020 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/217/</guid><description>정리 $X \sim \text{Geo} ( m )$ 이면 $P(X \ge s+ t ,|, X \ge s) = P(X \ge t)$ 설명 기하 분포는 어떤 사건이 일어나는 횟수에 관심을 두는 이산확률분포다. 지수 분포의 이산화라는 센스에서 생각</description></item><item><title>서브 그래프</title><link>https://freshrimpsushi.github.io/ko/posts/1513/</link><pubDate>Wed, 25 Mar 2020 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/1513/</guid><description>정의 1 그래프 $G$ 에 대해서 그래프 $H$ 가 $V(H) \subset V(G)$ 와 $ E(H) \subset E(G)$ 를 만족하면 $H$ 가 $G$ 의 서브 그래프라 한다. 설명 주의해야하는 것은 $H$ 가 $G$ 의 서브 그래프라고 $H \subset G$ 와 같이 나</description></item><item><title>지수 분포의 무기억성</title><link>https://freshrimpsushi.github.io/ko/posts/216/</link><pubDate>Tue, 24 Mar 2020 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/216/</guid><description>성질 $X \sim \exp{ ( \lambda ) }$ 이면 $P(X \ge s+ t ,|, X \ge s) = P(X \ge t)$ 설명 지수 분포는 어떤 사건이 일어나는 기간에 관심을 두는 연속확률분포다. 깊게 생각하지 않아도 수명예측이나</description></item><item><title>그래프의 집합 표현</title><link>https://freshrimpsushi.github.io/ko/posts/1512/</link><pubDate>Mon, 23 Mar 2020 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/1512/</guid><description>정의 1 두 그래프 $G_{1}$ 과 $G_{2}$ 에 대해 $V(G_{1}) \cap V(G_{2}) = \emptyset$ 이라고 하자. 두 그래프의 유니언union $G = G_{1} \cup G_{2}$ 은 버텍스 셋 $V(G_{1}) \cup V(G_{2})$ 과 에지 셋 $E (G_{1}) \cup E ( G_{2} )$ 을 가지는 그래프다.</description></item><item><title>지수 분포와 푸아송 분포의 관계</title><link>https://freshrimpsushi.github.io/ko/posts/296/</link><pubDate>Sun, 22 Mar 2020 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/296/</guid><description>정리 사건이 일어날 때 걸리는 시간 $X_{k}$ 에 대해 $X_{k} \sim \exp (\lambda)$ 이면 단위시간 당 발생하는 사건의 횟수 $N$ 에 대해 $\displaystyle N \sim \text{Poi} (\lambda)$ 설명 지수 분포와 푸아송 분포의 직관적인 정의를 생각해</description></item><item><title>지수 분포의 평균과 분산</title><link>https://freshrimpsushi.github.io/ko/posts/62/</link><pubDate>Fri, 20 Mar 2020 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/62/</guid><description>공식 $X \sim \exp ( \lambda)$ 면 $$ E(X) = {{ 1 } \over { \lambda }} \\ \Var (X) = {{ 1 } \over { \lambda^{2} }} $$ 증명 전략: 지수 분포의 정의에서 직접 연역한다. 지수 분포의 정의: $\lambda &amp;gt; 0$ 에 대해 다음과 같은</description></item><item><title>지수 분포</title><link>https://freshrimpsushi.github.io/ko/posts/1510/</link><pubDate>Thu, 19 Mar 2020 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/1510/</guid><description>정의 1 $\lambda &amp;gt; 0$ 에 대해 다음과 같은 확률 밀도 함수를 가지는 연속 확률 분포 $\exp ( \lambda)$ 를 지수 분포exponential distribution라고 한다. $$ f(x) = \lambda</description></item><item><title>다르부의 중간값 정리 증명</title><link>https://freshrimpsushi.github.io/ko/posts/1554/</link><pubDate>Wed, 18 Mar 2020 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/1554/</guid><description>정리 함수 $f : [a,b] \to \mathbb{R}$ 이 $[a,b]$ 에서 미분가능하면 $f ' (a)$ 와 $f ' (b)$ 사이의 $y_{0}$ 에 대해 $y_{0} = f ' (c)$ 를 만족하는 $c \in (a,b)$ 가 존재한다. 설명 본 포스트는 &amp;lsquo;짱지&amp;r</description></item><item><title>그래프의 행렬 표현</title><link>https://freshrimpsushi.github.io/ko/posts/1499/</link><pubDate>Tue, 17 Mar 2020 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/1499/</guid><description>정의 1 그래프 $G(V,E)$가 주어졌다고 하자. 차수 행렬 각 버텍스 $v_{i}\in V$ 의 차수 $d(v_{i})$를 간단히 $d_{i}$라고 표기하자. 다음과 같은 행</description></item><item><title>미분방정식로 표현되는 시스템의 플로우와 타임-T 맵</title><link>https://freshrimpsushi.github.io/ko/posts/1507/</link><pubDate>Sun, 15 Mar 2020 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/1507/</guid><description>정의 1 플로우 공간 $X$ 와 함수 $f : X \to X$ 에 대해 다음과 같은 벡터필드가 미분 방정식으로 주어져 있다고 하자. $$ \dot{x} = f(x) $$ 시간 변수 $t$ 와 초기값 $x_{0}$ 에 대한 자율 미분 방정</description></item><item><title>악수 딜레마 증명</title><link>https://freshrimpsushi.github.io/ko/posts/1506/</link><pubDate>Fri, 13 Mar 2020 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/1506/</guid><description>정리 1 임의의 유향 그래프에서, 입력 차수의 합과 출력 차수의 합은 같다. 설명 악수 딜레마는 유향 그래프에서의 악수 렘마라고 할 수 있다. 증명 유향 그래프에서 출력 차</description></item><item><title>미분방정식으로 표현되는 동역학계와 평형점</title><link>https://freshrimpsushi.github.io/ko/posts/1505/</link><pubDate>Wed, 11 Mar 2020 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/1505/</guid><description>정의 1 공간 $V$ 와 함수 $f : V \to V$ 에 대해 다음과 같은 벡터필드가 미분 방정식으로 주어져 있다고 하자. $$ \dot{v} = f(v) $$ 변수 $t$ 를 포함하는 미분 방정식에서 $t$ 가 명시적으로</description></item><item><title>악수 렘마 증명</title><link>https://freshrimpsushi.github.io/ko/posts/1504/</link><pubDate>Mon, 09 Mar 2020 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/1504/</guid><description>정리 1 임의의 그래프에서, 모든 버텍스의 차수의 합은 짝수다. 설명 이름의 &amp;lsquo;악수&amp;rsquo;는 보다시피 각각의 버텍스가 인접한 버텍스와 악수를</description></item><item><title>불변 집합의 카오스</title><link>https://freshrimpsushi.github.io/ko/posts/1497/</link><pubDate>Sat, 07 Mar 2020 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/1497/</guid><description>정의 1 공간 $X = \left( \mathbb{R}^{n} , \left\| \cdot \right\| \right)$ 와 스무스한 함수 $f,g : X \to X$ 에 대해 벡터필드, 맵이 다음과 같이 표현된다고 하자. $$ \dot{x} = f(x) \\ x \mapsto g(x) $$ $\phi (t, \cdot)$ 은 벡터필드 $\dot{x} = f(x)$ 의</description></item><item><title>그래프 이론에서의 차수</title><link>https://freshrimpsushi.github.io/ko/posts/1496/</link><pubDate>Thu, 05 Mar 2020 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/1496/</guid><description>정의 1 유향 그래프 $G$ 가 주어져있다고 하자. 에지 $vw$ 가 존재하면 에지가 $v$ 에서 나가고 $w$ 로 들어간다고 말한다. 버텍스 $v$ 로 들어오는 에지의 수를 입력 차수indeg</description></item><item><title>디리클레 곱에 대한 인버스</title><link>https://freshrimpsushi.github.io/ko/posts/1494/</link><pubDate>Tue, 03 Mar 2020 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/1494/</guid><description>정의 1 산술 함수 $f$ 에 대해 다음을 만족하는 산술 함수 $f^{-1}$ 가 유일하게 존재하면 $f^{-1}$ 를 $f$ 의 (디리클레) 인버스라 한다. $$ f \ast\ f^{-1} = f^{-1} \ast\ f = I $$ 여기서 $I$ 는 컨볼루션에</description></item><item><title>그래프의 아이소멀피즘</title><link>https://freshrimpsushi.github.io/ko/posts/1492/</link><pubDate>Fri, 28 Feb 2020 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/1492/</guid><description>정의 1 두 그래프 $G_{1}$ 와 $G_{2}$ 가 주어져 있다고 하자. $V(G_{1})$ 과 $V(G_{2})$ 사이에 전단사가 존재하고 $G_{1}$ 의 버텍스끼리의 에지의 수와 그에 대응하는 $G_{2}$ 의 버텍스끼리의 에지의 수가 같으면 그</description></item><item><title>푸아송 분포의 평균과 분산</title><link>https://freshrimpsushi.github.io/ko/posts/61/</link><pubDate>Thu, 27 Feb 2020 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/61/</guid><description>공식 $X \sim \text{Poi}(\lambda)$ 면 $$ E(X) = \lambda \\ \Var(X) = \lambda $$ 유도 전략: 푸아송 분포의 정의에서 직접 연역한다. 팩토리얼과 급수를 쪼개는 트릭이 중요하다. 푸아송 분포의 정의: $\lambda &amp;gt; 0$ 에 대</description></item><item><title>푸아송 분포</title><link>https://freshrimpsushi.github.io/ko/posts/1491/</link><pubDate>Wed, 26 Feb 2020 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/1491/</guid><description>정의 1 $\lambda &amp;gt; 0$ 에 대해 다음과 같은 확률 질량 함수를 가지는 이산 확률 분포 $\text{Poi} ( \lambda )$ 를 푸아송 분포poisson distribution라고 한다. $$ p(x) = {{ e^{-\lambda} \lambda^{x}</description></item><item><title>디리클레 곱에 대한 아이덴터티</title><link>https://freshrimpsushi.github.io/ko/posts/1490/</link><pubDate>Mon, 24 Feb 2020 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/1490/</guid><description>정의 1 다음과 같이 정의된 산술 함수 $I$ 를 아이덴터티 함수라 한다. $$ I(n) := \left[ {{ 1 } \over { n }} \right] $$ [1] 아이덴터티 급수: 유닛 함수 $u$ 다. 다시 말해, $$ \sum_{d \mid n}I(d) = u(n) = 1</description></item><item><title>음이항 분포의 평균과 분산</title><link>https://freshrimpsushi.github.io/ko/posts/94/</link><pubDate>Sun, 23 Feb 2020 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/94/</guid><description>공식 $X \sim \text{NB}(r, p)$ 면 $$ E(X) = {{ r (1-p) } \over { p }} \\ \Var(X) = {{ r (1-p) } \over { p^{2} }} $$ 증명 전략: 음이항 분포가 기하 분포의 일반화라는 점을 이용한다. [b] 기하분포의 일반화: $Y =</description></item><item><title>음이항 분포</title><link>https://freshrimpsushi.github.io/ko/posts/1489/</link><pubDate>Sat, 22 Feb 2020 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/1489/</guid><description>정의 1 $r \in \mathbb{N}$ 와 $p \in (0,1]$ 에 대해 다음과 같은 확률 질량 함수를 가지는 이산 확률 분포 $\text{NB}(r,p)$ 를 음이항 분포negative Binomial distribution라고 한다. $$ p(x) =</description></item><item><title>산술 함수의 디리클레 곱</title><link>https://freshrimpsushi.github.io/ko/posts/1488/</link><pubDate>Thu, 20 Feb 2020 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/1488/</guid><description>정의 1 두 산술 함수 $f$, $g$ 에 대해 다음을 만족시키는 산술 함수 $h$ 를 $f$, $g$ 의 디리클레 곱dirichlet product이라고 부른다. $$ h(n) = \sum_{d \mid n} f(d) g \left( {{ n }</description></item><item><title>기하 분포의 두가지 정의가 가지는 차이점</title><link>https://freshrimpsushi.github.io/ko/posts/295/</link><pubDate>Wed, 19 Feb 2020 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/295/</guid><description>설명 기하 분포에 대해 공부하면서 가장 당황스럽고 헷갈리는 것이 교재, 블로그, 위키마다 설명이 다르다는 것이다. 어떤 곳에서는 평균이 $\displaystyle {{1} \over {p}} $ 인데 다른 곳은 $\displaystyle</description></item><item><title>해석적 수론에서의 산술 함수</title><link>https://freshrimpsushi.github.io/ko/posts/1487/</link><pubDate>Tue, 18 Feb 2020 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/1487/</guid><description>정의 1 정의역이 자연수의 집합 $\mathbb{N}$ 이고 공역이 실수 집합 $\mathbb{R}$ 혹은 복소수 집합 $\mathbb{C}$ 인 함수를 산술 함수라 한다. 설명 해석적 정수론에서는 다양한 산술 함수의 성질과 관계에 관</description></item><item><title>기하 분포의 평균과 분산</title><link>https://freshrimpsushi.github.io/ko/posts/63/</link><pubDate>Mon, 17 Feb 2020 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/63/</guid><description>공식 $X \sim \text{Geo} (p)$ 면 $$ E(X) = {{ 1 } \over { p }} \\ \Var(X) = {{ 1-p } \over { p^{2} }} $$ 유도 기하 분포의 평균과 분산은 생각보다 쉽게 구해지지 않는다. 본 포스트에서는 유익하면서도 재미</description></item><item><title>리눅스에서 줄리아 최신 버전 설치하는 법</title><link>https://freshrimpsushi.github.io/ko/posts/1511/</link><pubDate>Mon, 17 Feb 2020 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/1511/</guid><description>가이드 줄리아 버전 1.10 이후 터미널에서 위와 같이 curl -fsSL https://install.julialang.org | sh 커맨드를 입력하면 된다. 줄리아 버전 1.10 이전 Step 1. 줄리아 다운로드 Generic Linux Binaries for x86에서 자기 CPU의 비트</description></item><item><title>기하 분포</title><link>https://freshrimpsushi.github.io/ko/posts/1486/</link><pubDate>Sun, 16 Feb 2020 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/1486/</guid><description>정의 1 $p \in (0,1]$ 에 대해 다음과 같은 확률 질량 함수를 가지는 이산 확률 분포 $\text{Geo}(p)$ 를 기하 분포geometric distribution라고 한다. $$ p(x) = p (1 - p)^{x-1} \qquad</description></item><item><title>다차원 맵의 카오스</title><link>https://freshrimpsushi.github.io/ko/posts/1485/</link><pubDate>Fri, 14 Feb 2020 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/1485/</guid><description>정의1 맵 $f : \mathbb{R}^{m} \to \mathbb{R}^{m}$ 의 바운디드 오빗 $\left\{ \mathbf{v}_{0}, \mathbf{v}_{1}, \cdots \right\}$ 이 다음을 만족하면 이 오빗을 캐어릭chaotic하다고 한다. (i): 어심토티컬리 피리어딕이 아니다. (ii): 모든 $i =</description></item><item><title>이항 분포의 평균과 분산</title><link>https://freshrimpsushi.github.io/ko/posts/60/</link><pubDate>Thu, 13 Feb 2020 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/60/</guid><description>공식 $\displaystyle X \sim \text{Bin} (n,p)$ 면 $$ E(X)=np \\ \Var(X)=npq $$ 여기서 $q : = 1-p$ 다. 유도 전략: 조합을 직접 풀어헤친다. 식이 다소 더럽긴 하지만 고등학교 과정에서 충분히 소화할 수 있다. 한번쯤은</description></item><item><title>이항 분포</title><link>https://freshrimpsushi.github.io/ko/posts/1480/</link><pubDate>Wed, 12 Feb 2020 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/1480/</guid><description>정의 1 $n \in \mathbb{N}$ 과 $p \in [0,1]$ 에 대해 다음과 같은 확률 질량 함수를 가지는 이산 확률 분포 $\text{Bin}(n,p)$ 를 이항 분포binomial distribution라고 한다. $$ p(x) = \binom{n}{x} p^{x}</description></item><item><title>1만번째까지의 소수 목록</title><link>https://freshrimpsushi.github.io/ko/posts/2339/</link><pubDate>Tue, 11 Feb 2020 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/2339/</guid><description>소수 1만번째까지의 소수 목록이다. 다운로드 2 3 5 7 11 13 17 19 23 29 31 37 41 43 47 53 59 61 67 71 73 79 83 89 97 101 103 107 109 113 127 131 137 139 149 151 157 163 167 173 179 181 191 193 197 199 211 223 227 229</description></item><item><title>확률 변수들의 선형 결합</title><link>https://freshrimpsushi.github.io/ko/posts/1479/</link><pubDate>Mon, 10 Feb 2020 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/1479/</guid><description>정의 1 확률변수 $X_{1} , \cdots , X_{n}$ 가 주어져 있다고 하자. 어떤 $(a_{1}, \cdots , a_{n}) \in \mathbb{R}^{n}$ 에 대해 $\displaystyle T := \sum_{i=1}^{n} a_{i} X_{i}$ 를 선형 결합linear Combinations이라고 한다. 설명</description></item><item><title>줄리아에서 병렬처리 하는 법</title><link>https://freshrimpsushi.github.io/ko/posts/1474/</link><pubDate>Sat, 08 Feb 2020 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/1474/</guid><description>코드 원래 생새우초밥집에는 상세한 설명을 포함하는데, 줄리아가 병렬처리를 얼마나 편하게 할 수 있는지 강조하기 위해 굳이 설명을 생략하려 한다. using Base.Threads for i in 1:10 println(i^2) end</description></item><item><title>다차원 맵의 랴푸노프 수와 그 수치적 계산법</title><link>https://freshrimpsushi.github.io/ko/posts/1472/</link><pubDate>Thu, 06 Feb 2020 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/1472/</guid><description>정의 1 스무스 맵 $\mathbf{f} : \mathbb{R}^{m} \to \mathbb{R}^{m}$ 과 초기값 $\mathbf{v}_{0} \in \mathbb{R}^{m}$ 에 대해 $J_{n} := D \mathbf{f}^{n} ( \mathbf{v}_{0}) \in \mathbb{R}^{m \times m}$ 이라고 하자. $k = 1 , \cdots , m$ 에 대해 $m$차원 단위구 $N := \left\{ \mathbf{x} \in \mathbb{R}^{m} : \left\| \mathbf{x} \right\|_{2} = 1 \right\}$ 의</description></item><item><title>정규분포를 따르는 두 확률 변수가 독립인 것과 공분산이 0인 것은 동치다</title><link>https://freshrimpsushi.github.io/ko/posts/591/</link><pubDate>Wed, 05 Feb 2020 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/591/</guid><description>정리 $$ X_{1} \sim N ( \mu_{1} , \sigma_{1} ) \\ X_{2} \sim N ( \mu_{2} , \sigma_{2} ) $$ 면 $$ X_{1} \perp X_{2} \iff \text{cov} (X_{1} , X_{2} ) = 0 $$ 설명 일반적으로 상관관계가 없다고 독립인 것은 아니다. 하지만 분포들이 정규분포</description></item><item><title>타원의 일반화: 일립소이드</title><link>https://freshrimpsushi.github.io/ko/posts/1471/</link><pubDate>Tue, 04 Feb 2020 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/1471/</guid><description>정의 선형 변환 $A \in \mathbb{R}^{m \times m}$ 에 대해 $m$차원 단위구 $N := \left\{ \mathbf{x} \in \mathbb{R}^{m} : \left\| \mathbf{x} \right\|_{2} = 1 \right\}$ 의 이미지 $AN$ 을 일립소이드라 한다. $A$ 의 아이겐 밸류 $\sigma_{1}^{2} &amp;gt; \cdots \ge \sigma_{m}^{2} \ge 0$ 와 그에 따른 단</description></item><item><title>번스타인 분포: 짝으로 독립이라고 상호 독립은 아니다</title><link>https://freshrimpsushi.github.io/ko/posts/206/</link><pubDate>Mon, 03 Feb 2020 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/206/</guid><description>정의 $(x,y,z) \in \left\{ (1,0,0), (0,1,0), (0,0,1), (1,1,1) \right\}$ 에 대해 다음과 같은 확률질량함수를 가지는 분포를 번스타인 분포bernstein distribution라고 한다. $$ p(x,y,z) = {{1} \over {4} }</description></item><item><title>확률 변수들의 상호 독립과 iid</title><link>https://freshrimpsushi.github.io/ko/posts/1469/</link><pubDate>Sun, 02 Feb 2020 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/1469/</guid><description>정의 1 확률 변수 $X_{1} , \cdots , X_{n}$ 가 다음을 만족하면 $X_{1} , \cdots , X_{n}$ 이 짝으로 독립pairwise independent이라 한다. $$ i \ne j \implies X_{i} \perp X_{j} $$ 연속 확률 변수</description></item><item><title>확률적 경사 하강법</title><link>https://freshrimpsushi.github.io/ko/posts/1464/</link><pubDate>Wed, 29 Jan 2020 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/1464/</guid><description>정의 목적 함수 $Q$ 와 러닝 레이트 $\alpha &amp;gt; 0$, 배치사이즈 $m$ 과 $i$번째 데이터에 대해 $$ \omega_{n+1} := \omega_{n} - \alpha {{ 1 } \over { n }} \sum_{i=1}^{m} \nabla Q_{i} ( \omega_{n} ) $$ 를 확률적 경사 하강법이라 한다. 설명</description></item><item><title>수리통계학에서의 확률 변수의 독립</title><link>https://freshrimpsushi.github.io/ko/posts/1461/</link><pubDate>Mon, 27 Jan 2020 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/1461/</guid><description>정의 1 두 확률 변수 $X_{1}, X_{2}$ 의 조인트 확률 밀도 함수 $f$ 혹은 확률 질량 함수 $p$ 에 대해 $X_{1}, X_{2}$ 의 확률 밀도 함수들 $f_{1}, f_{2}$ 혹은 확률 질량 함수 $p_{1}, p_{2}$ 가 다음을 만족하면 $X_{1}, X_{2}$ 가 독립이라</description></item><item><title>수학에서의 최적화 기법</title><link>https://freshrimpsushi.github.io/ko/posts/1463/</link><pubDate>Sat, 25 Jan 2020 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/1463/</guid><description>정의 함수 $f : \mathbb{R}^{n} \to \mathbb{R}$ 의 함수값이 최소가 되도록 하는 $x^{ \ast } = \argmin_{x} f(x)$ 를 구하는 문제를 최적화 문제optimization Problem라 하고, 그 문제를 푸는 알</description></item><item><title>수리통계학에서의 조건부 확률 분포</title><link>https://freshrimpsushi.github.io/ko/posts/1458/</link><pubDate>Thu, 23 Jan 2020 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/1458/</guid><description>정의1 이산 랜덤 벡터 $(X, Y)$에 대해서, $p_{X, Y}$를 $(X, Y)$의 결합 확률질량함수라고 하자. $p_{X}$를 $X$의 주변 확률질량함수라고 하자. 이 때, 다</description></item><item><title>메타 프로그래밍</title><link>https://freshrimpsushi.github.io/ko/posts/1457/</link><pubDate>Tue, 21 Jan 2020 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/1457/</guid><description>메타프로그래밍이란? 간단히 말해 프로그램이 코드를 수정하도록 하는 프로그래밍이라고 볼 수 있다. 정확하게 어떤 기법이라기보다는 그러한 개념 전반을 메타 프로그</description></item><item><title>scp로 서버에 파일 업로드하고 서버에서 다운로드 받는 법</title><link>https://freshrimpsushi.github.io/ko/posts/1456/</link><pubDate>Sun, 19 Jan 2020 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/1456/</guid><description>명령어 scp는 아마도 server copy의 줄임말로, ssh 서버를 사용할 때 업로드와 다운로드를 하는 커맨드다. 띄어쓰기와 @, :의 위치에 주의하도록 하자. 서버의 계정을</description></item><item><title>다변량 확률 변수의 변환</title><link>https://freshrimpsushi.github.io/ko/posts/1455/</link><pubDate>Fri, 17 Jan 2020 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/1455/</guid><description>공식 다변량 확률 변수 $X = ( X_{1} , \cdots , X_{n} )$ 의 조인트 확률밀도함수 $f$ 가 $f(x_{1} , \cdots , x_{n})$ 와 같이 주어져있다고 하고 다음과 같은 변환을 생각해보자. $$ y_{1} = u_{1} (x_{1} , \cdots , x_{n}) \\</description></item><item><title>줄리아의 강력한 편의 기능, 매크로</title><link>https://freshrimpsushi.github.io/ko/posts/1454/</link><pubDate>Wed, 15 Jan 2020 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/1454/</guid><description>개요 매크로는 줄리아로 코딩할 때 편의를 주는 기능들로써, 스코프 앞에 두어 실행한다. 예를 들어 자신의 프로그램이 얼마나 많은 시간을 소비하는지 알고 싶다면 다음과</description></item><item><title>R에서 폴더 내부 파일 목록 가져오는 법</title><link>https://freshrimpsushi.github.io/ko/posts/1451/</link><pubDate>Mon, 13 Jan 2020 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/1451/</guid><description>코드 setwd(&amp;#34;F:\\dsr\\project&amp;#34;) getwd() list.files(getwd()) list.files(getwd(),pattern=&amp;#34;*.csv&amp;#34;) list.files()는 여러개의 파일로 나눠진 데이터를 취합하거나 메타 프로그래밍 등에 유용하게 쓰이는 함수다: path: 첫번째 인자로써 디렉터리</description></item><item><title>줄리아에서 파이프 오퍼레이터 사용하는 법</title><link>https://freshrimpsushi.github.io/ko/posts/1450/</link><pubDate>Sat, 11 Jan 2020 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/1450/</guid><description>개요 줄리아는 데이터를 다루는데에서 강점을 내세우는만큼 파이프라인 연산자를 지원한다. 코드 julia&amp;gt; (1:5) .|&amp;gt; (x -&amp;gt; sqrt(x+2)) .|&amp;gt; sin |&amp;gt; minimum 0.4757718381527513 julia&amp;gt; minimum(sin.((x -&amp;gt; sqrt(x+2)).(1:5))) 0.4757718381527513 위의 예제 코드는 배열 $[1,2,3,4,5]$ 를 $\sqrt{x +</description></item><item><title>수리통계학에서의 다변량 확률 분포</title><link>https://freshrimpsushi.github.io/ko/posts/1449/</link><pubDate>Thu, 09 Jan 2020 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/1449/</guid><description>정의 1 표본 공간 $\Omega$ 에서 정의된 $n$ 개의 확률 변수 $X_{i}$ 에 대해 $X = (X_{1} , \cdots , X_{n})$ 를 $n$차원 랜덤 벡터random Vector라고 한다. $X$ 의 치역 $X(\Omega)$ 를 공간이라고도</description></item><item><title>줄리아에서의 람다식</title><link>https://freshrimpsushi.github.io/ko/posts/1448/</link><pubDate>Tue, 07 Jan 2020 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/1448/</guid><description>개요 줄리아에서 람다식은 다음과 같이 정의된다. (x -&amp;gt; 3x^2 - 2x + 3)(1) 이는 익명함수 $\lambda : \mathbb{Z} \to \mathbb{Z}$ 를 다음과 같이 정의하고, 거기에 $1$ 을 대입해서 $4$ 라는 함수값을 얻은 것에</description></item><item><title>돈스커의 정리</title><link>https://freshrimpsushi.github.io/ko/posts/1447/</link><pubDate>Sun, 05 Jan 2020 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/1447/</guid><description>정리 $\left\{ \xi_i \right\}_{i \in \mathbb{N}}$ 이 $(0,1)$ 에서 정의된 확률 과정이라고 하자. 함수 공간 $C[0,1]$ 에서 확률 함수 $X_{n}$ 가 다음과 같이 정의되어 있다고 하자. $$ X_{n}:= {{ 1 } \over { \sqrt{n} }} \sum_{i=1}^{\lfloor nt \rfloor} \xi_{i} + \left( nt - \lfloor</description></item><item><title>옌센 부등식의 기댓값 폼 증명</title><link>https://freshrimpsushi.github.io/ko/posts/266/</link><pubDate>Sat, 04 Jan 2020 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/266/</guid><description>정리 1 개구간 $I$ 에서 함수 $\phi$ 가 컨벡스하고 두 번 미분가능, 확률변수 $X$ 의 기댓값 $\mu$ 가 존재하며 $X \subset I $ 면 $$ \phi [ E(X) ] \le E [ \phi (X)] $$ $\phi$가 오목conca</description></item><item><title>줄리아에서 이미지 불러오고 행렬로 변환 저장하는 법</title><link>https://freshrimpsushi.github.io/ko/posts/1446/</link><pubDate>Fri, 03 Jan 2020 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/1446/</guid><description>코드 using Images cd(&amp;#34;C:/Users/rmsms/OneDrive/examples&amp;#34;) pwd() example = load(&amp;#34;example.jpg&amp;#34;) typeof(example) size(example) gray1 = Gray.(example) typeof(gray1) size(gray1) M = convert(Array{Float64},gray1) typeof(M) size(M) colorview(Gray, M.^(1/2)) save(&amp;#34;rgb.png&amp;#34;, colorview(RGB, example)) save(&amp;#34;gray1.png&amp;#34;, colorview(Gray, gray1)) save(&amp;#34;gray2.png&amp;#34;, colorview(Gray, transpose(gray1))) save(&amp;#34;gray3.png&amp;#34;, colorview(Gray, M.^(1/2))) 예제 코드를 위에서부터 간략하게 이해해보자: cd() : Change Directory, 작업 경로를 원하는 곳으로</description></item><item><title>체비셰프 부등식 증명</title><link>https://freshrimpsushi.github.io/ko/posts/34/</link><pubDate>Thu, 02 Jan 2020 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/34/</guid><description>정리 1 확률변수 $X$ 의 분산 $\sigma^2 &amp;lt; \infty$ 가 존재하면 $\mu := E(X)$ 와 어떤 양수 $k&amp;gt;0$ 에 대해 $$ P(|X-\mu| \ge k\sigma) \le {1 \over k^2} $$ 설명 비교적 형태가 간단하고 식의 조작이 쉬운데다 결과도 한 눈에 들어오</description></item><item><title>윈도우즈에서 ssh 서버 구축하는 법</title><link>https://freshrimpsushi.github.io/ko/posts/1445/</link><pubDate>Wed, 01 Jan 2020 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/1445/</guid><description>개요 윈도우는 10 버전에 들어 파워쉘PowerShell을 비롯하여 리눅스 특유의 편의 기능을 많이 제공하게 되었다. ssh 서버의 경우 GUI를 통해 아주 간단하게 설</description></item><item><title>마코프 부등식 증명</title><link>https://freshrimpsushi.github.io/ko/posts/33/</link><pubDate>Tue, 31 Dec 2019 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/33/</guid><description>정리 1 확률변수 $X$ 에 대해 함수 $u(X) \ge 0$ 를 정의하자. $E \left( u(X) \right)$ 가 존재하면 $c &amp;gt; 0$ 에 대해 $$ P(u(X) \ge c) \le {E \left( u(X) \right) \over c} $$ 설명 수많은 증명에 사용되는 보조정리로써 이를 좀</description></item><item><title>파이썬에서 is와 ==의 차이점</title><link>https://freshrimpsushi.github.io/ko/posts/1444/</link><pubDate>Tue, 31 Dec 2019 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/1444/</guid><description>코드 if type(150421) is int : print(&amp;#34;!&amp;#34;) else : print(&amp;#34;?&amp;#34;) x = [1,2] y = [1,2] x == y x is y 설명 깃허브에서 파이썬 코드를 보다보면 간혹 is라는 게 보이기도 한다. 코드가 문장처럼 편안하게 읽히는 것은</description></item><item><title>n차 적률이 존재하면 차수가 n보다 작은 적률도 존재한다</title><link>https://freshrimpsushi.github.io/ko/posts/247/</link><pubDate>Mon, 30 Dec 2019 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/247/</guid><description>정리 확률변수 $X$와 자연수 $n$ 에 대해 $E( X^n )$ 이 존재하면 $E( X^m ), m=1,2,3,\cdots, n$ 도 존재한다. 설명 어떤 차수의 적률이든 존재하기만 한다면 그보다 작은 차수의 적률은 항상 존재</description></item><item><title>타이트 확률 과정</title><link>https://freshrimpsushi.github.io/ko/posts/1443/</link><pubDate>Mon, 30 Dec 2019 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/1443/</guid><description>정의 확률 공간 $( \Omega , \mathcal{F} , P)$ 에서 확률 과정 $\left\{ X_n \right\}_{n \in \mathbb{N}}$ 이 정의되어 있다고 하자. 모든 $\varepsilon &amp;gt; 0$ 에 대해 $$\displaystyle \inf_{n \in \mathbb{N}} P\left( X_{n} \in K \right) &amp;gt; 1 - \varepsilon$$ 를 만족시키는 컴팩트 셋 $K \subset \Omega$ 가 존</description></item><item><title>적률생성함수란?</title><link>https://freshrimpsushi.github.io/ko/posts/248/</link><pubDate>Sun, 29 Dec 2019 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/248/</guid><description>정의 1 확률변수 $X$ 와 어떤 양수 $h&amp;gt;0$ 대해 $E(e^{tX})$ 이 $-h&amp;lt; t &amp;lt; h$ 에서 존재하면 $M(t) = E( e^{tX} )$ 를 $X$ 의 적률생성함수moment Generating function라고 정의한다. 설명 적률생성</description></item><item><title>줄리아에서 집합 자료형과 연산자</title><link>https://freshrimpsushi.github.io/ko/posts/1442/</link><pubDate>Sun, 29 Dec 2019 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/1442/</guid><description>개요 줄리아에서는 파이썬과 마찬가지로 집합 자료형을 지원한다. 원래 집합 자료형이 그렇듯 쓰는 사람은 요긴하게 쓰고 안 쓰는 사람은 일절 사용하지 않는데, 줄리아는</description></item><item><title>수리통계학에서의 첨도</title><link>https://freshrimpsushi.github.io/ko/posts/1271/</link><pubDate>Sat, 28 Dec 2019 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/1271/</guid><description>첨도 확률변수 $X$ 의 평균이 $\mu$, 분산이 $\sigma^2$ 라고 할 때 다음과 같이 정의된 $\gamma_{2}$ 를 $X$ 의 첨도kurtosis라고 한다. $$ \gamma_{2} := {{ E \left( X - \mu \right)^4 } \over { \sigma^4 }} $$ 데이터 $\left\{ X_{i} \right\}_{i}^{n}$ 의</description></item><item><title>파이썬에서 두 변수값 서로 바꾸는 법</title><link>https://freshrimpsushi.github.io/ko/posts/1441/</link><pubDate>Sat, 28 Dec 2019 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/1441/</guid><description>코드 변수끼리의 스왑은 흔히 아는 것처럼 임시 변수를 만들어서 옮기는 방식으로 쉽게 구현이 가능하지만, 여러가지 프로그래밍 언어를 다루는 입장에서 포인터를 주고받</description></item><item><title>수리통계학에서의 왜도</title><link>https://freshrimpsushi.github.io/ko/posts/1268/</link><pubDate>Fri, 27 Dec 2019 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/1268/</guid><description>정의 확률변수 $X$ 의 평균이 $\mu$, 분산이 $\sigma^2$ 라고 할 때 다음과 같이 정의된 $\gamma_{1}$ 를 $X$ 의 왜도skewness라고 한다. $$ \gamma_{1} := {{ E \left( X - \mu \right)^3 } \over { \sigma^3 }} $$ 데이터 $\left\{ X_{i} \right\}_{i}^{n}$ 의</description></item><item><title>공분산의 여러가지 성질들</title><link>https://freshrimpsushi.github.io/ko/posts/425/</link><pubDate>Thu, 26 Dec 2019 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/425/</guid><description>정의와 성질 평균이 각각 $\mu_{X}$, $\mu_{Y}$ 인 확률 변수 $X$, $Y$ 에 대해 $\operatorname{Cov} (X ,Y) : = E \left[ ( X - \mu_{X} ) ( Y - \mu_{Y} ) \right]$ 을 $X$ 와 $Y$ 의 공분산covariance이라고 정의한다. 공분산은</description></item><item><title>줄리아에서 배열의 슬라이싱과 인덱싱</title><link>https://freshrimpsushi.github.io/ko/posts/1437/</link><pubDate>Thu, 26 Dec 2019 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/1437/</guid><description>개요 줄리아는 R, 파이썬, 매트랩 의 장점이 모두 섞여있는 언어다. 배열은 프로그래밍의 근간이 되는만큼 그 활용에서 여러 언어들의 흔적을 찾아볼 수 있다. 코드 행렬 julia&amp;gt;</description></item><item><title>피어슨 상관계수</title><link>https://freshrimpsushi.github.io/ko/posts/57/</link><pubDate>Thu, 26 Dec 2019 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/57/</guid><description>정의 1 두 확률변수 $X, Y$ 에 대해 다음과 같이 정의된 $\rho = \rho (X,Y)$ 를 피어슨 상관계수pearson Correlation라고 한다. $$ \rho = { {\operatorname{Cov} (X,Y)} \over {\sigma_X \sigma_Y} } $$ $\sigma_{X}$, $\sigma_{Y}$ 는</description></item><item><title>평균과 분산의 성질들</title><link>https://freshrimpsushi.github.io/ko/posts/424/</link><pubDate>Wed, 25 Dec 2019 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/424/</guid><description>정리 평균 $E ( X ) = \mu_{X}$ 과 분산 $\Var (X) = E [ ( X - \mu_{X} )^2 ]$ 은 아래의 성질들을 가진다. [1]: $E(X + Y) = E(X) + E(Y)$ [2]: $E(aX + b) = a E(X) + b$ [3]: $\Var (X) \ge 0$ [4]: $\Var ( X ) = E(X^2) - \mu_{X}^2$ [5]: $\Var (aX</description></item><item><title>프리컴팩트 확률 과정</title><link>https://freshrimpsushi.github.io/ko/posts/1436/</link><pubDate>Wed, 25 Dec 2019 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/1436/</guid><description>정리 가측 공간 $(S, \mathcal{S})$ 에서 $(S ', \mathcal{S} ')$ 로 가는 연속함수들을 모아놓은 함수공간을 $\mathscr{H}:= C \left( S,S&amp;rsquo; \right)$와 같이 두고 $\left\{ h^{-1}(A&amp;rsquo;): h \in \mathscr{H} , A ' \in \mathcal{S} ' \right\}$ 가 $(S , \mathcal{S})$ 의 세퍼레이</description></item><item><title>대표값의 수리적 성질 증명</title><link>https://freshrimpsushi.github.io/ko/posts/49/</link><pubDate>Tue, 24 Dec 2019 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/49/</guid><description>정리 데이터 $X = \left\{ x_{1} , \cdots , x_{n} \right\}$ 가 주어져 있다고 하자. [0]: $\displaystyle h(\theta)=\sum_{i=1}^{n} {|x_i - \theta|}^{0}$ 가 최소가 되도록 하는 $\theta$ 는 $$ \argmin_{\theta} h \left( \theta \right) = \text{mode}(X) $$ [1]: $\displaystyle h(\theta)=\sum_{i=1}^{n} {|x_i - \theta|}^{1}$ 가 최소가 되도록 하는 $\theta$ 는 $$ \argmin_{\theta} h</description></item><item><title>그리디 알고리즘</title><link>https://freshrimpsushi.github.io/ko/posts/1434/</link><pubDate>Mon, 23 Dec 2019 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/1434/</guid><description>정의 그리디 알고리즘 이란 어떤 선택을 할 때 그 순간만을 고려해서 가장 좋은 경우를 고르는 방법이다. 설명 그리드 알고리즘은 탐욕greed이라는 이름대로 길게 보지</description></item><item><title>수리통계학에서의 기대값, 평균, 분산, 적률의 정의</title><link>https://freshrimpsushi.github.io/ko/posts/246/</link><pubDate>Mon, 23 Dec 2019 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/246/</guid><description>정의: 기대값, 평균, 분산 확률 변수 $X$ 가 주어져 있다고 하자. 연속 확률 변수 $X$ 의 확률 밀도 함수 $f(x)$ 가 $\displaystyle \int_{-\infty}^{\infty} |x| f(x) dx &amp;lt; \infty$ 를 만족하면 다음과 같이 정의된 $E(X)$ 를 $X$ 의 기대값</description></item><item><title>수리통계학에서의 확률 변수와 확률 분포</title><link>https://freshrimpsushi.github.io/ko/posts/1433/</link><pubDate>Sun, 22 Dec 2019 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/1433/</guid><description>정의 1 표본 공간 $\Omega$ 에서 확률 $P$ 가 정의되어 있다고 하자. 정의역이 표본 공간인 함수 $X : \Omega \to \mathbb{R}$ 을 확률 변수random variable라고 한다. 확률 변수의 치</description></item><item><title>측도론으로 정의되는 분포 수렴</title><link>https://freshrimpsushi.github.io/ko/posts/1432/</link><pubDate>Sat, 21 Dec 2019 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/1432/</guid><description>정의 거리 공간 $S$ 의 보렐 시그마 필드 $\mathcal{S}:= \mathcal{B}(S)$ 에 대해 가측 공간 $(S,\mathcal{S})$ 을 정의하자. 확률 공간 $(\Omega, \mathcal{F}, P)$ 에서 정의된 확률 변수 $X$ 와 확률 과정 $\left\{ X_{n} \right\}_{n \in \mathbb{N}}$ 이 $n \to \infty$ 일 때 모든 $f \in C_{b}(S)$ 에</description></item><item><title>수리통계학에서의 확률과 확률의 덧셈법칙</title><link>https://freshrimpsushi.github.io/ko/posts/1431/</link><pubDate>Fri, 20 Dec 2019 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/1431/</guid><description>정의 1 같은 조건 하에서 반복할 수 있는 시행을 임의 시행random experiment이라고 한다. 임의 시행에서 얻을 수 있는 모든 결과outcome를 모아</description></item><item><title>확률론의 혼성 정리 증명</title><link>https://freshrimpsushi.github.io/ko/posts/1430/</link><pubDate>Thu, 19 Dec 2019 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/1430/</guid><description>정리 공간 $S$ 가 거리 공간 $( S , \rho)$ 이면서 가측 공간 $(S,\mathcal{B}(S))$ 이라고 하자. 다음은 모두 동치다. (1): $P_{n} \overset{W}{\to} P$ (2): 모든 바운디드, 균등연속함수 $f$ 에 대해 $\displaystyle \int_{S} f dP_{n} \to \int_{S}f d P$ (3): 모든</description></item><item><title>확률과정론에서의 프로젝션 매핑</title><link>https://freshrimpsushi.github.io/ko/posts/1429/</link><pubDate>Wed, 18 Dec 2019 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/1429/</guid><description>정의 공간 $S$ 가 거리 공간 $( S , \rho)$ 이면서 가측 공간 $(S,\mathcal{B}(S))$ 이고 $k \in \mathbb{N}$ 이라 하자. 이산형 프로젝션 매핑: (이산 시간) $N = \left\{ n \in \mathbb{N}: n \le \xi, \xi \in [0,\infty] \right\}\subset \mathbb{N}$ 과 $S$ 의 $\displaystyle S^{\sup N}:= \prod_{n \in</description></item><item><title>폴란드 공간에서 정의되는 확률 측도는 타이트하다</title><link>https://freshrimpsushi.github.io/ko/posts/1428/</link><pubDate>Tue, 17 Dec 2019 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/1428/</guid><description>정리 거리 공간 $(S,\rho)$ 가 폴란드 공간이라고 하자. $S$ 에서 정의되는 모든 확률 측도는 타이트하다. 설명 폴란드 공간이란 가분 완비인 거리 공간을 말한다. 확률 측도의 타이트</description></item><item><title>폴란드 공간</title><link>https://freshrimpsushi.github.io/ko/posts/1427/</link><pubDate>Mon, 16 Dec 2019 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/1427/</guid><description>정의 다음의 조건들을 만족시키는 위상 공간 $X$ 를 폴란드 공간이라 한다. (i): $X$ 는 거리화 가능 공간이다. (ii): $X$ 는 가분 공간이다. (iii): $X$ 는 완비 공간이다. 설명 원어가 Polish Space</description></item><item><title>연속체 가설</title><link>https://freshrimpsushi.github.io/ko/posts/1426/</link><pubDate>Sun, 15 Dec 2019 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/1426/</guid><description>추측 연속체 가설: $\aleph_{0} = |\mathbb{N}|$ 에 대해 $\aleph_{0} &amp;lt; x &amp;lt; 2^{\aleph_{0}}$ 를 만족하는 기수 $x$ 는 존재하지 않는다. 일반 연속체 가설: 초한기수 $a = |A|$ 에 대해 $a &amp;lt; x &amp;lt; 2^{a}$ 를 만족하는 기수 $x$ 는 존재</description></item><item><title>러셀의 역설</title><link>https://freshrimpsushi.github.io/ko/posts/1423/</link><pubDate>Fri, 13 Dec 2019 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/1423/</guid><description>역설 1 모든 집합의 집합 $\mathscr{U}$ 가 존재한다면 어떤 집합 $R$ 은 $\mathscr{U}$ 에 속하면서도 속하지 않는다. 설명 기원 전 6세기, 크레타 출신의 철학자 에피메니데스는 이렇게 말했다: &amp;</description></item><item><title>부분순서 집합</title><link>https://freshrimpsushi.github.io/ko/posts/1421/</link><pubDate>Wed, 11 Dec 2019 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/1421/</guid><description>정의 1 집합 $A$ 에서의 관계 $\le$ 가 반사적, 추이적, 반대칭적이면 $\le$를 부분순서partial order이라 하고 $(A,\le)$ 를 부분순서 집합partial ordered set</description></item><item><title>완전 유계 공간</title><link>https://freshrimpsushi.github.io/ko/posts/1420/</link><pubDate>Tue, 10 Dec 2019 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/1420/</guid><description>정의 1 거리 공간 $(X,d)$ 과 $\varepsilon&amp;gt;0$ 가 주어져 있다고 하자. 모든 $x \in X$ 에 대해 $B_{d}(x,\varepsilon) \cap A_{\varepsilon} \ne \emptyset$ 을 만족하는 유한 집합 $A_{\varepsilon} \subset X$ 를 $X$ 에 대한 $\varepsilon$-그물$\va</description></item><item><title>타이트 확률 측도</title><link>https://freshrimpsushi.github.io/ko/posts/1417/</link><pubDate>Mon, 09 Dec 2019 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/1417/</guid><description>정의 공간 $S$ 가 거리 공간 $( S , \rho)$ 이면서 가측 공간 $(S,\mathcal{B}(S))$ 이라고 하자. $P$ 가 $S$ 에서 정의된 확률 측도라고 하자. 모든 $\varepsilon &amp;gt; 0$ 에 대해 $P(K) &amp;gt; 1 - \varepsilon$ 가 되도록하는 컴팩트 셋 $K$ 가</description></item><item><title>실수의 기수와 유리수의 기수의 크기 비교</title><link>https://freshrimpsushi.github.io/ko/posts/110/</link><pubDate>Sun, 08 Dec 2019 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/110/</guid><description>정리 1 $\operatorname{card}(\mathbb{Q})={{ \aleph }_{ 0 }}, \operatorname{card}(\mathbb{R})=c$ 에 대해 $$ { 2 }^{ {{ \aleph }_{ 0 }} } =c \\ {{ \aleph }_{ 0 }}&amp;lt;c $$ 설명 칸토어의 대각선 논법을 보면 짐작할 수 있듯, 유리수의 집합보다 실수의 집합이 훨씬 많은 원</description></item><item><title>줄리아에서 패키지 설치하고 사용하는 법</title><link>https://freshrimpsushi.github.io/ko/posts/1416/</link><pubDate>Sun, 08 Dec 2019 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/1416/</guid><description>방법 1 using LinearAlgebra using Pkg Pkg.add(&amp;#34;Plots&amp;#34;) Pkg.add(&amp;#34;Distributions&amp;#34;) using Plots 위의 코드는 LinearAlgebra 패키지와 Pkg 패키지를 불러오며, .add() 함수를 통해 Plots, Distribution 패키지를 설치하는 코드를 나타낸다. 패키지를 불러오는 키워드 usin</description></item><item><title>두 확률 측도가 서로 같아지는 조건</title><link>https://freshrimpsushi.github.io/ko/posts/1415/</link><pubDate>Sat, 07 Dec 2019 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/1415/</guid><description>정리 공간 $S$ 가 거리 공간 $( S , \rho)$ 이면서 가측 공간 $(S,\mathcal{B}(S))$ 이라고 하자. $\mathcal{O}$ 는 모든 열린 집합들의 집합, $\mathcal{C}$ 는 모든 닫힌 집합들의 집합이고 $P$ 와 $Q$ 는 $(S,\mathcal{B}(S))$ 에서 정의된 확률 측도다</description></item><item><title>R 패키지 설치 시 Warning in installpackages lib = CProgram FilesRR-361library is not writable 해결</title><link>https://freshrimpsushi.github.io/ko/posts/1414/</link><pubDate>Fri, 06 Dec 2019 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/1414/</guid><description>개요 R 을 처음 접하는, 그 중에서 프로그래밍은 고사하고 컴퓨터에 익숙하지조차 않지만 당장 R을 사용해야하는 사용자의 눈높이에 맞췄으므로 지나치게 설명이 자세할</description></item><item><title>칸토어의 정리 증명</title><link>https://freshrimpsushi.github.io/ko/posts/108/</link><pubDate>Thu, 05 Dec 2019 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/108/</guid><description>정리 1 임의의 집합 $X$ 와 그 멱집합 $\mathscr{P} (X)$ 에 대해 $$ \operatorname{card}(X)&amp;lt;\operatorname{card}(\mathscr{P} (X)) $$ 설명 어떤 집합이든 그 기수는 그 멱집합의 기수보다 작다는 말이다. 이미 집합론에서 말하는 무한이라는 개념에 익</description></item><item><title>확률론에서의 세퍼레이팅 클래스</title><link>https://freshrimpsushi.github.io/ko/posts/1413/</link><pubDate>Thu, 05 Dec 2019 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/1413/</guid><description>정리 가측 공간 $(S, \mathcal{B}(S))$ 에서 정의된 두 확률 $P$, $Q$ 에 대해 다음을 만족하는 $\mathcal{C}$ 를 세퍼레이팅 클래스separating class라고 한다. $$ P(A) = Q(A), \forall A \in \mathcal{C} \implies P(A) = Q(A),</description></item><item><title>칸토어-베른슈타인 정리 증명</title><link>https://freshrimpsushi.github.io/ko/posts/1412/</link><pubDate>Wed, 04 Dec 2019 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/1412/</guid><description>정리 1 집합 $A$, $B$ 에 대해 $A$ 가 $B$ 의 부분집합과 대등하고 $B$ 가 $A$ 의 부분집합과 대등하면 $A$ 와 $B$ 는 대등하다. 두 집합이 대등하다는 것은 두 집합 사이에 전단사가 존재한다</description></item><item><title>측도의 약한 수렴</title><link>https://freshrimpsushi.github.io/ko/posts/1410/</link><pubDate>Tue, 03 Dec 2019 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/1410/</guid><description>정의 공간 $S$ 가 거리 공간 $( S , \rho)$ 이면서 가측 공간 $(S,\mathcal{B}(S))$ 이라고 하자. 측도론 $S$ 에서 정의되는 측도 $\mu$ 와 측도의 시퀀스 $\left\{ \mu_n \right\}_{n \in \mathbb{N}}$ 이 $n \to \infty$ 일 때 모든 $f \in C_{b}(S)$ 에 대해 다음을</description></item><item><title>파이썬에서 numpy array로 행병합 열병합하는 법</title><link>https://freshrimpsushi.github.io/ko/posts/1409/</link><pubDate>Mon, 02 Dec 2019 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/1409/</guid><description>코드 import numpy as np a = np.array([[1,2,3]]) b = np.array([[4,5,6]]) print(a) print(b) print(np.c_[a,b]) print(np.r_[a,b]) 파이썬의 numpy 패키지는 무척 편리한 기능을 많이 제공한다. 다음의 스크린샷에서 보이다시피 객체 numpy.c_와 numpy</description></item><item><title>확률론에서의 레비 정리 증명</title><link>https://freshrimpsushi.github.io/ko/posts/1406/</link><pubDate>Sun, 01 Dec 2019 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/1406/</guid><description>정리 확률 공간 $( \Omega , \mathcal{F} , P)$ 가 주어져있다고 하자. $\eta$ 가 적분 가능한 확률 변수고 $\left\{ \mathcal{F}_{n} \right\}_{n \in \mathbb{N}}$ 가 $\mathcal{F}_{n} \subset \mathcal{F}_{n+1}$ 인 시그마 필드의 시퀀스면 $n \to \infty$ 일 때 $$ E \left( \eta | \mathcal{F}_{n} \right) \to E \left( \eta</description></item><item><title>딘킨의 파이-람다 정리</title><link>https://freshrimpsushi.github.io/ko/posts/1405/</link><pubDate>Sat, 30 Nov 2019 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/1405/</guid><description>정리 파이 시스템 $\mathcal{P}$ 가 람다 시스템 $\mathcal{L}$ 의 부분집합이면 $\mathcal{P} \subset \sigma ( \mathcal{P} ) \subset \mathcal{L}$ 을 만족하는 시그마 필드 $\sigma ( \mathcal{P} )$ 가 존재한다. $\sigma ( \mathcal{P} )$ 는 $\mathcal{P}$ 의 모든 원소를 포함하는 가장 작은</description></item><item><title>파이썬에서 큰 csv 파일 한번에 읽는 법</title><link>https://freshrimpsushi.github.io/ko/posts/1403/</link><pubDate>Fri, 29 Nov 2019 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/1403/</guid><description>코드 y_test=[] y_csv = open(&amp;#39;y_test.csv&amp;#39;, &amp;#39;r&amp;#39;, encoding=&amp;#39;utf-8&amp;#39;) rdr = csv.reader(y_csv) for line in rdr: y_test.append(line[0]) y_csv.close() 보통 csv 파일을 읽어들일 때는 위와 같이 파이썬 내장함수 open으로 열어서 한줄한줄 처리하지만, 반복문을 사용하는 시점에</description></item><item><title>파이 시스템과 람다 시스템</title><link>https://freshrimpsushi.github.io/ko/posts/1402/</link><pubDate>Thu, 28 Nov 2019 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/1402/</guid><description>정의 다음을 만족하는 $\mathcal{P}$ 을 $\pi$-시스템이라 한다. $$ A, B \in \mathcal{P} \implies A \cap B \in \mathcal{P} $$ 다음의 조건들을 만족하는 $\mathcal{L}$ 을 $\lambda$-시스템이라 한다. (i): $\emptyset</description></item><item><title>L1 수렴 마틴게일이면 클로저블 마틴게일이다</title><link>https://freshrimpsushi.github.io/ko/posts/1401/</link><pubDate>Wed, 27 Nov 2019 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/1401/</guid><description>정리 확률 공간 $( \Omega , \mathcal{F} , P)$ 과 마틴게일 $\left\{ ( X_{n} , \mathcal{F}_{n} ) \right\}$ 이 주어져 있다고 하자. 확률 과정 $\left\{ ( X_{n} , \mathcal{F}_{n} ) \right\}$ 이 확률 변수 $Y$ 로 $\mathcal{L}_{1}$하</description></item><item><title>파이썬에서 pip로 cv2 PIL 패키지 설치하는 법</title><link>https://freshrimpsushi.github.io/ko/posts/1400/</link><pubDate>Tue, 26 Nov 2019 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/1400/</guid><description>가이드 openCV 패키지와 PIL 패키지는 이미지 처리에 유용한 패키지다. 문제는 보통 예제 코드에서 두 패키지를 불러들일 때 cv2, PIL라고 하는데 막상 파이썬에서 pip를 이용</description></item><item><title>균등적분가능 마틴게일이면 L1 수렴 마틴게일이다</title><link>https://freshrimpsushi.github.io/ko/posts/1399/</link><pubDate>Mon, 25 Nov 2019 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/1399/</guid><description>정의 확률 공간 $( \Omega , \mathcal{F} , P)$ 가 주어져 있다고 하자. 확률 과정 $\left\{ X_{n} \right\}$ 이 어떤 확률 변수 $X_{\infty}$ 에 대해 다음을 만족하면 $\left\{ X_{n} \right\}$ 이 $X_{\infty}$ 로 $\mathcal{L}_{p}$ 수렴한다고 말한다. $$ \lim_{n \to \infty} \| X_{n} -</description></item><item><title>비탈리 수렴 정리</title><link>https://freshrimpsushi.github.io/ko/posts/1398/</link><pubDate>Sun, 24 Nov 2019 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/1398/</guid><description>정리 1 측도 공간 $( X , \mathcal{E} , \mu)$ 가 주어져 있다고 하자. $1 \le p &amp;lt; \infty$ 라고 할 때 함수의 시퀀스 $\left\{ f_{n} \right\}_{n \in \mathbb{N}} \subset \mathcal{L}^{p}$ 가 $f$ 로 $\mathcal{L}_{p}$ 수렴하는 것은 다음 세 가지를 모두 만족하는 것과 필</description></item><item><title>측도론으로 정의되는 확률 수렴</title><link>https://freshrimpsushi.github.io/ko/posts/1397/</link><pubDate>Sat, 23 Nov 2019 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/1397/</guid><description>확률 수렴의 어려운 정의 확률 공간 $( \Omega , \mathcal{F} , P)$ 가 주어져 있다고 하자. 확률 변수의 시퀀스 $\left\{ X_{n} \right\}_{n \in \mathbb{N}}$ 이 확률 변수 $X$ 로 측도 수렴하면 확률 수렴한다고 말하고 $X_{n} \overset{P}{\to} X$ 와</description></item><item><title>측도 수렴</title><link>https://freshrimpsushi.github.io/ko/posts/1396/</link><pubDate>Fri, 22 Nov 2019 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/1396/</guid><description>정의 1 측도 공간 $( X , \mathcal{E} , \mu)$ 가 주어져 있다고 하자. 가측 함수의 시퀀스 $\left\{ f_{n} : X \to \mathbb{R} \right\}_{n \in \mathbb{N}}$ 이 어떤 가측함수 $f : X \to \mathbb{R}$ 와 모든 $M &amp;gt;0$ 에 대해 다음을 만족하면 $f$ 로 측</description></item><item><title>집합의 기수</title><link>https://freshrimpsushi.github.io/ko/posts/1395/</link><pubDate>Thu, 21 Nov 2019 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/1395/</guid><description>정의 1 임의의 집합 $X$ 에 대해 다음의 성질들을 갖는 $\operatorname{card} X$ 를 $X$ 의 기수cardinality라고 정의한다. (i): $X = \emptyset \iff \operatorname{card} X = 0$ (ii): $A \sim B \iff \operatorname{card} A = \operatorname{card} B$ (iii): 어떤 자연</description></item><item><title>레귤러 마틴게일이면 균등적분가능 마틴게일이다</title><link>https://freshrimpsushi.github.io/ko/posts/1393/</link><pubDate>Wed, 20 Nov 2019 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/1393/</guid><description>정의 확률 공간 $( \Omega , \mathcal{F} , P)$ 가 주어져 있다고 하자. 확률 변수의 집합 $\Phi$ 가 주어져있다고 할 때, 모든 $\varepsilon&amp;gt;0$ 에 대해 $$ \sup_{ X \in \Phi } \int_{ \left( \left| X \right| \ge k \right) } \left| X \right| dP &amp;lt; \varepsilon $$ 를 만</description></item><item><title>균등적분가능성</title><link>https://freshrimpsushi.github.io/ko/posts/1392/</link><pubDate>Tue, 19 Nov 2019 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/1392/</guid><description>정의 측도 공간 $( X , \mathcal{E} , \mu)$ 가 주어져 있다고 하자. 르벡 적분 가능한 함수의 집합 $\Phi \subset \mathcal{L}^{1}$ 이 주어져있다고 할 때, 모든 $\varepsilon&amp;gt;0$ 에 대해 $$ \mu (E) &amp;lt; \delta \implies \sup_{f \in \Phi} \int_{ E } \left| f \right| d \mu</description></item><item><title>레귤러 마틴게일과 클로저블 마틴게일</title><link>https://freshrimpsushi.github.io/ko/posts/1384/</link><pubDate>Mon, 18 Nov 2019 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/1384/</guid><description>정의 확률 공간 $( \Omega , \mathcal{F} , P)$ 와 마틴게일 $\left\{ ( X_{n} , \mathcal{F}_{n} ) \right\}$ 이 주어져 있다고 하자. 만약 어떤 적분가능한 확률 변수 $\eta$ 에 대해 $X_{n} = E ( \eta | \mathcal{F}_{n} )$ 이면 $\left\{ ( X_{n} , \mathcal{F}_{n} ) \right\}$ 을 레</description></item><item><title>칸토어의 대각선 논법</title><link>https://freshrimpsushi.github.io/ko/posts/109/</link><pubDate>Mon, 18 Nov 2019 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/109/</guid><description>정리 1 열린 구간 $(0,1)$ 은 비가산집합이다. 증명 실수 집합 $\mathbb{R}$ 은 가산 집합이 아닌데, 이것은 실수 집합과 어떤 가산 집합 사이에 &amp;lsquo;일대일 대응&amp;rsquo;</description></item><item><title>가산집합과 비가산집합</title><link>https://freshrimpsushi.github.io/ko/posts/1383/</link><pubDate>Sun, 17 Nov 2019 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/1383/</guid><description>정의 1 집합 $X$ 가 유한 집합이거나 $X \sim \mathbb{N}$ 면 가산 집합이라 한다. 가산 집합이 아닌 집합을 비가산 집합이라 한다. $\mathbb{N}$ 은 자연수의 집합이다. $X \sim Y$ 의 $\sim$ 은 집합의 대등을</description></item><item><title>서브 마틴게일 수렴 정리 증명</title><link>https://freshrimpsushi.github.io/ko/posts/1382/</link><pubDate>Sat, 16 Nov 2019 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/1382/</guid><description>정리 확률 공간 $( \Omega , \mathcal{F} , P)$ 와 서브 마틴게일 $\left\{ ( X_{n} , \mathcal{F}_{n} ) \right\}$ 이 주어져 있다고 하자. $\displaystyle \sup_{n \in \mathbb{N}} E X_{n}^{+} &amp;lt; \infty$ 이라고 하면 $X_{n}$ 은 어떤 확률 변수 $X_{\infty}: \Omega \to \mathbb{R}$ 로 거의 확실히 수렴하</description></item><item><title>집합론으로 엄밀하게 정의되는 유한 집합과 무한 집합</title><link>https://freshrimpsushi.github.io/ko/posts/1381/</link><pubDate>Fri, 15 Nov 2019 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/1381/</guid><description>정의 1 두 집합 $X,Y$ 에 대해 전단사 $f : X \to Y$ 가 존재하면 $X$ 와 $Y$ 가 서로 대등하다equipotent고 하고 $X \sim Y$ 와 같이 나타낸다. 공집합이 아닌 $X$ 의 어떤 진부분</description></item><item><title>공진리란?</title><link>https://freshrimpsushi.github.io/ko/posts/399/</link><pubDate>Thu, 14 Nov 2019 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/399/</guid><description>정리 임의의 명제 $p$ 와 모순 $c$ 그리고 $A_{\alpha} \subset X$ 에 대해 다음이 성립한다. [1] 공진리: $c \implies p$ [2] 합집합: $\displaystyle \bigcup_{\alpha \in \emptyset} A_{\alpha} = \emptyset$ [3] 교집합: $\displaystyle \bigcap_{\alpha \in \emptyset} A_{\alpha} = X$ 설명 예를 들어 &amp;ld</description></item><item><title>확률과정론에서의 업크로싱</title><link>https://freshrimpsushi.github.io/ko/posts/1380/</link><pubDate>Thu, 14 Nov 2019 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/1380/</guid><description>정의 확률 공간 $( \Omega , \mathcal{F} , P)$ 와 서브 마틴게일 $\left\{ ( X_{n} , \mathcal{F}_{n} ) \right\}$ 이 주어져 있다고 하자.폐구간 $[a,b]$ 에 대해 $X_{t_{1}} \le a$ 이었다가 $X_{t_{2}} \ge b$ 가 되는 것을 업크로싱이라 한다. $N \in \mathbb{N}$</description></item><item><title>줄리아의 타입과 애노테이션</title><link>https://freshrimpsushi.github.io/ko/posts/1379/</link><pubDate>Wed, 13 Nov 2019 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/1379/</guid><description>코드 julia&amp;gt; typeof(0) Int64 julia&amp;gt; typeof(0.0) Float64 julia&amp;gt; typeof(0 == 0.0) Bool julia&amp;gt; typeof(Bool) DataType julia&amp;gt; typeof(NaN) Float64 julia&amp;gt; typeof(Inf) Float64 julia&amp;gt; typeof(&amp;#39;O&amp;#39;) Char julia&amp;gt; typeof(&amp;#34;Ohmygirl&amp;#34;) String julia&amp;gt; typeof(&amp;#34;O&amp;#34;) String 줄리아에는 온갖 타입들이 구현되어있다. $0$ 과 $0.0$ 은 같은 $0$ 이지만 다른 타입을 가지며, 보다</description></item><item><title>단사, 전사, 전단사, 역함수</title><link>https://freshrimpsushi.github.io/ko/posts/471/</link><pubDate>Tue, 12 Nov 2019 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/471/</guid><description>정의 1 $x \in X$ 이고 $y \in Y$ 그리고 $f: X \to Y$ 가 함수라고 하자. 모든 $x_{1}, x_{2} \in X$ 에 대해 $x_{1} \ne x_{2} \implies f(x_{1}) \ne f(x_{2})$ 면 $f$ 를 단사injective라고 한다. $f(X) = Y$ 면 $f$ 를 전사s</description></item><item><title>둡의 최대 부등식 증명</title><link>https://freshrimpsushi.github.io/ko/posts/1375/</link><pubDate>Tue, 12 Nov 2019 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/1375/</guid><description>정리 확률 공간 $( \Omega , \mathcal{F} , P)$ 와 서브 마틴 게일 $\left\{ ( X_{n} , \mathcal{F}_{n} ) \right\}$ 이 주어져 있다고 하자. 어떤 $N \in \mathbb{N}$ 과 $p&amp;gt;1$ 에 대해 $X_{n} \ge 0 (n \le N)$, $E X_{N}^{p} &amp;lt; \infty$ 이면 $$ E \left( \max_{n \le N} X_{n}^{p} \right) \le \left( {{ p</description></item><item><title>줄리아 프로그래밍 언어</title><link>https://freshrimpsushi.github.io/ko/posts/1374/</link><pubDate>Mon, 11 Nov 2019 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/1374/</guid><description>개요 줄리아는 MIT에서 개발되어 2012년 공개된 프로그래밍 언어로써, 생산성이 높으면서도 속도가 높은 언어를 지향한다. C나 포트란에 준하는 속도를 내면서</description></item><item><title>함수의 원상</title><link>https://freshrimpsushi.github.io/ko/posts/472/</link><pubDate>Mon, 11 Nov 2019 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/472/</guid><description>정의 1 함수 $f: X \to Y$ 와 $B \subset Y$ 에 대해 $f^{-1}(B): = \left\{ x \in X \ | \ f(x) \in B \right\}$ 를 $f$ 에 따른 $B$ 의 원상 혹은 역상이라 한다. 설명 표기는 비슷하지만 정의 자체만으로 역상과 역함수</description></item><item><title>마틴게일의 부등식들</title><link>https://freshrimpsushi.github.io/ko/posts/1370/</link><pubDate>Sun, 10 Nov 2019 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/1370/</guid><description>정리 $\left\{ (X_{n} , \mathcal{F}_{n}) \right\}$ 이 슈퍼 마틴게일이라고 하자. [1]: 모든 $\lambda &amp;gt; 0$ 에 대해 $$ \begin{align*} \lambda P \left( \max_{n \le N} X_{n} \ge \lambda \right) \le &amp;amp; E X_{1} - \int_{(\max_{n \le N} X_{n} &amp;lt; \lambda)} X_{N} dP \\ \le &amp;amp; E X_{1} + E X_{N}^{-} \text{ a.s.} \end{align*} $$ [2]: 모든 $\lambda</description></item><item><title>집합론으로 엄밀하게 정의되는 함수와 상, 수열</title><link>https://freshrimpsushi.github.io/ko/posts/470/</link><pubDate>Sun, 10 Nov 2019 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/470/</guid><description>정의 1 공집합이 아닌 두 집합 $X$, $Y$ 이 주어져 있다고 하자. 이항 관계 $f \subset (X,Y)$ 가 다음을 만족하면 함수라 하고 $f : X \to Y$ 와 같이 나타낸다. $$ (x ,y_{1}) \in f \land (x,y_{2}) \in f \implies y_{1} = y_{2}</description></item><item><title>동치관계에 의한 집합의 분할</title><link>https://freshrimpsushi.github.io/ko/posts/1051/</link><pubDate>Sat, 09 Nov 2019 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/1051/</guid><description>정리 1 집합 $X$ 상의 동치관계 $R$ 에 대해 $X / R$ 은 $X$ 의 분할이다. 설명 이 정리는 별 것 아닌 것 같아 보이지만 위상수학, 추상대수학 등 수학 전반에서 널리 쓰이고 있다.동</description></item><item><title>프로그래밍에서의 일급 객체</title><link>https://freshrimpsushi.github.io/ko/posts/1368/</link><pubDate>Sat, 09 Nov 2019 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/1368/</guid><description>정의 프로그래밍에서 일급 객체first Class Object는 다음의 조건을 만족하는 요소를 말한다. (i) 함수의 실제 매개변수가 될 수 있다. (ii) 함수의 반환 값이 될 수 있</description></item><item><title>k-평균 군집화</title><link>https://freshrimpsushi.github.io/ko/posts/1365/</link><pubDate>Fri, 08 Nov 2019 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/1365/</guid><description>알고리즘 Input $p$차원의 데이터 $N$ 개와 자연수 $k$ 가 주어져있다고 하자. Step 1. 초기화 $k$ 개의 점 $\mu_{1} , \cdots , \mu_{k}$ 을 랜덤하게 정한다. 각각의 $\mu_{j}$ 는 군집 $M_{j}$ 의 평균이 될 것이다</description></item><item><title>동치류</title><link>https://freshrimpsushi.github.io/ko/posts/1050/</link><pubDate>Fri, 08 Nov 2019 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/1050/</guid><description>정의 1 집합 $X$ 상에서 동치관계 $R$ 이 정의되어있다고 하자. $x \in X$ 에 대해 $x / R := \left\{ y \in X : y R x \right\}$ 를 $x$ 의 동치류라고 한다. 주어진 $X$ 의 모든 동치류를 모은 집합</description></item><item><title>레벤슈타인 알고리즘</title><link>https://freshrimpsushi.github.io/ko/posts/510/</link><pubDate>Thu, 07 Nov 2019 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/510/</guid><description>알고리즘 Input 문자열 $A,B$ 를 $A=[a_{i}]=(a_{1}, a_{2} , \cdots, a_{n})$ 과 $B=[b_{j}]=(b_{1}, b_{2} , \cdots, b_{m})$ 로 표현하자. Step 1. 초기화 행렬 $M_{(n+1) \times (m+1)} = [m_{x y }]$ 를 만들고 $M_{11} ← 0$ 을 대입한다. 그리고 $1$행과 $1$열을 다음과</description></item><item><title>집합의 분할</title><link>https://freshrimpsushi.github.io/ko/posts/1049/</link><pubDate>Thu, 07 Nov 2019 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/1049/</guid><description>정의 1 집합 $X$ 의 모든 부분집합 $A,B,C$ 에 대해 다음의 조건을 만족하는 $\mathscr{P} \subset 2^{X}$ 를 $X$ 의 분할이라 한다. (i): $$A,B \in \mathscr{P} \land A \ne B \implies A \cap B = \emptyset$$ (ii): $$\bigcup_{C \in \mathscr{P} } C = X$$ 설명 수식으로 나타</description></item><item><title>프로그래밍에서의 타입</title><link>https://freshrimpsushi.github.io/ko/posts/1364/</link><pubDate>Thu, 07 Nov 2019 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/1364/</guid><description>타입의 탄생 변수를 선언할 때 타입을 지정해야하는 언어를 써본 적이 있다면 거의 확실히 띠꺼움도 함께 느껴봤을 것이다. 어떤 언어들은 굳이 타입이 뭔지 정해주지 않더라</description></item><item><title>기수 정렬</title><link>https://freshrimpsushi.github.io/ko/posts/1363/</link><pubDate>Wed, 06 Nov 2019 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/1363/</guid><description>알고리즘 자리수가 $k$ 로 제한된 $n$ 개의 자연수로 이루어진 데이터가 주어져있다고 하자. 그러면 데이터는 다음의 알고리즘에 따라 정렬되며 그 시간 복잡도는 $O (n)$ 이다.</description></item><item><title>수학에서의 동치관계</title><link>https://freshrimpsushi.github.io/ko/posts/1033/</link><pubDate>Wed, 06 Nov 2019 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/1033/</guid><description>정의 1 반사적이면서 대칭적이면서 추이적인 이항관계를 동치관계라고 한다. 설명 동치관계를 수학적이지 않게 말한다면 &amp;lsquo;그게 그거&amp;rsquo;라</description></item><item><title>수학에서의 이항관계</title><link>https://freshrimpsushi.github.io/ko/posts/960/</link><pubDate>Tue, 05 Nov 2019 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/960/</guid><description>정의 1 두 집합 $X,Y$ 에 대해 $$ R := \left\{ (x,y): x \in X , y \in Y \right\} \subset X \times Y $$ 를 (이항) 관계라고 정의하고 다음과 같이 나타낸다. $$ (x,y) \in R \iff x R y $$ $x R y \iff y R^{-1} x$ 를 만족</description></item><item><title>프로그래밍 패러다임</title><link>https://freshrimpsushi.github.io/ko/posts/1361/</link><pubDate>Tue, 05 Nov 2019 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/1361/</guid><description>정의 프로그래밍 패러다임programming Paradigm이란 주어진 문제를 해결하는 프로그램을 작성할 때의 관점 내지 방법론을 말한다. 어떠한 패러다</description></item><item><title>집합의 데카르트 곱</title><link>https://freshrimpsushi.github.io/ko/posts/1360/</link><pubDate>Mon, 04 Nov 2019 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/1360/</guid><description>정의 1 임의의 두 대상 $a$, $b$ 에 대해 $(a,b)$ 를 순서쌍ordered Pair이라 한다. 임의의 두 집합 $A$, $B$ 에 대해 $a \in A$, $b \in B$ 의 순서쌍 $(a,b)$ 의 집합을 $A$, $B$ 의 데카르트 곱c</description></item><item><title>비교 정렬 알고리즘 시간 복잡도의 하한</title><link>https://freshrimpsushi.github.io/ko/posts/1359/</link><pubDate>Sun, 03 Nov 2019 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/1359/</guid><description>정리 비교 정렬 알고리즘의 시간복잡도는 아무리 좋아도 $\Omega ( n \log n )$ 이다. 설명 알고리즘이 원래 신기한 것이지만, 삽입 정렬과 같은 효율적인 알고리즘도 퀵 정렬에 밀</description></item><item><title>집합족과 첨수</title><link>https://freshrimpsushi.github.io/ko/posts/1358/</link><pubDate>Sat, 02 Nov 2019 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/1358/</guid><description>정의 원소가 집합인 집합을 패밀리family라고 한다. 패밀리의 원소를 멤버member라고 한다. 하나의 집합 $\Gamma$ 의 각 $\gamma \in \Gamma$ 에 집합 $A_{\gamma}$ 가 대응할 때 $\gamma$ 를 인덱스</description></item><item><title>비교 정렬 알고리즘들의 시간 복잡도</title><link>https://freshrimpsushi.github.io/ko/posts/1357/</link><pubDate>Fri, 01 Nov 2019 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/1357/</guid><description>정리 $n$ 개의 데이터가 주어져 있을 때, 비교 정렬 알고리즘들의 시간 복잡도는 다음과 같다. [1] 버블 정렬: $$ \Theta ( n^2 ) \\ O ( n^2 ) $$ [2] 선택 정렬: $$ \Theta ( n^2 ) \\ O ( n^2</description></item><item><title>선택 공리가 추가된 체르멜로-프렝켈 집합론</title><link>https://freshrimpsushi.github.io/ko/posts/1356/</link><pubDate>Thu, 31 Oct 2019 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/1356/</guid><description>체르멜로 공리계 [1] 외연 공리: $$ \forall A \forall B ( \forall x ( x \in A \iff x \in B) ) $$ 임의의 두 집합 $A$, $B$ 에 속한 원소가 같으면 두 집합이 같다고 하고 $A = B$ 와 같이 나타낸다. [2] 공</description></item><item><title>선택적 샘플링 정리 증명</title><link>https://freshrimpsushi.github.io/ko/posts/1355/</link><pubDate>Wed, 30 Oct 2019 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/1355/</guid><description>정리 확률 공간 $( \Omega , \mathcal{F} , P)$ 와 슈퍼 마틴게일 $\left\{ ( X_{n} , \mathcal{F}_{n} ) \right\}$ 이 주어져 있다고 하자. $\tau$ 와 $\sigma$ 가 $\sigma \le \tau$ 면서 $\mathcal{F}_{n}$ 에 대해 바운디드 정지 시간이라고하면 $$ E \left( X_{\tau} | \mathcal{F}_{\sigma} \right) \le</description></item><item><title>선택 공리</title><link>https://freshrimpsushi.github.io/ko/posts/1354/</link><pubDate>Tue, 29 Oct 2019 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/1354/</guid><description>공리 1 $$ \forall U \left( \emptyset \notin U \implies \exists f : U \to \bigcup_{X \in U \\ f(X) \in X } U \right) $$ 모든 공집합이 아닌 집합들의 집합 $U$ 에 대해 $U$ 의 모든 원소로부터 원소 하나씩을 선택하는 선택 함수 $f$ 가</description></item><item><title>정지 시간의 성질들</title><link>https://freshrimpsushi.github.io/ko/posts/1353/</link><pubDate>Mon, 28 Oct 2019 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/1353/</guid><description>정리 확률 공간 $( \Omega , \mathcal{F} , P)$ 와 마틴 게일 $\left\{ ( X_{n} , \mathcal{F}_{n} ) \right\}$ 이 주어져 있다고 하자. 정지 시간 $\tau$ 에 대해 $\mathcal{F}_{\tau}:= \left\{ A \in \mathcal{F}: A \cap ( \tau = n ) \in \mathcal{F}_{n} \right\}$ 을 $\tau$ 에 의해 유도된 시그마 필드</description></item><item><title>치환 공리꼴</title><link>https://freshrimpsushi.github.io/ko/posts/1352/</link><pubDate>Sun, 27 Oct 2019 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/1352/</guid><description>공리 $$ \forall X \left( \forall x \in X \exists ! y \left( p(x,y) \right) \implies \exists Y \forall x \in X \exists y \in Y \left( p(x,y) \right) \right) $$ 모든 함수에 대한 치역이 존재한다. 기호 $\exists !$ 는 유일하게 존재함을 의미한다. 여기서 $p(x,y)$ 는</description></item><item><title>확률과정론에서의 정지 시간</title><link>https://freshrimpsushi.github.io/ko/posts/1351/</link><pubDate>Sat, 26 Oct 2019 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/1351/</guid><description>정의 확률 공간 $( \Omega , \mathcal{F} , P)$ 이 주어져 있다고 하자. 필트레이션 $\left\{ \mathcal{F}_{n} \right\}$ 에 대해 $0$ 보다 크거나 같은 정수 값을 갖는 확률 변수 $\tau$ 가 모든 $n \in \mathbb{N}_{0}$ 에 대해 $(\tau = n) \in \mathcal{F}_{n}$ 을 만족하</description></item><item><title>정칙성 공리</title><link>https://freshrimpsushi.github.io/ko/posts/1350/</link><pubDate>Fri, 25 Oct 2019 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/1350/</guid><description>공리 $$ \forall X \left( \exists x_{0} ( x_{0} \in X ) \implies \exists y ( y \in X \land \lnot \exists x ( x \in y \land x \in X )) \right) $$ 모든 집합 $X \ne \emptyset$ 은 자기 자신과 서로소인 원소를 가진다. 설명 $X = \left\{ X \right\}$ 은 존재하</description></item><item><title>Lp 수렴</title><link>https://freshrimpsushi.github.io/ko/posts/1394/</link><pubDate>Thu, 24 Oct 2019 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/1394/</guid><description>정의 1 함수의 시퀀스 $\left\{ f_{n} \right\}_{n \in \mathbb{N}}$ 이 어떤 함수 $f$ 에 대해 다음을 만족하면 $\left\{ f_{n} \right\}$ 이 $f$ 로 $L^{p}$ 수렴한다고 말한다. $$ \lim_{n \to \infty} \left\| f_{n} - f \right\|_{p} = 0 $$ 시퀀스 $\left\{ f_{n} \right\}_{n \in \mathbb{N}}$ 이 다음을</description></item><item><title>마틴게일의 정의</title><link>https://freshrimpsushi.github.io/ko/posts/1349/</link><pubDate>Thu, 24 Oct 2019 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/1349/</guid><description>정의 확률 공간 $( \Omega , \mathcal{F} , P)$ 이 주어져 있다고 하자. $\mathcal{F}$ 의 서브 시그마 필드의 시퀀스 $\left\{ \mathcal{F}_{n} \right\}_{n \in \mathbb{N}}$ 이 다음을 만족하면 필트레이션filtration이라 부른다. $$</description></item><item><title>무한 공리</title><link>https://freshrimpsushi.github.io/ko/posts/1348/</link><pubDate>Wed, 23 Oct 2019 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/1348/</guid><description>공리 $$ \exists U \left( \emptyset \in U \land \forall X ( X \in U \implies S(X) \in U) \right) $$ 공집합과 $X$ 를 원소로 가지면 $S(X)$ 도 원소로 가지는 집합 $U$ 가 존재한다. 집합 $X$ 에 대해 $S(X)$ 는 $S(X):= X \cup \left\{ X \right\}$ 와 같이 정의</description></item><item><title>조건부 옌센 부등식 증명</title><link>https://freshrimpsushi.github.io/ko/posts/1347/</link><pubDate>Tue, 22 Oct 2019 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/1347/</guid><description>정리 확률 공간 $( \Omega , \mathcal{F} , P)$ 와 서브 시그마 필드 $\mathcal{G} \subset \mathcal{F}$ 가 주어져있다고 하고 $X$ 가 확률 변수라고 하자. 컨벡스 함수 $\phi : \mathbb{R} \to \mathbb{R}$ 와 $\phi (X) \in \mathcal{L}^{1} ( \Omega ) $에 대해 $$ \phi \left( E \left(</description></item><item><title>멱집합 공리</title><link>https://freshrimpsushi.github.io/ko/posts/1346/</link><pubDate>Mon, 21 Oct 2019 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/1346/</guid><description>공리 1 $$ \forall X \exists P \forall A ( A \subset X \implies A \in P) $$ 임의의 집합 $X$ 에 대해 $X$ 의 모든 부분집합을 원소로 갖는 집합 $P$ 가 존재한다. 설명 $X$ 의 멱집합은 일반적으로 $\mathcal{P} (X)$ 와 같이 표</description></item><item><title>합집합 공리</title><link>https://freshrimpsushi.github.io/ko/posts/1344/</link><pubDate>Sat, 19 Oct 2019 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/1344/</guid><description>공리 $$ \forall X \left( \exists U \left( \forall a \left( a \in x \land x \in X \implies a \in U \right) \right) \right) $$ 임의의 집합 $X$ 에 대해 $X$ 모든 원소들의 원소들을 포함하는 집합 $U$ 가 존재한다. 합집합의 정의 1 합집합</description></item><item><title>측도론으로 정의되는 조건부 분산</title><link>https://freshrimpsushi.github.io/ko/posts/1343/</link><pubDate>Fri, 18 Oct 2019 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/1343/</guid><description>정의 확률 공간 $( \Omega , \mathcal{F} , P)$ 와 서브 시그마 필드 $\mathcal{G} \subset \mathcal{F}$ 가 주어져있다고 하고 $X$, $Y$ 가 확률 변수라고 하자. 다음과 같이 정의된 $\Var$ 를 $\mathcal{G}$ 가 주어졌을 때 $X$ 의 분산이라고 한다</description></item><item><title>분류 공리꼴</title><link>https://freshrimpsushi.github.io/ko/posts/1341/</link><pubDate>Thu, 17 Oct 2019 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/1341/</guid><description>공리 1 $$ \forall X \exists A \forall a \left( a \in A \iff ( a \in X \land p(a)) \right) $$ 임의의 집합 $X$ 에 대해 성질 $p$ 를 가지는 원소들로 이루어진 부분집합 $A$ 가 존재한다. $p(x)$ 는 $X$ 에서의 명제함수다.</description></item><item><title>조건부 기대값의 스무딩 성질들</title><link>https://freshrimpsushi.github.io/ko/posts/1340/</link><pubDate>Wed, 16 Oct 2019 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/1340/</guid><description>정리 확률 공간 $( \Omega , \mathcal{F} , P)$ 와 서브 시그마 필드 $\mathcal{G}, \mathcal{G} ' \subset \mathcal{F}$ 가 주어져있다고 하고 $X$, $Y$ 가 확률 변수라고 하자. [1]: $X$ 가 $\mathcal{G}$-가측이면 $$ E(XY |</description></item><item><title>짝 공리</title><link>https://freshrimpsushi.github.io/ko/posts/1339/</link><pubDate>Tue, 15 Oct 2019 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/1339/</guid><description>공리 $$ \forall A \forall B \exists U ( A \in U \land B \in U ) $$ 임의의 두 집합 $A$, $B$ 에 대해 $A$ 와 $B$ 를 원소로 가지는 집합 $U$ 가 존재한다. 설명 처음으로 짝 공리를 접하면 (사실 대부분의 공</description></item><item><title>조건부 확률의 성질들</title><link>https://freshrimpsushi.github.io/ko/posts/1338/</link><pubDate>Mon, 14 Oct 2019 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/1338/</guid><description>정리 확률 공간 $( \Omega , \mathcal{F} , P)$ 와 서브 시그마 필드 $\mathcal{G} \subset \mathcal{F}$ 가 주어져있다고 하자. [1] 모든 $B \in \mathcal{G}$ 에 대해 $0 \le P(B | \mathcal{G}) \le 1$ [2] 확률의 연속성: 네스티드 시퀀스 $\left\{ B_{n} \right\}_{n \in \mathbb{N}} \subset</description></item><item><title>공집합 공리</title><link>https://freshrimpsushi.github.io/ko/posts/1337/</link><pubDate>Sun, 13 Oct 2019 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/1337/</guid><description>공리 1 $$ \exists X \forall x \left( \lnot \left( x \in X \right) \right) $$ 어떤 원소도 가지지 않는 집합 $X$ 가 존재하고, 이 집합 $X$ 를 공집합이라고 정의한다. 설명 공집합은 일반적으로 $\emptyset$ 과 같이 표기한</description></item><item><title>조건부 지배 수렴 정리 증명</title><link>https://freshrimpsushi.github.io/ko/posts/1336/</link><pubDate>Sat, 12 Oct 2019 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/1336/</guid><description>정리 확률 공간 $( \Omega , \mathcal{F} , P)$ 이 주어져 있다고 하자. 확률변수의 시퀀스 $\left\{ X_{n} \right\}_{n \in \mathbb{N}}$ 이 모든 $n \in \mathbb{N}$ 과 어떤 $Y \in \mathcal{L}^{1} (\Omega)$ 에 대해 $| X_{n} | \le Y$ 라고 하면 $$ X_{n} \to X \text{ a.s.} \implies E( X_{n} |</description></item><item><title>외연 공리</title><link>https://freshrimpsushi.github.io/ko/posts/1335/</link><pubDate>Fri, 11 Oct 2019 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/1335/</guid><description>공리 1 $$ \forall A \forall B ( \forall x ( x \in A \iff x \in B) ) $$ 임의의 두 집합 $A$, $B$ 에 속한 원소가 같으면 두 집합이 같다고 하고 $A = B$ 와 같이 나타낸다. 설명 한편 $A$ 와 $B$ 가 같지 않으</description></item><item><title>조건부 단조 수렴 정리 증명</title><link>https://freshrimpsushi.github.io/ko/posts/1331/</link><pubDate>Thu, 10 Oct 2019 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/1331/</guid><description>정리 확률 공간 $( \Omega , \mathcal{F} , P)$ 이 주어져 있다고 하자. 확률변수의 시퀀스 $\left\{ X_{n} \right\}_{n \in \mathbb{N}}$ 과 $X \in \mathcal{L}^{1} (\Omega)$에 대해 $$ X_{1} \le X_{2} \le \cdots \le X \\ X_{n} \to X \text{ a.s.} $$ 이면 $$ \lim_{n</description></item><item><title>집합의 포함관계</title><link>https://freshrimpsushi.github.io/ko/posts/1329/</link><pubDate>Wed, 09 Oct 2019 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/1329/</guid><description>정의 1 $$ A \subset B \iff \forall x (x\in A \implies x \in B) $$ 임의의 집합 $A$, $B$ 에 대하여 $A$ 의 모든 원소가 $B$ 의 원소일 때 $A$ 는 $B$ 의 부분집합subset, $B$ 는 $A$ 의 초집합superse</description></item><item><title>임의의 함수의 절대값을 두 개의 음이 아닌 함수로 표현하는 방법</title><link>https://freshrimpsushi.github.io/ko/posts/1325/</link><pubDate>Tue, 08 Oct 2019 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/1325/</guid><description>정리 기본 함수 $f : X \to \mathbb{R}$ 의 절대값 $|f|$ 는 $f$ 의 양의 부분 $f^{+}$ 와 음의 부분 $f^{-}$ 에 대해 다음과 같이 나타난다. $$ |f| = f^{+} + f^{-} $$ 고급 함수 $g : X \to \mathbb{R}$ 은 거의 어디서나 $g \ge 0$ 이</description></item><item><title>조건부 기대값의 성질들</title><link>https://freshrimpsushi.github.io/ko/posts/1322/</link><pubDate>Mon, 07 Oct 2019 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/1322/</guid><description>정리 확률 공간 $( \Omega , \mathcal{F} , P)$ 이 주어져 있다고 하자. [1] 측도론에서의 정리: 가측 함수 $f$, $g$ 가 $\mathcal{F}$-가측이면 $g = h (f)$ 를 만족하는 보렐 함수</description></item><item><title>명제함수의 한정규칙</title><link>https://freshrimpsushi.github.io/ko/posts/1321/</link><pubDate>Sun, 06 Oct 2019 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/1321/</guid><description>정의 1 전체집합 $U$ 의 명제함수 $P(x)$ 가 주어져있다고 하자. Universal Quantifier: &amp;lsquo;모든 $x \in U$ 에 대하여&amp;rsquo;를 $\forall x$ 와 같이 쓰고 전칭기호라고 한다. Existential Quantifier: &amp;l</description></item><item><title>동적 프로그래밍</title><link>https://freshrimpsushi.github.io/ko/posts/1262/</link><pubDate>Sat, 05 Oct 2019 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/1262/</guid><description>빌드업 문제를 풀 때, 큰 문제의 해답에 그보다 작은 문제의 해답이 포함되어 있으면 최적 부분 구조optimal substructure를 가진다고 한다. 최적 부</description></item><item><title>측도론으로 정의되는 확률 변수의 조건부 확률</title><link>https://freshrimpsushi.github.io/ko/posts/1320/</link><pubDate>Sat, 05 Oct 2019 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/1320/</guid><description>정의 확률 공간 $( \Omega , \mathcal{F} , P)$ 이 주어져 있다고 하자. $\mathcal{G}$ 가 $\mathcal{F}$ 의 서브 시그마 필드라고 할 때, 사건 $F \in \mathcal{F}$ 에 대해 $$ P(F | \mathcal{G}) := E ( \mathbb{1}_{F} | \mathcal{G}) $$ 를 $\mathcal{G}$ 에 대한 $F$ 의 조건부 확률이</description></item><item><title>집합과 명제함수의 정의</title><link>https://freshrimpsushi.github.io/ko/posts/1316/</link><pubDate>Fri, 04 Oct 2019 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/1316/</guid><description>정의 1 Set: 우리의 직관 또는 사고의 대상으로써 서로 뚜렷이 구분되는 객체의 모임을 집합이라 한다. Element: 집합에 속한 객체를 원소라고 한다. Propositional Function: 집합 $U$ 의 원소 $x$ 에 대해 참</description></item><item><title>측도론으로 정의되는 확률 변수의 조건부 기대값</title><link>https://freshrimpsushi.github.io/ko/posts/1315/</link><pubDate>Thu, 03 Oct 2019 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/1315/</guid><description>정의 확률 공간 $( \Omega , \mathcal{F} , P)$ 이 주어져 있다고 하자. $\mathcal{G}$ 가 $\mathcal{F}$ 의 서브 시그마 필드고 확률 변수 $X \in \mathcal{L}^{1} ( \Omega )$ 는 적분 가능하다. 모든 $A \in \mathcal{G}$ 에 대해 $$ \int_{A} Y d P = \int_{A} X d P</description></item><item><title>라돈-니코딤 정리 증명</title><link>https://freshrimpsushi.github.io/ko/posts/1312/</link><pubDate>Wed, 02 Oct 2019 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/1312/</guid><description>정리 1 가측 공간 $( \Omega , \mathcal{F} )$ 의 두 시그마 유한 측도 $\nu$, $\mu$ 가 $\nu \ll \mu$ 를 만족하면 모든 $A \in \mathcal{F}$ 에 대해 $\mu$-거의 어디서나 $h \ge 0$ 이고 $$ \nu (A) = \int_{A} h d \mu $$ 을 만족하</description></item><item><title>라돈-니코딤 도함수</title><link>https://freshrimpsushi.github.io/ko/posts/1307/</link><pubDate>Tue, 01 Oct 2019 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/1307/</guid><description>정리 1 가측 공간 $( \Omega , \mathcal{F} )$ 가 주어져 있다고 하자. 측도 $\mu$, $\nu$ 가 $\mu ( \Omega ) = 1$ 과 모든 $F \in \mathcal{F}$ 에 대해 $0 \le \nu (F) \le \mu (F)$ 를 만족하면 모든 $F \in \mathcal{F}$ 에 대해 $$ \nu (F) = \int_{F} h d \mu</description></item><item><title>재귀함수를 쓸 때 주의해야하는 이유</title><link>https://freshrimpsushi.github.io/ko/posts/1254/</link><pubDate>Tue, 01 Oct 2019 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/1254/</guid><description>주의 프로그래밍을 처음 배우면 그것이 어떤 언어든지 &amp;lsquo;재귀함수는 조심해서 써야한다&amp;rsquo;는 경고가 함께한다. 사실 재귀함수라는 게 그렇게</description></item><item><title>시그마 유한 측도</title><link>https://freshrimpsushi.github.io/ko/posts/1314/</link><pubDate>Mon, 30 Sep 2019 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/1314/</guid><description>정의 1 가측 공간 $( X , \mathcal{E} )$가 주어져있다고 하자. $\mu (X) &amp;lt; \infty$ 이면 $\mu$ 를 유한 측도라고 한다. $$\displaystyle X = \bigcup_{i=1}^{\infty} E_{i} \qquad , E_{i} \in \mathcal{E}$$ 라고 할 때 모든 $i \in \mathbb{N}$ 에 대해 $\mu ( E_{i} ) &amp;lt; \infty$ 면 시</description></item><item><title>삼단논법의 수리논리적 증명</title><link>https://freshrimpsushi.github.io/ko/posts/191/</link><pubDate>Sun, 29 Sep 2019 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/191/</guid><description>법칙 1 다음의 함의명제를 삼단논법syllogism이라 한다. $$ ( p \to q ) \land ( q \to r ) \implies p \to r $$ 설명 삼단논법을 모르는 사람은 없고 굳이 설명해줄 것도 없</description></item><item><title>수학적 귀납법</title><link>https://freshrimpsushi.github.io/ko/posts/118/</link><pubDate>Sun, 29 Sep 2019 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/118/</guid><description>법칙 1 $$ \left[ p(1) \land \left( p(n) \implies p(n+1) \right) \right] \implies \forall n \in \mathbb{N} : p(n) $$ 명제 $p(n) (n=1,2,3, \cdots )$ 에 대해 $p(1)$ 이 참이고 $p(n)$ 을 가정했을 때 $p(n+1)$ 이 성립하면 $p(n)$ 은 참이다. 설명 어떤 식이 자연수에 대해 성립할 때</description></item><item><title>귀류법의 수리논리적 증명</title><link>https://freshrimpsushi.github.io/ko/posts/117/</link><pubDate>Sat, 28 Sep 2019 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/117/</guid><description>법칙 1 $$ (p \land \lnot q) \to c \iff p \to q $$ $c$ 는 모순을 의미한다. 설명 배리법 혹은 귀류법은 수학 전반에서 정말 많이 사용되는 증명법이다. 하지만 처음 귀류법을 접하는 사람</description></item><item><title>측도의 절대 연속</title><link>https://freshrimpsushi.github.io/ko/posts/1309/</link><pubDate>Sat, 28 Sep 2019 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/1309/</guid><description>정의 1 가측 공간 $( \Omega , \mathcal{F} )$ 가 주어져 있다고 하자. 측도 $\nu$, $\mu$ 가 모든 $A \in \mathcal{F}$ 에 대해 $$ \mu (A) = 0 \implies \nu (A) = 0 $$ 를 만족시키면 $\nu$ 가 $\mu$ 에 대해 절대 연속이라 하고 $\nu \ll \mu$ 와</description></item><item><title>가측 공간의 파티션과 리파인먼트</title><link>https://freshrimpsushi.github.io/ko/posts/1313/</link><pubDate>Fri, 27 Sep 2019 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/1313/</guid><description>정의 가측 공간 $( \Omega , \mathcal{F} )$ 가 주어져 있다고 하자. $( \Omega , \mathcal{F} )$ 에 대해 $\displaystyle \bigsqcup_{i=1}^{k} A_{i} = \Omega$ 를 만족하는 $$\mathcal{P} : = \left\{ A_{i} \in \mathcal{F} : i_{1} \ne i_{2} \implies A_{i_{1}} \cap A_{i_{2}} = \emptyset \right\}_{i=1}^{k}$$ 를 가측 공간 $\Omega$ 의 유한 (가측)</description></item><item><title>대우법의 수리논리적 증명</title><link>https://freshrimpsushi.github.io/ko/posts/116/</link><pubDate>Fri, 27 Sep 2019 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/116/</guid><description>법칙 1 $$ p \to q \iff \lnot q \to \lnot p $$ 설명 어떤 명제가 참이면 그 대우도 참, 어떤 명제가 거짓이면 그 대우도 거짓이다. 물론 역converse이 성립한다면 대우법에 의</description></item><item><title>드 모르간의 법칙 증명</title><link>https://freshrimpsushi.github.io/ko/posts/1306/</link><pubDate>Thu, 26 Sep 2019 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/1306/</guid><description>정리 1 [1] 드 모르간의 법칙: $$ \lnot (p \land q) \iff \lnot p \lor \lnot q \\ \lnot(p \lor q) \iff \lnot p \land \lnot q $$ [2] 드 모르간의 정리: $$ (A \cup B)^{c} = A^{c} \cap B^{c} \\ (A \cap B)^{c} = A^{c} \cup B^{c} $$ 설명 드 모르간의 법칙와</description></item><item><title>측도론으로 정의되는 조인트 분포와 마지널 분포</title><link>https://freshrimpsushi.github.io/ko/posts/1305/</link><pubDate>Wed, 25 Sep 2019 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/1305/</guid><description>정의 1 확률 공간 $( \Omega , \mathcal{F} , P)$ 이 주어져 있다고 하자. 조인트 분포: $( \Omega , \mathcal{F} , P)$ 에서 정의된 두 확률 변수 $X$, $Y$ 가 있다고 할 때, 랜덤 벡터 $(X,Y) : \Omega \to \mathbb{R}^2$ 의 분포는 보렐 셋</description></item><item><title>항진 명제와 항위 명제</title><link>https://freshrimpsushi.github.io/ko/posts/1304/</link><pubDate>Tue, 24 Sep 2019 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/1304/</guid><description>정의 1 모든 논리적 가능성에 대해 참인 명제를 항진 명제tautology라고 한다. 모든 논리적 가능성에 대해 거짓인 명제를 항위 명제contradictio</description></item><item><title>측도론으로 정의되는 특성 함수와 적률생성함수</title><link>https://freshrimpsushi.github.io/ko/posts/1300/</link><pubDate>Mon, 23 Sep 2019 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/1300/</guid><description>정의 1 확률 공간 $( \Omega , \mathcal{F} , P)$ 이 주어져 있다고 하자. 확률변수 $X$ 와 $t \in \mathbb{R}$ 에 대해 다음과 같이 정의된 $\varphi_{X} (t)$ 를 $X$ 의 특성 함수characteristic func</description></item><item><title>명제와 결합자, 진리표</title><link>https://freshrimpsushi.github.io/ko/posts/1299/</link><pubDate>Sun, 22 Sep 2019 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/1299/</guid><description>정의 1 참이거나 거짓이거나 둘 중 하나인 서술을 명제라고 한다. 명제는 참이거나 거짓 둘 중 하나의 진리값truth value을 가진다. 두 명제 $p$, $q$ 의 진리값이 같</description></item><item><title>측도론으로 정의되는 기대값</title><link>https://freshrimpsushi.github.io/ko/posts/1294/</link><pubDate>Sat, 21 Sep 2019 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/1294/</guid><description>정의 1 확률 공간 $( \Omega , \mathcal{F} , P)$ 이 주어져 있다고 하자. 확률 변수 $X$ 에 대해서 다음과 같이 정의된 $E(X)$ 를 $X$ 의 (수리적) 기대값이라고 한다. $$ E(X) := \int_{\Omega} X d P $$ 아직 측도</description></item><item><title>측도론으로 정의되는 디락 측도와 이산 확률 분포</title><link>https://freshrimpsushi.github.io/ko/posts/879/</link><pubDate>Fri, 20 Sep 2019 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/879/</guid><description>개요 기초적인 확률론에서 확률 분포란 이산과 연속 둘 중 하나였고, 그 설명도 다소 직관을 동원할 수밖에 없었다. 그러나 측도론을 도입하면 수학적인 모호함 없이 깔끔하</description></item><item><title>아이젠슈타인 소수 정리 증명</title><link>https://freshrimpsushi.github.io/ko/posts/1293/</link><pubDate>Thu, 19 Sep 2019 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/1293/</guid><description>정리 아이젠슈타인 링의 이리듀서블 엘리먼트를 아이젠슈타인 소수라 한다. 아이젠슈타인 정수 $\pi \in \mathbb{Z}[ \omega ]$ 가 다음의 조건들 중 하나를 만족하면 아이젠슈타인 소수다.</description></item><item><title>측도론으로 정의되는 확률 변수의 밀도와 누적 분포 함수</title><link>https://freshrimpsushi.github.io/ko/posts/1292/</link><pubDate>Wed, 18 Sep 2019 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/1292/</guid><description>정의 1 확률 공간 $( \Omega , \mathcal{F} , P)$ 이 주어져 있고 $m$ 이 측도라고 하자. 측도 $P : \mathcal{F} \to \mathbb{R}$ 가 적분가능한 $f \ge 0$ 에 대해 $$ A \mapsto P(A) = \int_{A} f dm $$ 의 폼을 갖추고 있으면 $P$ 가 절대 연</description></item><item><title>아이젠슈타인 링의 놈</title><link>https://freshrimpsushi.github.io/ko/posts/1291/</link><pubDate>Tue, 17 Sep 2019 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/1291/</guid><description>정리 아이젠슈타인 링 $\mathbb{Z}[ \omega ]$ 에 대해 함수 $N : \mathbb{Z}[\omega] \to \mathbb{Z}$ 를 생각해보자. [1]: $N(x + \omega y) := x^2 - xy + y^2$ 이라고 정의하면 $N$ 은 $\mathbb{Z}[ \omega ]$ 의 승법적 놈이 된다. [2]: $\mathbb{Z}[ \omega ]$ 은 유클리디</description></item><item><title>측도론으로 정의되는 확률 변수의 독립</title><link>https://freshrimpsushi.github.io/ko/posts/1290/</link><pubDate>Mon, 16 Sep 2019 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/1290/</guid><description>정의 1 확률 공간 $( \Omega , \mathcal{F} , P)$ 이 주어져 있다고 하자. 모든 보렐 셋 $B_{1} , B_{2} \in \mathcal{B} ( \mathbb{R} )$ 에 대해 다음이 성립하면 확률 변수 $X$, $Y$ 가 독립이라고 한다. $$ P \left( X^{-1} (B_{1} ) \cap Y^{-1} (B_{2}</description></item><item><title>아이젠슈타인 정수</title><link>https://freshrimpsushi.github.io/ko/posts/1289/</link><pubDate>Sun, 15 Sep 2019 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/1289/</guid><description>정의 $\mathbb{Z} [ \omega ] := \left\{ a + \omega b : a, b \in \mathbb{Z} \right\}$ 를 아이젠슈타인 링Eisenstein ring이라 하고, 그 원소를 아이젠슈타인 인티저라 한다. 정리 [1]: $\overline{ \omega } = \omega^{2}</description></item><item><title>측도론으로 정의되는 확률 변수와 확률 분포</title><link>https://freshrimpsushi.github.io/ko/posts/1288/</link><pubDate>Sat, 14 Sep 2019 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/1288/</guid><description>정의 1 확률 공간 $( \Omega , \mathcal{F} , P)$ 이 주어져 있다고 하자. 모든 보렐 셋 $B \in \mathcal{B} (\mathbb{R})$ 에 대해 $X^{-1} (B) \in \mathcal{F}$ 를 만족하는 함수 $X : \Omega \to \mathbb{R}$ 을 확률변수random variable</description></item><item><title>가우스 소수 정리 증명</title><link>https://freshrimpsushi.github.io/ko/posts/1285/</link><pubDate>Fri, 13 Sep 2019 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/1285/</guid><description>정리 1 가우시안 링의 이리듀서블 엘리먼트를 가우스 소수라 한다. 가우스 정수 $\pi \in \mathbb{Z}[i]$ 가 다음의 조건들 중 하나를 만족하면 가우스 소수다. (i): $\pi = 1 + i$ (ii): 소수 $p \in \mathbb{Z}$</description></item><item><title>슈트라센 알고리즘 증명</title><link>https://freshrimpsushi.github.io/ko/posts/1284/</link><pubDate>Thu, 12 Sep 2019 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/1284/</guid><description>알고리즘 $k \in \mathbb{N}$ 에 대해 $n=2^{k}$ 이라고 하자. $A, B \in \mathbb{R}^{n \times n}$ 에 대해 조던 블록 행렬 표현을 사용해 다음과 같은 8개의 ${{n} \over {2}} \times {{n} \over {2}}$ 행렬 $A_{i}$, $B_{i}$ 들을 생각해보자. $$ AB= \begin{bmatrix} A_{1} &amp;amp;</description></item><item><title>시간복잡도와 공간복잡도</title><link>https://freshrimpsushi.github.io/ko/posts/1283/</link><pubDate>Wed, 11 Sep 2019 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/1283/</guid><description>정의 주어진 문제를 풀 때의 걸리는 시간을 시간복잡도time complexity, 메모리 소요를 공간복잡도space complexity라고 한다. 예시 점근적 표기법은 이들을</description></item><item><title>R 에서 가치 모형으로 시계열 분석 하는 법</title><link>https://freshrimpsushi.github.io/ko/posts/1282/</link><pubDate>Tue, 10 Sep 2019 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/1282/</guid><description>실습 가치 모델은 아치 이펙트를 설명하는 유용한 수단으로써 분석 절차 자체는 아르마 모델과 흡사하다. 위의 그래프는 내장데이터 EuStockMarkets에서</description></item><item><title>알고리즘의 비용에 대한 점근적 표기법</title><link>https://freshrimpsushi.github.io/ko/posts/1281/</link><pubDate>Mon, 09 Sep 2019 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/1281/</guid><description>정의 크기가 $n$ 인 데이터에 대해 알고리즘의 비용을 다음과 같이 나타낸다. $O$ 표기법: $$ O(g(n)) := \left\{ f(n) \ | \ \exists c &amp;gt; 0, n_{0} \in \mathbb{N} : \forall n \ge n_{0} \implies f(n) \le c g(n) \right\} $$ $\Omega$ 표기법: $$ \Omega</description></item><item><title>시계열 분석에서의 가치 모형</title><link>https://freshrimpsushi.github.io/ko/posts/1280/</link><pubDate>Sun, 08 Sep 2019 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/1280/</guid><description>모델 1 가치 모델은 아치 모델을 일반화한 것으로, 이분산성을 파악하기 위한 시계열 분석법이다. $$ (1 - \beta{1} B - \cdots - \beta_{p} B^p) \sigma_{t | t-1}^2 = \omega + (\alpha_{1} B + \cdots + \alpha_{q} B^q) r_{t}^{2} $$ 유도 유도</description></item><item><title>맥리어드-리 테스트</title><link>https://freshrimpsushi.github.io/ko/posts/1279/</link><pubDate>Sat, 07 Sep 2019 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/1279/</guid><description>가설검정 시계열 데이터의 리턴 $\left\{ r_{t} \right\}$ 이 주어져있다고 하자. $H_{0}$: 데이터는 시차 $k$ 의 아치 이펙트를 가지지 않는다. $H_{1}$: 데이터는 시차 $k$ 의 아치 이펙트를 가진다. 설명 맥</description></item><item><title>아치 이펙트</title><link>https://freshrimpsushi.github.io/ko/posts/1278/</link><pubDate>Fri, 06 Sep 2019 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/1278/</guid><description>정의 1 아치 이펙트란 그 AutoRegressive Conditional Heteroscedasticity라는 말 그대로 &amp;lsquo;자기회귀 조건부 이분산 효과&amp;rsquo;로 순화되기 때문에</description></item><item><title>가우시안 링의 놈</title><link>https://freshrimpsushi.github.io/ko/posts/1277/</link><pubDate>Thu, 05 Sep 2019 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/1277/</guid><description>정리 1 가우시안 링 $\mathbb{Z}[i]$ 에 대해 함수 $N : \mathbb{Z}[i] \to \mathbb{Z}$ 를 생각해보자. [1]: $N(x + iy) := x^2 + y^2$ 이라고 정의하면 $N$ 은 $\mathbb{Z}[i]$ 의 승법적 놈이 된다. [2]: $\mathbb{Z}[i]$ 은 유클리디안 도메인이다. [3]: $\mathbb{Z}[i]$ 의</description></item><item><title>시계열분석에서의 이분산성과 변동성 군집현상</title><link>https://freshrimpsushi.github.io/ko/posts/1272/</link><pubDate>Wed, 04 Sep 2019 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/1272/</guid><description>정의 1 시계열 데이터 $\left\{ p_{t} \right\}$ 가 주어져 있다고 하자. $\left\{ p_{t} \right\}$ 의 분산이 $t$ 에 종속되어있을 때, $\left\{ p_{t} \right\}$ 는 이분산성heteroscedasticity을 가진다고</description></item><item><title>R 에서 데이터 파일 빠르게 읽기 read_csv</title><link>https://freshrimpsushi.github.io/ko/posts/1270/</link><pubDate>Mon, 02 Sep 2019 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/1270/</guid><description>개요 R 은 기본적으로 csv 데이터를 읽는 함수로써 read.csv()를 제공하지만, 그냥 간편하게 쓰는 정도가 아니라 실전적인 분석을 하고 있다면 성능이 너무 떨어</description></item><item><title>가우스 정수</title><link>https://freshrimpsushi.github.io/ko/posts/1267/</link><pubDate>Sat, 31 Aug 2019 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/1267/</guid><description>정의 1 $\mathbb{Z} [i] := \left\{ a + i b : a, b \in \mathbb{Z} \right\}$ 를 가우시안 링Gaussian ring이라 하고, 그 원소를 가우시안 인티저라 한다. 정리 [1]: $\overline{i} = i^{3}$ [2]: $( a \pm ib ) + ( c</description></item><item><title>R 에서 병렬처리하는 법</title><link>https://freshrimpsushi.github.io/ko/posts/1266/</link><pubDate>Fri, 30 Aug 2019 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/1266/</guid><description>개요 R 이 속도 때문에 쓰는 언어는 아니지만, 빠른 속도가 필요할 때도 분명히 있을 것이다. 코드를 깔끔하게 잘 짜더라도 너무 오래 걸린다면 보통 병렬처리나 GPU를 동</description></item><item><title>동적 회귀 모형</title><link>https://freshrimpsushi.github.io/ko/posts/1265/</link><pubDate>Thu, 29 Aug 2019 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/1265/</guid><description>모델 동적 회귀 모형이란 쉽게 말해 아리마 모형에 회귀 모형을 합친 모형이다. 설명 아리마 외의 독립변수 $X$ 를 추가한다는 의미에서 아리맥스 $ARIMAX$ 라 부르기도 한다. 프로그</description></item><item><title>시계열분석의 이노베이티브 아웃라이어</title><link>https://freshrimpsushi.github.io/ko/posts/1260/</link><pubDate>Tue, 27 Aug 2019 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/1260/</guid><description>빌드업 위의 그래프에서 2001년 9월에 굉장히 큰 아웃라이어를 찾을 수 있다. 그러나 애디티브 아웃라이어와 달리 그 후에도 계속해서 영향을 미치고 있다. 여객기의</description></item><item><title>인티그럴 도메인의 놈</title><link>https://freshrimpsushi.github.io/ko/posts/1259/</link><pubDate>Mon, 26 Aug 2019 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/1259/</guid><description>정의 1 인티그럴 도메인 $D$ 와 모든 $\alpha , \beta \in D$ 에 대해 다음의 조건을 만족하는 함수 $N : D \to \mathbb{Z}$ 를 승법적 놈multiplicative norm이라 정의한다. (i):</description></item><item><title>시계열분석의 애디티브 아웃라이어</title><link>https://freshrimpsushi.github.io/ko/posts/1258/</link><pubDate>Sun, 25 Aug 2019 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/1258/</guid><description>빌드업 위의 그래프에서 가장 먼저 눈에 띄는 지점은 바로 2015년 2월 근처에 있는 엄청난 아웃라이어다. 이렇듯 극심하게 다른 값을 가지면 분석에 악영향이 있을 수밖</description></item><item><title>스텝 함수와 펄스 함수</title><link>https://freshrimpsushi.github.io/ko/posts/1248/</link><pubDate>Fri, 23 Aug 2019 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/1248/</guid><description>정의 1 다음과 같이 정의된 $S_{t}^{(T)}$ 를 스텝 함수라 한다. $$ S_{t}^{(T)} := \begin{cases} 1 &amp;amp; , t \le T \\ 0 &amp;amp; , \text{otherwise} \end{cases} $$ 다음과 같이 정의된 $P_{t}^{(T)}$ 를 펄스 함수라 한다. $$ \begin{align*} P_{t}^{(T)} :=&amp;amp; \nabla S_{t}^{(T)} \\ =&amp;amp; S_{t}^{(T)} - S_{t-1}^{(T)} \end{align*} $$ 설</description></item><item><title>R 에서 코드 실행 시간 재는 법, 벤치마크하는 법</title><link>https://freshrimpsushi.github.io/ko/posts/1246/</link><pubDate>Thu, 22 Aug 2019 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/1246/</guid><description>개요 매트랩R 은 분명 통계 분석에 특화되어 있는 프로그래밍 언어지만, 모든 언어가 그러하듯 속도에 관심이 없는 것은 아니다. 속도가 강점이 아니라고 해도 벤치마킹은</description></item><item><title>개입 분석</title><link>https://freshrimpsushi.github.io/ko/posts/1243/</link><pubDate>Wed, 21 Aug 2019 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/1243/</guid><description>빌드업 위 그래프는 실제 2015년 서울의 미세먼지 농도를 나타낸 시계열 데이터다. 누가 보더라도 가장 먼저 눈에 띄는 것은 50번째쯤, 그러니까 2월 말에 미세먼지</description></item><item><title>R 에서 ts 함수의 start, end 옵션과 window 함수에서 start, end 옵션의 차이점</title><link>https://freshrimpsushi.github.io/ko/posts/1242/</link><pubDate>Tue, 20 Aug 2019 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/1242/</guid><description>설명 R 로 시계열 데이터를 다루다보면 ts() 함수와 window() 함수를 자주 사용하게 된다. ts()는 R 이 받아들일 수 있도록 시계열 데이터를 만들 때 쓰고, window()는</description></item><item><title>시계열회귀분석에서의 허위 상관관계</title><link>https://freshrimpsushi.github.io/ko/posts/1238/</link><pubDate>Mon, 19 Aug 2019 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/1238/</guid><description>정의 1 허위 상관관계는 두 데이터가 그럴싸한 상관관계를 가지는 것 같아 보이지만 실제로는 그렇지 않은 관계를 말한다. 실습 1 다음의 예시를 통해 알아보자. 위와 같이</description></item><item><title>R 에서 색 테두리 있는 점 찍는 법</title><link>https://freshrimpsushi.github.io/ko/posts/1237/</link><pubDate>Sun, 18 Aug 2019 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/1237/</guid><description>코드 점 도표에서 테두리의 색을 바꾸거나 내부를 칠하기 위해서는 다음의 옵션들을 바꿔주면 된다: pch: 심볼을 바꿔서 색을 칠한다. 21번부터 25번까지를 사용하면 된</description></item><item><title>사전백화</title><link>https://freshrimpsushi.github.io/ko/posts/1236/</link><pubDate>Sat, 17 Aug 2019 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/1236/</guid><description>정의 사전백화prewhitening란 CCF를 계산할 때 시계열을 백색 잡음으로 만들어 두 데이터 간의 상관관계를 더욱 정확하게 파악하는 방법이다. 실습 1 가</description></item><item><title>4차 룽게-쿠타 메소드</title><link>https://freshrimpsushi.github.io/ko/posts/796/</link><pubDate>Fri, 16 Aug 2019 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/796/</guid><description>메소드 1 $D \subset \mathbb{R}^2$ 에서 정의된 연속함수 $f$ 에 대해 초기값 문제 $\begin{cases} y ' = f(x,y) \\ y( x_{0} ) = Y_{0} \end{cases}$ 가 주어져 있다. 구간 $(a,b)$ 을 $a \le x_{0} &amp;lt; x_{1} &amp;lt; \cdots &amp;lt; x_{n} &amp;lt; \cdots x_{N} \le b$ 와 같은 노드 포인트</description></item><item><title>R 에서 파이프 오퍼레이터 %>% 사용하는 법</title><link>https://freshrimpsushi.github.io/ko/posts/1235/</link><pubDate>Fri, 16 Aug 2019 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/1235/</guid><description>개요 R 에서 %&amp;gt;%은 파이프 연산자pipe Operater 로써, 다른 연산자가 모두 그러하듯 이항연산을 한다. 파이프 연산자는 이름 그대로 어떤 값들이 파이프를 통과하</description></item><item><title>디리클레 경계 조건이 주어진 열방정식에 대한 초기값 문제의 수치해석적 풀이</title><link>https://freshrimpsushi.github.io/ko/posts/790/</link><pubDate>Fri, 16 Aug 2019 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/790/</guid><description>예제 1 $$ \begin{cases} u_{t} = \gamma u_{xx} \\ u(t,0) = u(t,l) = 0 \\ u(0,x) = f(x) \end{cases} $$ 주어진 문제는 대수적 풀이가 있을 정도로 쉽고 간단하지만, 미분방정식을 푸는 방법으로써의 수치해석을 왜 배우는지</description></item><item><title>A-스테이블</title><link>https://freshrimpsushi.github.io/ko/posts/774/</link><pubDate>Thu, 15 Aug 2019 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/774/</guid><description>빌드업 미드포인트 메소드를 비롯한 멀티스텝 메소드는 $h$ 가 충분히 작지 않을 때 패러사이틱 솔루션이 있을 수 있다. 충분히 작지 않다는 건 $ y ' = \lambda y$ 와 같은 문제가 있</description></item><item><title>교차상관함수</title><link>https://freshrimpsushi.github.io/ko/posts/1227/</link><pubDate>Thu, 15 Aug 2019 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/1227/</guid><description>정의 1 $\left\{ X_{t} \right\}_{t=1}^{n}$, $\left\{ Y_{t} \right\}_{t=1}^{n}$ 이 확률과정이라고 하자. 다음과 같이 정의된 $\rho_{k}$ 를 시차 $k$ 의 교차상관함수cross 라고 한다. $$ \rho_{k} (X,Y) := \text{cor} \left( X_{t} , Y_{t-k} \right) = \text{cor} \left( X_{t+k} , Y_{t} \right) $$ 다음</description></item><item><title>R 에서 오퍼레이터 %% 정의하는 법</title><link>https://freshrimpsushi.github.io/ko/posts/1224/</link><pubDate>Wed, 14 Aug 2019 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/1224/</guid><description>개요 R 에서는 함수를 정의할 때 아예 이항연산자로 정의할 수가 있다. 이미 R 에서 기본적으로 정의된 나눗셈의 나머지 %%, 몫 %/%, 내적 %*%, %o%나 포함관계 %in%, 그리고 파이프</description></item><item><title>일관성을 가지는 멀티스텝 메소드의 수렴성과 루트 컨디션</title><link>https://freshrimpsushi.github.io/ko/posts/754/</link><pubDate>Wed, 14 Aug 2019 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/754/</guid><description>정리 만약 멀티스텝 메소드가 일관성을 가진다고 하면, 메소드는 수렴성을 가진다 $\iff$ 메소드는 루트 컨디션을 만족 시킨다 설명 폐구간 $[x_{0} , b]$ 에 대해 $h$ 를 단위로 잘라서 노</description></item><item><title>시계열 회귀 분석</title><link>https://freshrimpsushi.github.io/ko/posts/1223/</link><pubDate>Tue, 13 Aug 2019 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/1223/</guid><description>정의 시계열 회귀 분석이란 말 그대로 시계열 데이터로 회귀분석하는 기법을 말한다. 원래 회귀분석 자체가 시계열 데이터를 다루는데 있어서 적합하지 않은 것은 사실이지</description></item><item><title>륭-박스 테스트</title><link>https://freshrimpsushi.github.io/ko/posts/1219/</link><pubDate>Mon, 12 Aug 2019 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/1219/</guid><description>가설검정 시계열 분석으로 얻은 아르마 모형 $ARMA(p,q)$ 을 $M$ 이라고 하자. $H_{0}$: $M$ 은 적합하다. $H_{1}$: $M$ 은 적합하지 않다. 설명 륭-박스 테스트는 LBQ 라고도 줄여부르기도 하며, 아리</description></item><item><title>아리마 모형에 대한 잔차분석</title><link>https://freshrimpsushi.github.io/ko/posts/1218/</link><pubDate>Sun, 11 Aug 2019 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/1218/</guid><description>설명 회귀분석과 마찬가지로 시계열 분석 역시 잔차분석을 한다. 아리마 모형의 가정에 따르면 잔차는 모두 백색 잡음이므로 선형성, 등분산성, 독립성, 정규성을 따르</description></item><item><title>더빈-왓슨 테스트</title><link>https://freshrimpsushi.github.io/ko/posts/1217/</link><pubDate>Sat, 10 Aug 2019 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/1217/</guid><description>가설검정 회귀분석을 한 이후의 잔차 $\left\{ e_{t} \right\}_{t=1}^{n}$ 가 주어져있다고 하고 $e_{t} := \rho e_{t-1} + \nu_{t}$ 꼴로 두자. $H_{0}$: $\rho = 0$ 즉, 잔차끼리 자기상관성을 가지지 않는다. $H_{1}$: $\rho \ne 0$ 즉, 잔차끼</description></item><item><title>R 에서 EACF를 사용한 ARMA 모형 선택법</title><link>https://freshrimpsushi.github.io/ko/posts/1216/</link><pubDate>Fri, 09 Aug 2019 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/1216/</guid><description>실습 1 PACF는 $AR(p)$의 차수를, ACF는 $MA(q)$ 의 차수를 정할 때 큰 도움이 된다. 직접 그 예를 살펴보자. ma1.2.s 데이터는 $MA(1)$ 모델에서, ar1.s 데이터는 $AR(1)$ 모델에서</description></item><item><title>일관성을 가지는 멀티스텝 메소드의 안정성과 루트 컨디션</title><link>https://freshrimpsushi.github.io/ko/posts/734/</link><pubDate>Thu, 08 Aug 2019 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/734/</guid><description>정리 만약 멀티스텝 메소드가 일관성을 가진다고 하면, 메소드는 안정성을 가진다 $\iff$ 메소드는 루트 컨디션을 만족 시킨다 설명 폐구간 $[x_{0} , b]$ 에 대해 $h$ 를 단위로 잘라서 노</description></item><item><title>멀티스텝 메소드의 루트 컨디션</title><link>https://freshrimpsushi.github.io/ko/posts/732/</link><pubDate>Wed, 07 Aug 2019 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/732/</guid><description>정의 1 멀티스텝 메소드: $D \subset \mathbb{R}^2$ 에서 정의된 연속함수 $f$ 에 대해 초기값 문제 $\begin{cases} y ' = f(x,y) \\ ( y( x_{0} ) , \cdots , y(x_{p}) ) = (Y_{0}, \cdots , Y_{p} ) \end{cases}$ 가 주어져 있다. 구간 $(a,b)$ 을 $a \le x_{0} &amp;lt; x_{1}</description></item><item><title>확장자기상관함수</title><link>https://freshrimpsushi.github.io/ko/posts/1213/</link><pubDate>Wed, 07 Aug 2019 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/1213/</guid><description>빌드업 PACF는 $AR(p)$의 차수를, ACF는 $MA(q)$ 의 차수를 정할 때 큰 도움이 된다. 하지만 $ARMA(p,q)$ 모형에 적용시킬 땐 아르마 모형의 가역성 때문에 $AR(p)$ 라도 $MA(\infty)$ 처럼 보</description></item><item><title>아담스 메소드</title><link>https://freshrimpsushi.github.io/ko/posts/724/</link><pubDate>Tue, 06 Aug 2019 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/724/</guid><description>정의 1 멀티스텝 메소드: $D \subset \mathbb{R}^2$ 에서 정의된 연속함수 $f$ 에 대해 초기값 문제 $\begin{cases} y ' = f(x,y) \\ ( y( x_{0} ) , \cdots , y(x_{p}) ) = (Y_{0}, \cdots , Y_{p} ) \end{cases}$ 가 주어져 있다. 구간 $(a,b)$ 을 $a \le x_{0} &amp;lt; x_{1}</description></item><item><title>편자기상관함수</title><link>https://freshrimpsushi.github.io/ko/posts/1211/</link><pubDate>Tue, 06 Aug 2019 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/1211/</guid><description>정의 1 $\left\{ Y_{t} \right\}_{t=1}^{n}$ 이 확률과정이고 시차 $k$ 에 대해서 $Y_{t-1}, \cdots , Y_{t-(k-1)}$ 로 $Y_{t}$ 를 회귀분석한 잔차를 $\widehat{e_{t}}$, $Y_{t-k}$ 를 회귀분석한 잔차를 $\widehat{e_{t-k}}$ 이라고 하자. 다음과 같이 정의된 $\phi_{kk}$ 를 시차 $k$ 의 편자기</description></item><item><title>거리공간에서 위상동형이란</title><link>https://freshrimpsushi.github.io/ko/posts/385/</link><pubDate>Mon, 05 Aug 2019 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/385/</guid><description>정의 두 거리공간 $\left( X, d_{1} \right)$ 과 $\left( Y, d_{2} \right)$ 에 대해 전단사 $f : X \to Y$ 가 존재해서 $f$ 와 그 역함수 $f^{-1}$ 모두 연속함수면 $f$ 를 위상동형사상이라 부르고 두 거리공간이 위상동형h</description></item><item><title>리차드슨 오차 추정</title><link>https://freshrimpsushi.github.io/ko/posts/706/</link><pubDate>Mon, 05 Aug 2019 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/706/</guid><description>빌드업 미분방정식을 푸는 메소드의 퍼포먼스를 확인하는 방법으로 참값과 비교할 수 있다면 가장 좋겠지만, 당장 참값을 구하기 귀찮은 경우부터 시작해서 아예 트루 솔루</description></item><item><title>실수 공간에서 정의된 함수의 미분</title><link>https://freshrimpsushi.github.io/ko/posts/1210/</link><pubDate>Mon, 05 Aug 2019 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/1210/</guid><description>정의1 $a$ 를 포함하는 어떤 $E$ 에서 $f$ 가 정의되어있고 극한 $$ f^{\prime} (a) := \lim_{h \to 0} {{ f (a + h ) - f(a) } \over { h }}=\lim \limits_{x\rightarrow a}\frac{f(x)-f(a)}{x-a} $$ 이 존재하면 $f$ 가 $a$ 에서 미분가능different</description></item><item><title>사다리꼴 메소드</title><link>https://freshrimpsushi.github.io/ko/posts/704/</link><pubDate>Sun, 04 Aug 2019 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/704/</guid><description>정의 1 $D \subset \mathbb{R}^2$ 에서 정의된 연속함수 $f$ 에 대해 초기값 문제 $\begin{cases} y ' = f(x,y) \\ y( x_{0} ) = Y_{0} \end{cases}$ 가 주어져 있다. 구간 $(a,b)$ 을 $a \le x_{0} &amp;lt; x_{1} &amp;lt; \cdots &amp;lt; x_{n} &amp;lt; \cdots x_{N} \le b$ 와 같은 노드 포인트들</description></item><item><title>자기상관함수</title><link>https://freshrimpsushi.github.io/ko/posts/1209/</link><pubDate>Sun, 04 Aug 2019 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/1209/</guid><description>정의 1 $\left\{ Y_{t} \right\}_{t=1}^{n}$ 이 확률과정이라고 하자. $\mu_{t} := E ( Y_{t} )$ 를 평균함수라고 한다. 다음과 같이 정의된 $\gamma_{ t , s }$ 를 자기공분산함수라고 한다. $$ \gamma_{t , s} : = \text{cov} ( Y_{t} , Y_{s}</description></item><item><title>함수의 균등연속</title><link>https://freshrimpsushi.github.io/ko/posts/1207/</link><pubDate>Sat, 03 Aug 2019 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/1207/</guid><description>정의1 공집합이 아닌 $E \subset \mathbb{R}$ 에 대해 $f : E \to \mathbb{R}$ 이라고 하자. 모든 $\varepsilon &amp;gt; 0$ 에 대해 $$ | x_{1} - x_{2} | &amp;lt; \delta \land x_{1} , x_{2} \in E \implies | f(x_{1}) - f(x_{2}) | &amp;lt; \varepsilon $$ 을 만족하는 $\delta&amp;gt;0$ 가 존재하면 $f$ 가</description></item><item><title>아르마 모형의 가역성</title><link>https://freshrimpsushi.github.io/ko/posts/1208/</link><pubDate>Fri, 02 Aug 2019 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/1208/</guid><description>정의 1 아르마 모형에 있어서 가역성을 가졌다 함은 $AR(p)$ 와 $MA(q)$ 가 서로를 표현할 수 있음을 말한다. 예시 일반적인 $ARMA ( p , q)$ 에 대한 수식전개는 아니지만, $AR(1)$ 과 $MA(1)$ 의 예를 살</description></item><item><title>패러사이틱 솔루션</title><link>https://freshrimpsushi.github.io/ko/posts/701/</link><pubDate>Fri, 02 Aug 2019 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/701/</guid><description>정의 1 패러사이틱 솔루션parasitic solution 이란 직역했을 때 &amp;lsquo;기생하는 해&amp;rsquo;라는 뜻으로 메소드가 진행될수록 크기가 커지며 부호가</description></item><item><title>대학교 수학에서 새롭게 정의되는 함수의 연속</title><link>https://freshrimpsushi.github.io/ko/posts/1206/</link><pubDate>Thu, 01 Aug 2019 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/1206/</guid><description>정의 공집합이 아닌 $E \subset \mathbb{R}$ 에 대해 $f : E \to \mathbb{R}$ 이라고 하자. 모든 $\varepsilon &amp;gt; 0$ 에 대해 $$ | x - a | &amp;lt; \delta \implies | f(x) - f(a) | &amp;lt; \varepsilon $$ 을 만족하는 $\delta&amp;gt;0$ 가 존재하면 $f$ 가 $a \in E$ 에서 연속</description></item><item><title>미드포인트 메소드</title><link>https://freshrimpsushi.github.io/ko/posts/700/</link><pubDate>Thu, 01 Aug 2019 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/700/</guid><description>메소드 $D \subset \mathbb{R}^2$ 에서 정의된 연속함수 $f$ 에 대해 초기값 문제 $\begin{cases} y ' = f(x,y) \\ ( y( x_{0} ), y (x_{1}) ) = ( Y_{0} , Y_{1} ) \end{cases}$ 가 주어져 있다. 구간 $(a,b)$ 를 $a \le x_{0} &amp;lt; x_{1} &amp;lt; \cdots &amp;lt; x_{n} &amp;lt; \cdots x_{N} \le b$ 와</description></item><item><title>R 에서 아리마 모형으로 예측하는 법</title><link>https://freshrimpsushi.github.io/ko/posts/1205/</link><pubDate>Wed, 31 Jul 2019 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/1205/</guid><description>실습 R 내장데이터 UKDriverDeaths는 1969년부터 1984년까지 영국 월별 운전자 사상자에 대한 데이터다. 언뜻 보아도 계절형 아리마 모형을 따</description></item><item><title>멀티스텝 메소드의 수렴성과 오차</title><link>https://freshrimpsushi.github.io/ko/posts/698/</link><pubDate>Wed, 31 Jul 2019 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/698/</guid><description>정리 초기값 문제 $\begin{cases} y ' = f(x,y) \\ ( y( x_{0} ) , \cdots , y(x_{p}) )= ( Y_{0} , \cdots , Y_{p} ) \end{cases}$ 에 대해 멀티스텝 메소드 $$ \displaystyle y_{n+1} = \sum_{j=0}^{p} a_{j} y_{n-j} + h \sum_{j = -1}^{p} b_{j} f (x_{n-j} , y_{n-j} ) $$ 가 일관성을 가지고, 초기</description></item><item><title>입실론-델타 논법</title><link>https://freshrimpsushi.github.io/ko/posts/1204/</link><pubDate>Tue, 30 Jul 2019 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/1204/</guid><description>정의1 $I$ 가 $a \in \mathbb{R}$ 를 포함하는 구간이고, $f$ 는 $I \setminus \left\{ a \right\}$ 에서는 정의된 함수라고 하자. 모든 $\epsilon &amp;gt; 0$ 에 대해 $$ 0 &amp;lt; | x - a | &amp;lt; \delta \implies | f(x) - L | &amp;lt; \varepsilon $$ 을 만족하는</description></item><item><title>R 에서 아리마 모형으로 얻은 시계열 분석 결과 보는 법</title><link>https://freshrimpsushi.github.io/ko/posts/1200/</link><pubDate>Mon, 29 Jul 2019 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/1200/</guid><description>실습 R 내장데이터 AirPassenger는 1949년부터 1960년까지 월별 항공기의 승객 수에 대한 데이터다. (1) 모형: 사실 계수만 제대로 파악할 수 있다</description></item><item><title>멀티스텝 메소드의 일관성과 수렴차수</title><link>https://freshrimpsushi.github.io/ko/posts/694/</link><pubDate>Mon, 29 Jul 2019 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/694/</guid><description>정리 초기값 문제 $\begin{cases} y ' = f(x,y) \\ ( y( x_{0} ) , \cdots , y(x_{p}) )= ( Y_{0} , \cdots , Y_{p} ) \end{cases}$ 에 대해 멀티스텝 메소드 $$ \displaystyle y_{n+1} = \sum_{j=0}^{p} a_{j} y_{n-j} + h \sum_{j = -1}^{p} b_{j} f (x_{n-j} , y_{n-j} ) $$ 가 일관성을 가지는 필요충</description></item><item><title>리미트 슈프리멈과 리미트 인피멈</title><link>https://freshrimpsushi.github.io/ko/posts/1198/</link><pubDate>Sat, 27 Jul 2019 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/1198/</guid><description>정의 $\left\{ x_{n} \right\}_{n \in \mathbb{N}}$, $\left\{ y_{n} \right\}_{n \in \mathbb{N}}$ 이 실수열이라고 하자. $\displaystyle \limsup_{n \to \infty} x_{n} := \lim_{n \to \infty} \left( \sup_{k \ge n} x_{k} \right)$ 을 $\left\{ x_{n} \right\}$ 의 리미트 슈프리멈limit supremum이라 한다. $\displaystyle \liminf_{n \to</description></item><item><title>R 에서 아리마 모형으로 시계열 분석하는 법</title><link>https://freshrimpsushi.github.io/ko/posts/1197/</link><pubDate>Fri, 26 Jul 2019 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/1197/</guid><description>실습 R에서 내장데이터 WWWusage 를 불러와 그래프를 그려 확인해보자. WWWusage는 먼 옛날 인터넷에 접속하는 이용자수를 나타내는 시계열 데이터로써, 그 추이를 파</description></item><item><title>멀티스텝 메소드</title><link>https://freshrimpsushi.github.io/ko/posts/693/</link><pubDate>Fri, 26 Jul 2019 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/693/</guid><description>정의 1 $D \subset \mathbb{R}^2$ 에서 정의된 연속함수 $f$ 에 대해 초기값 문제 $\begin{cases} y ' = f(x,y) \\ ( y( x_{0} ) , \cdots , y(x_{p}) ) = (Y_{0}, \cdots , Y_{p} ) \end{cases}$ 가 주어져 있다. 구간 $(a,b)$ 을 $a \le x_{0} &amp;lt; x_{1} &amp;lt; \cdots &amp;lt; x_{n} &amp;lt; \cdots x_{N} \le</description></item><item><title>초기값이 조금 달라졌을 때 오일러 메소드의 오차</title><link>https://freshrimpsushi.github.io/ko/posts/692/</link><pubDate>Thu, 25 Jul 2019 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/692/</guid><description>정리 $[x_{0} , b] \times \mathbb{R}$ 에서 정의된 $f$ 에 대해 초기값 문제 $\begin{cases} y ' = f(x,y) \\ y( x_{0} ) = Y_{0} \end{cases}$ 의 해 $Y(x)$ 가 $Y \in C^{3} [ x_{0} , b ]$ 이고 $\displaystyle f_{y} (x,y) = {{ \partial f (x,y) } \over { \partial y }}$ 와 $\displaystyle f_{yy} (x,y) = {{ \partial^{2} f (x,y)</description></item><item><title>코시 수열</title><link>https://freshrimpsushi.github.io/ko/posts/1190/</link><pubDate>Thu, 25 Jul 2019 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/1190/</guid><description>정의 모든 $\varepsilon &amp;gt; 0$ 에 대해서 $n , m \ge N \implies | x_{n} - x_{m} | &amp;lt; \varepsilon$ 를 만족하는 $N \in \mathbb{N}$ 이 존재하면 수열 $\left\{ x_{n} \right\}_{n \in \mathbb{N}}$ 이 코시Cauchy라 한다. 정리 $\mathbb{R}$ 에서 코시 수열과 수렴하</description></item><item><title>강한 립시츠 조건과 오일러 메소드의 오차</title><link>https://freshrimpsushi.github.io/ko/posts/689/</link><pubDate>Wed, 24 Jul 2019 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/689/</guid><description>정리 $[x_{0} , b] \times \mathbb{R}$ 에서 정의된 $f$ 에 대해 초기값 문제 $\begin{cases} y ' = f(x,y) \\ y( x_{0} ) = Y_{0} \end{cases}$ 의 해 $Y(x)$ 가 $[x_{0} , b]$ 에서 두 번 미분가능하다고 하자. $f$ 가 모든 $x_{0} \le x \le b$ 와 $ y_{1} , y_{2} \in \mathbb{R}$,</description></item><item><title>준소수의 소인수분해 문제가 쉽게 풀리는 조건</title><link>https://freshrimpsushi.github.io/ko/posts/1189/</link><pubDate>Wed, 24 Jul 2019 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/1189/</guid><description>정리 1 준소수의 소인수분해 문제 $N = pq$ 는 다음의 조건 하에서 비교적 쉽게 풀리게 된다. (i): $p$ 가 스무스한 소수다. (ii): $p \approx q$ 설명 조건 (ii)의 의미는 $p$ 와 $q$ 의 차이</description></item><item><title>볼자노-바이어슈트라스 정리</title><link>https://freshrimpsushi.github.io/ko/posts/380/</link><pubDate>Tue, 23 Jul 2019 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/380/</guid><description>정리 무한집합 $E \subset \mathbb{R}$ 가 유계면 $E$ 의 집적점 $p \in \mathbb{R}$이 존재한다. 설명 혹은 &amp;lsquo;유계 수열은 수렴하는 부분수열을 갖는다.&amp;lsq</description></item><item><title>수치해석에서의 오일러 메소드</title><link>https://freshrimpsushi.github.io/ko/posts/687/</link><pubDate>Tue, 23 Jul 2019 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/687/</guid><description>메소드 1 $D \subset \mathbb{R}^2$ 에서 정의된 연속함수 $f$ 에 대해 초기값 문제 $\begin{cases} y ' = f(x,y) \\ y( x_{0} ) = Y_{0} \end{cases}$ 가 주어져 있다. 구간 $(a,b)$ 을 $a \le x_{0} &amp;lt; x_{1} &amp;lt; \cdots &amp;lt; x_{n} &amp;lt; \cdots x_{N} \le b$ 와 같은 노드 포인트</description></item><item><title>폴라드 p-1 소인수분해 알고리즘 증명</title><link>https://freshrimpsushi.github.io/ko/posts/1187/</link><pubDate>Tue, 23 Jul 2019 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/1187/</guid><description>알고리즘 1 준소수 $N$ 이 주어져있다고 하자. $p$ 가 스무스 소수라면 $N$ 의 소인수분해 $N = pq$ 는 다음과 같이 구할 수 있다. Step 1. $a := 2$ 와 $L := 1$ 을 정한다. Step 2. $d := \gcd (</description></item><item><title>칸토어의 축소구간 정리</title><link>https://freshrimpsushi.github.io/ko/posts/376/</link><pubDate>Mon, 22 Jul 2019 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/376/</guid><description>정의1 집합의 수열 $\left\{ S_{n} \right\}_{n=1}^{\infty}$ 이 모든 자연수 $n$ 에 대해 $S_{n+1} \subset S_{n}$ 이면 내포nested 되었다고 한다. 설명 내포의 번역은 별로 매끄럽지 않은데, 별다른 대안이 없으므로 그</description></item><item><title>골드바서-미칼리 확률 키 암호체계 증명</title><link>https://freshrimpsushi.github.io/ko/posts/1185/</link><pubDate>Sun, 21 Jul 2019 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/1185/</guid><description>빌드업 왼쪽부터 순서대로 앨리스 , 밥 , 이브라 하자. 앨리스와 밥은 메세지를 주고받을 당사자고, 이브는 메세지에 관심이 있는 소극적 공격자다. 주황색 상자는 앨리</description></item><item><title>대학교 수학에서 수열의 수렴을 복잡하게 정의하는 이유</title><link>https://freshrimpsushi.github.io/ko/posts/1186/</link><pubDate>Sun, 21 Jul 2019 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/1186/</guid><description>정의 $\left\{ x_{n } \right\}_{n = 1}^{\infty}$ 이 실수의 수열이라고 하자. 모든 $\varepsilon &amp;gt; 0$ 에 대해 $n \ge N \implies | x_{n} - a | &amp;lt; \varepsilon$ 을 만족하는 $N \in \mathbb{N}$ 이 존재하면 $\left\{ x_{n } \right\}$ 이 $a \in \mathbb{R}$ 로 수렴한다고 한다. $$</description></item><item><title>대학교 수학에서 수열의 극한을 새롭게 정의하는 이유</title><link>https://freshrimpsushi.github.io/ko/posts/1184/</link><pubDate>Sat, 20 Jul 2019 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/1184/</guid><description>정의1 2 $\mathbb{N}$ 은 자연수의 집합, $\mathbb{R}$ 은 실수의 집합을 의미한다. 정의역이 $\mathbb{N}$ 인 함수를 수열이라고 한다. 자연수의 수열 $\left\{ n_{k} \right\}_{ k \in \mathbb{N}}$ 에 대해 $\left\{ x_{n_{k}} \right\}_{ k \in \mathbb{N}}$ 를 $\left\{ x_{n} \right\}_{ n \in</description></item><item><title>RSA 공개 키 암호체계 증명</title><link>https://freshrimpsushi.github.io/ko/posts/1173/</link><pubDate>Fri, 19 Jul 2019 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/1173/</guid><description>빌드업 왼쪽부터 순서대로 앨리스 , 밥 , 이브라 하자. 앨리스와 밥은 메세지를 주고받을 당사자고, 이브는 메세지에 관심이 있는 소극적 공격자다. 주황색 상자는 앨리</description></item><item><title>소인수분해</title><link>https://freshrimpsushi.github.io/ko/posts/775/</link><pubDate>Wed, 17 Jul 2019 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/775/</guid><description>정의 자연수 $N$ 에 대해 $N = p_{1}^{r_{1}} \cdots p_{n}^{r_{n}}$ 을 만족하는 소수 $p_{1} , \cdots , p_{n}$ 와 자연수 $r_{1} , \cdots , r_{n}$ 를 찾는 것을 소인수분해라 한다. 설명 역사적으로 소수는 늘 탐구의 대상이었으나 그</description></item><item><title>립시츠 조건</title><link>https://freshrimpsushi.github.io/ko/posts/684/</link><pubDate>Tue, 16 Jul 2019 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/684/</guid><description>정의 우리는 1계 미분방정식에 대한 존재성-유일성 정리의 스테이트먼트에서 립시츠 조건lipschitz condition을 발견할 수 있다. $D \subset \mathbb{R}^2$ 에서 정</description></item><item><title>연속이지만 미분할 수 없는 함수: 바이어슈트라스 함수</title><link>https://freshrimpsushi.github.io/ko/posts/1169/</link><pubDate>Tue, 16 Jul 2019 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/1169/</guid><description>정리 어디에서도 미분할 수 없는 연속함수가 존재한다. 증명 Strategy: 연속함수 $g_{1} (x) := | x - 1 |$ 과 $g_{2} (x) := | x - 2 |$ 을 생각해보자. $g_{1}$ 은 $x=1$ 에서, $g_{2}$ 는 $x=2$ 에서 미분가능하</description></item><item><title>수치적으로 이상적분을 계산하기 위한 가우스 구적법</title><link>https://freshrimpsushi.github.io/ko/posts/1161/</link><pubDate>Mon, 15 Jul 2019 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/1161/</guid><description>정의 1 가우스-체비셰프 구적법 $$ \int_{-1}^{1} {{ 1 } \over { \sqrt{1 - x^2 } }} f(x) dx \approx \sum_{i=1}^{n} w_{i} f( x_{i} ) $$ $$ w_{i} = {{ \pi } \over { n }} $$ 여기서 $x_{i}$ 들은 제1체비셰프 함수의 근, 다시 말해 $T_{n}(x) = 0$</description></item><item><title>함수의 급수</title><link>https://freshrimpsushi.github.io/ko/posts/1160/</link><pubDate>Sun, 14 Jul 2019 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/1160/</guid><description>정의 함수열 $\left\{ f_{n} : E \to \mathbb{R} \right\}_{n=1}^{\infty}$ 을 정의하자. (1) $\displaystyle \sum_{k=1}^{n} f_{k} (X)$ 이 $n \to \infty$ 일 때 $E$ 에서 점별수렴하면 급수 $\displaystyle \sum_{k=1}^{ \infty } f_{k}$ 가 $E$ 에서 점별수렴한다고 한다. (2) $\displaystyle \sum_{k=1}^{n} f_{k} (X)$ 이 $n \to \infty$ 일 때</description></item><item><title>수치해석에서의 에르미트 다항함수</title><link>https://freshrimpsushi.github.io/ko/posts/1159/</link><pubDate>Sat, 13 Jul 2019 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/1159/</guid><description>정의 다음의 두 함수를 에르미트 다항함수라 한다. 확률론자의 에르미트 다항함수 $$ H_{e_{n}} := (-1)^{n} e^{{x^2} \over {2}} {{d^{n}} \over {dx^{n}}} e^{- {{x^2} \over {2}}} $$ 물리학자의 에르미트 다항함수 $$ H_{n} := (-1)^{n} e^{x^2} {{d^{n}} \over {dx^{n}}}</description></item><item><title>함수의 점별수렴과 균등수렴의 차이</title><link>https://freshrimpsushi.github.io/ko/posts/1158/</link><pubDate>Fri, 12 Jul 2019 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/1158/</guid><description>$\mathbb{R}$ 의 부분집합 $E \ne \emptyset$ 에 대해 함수 $f : E \to \mathbb{R}$ 와 함수열 $\left\{ f_{n} : E \to \mathbb{R} \right\}_{n=1}^{\infty}$ 을 정의하자. 함수의 점별수렴 모든 $\varepsilon &amp;gt; 0$ 과 $x \in E$ 에 대해 $n \ge N \implies | f_{n} (x) - f(x) | &amp;lt; \varepsilon$ 을 만족</description></item><item><title>거리공간에서의 내부 폐포 경계</title><link>https://freshrimpsushi.github.io/ko/posts/383/</link><pubDate>Thu, 11 Jul 2019 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/383/</guid><description>정의 거리공간 $\left( X, d \right)$ 에 대해 $A \subset X$ 라고 하자. $x \in O \subset A$ 를 만족하는 열린 집합 $O$ 가 존재할 때, $x$ 를 $A$ 의 내점interior point이라 한다. $A$ 의 내점</description></item><item><title>수치해석에서의 라게르 다항함수</title><link>https://freshrimpsushi.github.io/ko/posts/1156/</link><pubDate>Thu, 11 Jul 2019 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/1156/</guid><description>정의 $\displaystyle L_{n} := {{ e^{x} } \over { n! }} {{ d^{n} } \over { dx^{n} }} \left( e^{-x} x^{n} \right)$ 을 라게르 다항함수laguerre Polynomial라 한다. 기초 성질 다음과 같은 재귀 공식이 성립한</description></item><item><title>실수 집합과 공집합은 열려있으면서도 닫혀있다</title><link>https://freshrimpsushi.github.io/ko/posts/378/</link><pubDate>Thu, 11 Jul 2019 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/378/</guid><description>정리 $\mathbb{R}$ 과 $\emptyset$ 은 열려있으면서 닫혀있다. 설명 실수 $\mathbb{R}$ 상에서 여러 개구간의 합집합을 열린 집합이라고 한다. 예로써 $(-1,0) \cup (2,3)$ 은 당연히 열린 집합이고, $(0,1)$ 이나 $\mathbb{R}$ 역시 열린</description></item><item><title>실수 집합에서 집적점이란</title><link>https://freshrimpsushi.github.io/ko/posts/379/</link><pubDate>Thu, 11 Jul 2019 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/379/</guid><description>정의 실수 집합 상에서의 한 점 $x \in \mathbb{R}$ 과 그 부분집합 $A \subset \mathbb{R}$ 에 대해 $x$ 를 포함한 임의의 열린 집합 $O$ 에 대해 $O \cap ( A \setminus \left\{ x \right\} ) \ne \emptyset$ 이면 $x$ 를 집적점limit poin</description></item><item><title>함수열의 균등수렴</title><link>https://freshrimpsushi.github.io/ko/posts/1154/</link><pubDate>Tue, 09 Jul 2019 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/1154/</guid><description>정의 $\mathbb{R}$ 의 부분집합 $E \ne \emptyset$ 에 대해 함수 $f : E \to \mathbb{R}$ 와 함수열 $\left\{ f_{n} : E \to \mathbb{R} \right\}_{n=1}^{\infty}$ 을 정의하자. 모든 $\varepsilon &amp;gt; 0$에 대해 $n \ge N \implies | f_{n} (x) - f(x) | &amp;lt; \varepsilon$ 을 만족하는 $N \in \mathbb{N}$ 이 존재</description></item><item><title>함수열의 점별수렴</title><link>https://freshrimpsushi.github.io/ko/posts/1148/</link><pubDate>Sun, 07 Jul 2019 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/1148/</guid><description>정의 $\mathbb{R}$ 의 부분집합 $E \ne \emptyset$ 에 대해 함수 $f : E \to \mathbb{R}$ 를 정의하자. 함수열 $\left\{ f_{n} : E \to \mathbb{R} \right\}_{n=1}^{\infty}$ 이 각각의 $x \in E$ 에 대해 $f(x) = \lim \limits_{n \to \infty} f_{n} (X)$ 을 만족하면 $E$ 에서 $f_{n}$ 이 $f$ 로 점별수</description></item><item><title>수치적으로 이상적분을 계산하기 위한 변수 치환 트릭</title><link>https://freshrimpsushi.github.io/ko/posts/1147/</link><pubDate>Sat, 06 Jul 2019 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/1147/</guid><description>정리 1 $0 &amp;lt; a &amp;lt; b &amp;lt; \infty$ 라고 하자. [1]: $ 0 &amp;lt; p &amp;lt; 1$ 면 $$\int_{0}^{b} {{ f(x) } \over {x^{p} }} dx = \int_{0}^{{{ 1 } \over { 1-p }} b^{1-p} } f \left( \left[ ( 1- p ) m \right]^{{{ 1 } \over { 1-p }}} \right) dm$$ [2]: $ 1 &amp;lt; p$ 면 $$\int_{a}^{ \infty } {{ f(x) }</description></item><item><title>폐구간에서 적분할 수 없는 함수: 디리클레 함수</title><link>https://freshrimpsushi.github.io/ko/posts/1146/</link><pubDate>Fri, 05 Jul 2019 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/1146/</guid><description>정의 다음과 같이 정의되는 $f$를 디리클레 함수라고 한다. $$ f(x) := \begin{cases} 1 &amp;amp;, x \in \mathbb{Q} \\ 0 &amp;amp;, x \notin \mathbb{Q} \end{cases} $$ 설명 디리클레 함수는 리만적분을 할 수 없는 대표적인 함수로, 아</description></item><item><title>가우스 구적법</title><link>https://freshrimpsushi.github.io/ko/posts/1144/</link><pubDate>Thu, 04 Jul 2019 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/1144/</guid><description>정의 1 $f : [a,b] \to \mathbb{R}$ 가 $[a,b]$ 에서 적분가능하고 $[a,b]$ 를 $a = x_{1} &amp;lt; \cdots &amp;lt; x_{n} = b$ 와 같은 노드 포인트들로 쪼갰다고 하자. $$ I_{n} (f) := \sum_{j=1}^{n} w_{j} f ( x_{j} ) \approx \int_{a}^{b} f(x) dx = I ( f ) $$ 위와 같이</description></item><item><title>음이항계수</title><link>https://freshrimpsushi.github.io/ko/posts/1143/</link><pubDate>Wed, 03 Jul 2019 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/1143/</guid><description>정의 $r,k \in \mathbb{N}$ 에 대해 $\displaystyle \binom{-r}{k}$ 를 음이항계수negative Binomial coefficient라 한다. 설명 음이항계수라는 이름에서 짐작할 수 있듯 이항계수가 음수에 대해 확</description></item><item><title>오일러 상수 e는 무리수다</title><link>https://freshrimpsushi.github.io/ko/posts/1141/</link><pubDate>Tue, 02 Jul 2019 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/1141/</guid><description>정리 $$ e \notin \mathbb{Q} $$ $\mathbb{Q}$ 는 유리수의 집합을 나타낸다. 증명 매클로린 전개를 이용1 전략: 매클로린 전개를 통해 $e^{-1}$ 를 두 파트로 찢고 모순을 이끌어낸다. 매클로린 전개를 사</description></item><item><title>원주율은 무리수임을 증명</title><link>https://freshrimpsushi.github.io/ko/posts/1139/</link><pubDate>Sun, 30 Jun 2019 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/1139/</guid><description>정리 $$\pi \notin \mathbb{Q}$$ $\mathbb{Q}$ 는 유리수의 집합을 나타낸다. 증명 Strategy: 정수가 조밀성을 갖지 않는다는 점을 이용한다. 함수 $f$, $F$ 를 아주 교묘하게 정의해서 갖가지 트릭을 사용한다. 이 방</description></item><item><title>뉴턴-코테스 적분 공식</title><link>https://freshrimpsushi.github.io/ko/posts/1138/</link><pubDate>Sat, 29 Jun 2019 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/1138/</guid><description>정의 1 $f : [a,b] \to \mathbb{R}$ 가 $[a,b]$ 에서 적분가능하고 $[a,b]$ 를 간격이 $\displaystyle h:= {{b-a} \over {n}}$ 로 일정한 $a = x_{0} &amp;lt; \cdots &amp;lt; x_{n} = b$ 와 같은 노드 포인트들로 쪼갰다고 하자. 다음과 같이 정의된 수치적 적</description></item><item><title>루트 2 는 무리수임을 증명</title><link>https://freshrimpsushi.github.io/ko/posts/1137/</link><pubDate>Fri, 28 Jun 2019 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/1137/</guid><description>정리 $\sqrt{2}$ 는 무리수다. 증명 전략: $\sqrt{2}$ 를 기약분수꼴로 나타내서 모순을 유도한다. 이 방법은 제곱수가 아닌 모든 $n$ 에 대해 $\sqrt{n}$ 이 무리수임을 보이는데에 사용할 수 있다. $\sqrt{2}$</description></item><item><title>심슨 룰</title><link>https://freshrimpsushi.github.io/ko/posts/1132/</link><pubDate>Wed, 26 Jun 2019 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/1132/</guid><description>정의 $f : [a,b] \to \mathbb{R}$ 가 $[a,b]$ 에서 적분가능하고 $[a,b]$ 를 간격이 $\displaystyle h:= {{b-a} \over {n}}$ 로 일정한 $a = x_{0} &amp;lt; \cdots &amp;lt; x_{n} = b$ 와 같은 노드 포인트들로 쪼갰다고 하자. 다음과 같이 정의된 수치적 적분</description></item><item><title>R 에서 로그로그 스케일 그림 그리는 법</title><link>https://freshrimpsushi.github.io/ko/posts/1131/</link><pubDate>Tue, 25 Jun 2019 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/1131/</guid><description>좋지 않은 방법 win.graph(7,4); par(mfrow=c(1,2)) plot(pressure,main=&amp;#39;Pressure\&amp;#39;) y&amp;lt;-pressure[-1,]$pressure; logtemp&amp;lt;-log(y) x&amp;lt;-pressure[-1,]$temperature; logpress&amp;lt;-log(x) plot(logpress,logtemp,main=&amp;#39;log scale\&amp;#39;) 로그로그 스케일로 그림을 그리는 가장 쉬운 방법은 데이터 자체에 로그를 취하는 것이다. 만약 로그로그 플랏을 처음 그려본다면 이 방</description></item><item><title>사다리꼴 룰</title><link>https://freshrimpsushi.github.io/ko/posts/1130/</link><pubDate>Mon, 24 Jun 2019 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/1130/</guid><description>정의 $f : [a,b] \to \mathbb{R}$ 가 $[a,b]$ 에서 적분가능하고 $[a,b]$ 를 간격이 $\displaystyle h:= {{b-a} \over {n}}$ 로 일정한 $a = x_{0} &amp;lt; \cdots &amp;lt; x_{n} = b$ 와 같은 노드 포인트들로 쪼갰다고 하자. 다음과 같이 정의된 수치적 적분</description></item><item><title>R 에서 범례 넣는 법</title><link>https://freshrimpsushi.github.io/ko/posts/1129/</link><pubDate>Sun, 23 Jun 2019 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/1129/</guid><description>코드 데이터는 분석하는 것만큼이나 표현하는 것이 중요하다. 그림이 복잡할 수록 꼼꼼한 주석과 깔끔한 범례가 데이터를 이해하는데에 큰 도움을 준다. legend() 함수는 굉장히</description></item><item><title>수치적 적분</title><link>https://freshrimpsushi.github.io/ko/posts/1128/</link><pubDate>Sat, 22 Jun 2019 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/1128/</guid><description>정의 1 $f : [a,b] \to \mathbb{R}$ 가 $[a,b]$ 에서 적분가능하고 $[a,b]$ 를 $a = x_{0} &amp;lt; \cdots &amp;lt; x_{n} = b$ 와 같은 노드 포인트들로 쪼갰다고 하자. 적분 오퍼레이터 $I$ 를 $\displaystyle I(f) := \int_{a}^{b} f(x) dx$ 와 같이 정의한다. 적</description></item><item><title>R 에서 메타데이터, attr 참조하는 법</title><link>https://freshrimpsushi.github.io/ko/posts/1127/</link><pubDate>Fri, 21 Jun 2019 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/1127/</guid><description>개요 R 에서 함수들을 사용하다보면 간혹 attr(,&amp;quot;something&amp;quot;)과 같은 데이터를 접할 때가 있다. Attribute는 말</description></item><item><title>베르누이 부등식 증명</title><link>https://freshrimpsushi.github.io/ko/posts/1126/</link><pubDate>Wed, 19 Jun 2019 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/1126/</guid><description>정리 $\alpha &amp;gt; 0$ 이라고 하면 모든 $x \in [ - 1, \infty )$ 에 대해 다음 두 부등식이 성립한다. [1]: $\alpha \in (0, 1] \implies (1 + x )^{\alpha } \le 1 + \alpha x $ [2] $\alpha \in (1, \infty] \implies (1 + x )^{\alpha } \ge 1 + \alpha x $ 설명</description></item><item><title>R 에서 문자열의 벡터를 하나의 문자열로 합치는 법</title><link>https://freshrimpsushi.github.io/ko/posts/1125/</link><pubDate>Tue, 18 Jun 2019 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/1125/</guid><description>개요 R 은 데이터를 다루기에 무척 편리한 언어지만, 다른 프로그래밍 언어에도 익숙한 사람이라면 R 의 문자열이 다소 낯설 수 있다. C 혹은 파이썬과 달리 R 자체에서 지</description></item><item><title>체비셰프 노드</title><link>https://freshrimpsushi.github.io/ko/posts/1124/</link><pubDate>Mon, 17 Jun 2019 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/1124/</guid><description>정의 $[-1,1]$ 에서 $\displaystyle x_{k} = \cos \left( {{2k-1} \over {2n}} \pi \right)$, $k=1, \cdots , n$ 을 체비셰프 노드라 한다. 설명 체비셰프 노드는 일반적으로 사용하듯 일정한 간격의 노드 포인트와 달리 반원의 호를 일정한</description></item><item><title>R 에서 리스트를 참조하는 여러가지 방법</title><link>https://freshrimpsushi.github.io/ko/posts/1123/</link><pubDate>Sun, 16 Jun 2019 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/1123/</guid><description>개요 R 은 데이터를 다루기 위해 정말 좋은 기능들을 많이 제공하는데, 그 중에서도 리스트는 R 을 사용하게 만드는 가장 큰 이유 중 하나다. 파이썬을 위시한 다른 언어에도</description></item><item><title>체비셰프 전개</title><link>https://freshrimpsushi.github.io/ko/posts/1122/</link><pubDate>Sat, 15 Jun 2019 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/1122/</guid><description>빌드업 1 체비셰프 전개를 이해하기 위해서는 어떻게 체비셰프 전개가 나오는지를 먼저 알아야한다. 우선 최소극대화 문제를 푸는 대신 최소제곱 문제를 푼다고 생각해보</description></item><item><title>R 에서 최대값과 최소값의 위치 구하기</title><link>https://freshrimpsushi.github.io/ko/posts/1120/</link><pubDate>Fri, 14 Jun 2019 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/1120/</guid><description>코드 set.seed(150421) x&amp;lt;-sample(100,10); x which.max(x) which.min(x) 통계를 목적으로 데이터를 보다보면 최대값과 최소값이 무엇인지 아는것만 중요한게 아니라 그 게 몇번째 값인지를 파악하는 것도 필요한 경우가 많다. 특</description></item><item><title>스톤-바이어슈트라스 정리 증명</title><link>https://freshrimpsushi.github.io/ko/posts/1117/</link><pubDate>Thu, 13 Jun 2019 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/1117/</guid><description>정리1 보조정의 $X$ 에 대해 $A \subset C(X)$ 이라고 하자. 서로 다른 $x_{1}, x_{2} \in X$ 에 대해 $f(x_{1}) \ne f(x_{2})$ 를 만족하는 $f \in A$ 가 항상 존재하면 $A$ 가 $X$ 의 점들을 분리한다separate고 말</description></item><item><title>수치해석학에서의 최소극대화 근사와 최소제곱 근사</title><link>https://freshrimpsushi.github.io/ko/posts/1116/</link><pubDate>Wed, 12 Jun 2019 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/1116/</guid><description>빌드업 1 주어진 함수 $f : [a,b] \to \mathbb{R}$ 를 근사하는 문제가 주어져 있다고 하자. 계산은 컴퓨터의 몫이므로 다항함수로 $f$ 를 근사하는 것이 목표다. 함수를 근사시킨다는 것은</description></item><item><title>연속함수공간의 알지브라</title><link>https://freshrimpsushi.github.io/ko/posts/1113/</link><pubDate>Tue, 11 Jun 2019 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/1113/</guid><description>정의1 다음 세 가지 조건을 만족하는 집합 $A$ 를 $C(X)$ 의 알지브라algebra라 한다. (i): $\emptyset \ne A \subset C(X)$ (ii): $f,g \in A \implies (f+g) , fg \in A$ (iii): $f \in A , c \in \mathbb{R} \implies cf \in A$ 메트릭 스페이</description></item><item><title>수치해석에서의 함수 근사</title><link>https://freshrimpsushi.github.io/ko/posts/1107/</link><pubDate>Mon, 10 Jun 2019 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/1107/</guid><description>빌드업 수치적인 계산을 할 때 컴퓨터가 인간보다 압도적으로 빠른 것은 사실이지만, 딱히 컴퓨터가 초월함수와 무리수를 이해했기 때문은 아니다. 가령 $\displaystyle \sin {{ \pi } \over {6}}</description></item><item><title>이항 급수 유도</title><link>https://freshrimpsushi.github.io/ko/posts/1103/</link><pubDate>Sun, 09 Jun 2019 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/1103/</guid><description>공식 $|x| &amp;lt; 1$ 이면 $\alpha \in \mathbb{C}$ 에 대해 $$ \begin{align*} (1 + x )^{\alpha} =&amp;amp; \sum_{k=0}^{\infty} \binom{\alpha}{k} x^{k} \\ =&amp;amp; 1 + \alpha x + \dfrac{\alpha (\alpha-1)}{2!}x^{2} + \dfrac{\alpha (\alpha-1)(\alpha-2)}{3!}x^{3} + \cdots \end{align*} $$ 음이항 급수 $$ \begin{align*} (1 - x)^{-\alpha} &amp;amp;= \sum\limits_{k=0}^{\infty} \binom{\alpha + k - 1}{k} x^{k} \\ &amp;amp;= 1 + \alpha x + \dfrac{\alpha(\alpha+1)}{2!} x^{2} + \dfrac{\alpha(\alpha+1)(\alpha+2)}{3!} x^{3} +</description></item><item><title>가법성을 가진 연속함수의 성질</title><link>https://freshrimpsushi.github.io/ko/posts/1102/</link><pubDate>Sat, 08 Jun 2019 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/1102/</guid><description>정리 [1] 연속함수 $f : \mathbb{R} \to \mathbb{R}$ 가 모든 $x, y \in \mathbb{R}$ 에 대해 $f(x + y) = f(x) + f(y)$ 을 만족하면 $$ f(x) = f(1) x $$ [2] 연속함수 $g : \mathbb{R} \to ( 0 , \infty )$ 가 모든 $x, y \in \mathbb{R}$ 에 대해 $g(x + y) = g(x) g(y)$</description></item><item><title>복소수에 대해 일반화된 이항 계수</title><link>https://freshrimpsushi.github.io/ko/posts/1100/</link><pubDate>Fri, 07 Jun 2019 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/1100/</guid><description>정의 복소수 $\alpha \in \mathbb{C}$ 에 대해 다음을 이항 계수binomial coefficient라고 한다. $$ \binom{\alpha}{k} := \begin{cases} \displaystyle {{ \alpha ( \alpha - 1 ) \cdots ( \alpha - k + 1 ) } \over { k! }} &amp;amp; , k</description></item><item><title>코시 곱: 수렴하는 두 멱급수의 곱</title><link>https://freshrimpsushi.github.io/ko/posts/1099/</link><pubDate>Thu, 06 Jun 2019 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/1099/</guid><description>정리 1 $f(x) : = \sum _{k=0}^{\infty} a_{k} x^{k}$ 와 $g(x) : = \sum_{k=0}^{\infty} b_{k} x^{k}$ 의 수렴구간이 $(-r,r)$ 이고 $c_{k} := \sum_{j=0}^{k} a_{j} b_{k-j}$ 이라고 하면 $\sum_{k=0}^{\infty} c_{k} x^{k}$ 는 수렴구간 $(-r,r)$ 상에서 $f(x)g(x)$ 로 수렴한다. 설명 계수들의 곱들이 알아서 두 함수</description></item><item><title>멱급수</title><link>https://freshrimpsushi.github.io/ko/posts/1090/</link><pubDate>Tue, 04 Jun 2019 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/1090/</guid><description>정의1 아래와 같이 변수 $x$에 대한 $n$차항을 무한히 더한 꼴을 멱급수power series라 하고 다음과 같이 표기한다. $$ \sum\limits_{n=0}^{\infty} c_{n}x^{n} = c_{0} + c_{1}x + c_{2}x^{2} + \cdots + c_{n}x^{n} +</description></item><item><title>R 에서 벡터끼리 내적 계산하는 법</title><link>https://freshrimpsushi.github.io/ko/posts/1089/</link><pubDate>Mon, 03 Jun 2019 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/1089/</guid><description>코드 x&amp;lt;-1:10; x y&amp;lt;-(-1)^(1:10); y sum(x*y) x %*% y x %o% y R 에서 분석 혹은 시뮬레이션을 하다보면 가중치가 적용된 기댓값을 구할 일이 종종 있다. 물론 수식적으로 $\displaystyle \left&amp;lt; \mathbf{x}, \mathbf{y} \right&amp;gt; = \sum_{i=1}^{n} x_{i} y_{i}$ 는 아주 간</description></item><item><title>아리마 모형에서의 드리프트</title><link>https://freshrimpsushi.github.io/ko/posts/1115/</link><pubDate>Thu, 30 May 2019 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/1115/</guid><description>설명 시계열 분석을 하다보면 종종 다음과 같이 드리프트drift라는 계수를 보게 된다. 물론 위의 경우 표준오차에 비해서 계수의 크기가 너무 작기 때문에 무시해도 상</description></item><item><title>윈도우즈에서 명령 프롬프트로 파일 목록 얻는 법</title><link>https://freshrimpsushi.github.io/ko/posts/1072/</link><pubDate>Thu, 30 May 2019 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/1072/</guid><description>개요 복수의 데이터를 취합하는 프로그램을 짤 때 파일이 너무 많아서 문제가 될 수 있다. 물론 어느 프로그래밍 언어이든 이를 해결하는 방법은 각자 있겠지만, 반복할 필요</description></item><item><title>계절형 아리마 모형</title><link>https://freshrimpsushi.github.io/ko/posts/1067/</link><pubDate>Wed, 29 May 2019 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/1067/</guid><description>모델 1 $\nabla_{s} Y_{t} := Y_{t} - Y_{t-s}$ 와 같이 정의된 오퍼레이터 $\nabla_{s}$ 를 계절형 차분seasonal Difference이라 한다. $W_{t} := \nabla^{d} \nabla_{s}^{D} Y_{t}$ 와 같이 정의된 $\left\{ W_{t} \right\}_{t \in \mathbb{N}}$ 가 $ARMA(P,Q)$ 고 $\left\{</description></item><item><title>박스-칵스 변환</title><link>https://freshrimpsushi.github.io/ko/posts/1065/</link><pubDate>Tue, 28 May 2019 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/1065/</guid><description>빌드업 $x &amp;gt; 0$ 에 대해 $g(x) := \begin{cases} \displaystyle {{ x^{\lambda} - 1 } \over { \lambda }} &amp;amp; , \lambda \ne 0 \\ \log x &amp;amp; , \lambda = 0 \end{cases}$ 를 박스-칵스 변환이라 한다. $g$ 는 원래 멱변환power transform</description></item><item><title>다차원 비선형 맵</title><link>https://freshrimpsushi.github.io/ko/posts/1052/</link><pubDate>Fri, 24 May 2019 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/1052/</guid><description>비선형 맵의 정의 맵 $\mathbf{f} : \mathbb{R}^{m} \to \mathbb{R}^{m}$ 이 선형이 아니면 비선형이라 한다. 빌드업 1 어떤 맵이 선형인지 보이는 것은 어렵지만 비선형임을 보이는 것은 쉽고, 선형 문제는 쉽지만</description></item><item><title>다차원 선형 맵</title><link>https://freshrimpsushi.github.io/ko/posts/1048/</link><pubDate>Mon, 20 May 2019 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/1048/</guid><description>정의 1 맵 $T_{A} : \mathbb{R}^{m} \to \mathbb{R}^{m}$ 가 모든 $a,b \in \mathbb{R}$ 과 $\mathbf{x}, \mathbf{y} \in \mathbb{R}^{m}$ 에 대해 $$ T_{A} ( a \mathbf{x} + b \mathbf{y} ) = a T_{A} ( \mathbf{x} ) + b T_{A} ( \mathbf{y} ) $$ 를 만족하면 $T_{A}$ 가 선형linear이라고 한다. $A$ 의 아이</description></item><item><title>수치해석학에서의 B-스플라인</title><link>https://freshrimpsushi.github.io/ko/posts/1045/</link><pubDate>Sat, 18 May 2019 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/1045/</guid><description>글과 수식이 읽기 싫으면 그냥 그림으로 보고 이해해도 무방하다. 정의 1 구간 $[a,b]$ 를 $a \le x_{0} &amp;lt; x_{1} &amp;lt; \cdots &amp;lt; x_{n} &amp;lt; \cdots x_{N} \le b$ 와 같은 노드 포인트들로 쪼갰다고 하자. 주어진 자유</description></item><item><title>R 에서 데이터 프레임 열기준으로 정렬하는 법</title><link>https://freshrimpsushi.github.io/ko/posts/1043/</link><pubDate>Fri, 17 May 2019 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/1043/</guid><description>개요 R 에서 데이터를 정렬하는 것 자체는 sort() 함수를 사용하면 간단하게 할 수 있으나, 기본적으로 sort() 함수는 벡터만을 소팅한다. 그러나 실제로는 데이터 프레임의 수많은</description></item><item><title>수치해석에서의 스플라인</title><link>https://freshrimpsushi.github.io/ko/posts/1036/</link><pubDate>Thu, 16 May 2019 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/1036/</guid><description>빌드업 인터폴레이션이란 정확한 함수를 복원하는 게 아니라 그와 유사하면서도 다루기 편한 함수를 구하는 것이 목적이다. 물론 익스플릭시트explicit하고 계</description></item><item><title>R 에서 히스토그램 더 세밀하게 보는 법</title><link>https://freshrimpsushi.github.io/ko/posts/1035/</link><pubDate>Wed, 15 May 2019 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/1035/</guid><description>코드 R에서는 hist() 함수를 통해 히스토그램을 쉽게 그려볼 수 있다. 이 때 계급의 크기는 R 이 알아서 판단하고 결정하는데, 좀 더 세밀하게 보기 위해서는 nclalss 옵션을 사용하면</description></item><item><title>에르미트 인터폴레이션</title><link>https://freshrimpsushi.github.io/ko/posts/1034/</link><pubDate>Tue, 14 May 2019 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/1034/</guid><description>정의 1 서로 다른 $x_{1} , \cdots , x_{n}$ 의 데이터 $(x_{1}, y_{1} , y&amp;rsquo;_{1}) , \cdots , (x_{n} , y_{n}, y&amp;rsquo;_{n})$ 에 대해 $\begin{cases} p (x_{i} ) = y_{i} \\ p '(x_{i} ) = y&amp;rsquo;_{i} \end{cases}$ 와 $\deg H \le 2n-1$ 을 만족하는 인터폴레이션인 다항 함수 $H$ 를 에르미트</description></item><item><title>에르미트-제노키 공식</title><link>https://freshrimpsushi.github.io/ko/posts/1031/</link><pubDate>Sun, 12 May 2019 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/1031/</guid><description>공식 서로 다른 $x_{0}, \cdots , x_{n}$ 에 대해 $f \in C^{n} \left( \mathscr{H} \left\{ x_{0}, \cdots , x_{n} \right\} \right)$ 이라 하자. 그러면 표준 심플렉스 $$ \tau_{n} := \left\{ ( t_{1} , \cdots , t_{n} ) : t_{i} \ge 0 \land \sum_{i=1}^{t} t_{i} \le 1 \right\} $$ 과 $\displaystyle t_{0} = 1 - \sum_{i=1}^{n} t_{i}$ 에</description></item><item><title>R 에서 데이터 표준화하기 표준화된 잔차 보기</title><link>https://freshrimpsushi.github.io/ko/posts/1026/</link><pubDate>Sat, 11 May 2019 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/1026/</guid><description>코드 R 은 통계에 특화된 언어인만큼 Z-score $\displaystyle z:= {{x - \mu} \over {\sigma}}$ 를 구해야할 일이 많다. 이 때 내장된 scale() 함수를 사용하면 편리하다. 예제로써 $\mathbf{x} = ( 1, \cdots , 10 )$ 이라는 벡터를 표</description></item><item><title>뉴턴 계차상 공식 유도</title><link>https://freshrimpsushi.github.io/ko/posts/1025/</link><pubDate>Fri, 10 May 2019 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/1025/</guid><description>공식 서로 다른 $x_{0} , \cdots , x_{n}$ 의 데이터 $(x_{0}, f(x_{0} )) , \cdots , (x_{n} , f( x_{n} ) )$ 에 대해 $$ p_{n} (x) =\sum_{i=0}^{n} f [ x_{0} , \cdots , x_{i} ] \prod_{j=0}^{i-1} (x - x_{j} ) $$ 설명 복잡해보이지만 $n=0,1,2$ 에 대해서 실제로 전개를 해보</description></item><item><title>라그랑주 공식 유도</title><link>https://freshrimpsushi.github.io/ko/posts/1023/</link><pubDate>Wed, 08 May 2019 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/1023/</guid><description>공식 1 서로 다른 $x_{0} , \cdots , x_{n}$ 의 데이터 $(x_{0}, y_{0}) , \cdots , (x_{n} , y_{n})$ 에 대해 $\displaystyle l_{i} (x) := \prod_{i \ne j} \left( {{ x - x_{j} } \over { x_{i} - x_{j} }} \right)$ 이라고 하면 $$ p_{n} (x) = \sum_{i=0}^{n} y_{i} l_{i} (X) $$ 설명 라그랑주 공식은</description></item><item><title>폴리노미얼 인터폴레이션</title><link>https://freshrimpsushi.github.io/ko/posts/1021/</link><pubDate>Mon, 06 May 2019 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/1021/</guid><description>정의 1 서로 다른 $x_{0} , \cdots , x_{n}$ 의 데이터 $(x_{0}, y_{0}) , \cdots , (x_{n} , y_{n})$ 에 대해 $p (x_{i} ) = y_{i}$ 와 $\deg p \le n$ 을 만족하는 인터폴레이션인 다항 함수 $p$ 를 폴리노미얼 인터폴레이션poly</description></item><item><title>R 에서 현재 날짜 시간 확인하기</title><link>https://freshrimpsushi.github.io/ko/posts/1020/</link><pubDate>Sun, 05 May 2019 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/1020/</guid><description>코드 R 뿐만이 아니라 프로그래밍 언어를 사용해야하는 많은 작업에서 로그를 작성하고 해당 시각에 대한 정보가 필요하다. R에서는 Sys.Date() 함수를 통해 날짜를 확인할 수 있으</description></item><item><title>수치해석에서의 인터폴레이션</title><link>https://freshrimpsushi.github.io/ko/posts/1016/</link><pubDate>Fri, 03 May 2019 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/1016/</guid><description>정의 1 주어진 $(n+1)$쌍의 데이터 $(x_{0}, y_{0}) , \cdots , (x_{n} , y_{n})$ 에 대해 $f (x_{i} ) = y_{i}$ 를 만족하면서 어떤 특정한 성질을 가지는 $f$ 를 찾는 방법이나 그 함수 자체를 보간법 혹은</description></item><item><title>카오틱 트랜지션</title><link>https://freshrimpsushi.github.io/ko/posts/1014/</link><pubDate>Thu, 02 May 2019 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/1014/</guid><description>정의 시스템이 파라미터의 변화에 따라 카오틱해지거나 카오틱해지지 않는 등의 현상을 카오틱 트랜지션이라 한다. 예시 예로써 로지스틱 패밀리를 생각해보면 $g_{a} = ax (1-x)$</description></item><item><title>디키-풀러 테스트</title><link>https://freshrimpsushi.github.io/ko/posts/921/</link><pubDate>Wed, 01 May 2019 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/921/</guid><description>가설검정 시계열 데이터 $\left\{ y_{t} \right\}$ 가 주어져 있다고 하자. $H_{0}$: 데이터 $\left\{ y_{t} \right\}$ 는 정상성을 가지지 않는다. $H_{1}$: 데이터 $\left\{ y_{t} \right\}$ 는 정상성을 갖는다. 설명 디키-풀러 테스트는 시</description></item><item><title>지도학습과 비지도학습</title><link>https://freshrimpsushi.github.io/ko/posts/1013/</link><pubDate>Wed, 01 May 2019 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/1013/</guid><description>정의 머신러닝에서 종속변수가 정해진 경우를 지도학습, 그렇지 않은 경우를 비지도학습이라고 한다. 예시 지도학습과 비지도학습의 차이는 쉽게 비유하자면 객관식과</description></item><item><title>수학에서의 경사하강법</title><link>https://freshrimpsushi.github.io/ko/posts/1012/</link><pubDate>Tue, 30 Apr 2019 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/1012/</guid><description>정의 1 스칼라 함수 $\varphi : \mathbb{R}^{n} \to \mathbb{R}$ 을 비용 함수cost function이라 한다. 비용 함수 $ \varphi ( \mathbf{x} )$ 의 극소값을 구하기 위해 $\mathbf{x} = \mathbf{x}_{n}$ 에서 $\varphi ( \mathbf{x}_{n+1} ) &amp;lt; \varphi ( \mathbf{x}_{n} )$ 를 만</description></item><item><title>네츄럴 인베리언트 메져</title><link>https://freshrimpsushi.github.io/ko/posts/1011/</link><pubDate>Mon, 29 Apr 2019 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/1011/</guid><description>정의 1 카오틱한 동역학계에서 충분히 시간이 지난 뒤의 스테이트를 확률적으로 나타낸 분포함수를 네츄럴 (인베리언트) 메져라 한다. 예시 2 예로써 로지스틱 맵 $g_{4} (x)</description></item><item><title>스칼라 필드의 그래디언트</title><link>https://freshrimpsushi.github.io/ko/posts/1010/</link><pubDate>Sun, 28 Apr 2019 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/1010/</guid><description>정의 스칼라 필드 $f : \mathbb{R}^{n} \to \mathbb{R}$의 전 도함수를 특별히 그래디언트gradient, 기울기라 부르고 $\nabla f$라 표기한다. $$ \begin{align*} \nabla f := f^{\prime} =&amp;amp; \begin{bmatrix} D_{1}f</description></item><item><title>바이퍼케이션 다이어그램</title><link>https://freshrimpsushi.github.io/ko/posts/1006/</link><pubDate>Sat, 27 Apr 2019 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/1006/</guid><description>정의 동역학계에서 파라미터의 변화에 따라 나타나는 변화, 바이퍼케이션을 나타낸 그림을 바이퍼케이션 다이어그램bifurcation Diagram이라 한</description></item><item><title>넌리니어 시스템을 풀기 위한 뉴턴 메소드</title><link>https://freshrimpsushi.github.io/ko/posts/1005/</link><pubDate>Fri, 26 Apr 2019 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/1005/</guid><description>메소드 1 $\mathbf{f} ( \mathbf{x} ) := \begin{bmatrix} f_{1}( \mathbf{x} ) \\ \vdots \\ f_{N} ( \mathbf{x} ) \end{bmatrix}$ 와 같은 다변수 함수 $\mathbf{f} : \mathbb{R}^{N} \to \mathbb{R}^{N}$ 가 $\mathbf{f} \in C^{2} \left( N ( \alpha ) \right)$ 이고 $\mathbf{f} ( \alpha ) = \mathbb{0}$, $\left[ D \mathbf{f} ( \alpha ) \right]^{-1}$ 이 존재한다고 하자. $\alpha$ 와</description></item><item><title>딥러닝에서의 드롭아웃</title><link>https://freshrimpsushi.github.io/ko/posts/1004/</link><pubDate>Thu, 25 Apr 2019 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/1004/</guid><description>정의 드롭아웃dropout이란 인공 신경망의 뉴런을 확률적으로 사용하지 않음으로써 과적합을 방지하는 기법이다. 설명 언뜻 생각하면 그냥 학습을 덜 하는 것이고</description></item><item><title>R 에서 야코비 행렬 헤세 행렬 구하는 법</title><link>https://freshrimpsushi.github.io/ko/posts/994/</link><pubDate>Mon, 22 Apr 2019 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/994/</guid><description>코드 R 에서 야코비 행렬과 헤세 행렬을 구하기 위해서는 numDeriv 패키지의 jacobian() 함수와 hessian() 함수를 사용한다. install.packages(&amp;#34;numDeriv&amp;#34;) library(numDeriv) f &amp;lt;- function(v) {c(v[1]^2 + v[2]^2 - 1, sin(pi*v[1]/2) + v[2]^3)} g &amp;lt;- function(v) {(v[1])^3+(v[2])^2} jacobian(f, c(1,1)) hessian(g, c(1,1)) 위 코드를 실행시킨</description></item><item><title>딥러닝에서의 소프트맥스 함수</title><link>https://freshrimpsushi.github.io/ko/posts/993/</link><pubDate>Sat, 20 Apr 2019 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/993/</guid><description>정의 $\mathbf{x} := (x_{1} , \cdots , x_{n}) \in \mathbb{R}^{n}$ 이라고 하자. $\displaystyle \sigma_{j} ( \mathbf{x} ) = {{ e^{x_{j}} } \over {\sum_{i=1}^{n} e^{x_{i}} }}$ 에 대해 $\sigma ( \mathbf{x} ) := \left( \sigma_{1} (\mathbf{x}) , \cdots , \sigma_{n} (\mathbf{x} ) \right)$ 와 같이 정의된 $\sigma : \mathbb{R}^{n} \to (0,1)^{n}$ 을 소프트맥스softm</description></item><item><title>헤세 행렬이란</title><link>https://freshrimpsushi.github.io/ko/posts/992/</link><pubDate>Sat, 20 Apr 2019 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/992/</guid><description>정의 $D \subset \mathbb{R}^{n}$ 에서 정의된 다변수 스칼라 함수 $f : D \to \mathbb{R}$ 에 대해 다음과 같은 행렬 $H \in \mathbb{R}^{n \times n}$ 을 $f$ 의 헤세 행렬이라 한다. $$ H := \begin{bmatrix} {{\partial^2 f } \over {\partial x_{1}^2 }} &amp;amp; \cdots &amp;amp; {{\partial^2 f } \over { \partial</description></item><item><title>딥러닝에서의 활성화 함수</title><link>https://freshrimpsushi.github.io/ko/posts/991/</link><pubDate>Fri, 19 Apr 2019 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/991/</guid><description>정의 실제 생물의 역치를 모방한 비선형 함수를 활성화 함수activation function라 한다. 수학적 정의 딥러닝에서 비선형 스칼라 함수 $\sigma : \mathbb{R} \to \m</description></item><item><title>딥러닝이란?</title><link>https://freshrimpsushi.github.io/ko/posts/996/</link><pubDate>Thu, 18 Apr 2019 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/996/</guid><description>정의 딥러닝은 인공 신경망을 이용한 머신러닝의 일종으로, 특히 인공 신경망을 구성할 때 복수의 레이어를 사용하는 기법을 말한다. 모티브 인간의 두뇌가 뉴런들의 복잡</description></item><item><title>야코비 행렬 혹은 자코비 행렬이란</title><link>https://freshrimpsushi.github.io/ko/posts/989/</link><pubDate>Thu, 18 Apr 2019 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/989/</guid><description>정의 $D \subset \mathbb{R}^{n}$ 에서 정의된 다변수 벡터 함수 $\mathbf{f} : D \to \mathbb{R}^{m}$ 가 각각의 스칼라 함수 $f_{1} , \cdots , f_{m} : D \to \mathbb{R}$ 에 대해 $$ \mathbf{f} ( x_{1} , \cdots , x_{n} ) : = \begin{bmatrix} f_{1} ( x_{1} , \cdots , x_{n} ) \\ \vdots \\ f_{m} ( x_{1} ,</description></item><item><title>머신러닝에서의 경사하강법, 확률적경사하강법</title><link>https://freshrimpsushi.github.io/ko/posts/987/</link><pubDate>Wed, 17 Apr 2019 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/987/</guid><description>개요 손실 함수의 기울기를 이용해 손실 함수의 극소값을 찾는 알고리즘 중 가장 간단한 방법으로 경사하강법gradient Descent algorithm이 있다. 설명 단,</description></item><item><title>슈발치언 도함수</title><link>https://freshrimpsushi.github.io/ko/posts/1047/</link><pubDate>Wed, 17 Apr 2019 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/1047/</guid><description>정의1 $p$ 가 스무스한 맵 $f : \mathbb{R} \to \mathbb{R}$ 의 고정점 혹은 피리어딕 포인트라고 하자. $f ' (c) = 0$ 인 $c$ 를 $f$ 의 크리티컬 포인트critical point라 한다. $p$ 의 베</description></item><item><title>R 에서 복소수 사용하는 법</title><link>https://freshrimpsushi.github.io/ko/posts/981/</link><pubDate>Tue, 16 Apr 2019 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/981/</guid><description>개요 R 에는 복소수 자료형이 구현되어있다. 굳이 스스로 구현할 필요 없이 가져다 쓰기만 하면 된다. 사칙연산은 물론 복소수를 다룰 때 빠질 수 없는 여러가지 함수 역시 만</description></item><item><title>R 에서 정적분 구하는 법</title><link>https://freshrimpsushi.github.io/ko/posts/977/</link><pubDate>Sun, 14 Apr 2019 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/977/</guid><description>개요 R 에서 정적분을 구하기 위해선 integrate() 함수를 사용할 수 있다. 예를 들어 코드 $\displaystyle \int_{0}^{3} \left( x^2 + 4x + 1 \right) dx$ 과 $\displaystyle \int_{0}^{\infty} e^{-x} dx$ 은 다음과 같이 구할 수 있다. 특히 적분구간에는 inf</description></item><item><title>뮬러 메소드</title><link>https://freshrimpsushi.github.io/ko/posts/976/</link><pubDate>Sat, 13 Apr 2019 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/976/</guid><description>메소드 $f (\alpha) = 0$ 이라고 하자. 초기값 $x_{0} , x_{1} , x_{2}$ 과 $$ w_{n} := f [x_{n} , x_{n-1} ] + f [ x_{n} , x_{n-2} ] - f [ x_{n-2} , x_{n-1} ] $$ 에 대해 $$ x_{n+1} : = x_{n} - {{ 2 f ( x_{n} ) } \over { w_{n} \pm \sqrt{ w_{n}^{2} - 4 f</description></item><item><title>R 에서 미분계수 구하는 법</title><link>https://freshrimpsushi.github.io/ko/posts/971/</link><pubDate>Fri, 12 Apr 2019 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/971/</guid><description>개요 R 에서 미분계수를 구하기 위해선 numDeriv 패키지의 grad() 함수를 사용할 수 있다. 코드 예를 들어 $f(x) = x^2 + 4x + 1$ 과 $g(x) = e^{-x}$ 의 미분계수는 다음과 같이 구할 수 있다. install.packages(&amp;#34;numDeriv&amp;#34;) library(numDeriv) f&amp;lt;-function(x) {x^2</description></item><item><title>스칼라 함수와 벡터값 함수</title><link>https://freshrimpsushi.github.io/ko/posts/970/</link><pubDate>Thu, 11 Apr 2019 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/970/</guid><description>정의 집합 $D$ 를 $n$차원 유클리드 공간의 부분집합 $D\subset \mathbb{R}^{n}$ 이라 하자. $D$ 를 정의역으로 갖는 함수를 다변수 함수function of several variables라 한다. $f</description></item><item><title>카오스 이론에서 맵들의 컨쥬게이트</title><link>https://freshrimpsushi.github.io/ko/posts/968/</link><pubDate>Tue, 09 Apr 2019 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/968/</guid><description>개요 카오스 이론에서 맵의 컨쥬게이트는 일종의 아이소메트리, 아이소멀피즘과 비슷하며, 사실 더 일반적인 동역학의 맥락에서는 호메오멀피즘 그 자체다. 1 교재에</description></item><item><title>머신러닝에서의 손실 함수</title><link>https://freshrimpsushi.github.io/ko/posts/967/</link><pubDate>Mon, 08 Apr 2019 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/967/</guid><description>정의 데이터 $Y = \begin{bmatrix} y_{1} \\ \vdots \\ y_{n} \end{bmatrix}$ 에 대한 추정치가 $\widehat{Y} = \begin{bmatrix} \widehat{ y_{1} } \\ \vdots \\ \widehat{y_{n}} \end{bmatrix}$ 와 같이 주어져 있을 때 데이터와 추정치의 괴리도를 나태는 스칼라 함수 $L : \mathbb{R}^{n} \to [ 0 , \infty )$</description></item><item><title>로지스틱 패밀리</title><link>https://freshrimpsushi.github.io/ko/posts/860/</link><pubDate>Sun, 07 Apr 2019 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/860/</guid><description>정의 1 $a \ge 0$ 에 대해 $g_{a} (x) = a x ( 1 - x )$ 를 로지스틱 맵logistic map이라고 하고 $\left\{ g_{a} \mid a &amp;gt; 0 \right\}$ 을 로지스틱 패밀리logistic Family</description></item><item><title>수학에서의 그래프와 네트워크</title><link>https://freshrimpsushi.github.io/ko/posts/966/</link><pubDate>Sun, 07 Apr 2019 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/966/</guid><description>정의 1 정점과 정점들을 연결한 선들로 이루어진 집합을 그래프 혹은 네트워크라고 한다. 정점들의 집합을 $V$, 선들의 집합을 $E$라고 하자. $V(G) := V$ 의 원소를 $G$ 의 버텍</description></item><item><title>샤르코우스키 정리</title><link>https://freshrimpsushi.github.io/ko/posts/1022/</link><pubDate>Sat, 06 Apr 2019 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/1022/</guid><description>정리 1 $$ 3 \prec 5 \prec 7 \prec 9 \prec \cdots \prec \\ 2\cdot 3 \prec 2 \cdot 5 \prec \cdots \prec \\ 2^2 3 \prec 2^2 5 \prec \cdots \prec \\ 2^3 3 \prec 2^3 5^2 \prec \cdots \prec \\ 2^3 \prec 2^2 \prec 2^1 \prec 2^0 $$ 추이적 관계 $\prec$ 에 대해 위와 같은 순서를 샤르코</description></item><item><title>인공 신경망이란?</title><link>https://freshrimpsushi.github.io/ko/posts/962/</link><pubDate>Sat, 06 Apr 2019 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/962/</guid><description>정의 실제 생물의 신경계를 모방한 네트워크를 인공 신경망artificial neural network (ANN) 이라 한다. 수학적 정의 스칼라 함수 $\sigma : \mathbb{R} \to \mathbb{R}$에 대해</description></item><item><title>리-요크 정리 증명</title><link>https://freshrimpsushi.github.io/ko/posts/1017/</link><pubDate>Fri, 05 Apr 2019 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/1017/</guid><description>정리 연속 맵 $f: [a,b] \to [a,b]$ 의 피리어딕-$3$ 오빗이 존재하면 $f$ 는 캐어릭하다. 설명 리-요크 정리li-Yorke theorem는 삼주기 정리period-$</description></item><item><title>1차원 맵의 혼돈, 카오스</title><link>https://freshrimpsushi.github.io/ko/posts/864/</link><pubDate>Thu, 04 Apr 2019 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/864/</guid><description>정의 캐어릭 오빗1 맵 $f : \mathbb{R} \to \mathbb{R}$ 의 바운디드 오빗 $\left\{ x_{1} , x_{2} , \cdots \right\}$ 이 다음을 만족하면 이 오빗을 캐어릭chaotic하다고 한다. (i) 어심토티컬리 피리어딕이 아니</description></item><item><title>윈도우즈에서 파이썬 텐서플로우 설치하는 법</title><link>https://freshrimpsushi.github.io/ko/posts/958/</link><pubDate>Thu, 04 Apr 2019 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/958/</guid><description>가이드 텐서플로우를 설치할 때 문제가 생기는 경우는 보통 파이썬을 잘못 설치했기 때문이다. 시작하기 전에 파이썬을 삭제하고 처음부터 다시 시작하거나, 가능하다면</description></item><item><title>1차원 맵의 랴푸노프 수</title><link>https://freshrimpsushi.github.io/ko/posts/862/</link><pubDate>Wed, 03 Apr 2019 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/862/</guid><description>정의1 스무스한 $1$차원 맵 $f : \mathbb{R} \to \mathbb{R}$ 의 한 오빗 $\left\{ x_{1} , x_{2} , x_{3} , \cdots \right\}$ 이 주어져 있다고 하자. 랴푸노프 수 다음을 랴푸노프 수Lyapunov number라 한</description></item><item><title>위너 프로세스</title><link>https://freshrimpsushi.github.io/ko/posts/957/</link><pubDate>Wed, 03 Apr 2019 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/957/</guid><description>정의 $s&amp;lt; t &amp;lt; t+u$ 라고 할 때, 다음의 조건들을 만족하는 확률과정 $\left\{ W_{t} \right\}$ 를 위너 프로세스라 한다. (i): $W_{0} = 0$ (ii): $\left( W_{t+u} - W_{t} \right) \perp W_{s}$ (iii): $\left( W_{t+u} - W_{t} \right) \sim N ( 0, u )$ (iv): $W_{t}$ 의 샘플 패</description></item><item><title>맵 시스템의 오빗</title><link>https://freshrimpsushi.github.io/ko/posts/858/</link><pubDate>Tue, 02 Apr 2019 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/858/</guid><description>정의1 맵 $f : X \to X$ 와 $p \in X$ 에 대해 $f^{k} (p) = p$ 를 만족하는 가장 작은 자연수가 $k \in \mathbb{N}$ 라고 하자. 맵 $f : X \to X$ 와 점 $x \in X$ 에 대해 집합 $\left\{ x , f(x) , f^{2} , \cdots \right\}$ 를 $f$ 하에</description></item><item><title>준소수</title><link>https://freshrimpsushi.github.io/ko/posts/950/</link><pubDate>Tue, 02 Apr 2019 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/950/</guid><description>정의 두 소수의 곱을 준소수semiprime라 한다. 설명 준소수의 예로써 $4 = 2 \cdot 2$ 이나 $21 = 3 \cdot 7$, $673703 = 719 \cdot 937$ 등이 있다. 일본어 번역으로는 반소수半素數라</description></item><item><title>1차원 맵의 싱크와 소스 판정법</title><link>https://freshrimpsushi.github.io/ko/posts/999/</link><pubDate>Mon, 01 Apr 2019 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/999/</guid><description>정리1 스무스한 맵 $f : \mathbb{R} \to \mathbb{R}$ 에 대해 어떤 $p \in \mathbb{R}$ 가 고정점이라고 하자. [1] $| f ' (p) | &amp;lt; 1$ 이면 $p$ 는 싱크다. [2] $| f ' (p) | &amp;gt; 1$ 이면 $p$ 는 소스다. 예시 $1$차원</description></item><item><title>하르케-베라 테스트</title><link>https://freshrimpsushi.github.io/ko/posts/949/</link><pubDate>Mon, 01 Apr 2019 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/949/</guid><description>가설검정 양적 데이터 $\left\{ x_{i} \right\}_{i = 1}^{n}$ 가 주어져 있다고 하자. $H_{0}$: 데이터 $\left\{ x_{i} \right\}_{i = 1}^{n}$ 는 정규분포를 따른다. $H_{1}$: 데이터 $\left\{ x_{i} \right\}_{i = 1}^{n}$ 는 정규분포를 따르지 않는다. 설명 하르케</description></item><item><title>바나흐 고정점 정리 증명</title><link>https://freshrimpsushi.github.io/ko/posts/948/</link><pubDate>Sun, 31 Mar 2019 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/948/</guid><description>정의 $(X, \left\| \cdot \right\|)$를 바나흐 공간이라고 하자. 모든 $x, \tilde{x} \in X$ 와 $0 \le r &amp;lt; 1$ 에 대해 $\| T(x) - T ( \tilde{x} ) \| \le r \| x - \tilde{x} \|$ 를 만족하는 $T : X \to X$ 를 축소</description></item><item><title>R 에서 현재 OS 정보 확인하는 법</title><link>https://freshrimpsushi.github.io/ko/posts/947/</link><pubDate>Sat, 30 Mar 2019 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/947/</guid><description>개요 R 은 이래저래 리눅스에서도 사용할 일이 있이 많다. 대표적으로 빅데이터를 다루기 위해 하둡을 쓰는 경우가 있다. 물론 윈도우나 리눅스나 R 자체는 크게 다른 게 없</description></item><item><title>로그의 밑변환 공식 유도</title><link>https://freshrimpsushi.github.io/ko/posts/944/</link><pubDate>Thu, 28 Mar 2019 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/944/</guid><description>공식 임의의 양수 $c&amp;gt;0$ 에 대해, $$ \log_{a} b = {{ \log_{c} b } \over { \log_{c} a }} $$ 설명 현대에 와서 공식 자체만으로는 의미가 없어졌지만 입시에서는 여전히 중요한 공식이다. 간단한 성질</description></item><item><title>확률과정론의 인크리먼트</title><link>https://freshrimpsushi.github.io/ko/posts/943/</link><pubDate>Wed, 27 Mar 2019 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/943/</guid><description>정의 확률과정 $\xi (t)$ 이 시간 $T$ 에서 정의되었고 $t_{0} &amp;lt; t_{1} &amp;lt; \cdots &amp;lt; t_{n} \in T$ 이라고 하자. $\xi ( t ) - \xi ( s )$ 를 인크리먼트라 한다. 모든 $i=1, \cdots , n$ 에 대해 $\xi ( t_{i} ) - \xi ( t_{i-1}</description></item><item><title>이산로그 문제가 쉽게 풀리는 조건</title><link>https://freshrimpsushi.github.io/ko/posts/942/</link><pubDate>Tue, 26 Mar 2019 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/942/</guid><description>정리 1 그룹 $G = F_{p}$ 의 원소 $g$ 가 오더 $N$ 이라고 하자. 그러면 이산로그 문제 $g^{x} = h$ 는 다음의 조건 하에서 비교적 쉽게 풀리게 된다. (i): $p$ 가 스무스 소수다. (ii): $p \equiv 3 \pmod{4}$ 고</description></item><item><title>시컨트 메소드</title><link>https://freshrimpsushi.github.io/ko/posts/682/</link><pubDate>Mon, 25 Mar 2019 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/682/</guid><description>메소드 $f,f&amp;rsquo;,f&amp;rsquo;&amp;rsquo;$ 가 $\alpha$ 의 근방에서 연속이고 $f(\alpha) = 0, f '(\alpha) \ne 0$ 이라고 하자. $\alpha$ 와 충분히 가까운 초기값 $x_{0} , x_{1}$ 에 대해 $$ x_{n+1} := x_{n} - f ( x_{n} ) {{ x_{n} - x_{n-1} } \over { f ( x_{n} ) - f ( x_{n-1} )</description></item><item><title>아리마 모형</title><link>https://freshrimpsushi.github.io/ko/posts/941/</link><pubDate>Mon, 25 Mar 2019 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/941/</guid><description>모델 1 백색 잡음 $\left\{ e_{t} \right\}_{t \in \mathbb{N}}$ 에 대해 $$ \nabla^{d} Y_{t} := \sum_{i = 1}^{p} \phi_{i} \nabla^{d} Y_{t-i} + e_{t} - \sum_{i = 1}^{q} \theta_{i} e_{t-i} $$ 과 같이 정의된 $\left\{ Y_{t} \right\}_{ t \in \mathbb{N} }$ 을 $(p,d,q)$차 아리마 과정 $ARIMA (p,d,q)$ 라고 한다.</description></item><item><title>수치해석학에서의 계차상</title><link>https://freshrimpsushi.github.io/ko/posts/969/</link><pubDate>Sun, 24 Mar 2019 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/969/</guid><description>정의 함수 $f : \mathbb{R} \to \mathbb{R}$ 와 서로 다른 $x_{1} , \cdots , x_{n}$ 에 대해 다음을 $f$ 의 계차상divided Difference이라고 한다. $$ \begin{align*} f[x_{0}] :=&amp;amp; f( x_{0} ) \\ f [ x_{0} , x_{1} ] :=&amp;amp; {{ f</description></item><item><title>폴리그-헬맨 알고리즘 증명</title><link>https://freshrimpsushi.github.io/ko/posts/940/</link><pubDate>Sun, 24 Mar 2019 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/940/</guid><description>알고리즘 그룹 $G$ 의 원소 $g$ 가 오더 $N = q_{1}^{r_{1}} q_{2}^{r_{2}} \cdots q_{t}^{r_{t}}$ 이라고 하자. 그러면 이산로그 문제 $g^{x} = h$ 는 다음의 알고리즘에 따라 많아도 $\displaystyle O \left( \sum_{i=1}^{t} S_{q_{i}^{r_{i}}} + \log N \right)$ 스텝 안에 풀린다. Step</description></item><item><title>뉴턴-랩슨 메소드</title><link>https://freshrimpsushi.github.io/ko/posts/678/</link><pubDate>Sat, 23 Mar 2019 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/678/</guid><description>메소드 1 $f,f&amp;rsquo;,f&amp;rsquo;&amp;rsquo;$ 가 $\alpha$ 의 근방에서 연속이고 $f(\alpha) = 0, f '(\alpha) \ne 0$ 이라고 하자. $\alpha$ 와 충분히 가까운 초기값 $x_{0}$ 에 대해 $$ x_{n+1} := x_{n} - {{ f ( x_{n} ) } \over { f ' ( x_{n} ) }} $$ 과 같이 정의된</description></item><item><title>샤피로-윌크 테스트</title><link>https://freshrimpsushi.github.io/ko/posts/939/</link><pubDate>Sat, 23 Mar 2019 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/939/</guid><description>가설검정 양적 데이터 $\left\{ x_{i} \right\}_{i = 1}^{n}$ 가 주어져 있다고 하자. $H_{0}$: 데이터 $\left\{ x_{i} \right\}_{i = 1}^{n}$ 는 정규분포를 따른다. $H_{1}$: 데이터 $\left\{ x_{i} \right\}_{i = 1}^{n}$ 는 정규분포를 따르지 않는다. 설명 샤피로</description></item><item><title>바이섹션 메소드</title><link>https://freshrimpsushi.github.io/ko/posts/676/</link><pubDate>Fri, 22 Mar 2019 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/676/</guid><description>메소드 1 연속함수 $f$ 가 폐구간 $[a,b]$ 에서 $f(a) f(b) &amp;lt; 0$ 이라고 하자. 허용오차는 $\varepsilon$ 이다. $f(c) = 0$ 를 만족하는 $c \in [a,b]$ 는 다음과 같이 구할 수 있다. Step 1. $$c:= {{a+b} \over {2}}$$ Step 2. $b-c \le \varepsilon$ 이</description></item><item><title>시계열분석에서의 변환</title><link>https://freshrimpsushi.github.io/ko/posts/938/</link><pubDate>Fri, 22 Mar 2019 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/938/</guid><description>빌드업 시계열에서 변환이 필요한 이유는 시간이 흐를수록 분산이 커지는 경우 그에 따른 &amp;lsquo;패널티&amp;rsquo;를 줘서 분산을 일정하게 하고 정상성을 얻</description></item><item><title>수치해석에서의 수렴률</title><link>https://freshrimpsushi.github.io/ko/posts/674/</link><pubDate>Thu, 21 Mar 2019 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/674/</guid><description>정의 1 $\alpha$ 로 수렴하는 수열 $\left\{ x_{n} \right\}$ 이 차수order $p \ge 1$ 에 대해 $$ | \alpha - x_{n+1} | \le c | \alpha - x_{n} | ^{p} $$ 을 만족시키는 $c \ge 0$ 가 존재하면 $\left\{ x_{n} \right\}$ 이 수렴률 $c$ 로 $\alpha$ 에 $p$ 차</description></item><item><title>스무스 소수</title><link>https://freshrimpsushi.github.io/ko/posts/927/</link><pubDate>Thu, 21 Mar 2019 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/927/</guid><description>정의 소수 $p$ 에 대해 $(p-1)$ 가 많은 약수를 가지면 $p$ 가 스무스 소수라고 한다. $B$ 보다 작거나 같은 소수들의 곱으로 나타나는 수를 $B$-스무스 수라고 한다. $\psi ( X , B )$</description></item><item><title>샹크스 알고리즘 증명</title><link>https://freshrimpsushi.github.io/ko/posts/917/</link><pubDate>Tue, 19 Mar 2019 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/917/</guid><description>알고리즘 1 항등원이 $e$ 인 그룹 $G$ 의 원소 $g$ 가 오더 $N$ 이라고 하자. 그러면 이산로그 문제 $g^{x} = h$ 는 다음의 알고리즘에 따라 많아도 $O \left( \sqrt{N} \log N \right)$ 스텝 안에 풀린다. Step 1.</description></item><item><title>시계열분석에서의 차분</title><link>https://freshrimpsushi.github.io/ko/posts/916/</link><pubDate>Mon, 18 Mar 2019 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/916/</guid><description>정의 1 오퍼레이터 $B$ 를 $B Y_{t} = Y_{t-1}$ 과 같이 정의하고, 백쉬프트backshift라 한다. 오퍼레이터 $\nabla$ 를 $\nabla := 1 - B$ 그리고 $\nabla^{r+1} = \nabla \left( \nabla^{r} Y_{t} \right)$ 와 같이 정의하고 차분</description></item><item><title>엘가말 공개 키 암호체계 증명</title><link>https://freshrimpsushi.github.io/ko/posts/915/</link><pubDate>Sun, 17 Mar 2019 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/915/</guid><description>빌드업 왼쪽부터 순서대로 앨리스 , 밥 , 이브라 하자. 앨리스와 밥은 메세지를 주고받을 당사자고, 이브는 메세지에 관심이 있는 소극적 공격자다. 주황색 상자는 앨리</description></item><item><title>아르마 모형</title><link>https://freshrimpsushi.github.io/ko/posts/914/</link><pubDate>Sat, 16 Mar 2019 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/914/</guid><description>모델 1 백색 잡음 $\left\{ e_{t} \right\}_{t \in \mathbb{N}}$ 에 대해 $$ Y_{t} := \phi_{1} Y_{t-1} + \phi_{2} Y_{t-2} + \cdots + \phi_{p} Y_{t-p} +e_{t} - \theta_{1} e_{t-1} - \theta_{2} e_{t-2} - \cdots - \theta_{q} e_{t-q} $$ 과 같이 정의된 $\left\{ Y_{t} \right\}_{ t \in \mathbb{N} }$ 을 **$(p,q)$차 자기회귀이</description></item><item><title>디피-헬만 키 교환 알고리즘 증명</title><link>https://freshrimpsushi.github.io/ko/posts/912/</link><pubDate>Fri, 15 Mar 2019 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/912/</guid><description>빌드업 왼쪽부터 순서대로 앨리스 , 밥 , 이브라 하자. 앨리스와 밥은 메세지를 주고받을 당사자고, 이브는 메세지에 관심이 있는 소극적 공격자다. 주황색 상자는 앨리</description></item><item><title>우분투에서 R 설치하는 법</title><link>https://freshrimpsushi.github.io/ko/posts/946/</link><pubDate>Thu, 14 Mar 2019 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/946/</guid><description>가이드 Step 1. Ctrl+Alt+T 를 눌러 콘솔창을 띄운다. Step 2. 콘솔창에 다음과 같이 입력한다. sudo apt-key adv --keyserver keyserver.ubuntu.com --recv-keys E298A3A825C0D65DFD57CBB651716619E084DAB9 관리자 권한이 필요하므로 사용자 계정의 암호를 입력해야한다. Step 3. 콘</description></item><item><title>자기회귀과정</title><link>https://freshrimpsushi.github.io/ko/posts/910/</link><pubDate>Thu, 14 Mar 2019 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/910/</guid><description>모델 1 백색 잡음 $\left\{ e_{t} \right\}_{t \in \mathbb{N}}$ 에 대해 $Y_{t} := \phi_{1} Y_{t-1} + \phi_{2} Y_{t-2} + \cdots + \phi_{p} Y_{t-p} + e_{t}$ 과 같이 정의된 $\left\{ Y_{t} \right\}_{ t \in \mathbb{N} }$ 을 $p$차 자기회귀과정 $AR(p)$ 라고 한다. (1): $AR(1) : Y_{t} = \phi Y_{t-1} + e_{t}$ (2): $AR(2)</description></item><item><title>이산로그</title><link>https://freshrimpsushi.github.io/ko/posts/911/</link><pubDate>Wed, 13 Mar 2019 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/911/</guid><description>정의 1 소수 $p$ 에 대해 갈루아 필드 $\mathbb{F}_{p} := \mathbb{Z} / p \mathbb{Z}$ 의 항등원이 $0$ 이라고 하자. $\mathbb{F}_{p}$ 의 원시근 $g \ne 0$ 에 대해 시클릭 그룹 $\mathbb{F}_{p} ^{ \ast } := \mathbb{F}_{p} \setminus \left\{ 0 \right\} = \left&amp;lt; g \right&amp;gt;$ 상에서 정의된 함수</description></item><item><title>이동평균과정</title><link>https://freshrimpsushi.github.io/ko/posts/909/</link><pubDate>Tue, 12 Mar 2019 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/909/</guid><description>모델 1 백색 잡음 $\left\{ e_{t} \right\}_{t \in \mathbb{N}}$ 에 대해 $Y_{t} := e_{t} - \theta_{1} e_{t-1} - \theta_{2} e_{t-2} - \cdots - \theta_{q} e_{t-q}$ 과 같이 정의된 $\left\{ Y_{t} \right\}_{ t \in \mathbb{N} }$ 을 **$q$차 이동평균과정 $MA(q)$**라고 한다. (1):</description></item><item><title>암호론에서의 암호화와 복호화</title><link>https://freshrimpsushi.github.io/ko/posts/908/</link><pubDate>Mon, 11 Mar 2019 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/908/</guid><description>빌드업 앨리스alice가 밥bob에게 전하고 싶은 메세지가 있다고 생각해보자. 세상에 사람이 둘 뿐이라면 이 메세지는 오직 둘만이 공유하며, 감출 이유가 없다.</description></item><item><title>시계열분석에서의 정상성</title><link>https://freshrimpsushi.github.io/ko/posts/907/</link><pubDate>Sun, 10 Mar 2019 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/907/</guid><description>정의 1 시계열 데이터의 평균과 분산이 일정할 때 정상성stationarity을 갖는다고 한다. 설명 정상正常Normal이 아니라 정상定常Station</description></item><item><title>R 에서 그래프 그릴 때 축 이름에 아래첨자 넣기</title><link>https://freshrimpsushi.github.io/ko/posts/905/</link><pubDate>Sat, 09 Mar 2019 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/905/</guid><description>코드 R 에서도 변수의 이름에 언더바 _를 넣는 것은 허용되지만, 그래프에서도 그렇게 나타낸다면 심하게 가독성이 떨어진다. expression() 함수를 아래와 같이 사용하면 축 이름에</description></item><item><title>시계열분석에서의 백색 잡음</title><link>https://freshrimpsushi.github.io/ko/posts/904/</link><pubDate>Fri, 08 Mar 2019 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/904/</guid><description>정의 1 iid한 확률변수 $e_{t}$ 들의 수열 $\left\{ e_{t} \right\}_{t = 1}^{\infty}$ 를 백색 잡음white noise이라고 한다. iid란 independent identically distributed의 줄임말로써, 서로 독립</description></item><item><title>지수분포를 통한 푸아송 프로세스의 정의</title><link>https://freshrimpsushi.github.io/ko/posts/903/</link><pubDate>Thu, 07 Mar 2019 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/903/</guid><description>정의 $\tau_{1} , \tau_{2} , \cdots \sim \text{exp} ( \lambda )$ 이라고 하자. $\lambda$ 를 강도intensity라고 한다. 2. $\displaystyle s_{n}:= \sum_{k=1}^{n} \tau_{k}$ 를 도달 시간arrival Time이라 한다. 3. $N_{t}:= \begin{cases} 0 , &amp;amp; 0 \le</description></item><item><title>히든 마코프 체인</title><link>https://freshrimpsushi.github.io/ko/posts/901/</link><pubDate>Tue, 05 Mar 2019 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/901/</guid><description>빌드업 위의 그림과 같이 어떤 기계에서 일정한 시간마다 어떤 물건을 생산한다고 생각해보자. 녹색이 정상적인 양품 $1$ 이고 적색이 폐기해야하는 불량품 $0$ 이라면, 지금</description></item><item><title>시계열분석이란</title><link>https://freshrimpsushi.github.io/ko/posts/900/</link><pubDate>Mon, 04 Mar 2019 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/900/</guid><description>설명 시계열time series 이란 쉽게 말해 실제 데이터로 얻어지는 확률과정이라고 볼 수 있다. 주가지수는 시간이 흐름에 따라 불확실성을 가지고 그 값이 변하므로 시계열의</description></item><item><title>도박꾼의 파산 문제</title><link>https://freshrimpsushi.github.io/ko/posts/893/</link><pubDate>Thu, 28 Feb 2019 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/893/</guid><description>문제 도박꾼의 파산 문제는 랜덤워크의 일종으로 두 명의 플레이어가 한정된 돈을 걸고 둘 중 하나가 파산할 때까지 반복하는 게임을 상정한다. 당신이 플레이어 중 하나라고</description></item><item><title>갈루아 이론</title><link>https://freshrimpsushi.github.io/ko/posts/891/</link><pubDate>Wed, 27 Feb 2019 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/891/</guid><description>정리 1 $K$ 가 $F$ 의 유한정규확대체고 $F \le E \le K$ 라 하자. 고정된 $E$ 를 남기는 $G ( K / F )$ 의 부분군을 $\lambda (E)$ 와 같이 나타내자. 그러면 사상 $\lambda$ 는 $F$ 와 $K$ 사이의 모든 $E$ 를</description></item><item><title>ROC 곡선의 AUC 를 이용해 모형 비교하는 법</title><link>https://freshrimpsushi.github.io/ko/posts/887/</link><pubDate>Tue, 26 Feb 2019 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/887/</guid><description>요약 ROC 곡선은 기본적으로 사각형 $[0,1]^2$ 을 가득 채울수록 좋고, 곡선의 왼쪽 상단의 꺾이는 점이 $(0,1)$ 에 가까울 수록 좋다. 설명 위의 두 ROC 곡선이 있다고 한다면 마음 편하게 &amp;l</description></item><item><title>펠 방정식</title><link>https://freshrimpsushi.github.io/ko/posts/885/</link><pubDate>Mon, 25 Feb 2019 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/885/</guid><description>빌드업 $a_{n} : = n^2$ 를 사각수square number라 한다. $\displaystyle b_{m} : = {{ m ( m + 1 ) } \over {2}}$ 를 삼각수triangular number라 한다. 이들 중에서</description></item><item><title>ROC 곡선을 이용해 최적의 컷오프 찾는 법</title><link>https://freshrimpsushi.github.io/ko/posts/877/</link><pubDate>Sun, 24 Feb 2019 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/877/</guid><description>개요 ROC 곡선을 그리면 트레이닝 데이터로 얻은 모형이 테스트 데이터를 어느정도로 잘 설명하는지 한 눈에 보여서 유용하다. 하지만 이 곡선은 모든 컷오프에 대한 분류율을</description></item><item><title>루트가 포함된 분수 유리화 빠르게 하기</title><link>https://freshrimpsushi.github.io/ko/posts/874/</link><pubDate>Fri, 22 Feb 2019 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/874/</guid><description>공식 $$ {{ x } \over { \sqrt{a} \pm \sqrt{b} }} = {{ x \left( \sqrt{a} \mp \sqrt{b} \right) } \over { a - b }} $$ 설명 분수의 유리화는 개념적으로는 쉽지만 분자 분모에 복잡한 항을 곱하고 정리하는 부분에서 계산이</description></item><item><title>일반화된 랜덤워크</title><link>https://freshrimpsushi.github.io/ko/posts/870/</link><pubDate>Thu, 21 Feb 2019 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/870/</guid><description>정의 확률과정 $\left\{ X_{n} \right\}$ 의 상태공간이 정수의 집합 $\left\{ \cdots , -2 , -1, 0 , 1 , 2 , \cdots \right\}$ 이고, 상태 $0$ 에서 시작한다고 하자. 다음 스텝에서 $1$ 만큼 작아질 확률을 $p$, $1$ 만큼 커</description></item><item><title>R 에서 ROC 곡선 그리는 법</title><link>https://freshrimpsushi.github.io/ko/posts/868/</link><pubDate>Wed, 20 Feb 2019 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/868/</guid><description>정의 오류행렬의 False Positive Rate와 True Positive Rate를 각각 축으로 두고 그린 그림을 ROC 곡선Receiver Operating Characteristic Curve이라 한다. 설명 ROC 곡선은 모델의 퍼포먼스를</description></item><item><title>로렌츠 어트랙터</title><link>https://freshrimpsushi.github.io/ko/posts/867/</link><pubDate>Tue, 19 Feb 2019 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/867/</guid><description>개요 로렌츠 방정식lorenz equation이란 대기의 대류를 연립 상미분 방정식으로써 표현하는 수학적 모델이다. 시스템 $$ \begin{align*} {{dx} \over {dt}} =&amp;amp; - \sigma x + \sigma y \\ {{dy}</description></item><item><title>교차검증</title><link>https://freshrimpsushi.github.io/ko/posts/866/</link><pubDate>Mon, 18 Feb 2019 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/866/</guid><description>모델 검증 데이터 분석을 해서 얻은 모델은 그 퍼포먼스가 적절한지 확인하는 과정이 필요하다. 주어진 데이터만 잘 설명하고 실전에서 전혀 힘을 쓰지 못하면 분석을 하는 의</description></item><item><title>갈루아체</title><link>https://freshrimpsushi.github.io/ko/posts/820/</link><pubDate>Sat, 16 Feb 2019 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/820/</guid><description>정리 1 소수 $p$ 와 자연수 $n$ 에 대해 기수가 $p^{n}$ 인 유한 체finite field를 $p^{n}$ 차 갈루아체galois field라 정의하고 $\text{GF} \left( p^{n} \right)$ 와 같이 나타낸다. 유한</description></item><item><title>전이확률의 극한</title><link>https://freshrimpsushi.github.io/ko/posts/863/</link><pubDate>Sat, 16 Feb 2019 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/863/</guid><description>정의 현재의 상태가 $i$ 일 때, $k$ 스탭을 거쳐 $j$ 로 갈 전이확률을 $p_{ij}^{(k)}$ 라 할 때, 무한한 스텝 뒤의 전이확률을 다음과 같이 나타낸다. $$ \pi_{j}:= \lim_{n \to \infty} p_{ij}^{ ( n ) } $$ 설명 통계학이</description></item><item><title>가분확대체</title><link>https://freshrimpsushi.github.io/ko/posts/890/</link><pubDate>Thu, 14 Feb 2019 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/890/</guid><description>정의 1 $E$ 가 $F$ 의 확대체라고 하자. $E$ 에서 $\overline{F}$ 의 부분체로 가는 동형사상 중 고정된 $F$ 를 남기는 동형사상의 갯수를 $F$ 상에서 $E$ 의 인덱스index라 하고 $\left\{ E : F \right\}$ 와</description></item><item><title>확률과정론에서 상태의 유형</title><link>https://freshrimpsushi.github.io/ko/posts/861/</link><pubDate>Thu, 14 Feb 2019 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/861/</guid><description>정의 상태공간이 가산집합인 확률과정 $\left\{ X_{t} \right\}$ 가 주어져 있다고 하자. $i,j$ 를 스테이트, $p_{ij}$를 전이확률이라고 하자. $p_{ij}^{ ( n ) } &amp;gt; 0$ 를 만족하는 $n \ge 0$</description></item><item><title>1계 상미분방정식의 초기값 문제에 대한 솔루션의 존재성과 유일성</title><link>https://freshrimpsushi.github.io/ko/posts/892/</link><pubDate>Wed, 13 Feb 2019 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/892/</guid><description>정리1 $E$가 $\mathbb{R}^{n}$에서 열린집합이고 $f \in C^{1} (E)$와 $\phi_{0} \in E$에 대해 아래와 같은 초기값 문제가 주어졌다고 하자. $$ \begin{cases} \dot{ \phi }</description></item><item><title>채프만-콜모고로프 방정식 유도</title><link>https://freshrimpsushi.github.io/ko/posts/47/</link><pubDate>Wed, 13 Feb 2019 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/47/</guid><description>정리 확률과정의 전이확률 $p_{ij}^{(n)}$, $p_{ij}(t)$과 전이확률행렬 $P^{(n)}$, $P(t)$ 에 대해 다음의 방정식들이 성립한다. 이산적 확률과정 $$ \begin{align*} p_{ ij }^{ (n+m) } =&amp;amp; \sum _{ k } p_{ ik }^{</description></item><item><title>국소 립시츠 조건</title><link>https://freshrimpsushi.github.io/ko/posts/875/</link><pubDate>Tue, 12 Feb 2019 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/875/</guid><description>정의 $E$ 가 $\mathbb{R}^{n}$ 에서 오픈이고 $\mathbf{f} : E \to \mathbb{R}^{n}$ 이라고 하자. 모든 $\mathbf{x} _{0} \in E$ 에 대해 $B \left( \mathbf{x} _{0} ; \varepsilon \right) \subset E$ 를 만족하는 $\varepsilon &amp;gt; 0$ 과 모든 $\mathbf{x} , \mathbf{y} \in B \left( \mathbf{x} _{0} ; \varepsilon \right)$ 에 대해 $| \mathbf{f} ( \mathbf{x} )</description></item><item><title>이산 마코프 체인</title><link>https://freshrimpsushi.github.io/ko/posts/859/</link><pubDate>Tue, 12 Feb 2019 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/859/</guid><description>정의 상태공간이 가산집합이면서 다음을 만족하는 이산적 확률과정 $\left\{ X_{n} \right\}$ 를 이산 마코프 체인dTMC 혹은 간단히 마코프 체인markov Chain, MC이라고 한다. $$ p</description></item><item><title>피카드 메소드</title><link>https://freshrimpsushi.github.io/ko/posts/881/</link><pubDate>Tue, 12 Feb 2019 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/881/</guid><description>정리1 $E$가 $\mathbb{R}^{n}$ 에서 오픈이고 $f \in C^{1} (E)$에 대해 아래와 같은 초기값 문제가 주어졌다고 하자. $$ \begin{cases} \dot{ \phi } = f ( \phi ) \\ \phi (0) = \phi_{0} \end{cases} $$ 함수열 $\left\{ u_{k} (t) \right\} _{ k =0}^{</description></item><item><title>확률과정이란?</title><link>https://freshrimpsushi.github.io/ko/posts/857/</link><pubDate>Sun, 10 Feb 2019 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/857/</guid><description>정의 확률변수 $X: \Omega \to E$ 의 공역을 상태공간이라 한다. 확률변수의 집합 $\left\{ X_{t} \mid t \in [ 0 , \infty ) \right\}$ 을 연속적 확률과정이라 한다. 확률변수의 수열 $\left\{ X_{n} \mid n = 0, 1, 2, \cdots</description></item><item><title>맵으로 표현되는 동역학계와 고정점</title><link>https://freshrimpsushi.github.io/ko/posts/856/</link><pubDate>Sat, 09 Feb 2019 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/856/</guid><description>정의1 정의역과 공역이 같은 함수 $f : X \to X$ 를 맵map이라고 한다. $f$ 를 $k$ 번 합성한 맵을 $f^{k}$ 와 같이 나타낸다. $f(p) = p$ 를 만족하는 $p \in X$ 를 고정점fixed po</description></item><item><title>호스머-렘쇼 적합도 검정</title><link>https://freshrimpsushi.github.io/ko/posts/852/</link><pubDate>Fri, 08 Feb 2019 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/852/</guid><description>가설검정 로지스틱 회귀분석으로 얻은 모형을 $M$ 이라고 하자. $H_{0}$: $M$ 은 적합하다. $H_{1}$: $M$ 은 적합하지 않다. 설명 호스머-렘쇼 적합도 검정은 로지스틱 회귀모형의 적합성</description></item><item><title>최소분열체</title><link>https://freshrimpsushi.github.io/ko/posts/851/</link><pubDate>Thu, 07 Feb 2019 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/851/</guid><description>정의 1 $F \le E$ 라고 하자. $f(x) \in F [ x ]$ 가 $E [ x ]$ 의 일차항들로 인수분해되면 $f(x)$ 가 $E$ 에서 분열된다고 한다. $\left\{ f_{i} (x) \mid i \in I \right\} \subset F [ x ]$ 에 대해 모든 $f_{i} (x)$ 들의 영</description></item><item><title>R 에서 로지스틱 회귀분석 결과 보는 법</title><link>https://freshrimpsushi.github.io/ko/posts/850/</link><pubDate>Wed, 06 Feb 2019 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/850/</guid><description>실습 내장데이터 turnout 데이터를 불러와보자. turnout는 1992년 미국 총선에 대한 데이터로써, race(인종), 연령(age), 교육수준(educ</description></item><item><title>체의 자기동형사상</title><link>https://freshrimpsushi.github.io/ko/posts/843/</link><pubDate>Tue, 05 Feb 2019 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/843/</guid><description>정의 1 $E$ 가 $F$ 의 확대체라고 하자. 체 $E$ 에 대해 동형사상 $\sigma : E \to E$ 을 자기동형사상automorphism이라 하고, $E$ 의 자기동형사상의 집합을 $\text{Auto} (E)$ 와 같이</description></item><item><title>R 에서 두 배열의 성분 비교하기</title><link>https://freshrimpsushi.github.io/ko/posts/842/</link><pubDate>Mon, 04 Feb 2019 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/842/</guid><description>개요 R 은 데이터의 형태, 구조보단 그 내용에 관심이 많은 분야에서 많이 쓰이므로 그 비교 역시 유용하다. 포함관계 (전혀 중요하지는 않지만, 예제에서 A는 삼각수 $\displaystyle</description></item><item><title>켤레 동형사상 정리 증명</title><link>https://freshrimpsushi.github.io/ko/posts/841/</link><pubDate>Sun, 03 Feb 2019 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/841/</guid><description>정의 1 체 $F$ 에 대해 $\alpha$ 가 $F$ 상에서 대수적이라고 하자. 최대차항의 계수가 $1$ 이고 $p( \alpha ) = 0$ 를 만족하는 $p(x) \in F [ x ]$ 를 $\alpha$ 에 대한 $F$ 상에서의 기약 다항함수라 하고 $\text{irr}</description></item><item><title>R 에서 데이터 프레임의 열과 행 이름 바꾸기</title><link>https://freshrimpsushi.github.io/ko/posts/840/</link><pubDate>Sat, 02 Feb 2019 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/840/</guid><description>개요 R 에서 데이터 프레임을 이용해 복잡한 코드를 짜다보면 디폴트로 정해주는 열 이름들이 헷갈려서 바꿔줘야 할 상황이 있다. names() 예제로써 위 데이터 프레임을 보면 별 다</description></item><item><title>유클리드 정역</title><link>https://freshrimpsushi.github.io/ko/posts/838/</link><pubDate>Fri, 01 Feb 2019 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/838/</guid><description>정의 1 정역 $D$ 에서 다음의 두 조건을 만족하는 유클리드 놈Euclidean Norm $\nu : D \setminus \left\{ 0 \right\} \to \mathbb{N}_{0}$ 이 존재하면 $D$ 를 유클리드 정역이라 한다. (i): 모든 $a,b \in D (b \ne 0</description></item><item><title>로지스틱 회귀분석</title><link>https://freshrimpsushi.github.io/ko/posts/832/</link><pubDate>Thu, 31 Jan 2019 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/832/</guid><description>빌드업 $Y \gets X_{1} , \cdots, X_{p}$ 을 한다고 생각해보자.여기서 $Y$ 가 질적변수, 그 중에서도 계급이 두개뿐인 경우가 있을 수 있다. 예를 들어 남자와 여자, 성공과 실패, 양성과 음</description></item><item><title>유일 인수분해 정역</title><link>https://freshrimpsushi.github.io/ko/posts/827/</link><pubDate>Wed, 30 Jan 2019 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/827/</guid><description>정의 1 정역 $D$ 의 $0$ 도 아니고 단원도 아닌 모든 원소에 대한 유한 인수분해가 유일하게 존재하면 $D$ 를 유일 인수분해 정역uFD이라 한다. 유일 인수분해 정역 $D$ 의 $a_{1} , \cdots</description></item><item><title>통계적 분석에서의 변수 선택 기준</title><link>https://freshrimpsushi.github.io/ko/posts/826/</link><pubDate>Tue, 29 Jan 2019 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/826/</guid><description>개요 변수를 선택하는 문제는 필연적으로 분석자의 주관이 개입할 수 밖에 없지만, 가능한 한 객관적인 결론을 내릴 수 있게 도와주는 수치적인 지표가 필요했다. 그런 값들</description></item><item><title>주 아이디얼 정역</title><link>https://freshrimpsushi.github.io/ko/posts/825/</link><pubDate>Mon, 28 Jan 2019 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/825/</guid><description>정의 1 정역 $D$ 의 $p \ne 0$ 가 단원이 아니라고 하자. PID $D$ 의 모든 아이디얼이 주 아이디얼이면 $D$ 를 주 아이디얼 정역pID이라 한다. 따름정의 가환환 $R$ 이 단위원 $1$ 을 가</description></item><item><title>소수를 3으로 나눈 나머지가 1이 되는 필요충분조건</title><link>https://freshrimpsushi.github.io/ko/posts/824/</link><pubDate>Sun, 27 Jan 2019 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/824/</guid><description>정리 $p \ne 3$ 이 소수라고 하자. $p \equiv 1 \pmod{3}$ $\iff$ 어떤 $a,b \in \mathbb{Z}$ 에 대해 $p = a^2 - ab + b^2$ 설명 $p=3$ 은 제외했지만, 사실 $ 3= 2^2 - 2 \cdot 1 + 1^2$ 이므로 정리에 포함되어도 큰 상관은 없</description></item><item><title>뇌터 환</title><link>https://freshrimpsushi.github.io/ko/posts/823/</link><pubDate>Sat, 26 Jan 2019 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/823/</guid><description>정의 $N$ 을 환이라고 하자. $N$ 의 아이디얼들이 $S_{1} \le S_{2} \le \cdots$ 을 만족할 때 이를 오름사슬ascending Chain이라 한다. 오름사슬 $\left\{ S_{i} \right\}_{i \in \mathbb{N} }$ 에 대해 $S_{n} = S_{n+1}</description></item><item><title>소수를 4로 나눈 나머지가 1이 되는 필요충분조건</title><link>https://freshrimpsushi.github.io/ko/posts/822/</link><pubDate>Fri, 25 Jan 2019 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/822/</guid><description>정리 $p \ne 2$ 가 소수라고 하자. $p \equiv 1 \pmod{4}$ $\iff$ 어떤 $a,b \in \mathbb{Z}$ 에 대해 $p = a^2 + b^2$ 설명 $p=2$ 는 제외했지만, 사실 $ 2= 1^2 + 1^2$ 이므로 정리에 포함되어도 큰 상관은 없다. 예를들어</description></item><item><title>통계적 분석에서의 변수 선택 절차</title><link>https://freshrimpsushi.github.io/ko/posts/821/</link><pubDate>Thu, 24 Jan 2019 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/821/</guid><description>빌드업 다중회귀분석 $Y \gets X_{1} , \cdots, X_{p}$ 을 한다고 생각해보자.여기서 독립변수는 $p$ 개로, 회귀분석의 여러가지 가정들을 잘 만족하고 다중공선성이 없으며 설명력이 높다</description></item><item><title>리눅스 포트란 컴파일 후 a.out 실행법</title><link>https://freshrimpsushi.github.io/ko/posts/865/</link><pubDate>Wed, 23 Jan 2019 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/865/</guid><description>가이드 확장자가 .f90인 파일 exameple.f90 을 컴파일하려면 콘솔창에서 gfortran example.f90 을 입력하면 된다. 실행하고 나면 같은 디렉터리에 a.out 라는 파일이 생긴다. 콘솔창에서 ./a.out 을 입력하</description></item><item><title>R 에서 주성분회귀분석하는 법</title><link>https://freshrimpsushi.github.io/ko/posts/814/</link><pubDate>Tue, 22 Jan 2019 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/814/</guid><description>개요 주성분회귀분석pCR 이란 주성분분석과 다중회귀분석을 합친 것으로, 주성분분석을 통해 얻은 주성분을 새로운 독립변수로 둔 회귀분석을 말한다. 사실 통계학</description></item><item><title>소체</title><link>https://freshrimpsushi.github.io/ko/posts/795/</link><pubDate>Tue, 22 Jan 2019 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/795/</guid><description>빌드업 환 $R$ 의 모든 원소 $r$ 에 대해 $n \cdot r = 0$ 을 만족하는 가장 작은 자연수 $n$ 을 $R$ 의 표수characteristic라 정의한다. 만약 그런 자연수가 존재하지 많</description></item><item><title>3대 작도 불능 문제 증명</title><link>https://freshrimpsushi.github.io/ko/posts/813/</link><pubDate>Mon, 21 Jan 2019 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/813/</guid><description>정리 1 다음 세 가지 작도는 불가능하다. [1] Squaring the circle: 주어진 사각형과 같은 넓이의 원을 작도하라. [2] Doubling the cube: 주어진 정육면체의 부피가 두 배가 되는 정육면체를 작도하라.</description></item><item><title>통계학에서의 주성분분석</title><link>https://freshrimpsushi.github.io/ko/posts/812/</link><pubDate>Sun, 20 Jan 2019 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/812/</guid><description>개요 다중회귀분석 $Y \gets X_{1} , \cdots, X_{p}$ 을 한다고 생각해보자. 주성분분석principal component analysis, 영어 약어로 PCA는 쉽게 말해 양적변수들이 제대로 독립이 되도록 &amp;l</description></item><item><title>작도가능수</title><link>https://freshrimpsushi.github.io/ko/posts/811/</link><pubDate>Sat, 19 Jan 2019 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/811/</guid><description>정의 $1$ 을 포함해 유한번의 사칙연산과 제곱근을 취함으로써 얻을 수 있는 수를 작도가능constructible하다고 한다. 설명 작도가능이라는 것은 원래 고대</description></item><item><title>분산팽창인자 VIF</title><link>https://freshrimpsushi.github.io/ko/posts/810/</link><pubDate>Fri, 18 Jan 2019 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/810/</guid><description>정의 1 다중회귀분석 $Y \gets X_{1} , \cdots, X_{p}$ 을 할 때 $i$번째 독립변수에 대한 다중회귀분석 $$X_{i} \gets X_{1} , \cdots, X_{i-1} , X_{i+1} , \cdots, X_{p}$$ 의 중회귀계수를 $R_{i}^2$ 라고 두자. 다음을 $X_{i}$ 의 분산팽창인</description></item><item><title>추상대수의 용어로 표현된 대수학의 기본정리</title><link>https://freshrimpsushi.github.io/ko/posts/809/</link><pubDate>Thu, 17 Jan 2019 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/809/</guid><description>정의 1 체 $F$ 의 확대체를 $E$ 라고 하자. $F [ x ]$ 의 모든 다항함수가 $F$ 에서 영을 가지면 $F$ 를 대수적으로 닫혀있다algebraically Closed고 한다.</description></item><item><title>가우스의 이차상호 법칙 증명</title><link>https://freshrimpsushi.github.io/ko/posts/395/</link><pubDate>Wed, 16 Jan 2019 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/395/</guid><description>정리 1 서로 다른 두 홀수 소수 $p , q$ 에 대해 다음이 성립한다. (1): $$ \left( {{ q } \over { p }} \right) = \begin{cases} \left( {{ p } \over { q }} \right) &amp;amp; p \equiv 1 \pmod{4} \lor q \equiv 1 \pmod{4} \\ - \left( {{ p } \over { q }} \right) &amp;amp;</description></item><item><title>다중공선성</title><link>https://freshrimpsushi.github.io/ko/posts/808/</link><pubDate>Wed, 16 Jan 2019 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/808/</guid><description>정의 1 다중회귀분석 $Y \gets X_{1} , \cdots, X_{p}$ 을 한다고 생각해보자.이 때 독립변수 $ X_{1} , \cdots, X_{p}$ 중에서 독립변수끼리 강한 상관관계를 가지면 다중공선성multicolli</description></item><item><title>대수적 확대체</title><link>https://freshrimpsushi.github.io/ko/posts/807/</link><pubDate>Tue, 15 Jan 2019 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/807/</guid><description>정의 1 $E$ 가 $F$ 의 확대체고 $n \in \mathbb{N}$ 이라 하자. $E$ 의 모든 원소가 $F$ 상에서 대수적 수면 $E$ 를 $F$ 의 대수적 확대체라 한다. $E$ 가 $F$ 상에서의 $n$차원 벡터 공간이면 $E$ 를 $F$</description></item><item><title>오일러 판정법</title><link>https://freshrimpsushi.github.io/ko/posts/188/</link><pubDate>Tue, 15 Jan 2019 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/188/</guid><description>정리 1 소수 $p \ne 2$ 에 대해 $$ a^{{p-1} \over {2}} \equiv \left( {a \over p} \right) \pmod{p} $$ 설명 이에 따르면 $a$ 하나만 이차잉여인지 비이차잉여인지 보고싶을 땐 무작정 계산해보면 그만이다. 물론 거듭제</description></item><item><title>르장드르 기호의 곱셈적 성질 증명</title><link>https://freshrimpsushi.github.io/ko/posts/136/</link><pubDate>Mon, 14 Jan 2019 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/136/</guid><description>정의 QR과 NR은 각각 이차잉여와 비이차잉여를 의미한다. 르장드르 기호legendre Symbol는 $p$ 보다 작은 자연수 $a$ 에 대해 $$ \left( { a \over p } \right) = \begin{cases} 1</description></item><item><title>추상대수학에서의 벡터 공간</title><link>https://freshrimpsushi.github.io/ko/posts/806/</link><pubDate>Mon, 14 Jan 2019 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/806/</guid><description>정의 1 체 $F$ 와 아벨군 $V$ 의 모든 $\alpha , \beta \in F$ 와 $x, y \in V$ 가 다음의 조건을 만족하면 $V$ 를 $F$ 상의 벡터 공간vector space이라고 한다. $F$ 의 원소를 스칼라sc</description></item><item><title>비선형회귀분석: 회귀분석에서의 변수 변환</title><link>https://freshrimpsushi.github.io/ko/posts/805/</link><pubDate>Sun, 13 Jan 2019 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/805/</guid><description>개요 1 회귀분석은 기본적으로 변수들간의 선형관계를 밝히는 방법이지만, 필요하다면 데이터를 선형으로 &amp;lsquo;펴서&amp;rsquo; 분석할 수 있다. 이는</description></item><item><title>이차잉여와 비이차잉여</title><link>https://freshrimpsushi.github.io/ko/posts/137/</link><pubDate>Sun, 13 Jan 2019 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/137/</guid><description>정의 1 소수 $p \ne 2$ 와 $a &amp;lt; p$ 에 대해 합동방정식 $x^{2} \equiv a \pmod{p}$ 의 해가 존재하면 $a$ 를 모듈로 $p$ 에 대한 이차잉여 QR이라 한다. $a$ 가 이차잉여가 아니면 비이차잉여 NR이라</description></item><item><title>밀러-라빈 판정법</title><link>https://freshrimpsushi.github.io/ko/posts/804/</link><pubDate>Sat, 12 Jan 2019 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/804/</guid><description>정리 1 홀수 $n,q$ 를 $n-1 = 2^{k} q$ 와 같이 나타내자. $$ a \nmid n \\ a^{q} \not\equiv 1 \pmod{n} $$ 이면서 모든 $i = 0, 1, \cdots , (k-1)$ 에 대해 $$ a^{2^{i} q} \not\equiv -1 \pmod{n} $$ 를 만족하는 $ a$ 가 존재하면 $n$ 은 합성수다.</description></item><item><title>실수체로 복소수체를 만들어내는 대수적인 방법</title><link>https://freshrimpsushi.github.io/ko/posts/803/</link><pubDate>Fri, 11 Jan 2019 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/803/</guid><description>정리 1 $$ \mathbb{R} [x ] / \left&amp;lt; x^2 + 1 \right&amp;gt; \simeq \mathbb{C} $$ 설명 팩트로만 보면 당연하고 실수체에서 복소수체를 만들어내는 과정이 상당히 아름답다. $\mathbb{R} [x ]$ 를 $\left&amp;lt; x^2 \right&amp;gt;$ 로 자르든 $\left&amp;lt; x^2 + x \right&amp;gt;$</description></item><item><title>코셀트 판정법</title><link>https://freshrimpsushi.github.io/ko/posts/802/</link><pubDate>Thu, 10 Jan 2019 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/802/</guid><description>개요 카마이클 수임을 판정하는 방법으로써 필요충분조건이라는 점이 또 유용하게 쓰일 수 있는 정리다. 정리 1 홀수 $n$ 이 합성수라고 하자. $n$ 은 카마이클 수 $\iff$ $p \mid n$ 을</description></item><item><title>단순확대체</title><link>https://freshrimpsushi.github.io/ko/posts/801/</link><pubDate>Wed, 09 Jan 2019 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/801/</guid><description>정의 1 $F$ 의 확대체 $E$ 가 어떤 $\alpha \in E$ 에 대해 $E = F( \alpha )$ 이면 $E$ 를 $F$ 의 단순확대체simple Extension라 한다. 설명 $F ( \alpha )$ 은 쉽게 말해 $F$ 에 없던 $\alpha$ 를</description></item><item><title>원시근 정리 증명</title><link>https://freshrimpsushi.github.io/ko/posts/800/</link><pubDate>Tue, 08 Jan 2019 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/800/</guid><description>정의 1 $1 \le a \le p$ 가 $\text{ord}_{p} (a) = p-1$ 를 만족하면 법 $p$ 의 원시근이라 정의한다. 위수 $\text{ord}_{p} (a) $ 는 $a^{e} \equiv 1 \pmod{p}$ 를 만족하는 가장 작은 자연수 $e$ 를 의미한다. 정리 모든 소수 $p$ 는 $\phi (</description></item><item><title>대수적 수와 초월수</title><link>https://freshrimpsushi.github.io/ko/posts/799/</link><pubDate>Mon, 07 Jan 2019 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/799/</guid><description>정의 1 체 $F$ 의 확대체를 $E$ 라고 하자. 상수함수가 아닌 $f(x) \in F [ x ]$ 에 대해 $f( \alpha ) = 0$ 을 만족시키는 $\alpha \in E$ 를 $F$ 상에서 대수적algebraic이라 하고, 대수</description></item><item><title>정수론에서의 위수</title><link>https://freshrimpsushi.github.io/ko/posts/798/</link><pubDate>Sun, 06 Jan 2019 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/798/</guid><description>정의 1 $\gcd (a, p) = 1$ 이라고 하자. $a^{e} \equiv 1 \pmod{p}$ 를 만족하는 가장 작은 자연수 $e$ 를 $\text{ord}_{p} (a)$ 라 쓰고 법 $p$ 에서 $a$ 의 위수order라 정의한다. 정리 $a^{n} \equiv 1 \pmod{p}$ 이라고 하면 $\text{ord}_{p} (a) \mid</description></item><item><title>확대체의 정의와 크로네커 정리 증명</title><link>https://freshrimpsushi.github.io/ko/posts/797/</link><pubDate>Sat, 05 Jan 2019 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/797/</guid><description>확대체의 정의 1 체 $F$ 에 대해 $F \le E$ 인 $E$ 를 $F$ 의 확대체extension field라 한다. 크로네커 정리 $f(x) \in F [ x ]$ 가 상수가 아니라고 하면 $F$ 의 확대체 $E$ 와</description></item><item><title>카마이클 수</title><link>https://freshrimpsushi.github.io/ko/posts/794/</link><pubDate>Wed, 02 Jan 2019 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/794/</guid><description>정의 1 자연수 $n$ 이 모든 $1 \le a \le n$ 에 대해 $a^{n} \equiv a \pmod{n}$ 를 만족하면 카마이클 수라 한다. 정리 모든 카마이클 수는 $2$ 를 제외한 서로 다른 소수의 곱으로만 나타난다. 설명 카</description></item><item><title>주 아이디얼</title><link>https://freshrimpsushi.github.io/ko/posts/793/</link><pubDate>Tue, 01 Jan 2019 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/793/</guid><description>정의 1 단위원을 가지는 가환환 $R$ 의 원소 $a$ 로 생성되는 $\left&amp;lt; a \right&amp;gt;$ 를 $a$ 에 의해 생성되는 주 아이디얼principal Ideal이라고 한다. 곱셈에 대한 항등원 $1$ 을</description></item><item><title>합동방정식의 거듭제곱근</title><link>https://freshrimpsushi.github.io/ko/posts/792/</link><pubDate>Mon, 31 Dec 2018 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/792/</guid><description>알고리즘 1 자연수 $b,k,m$ 가 $\gcd (b , m) = \gcd ( k , \phi (m) ) = 1$ 을 만족하면 합동방정식 $x^{k} \equiv b \pmod{ m }$ 의 해 $x$ 는 다음과 같이 계산할 수 있다. Step 1. $\phi (m)$ 을 계산한다. Step 2. $ku -</description></item><item><title>소 아이디얼</title><link>https://freshrimpsushi.github.io/ko/posts/791/</link><pubDate>Sun, 30 Dec 2018 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/791/</guid><description>정의 1 가환환 $R$ 의 아이디얼 $P \ne R$ 가 $a, b \in R$ 에 대해 $ab \in P$ 이면 $a \in P$ 또는 $b \in P$ 일 때, $P$ 가 $R$ 에서 소 아이디얼prime Ideal이라 한다. 설명 소pri</description></item><item><title>극대 아이디얼</title><link>https://freshrimpsushi.github.io/ko/posts/789/</link><pubDate>Fri, 28 Dec 2018 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/789/</guid><description>정의 1 환 $R$ 의 아이디얼 중 $R$ 이외의 어떤 아이디얼 $N \ne R$ 에도 포함되지 않는 아이디얼 $M \ne R$ 을 $R$ 의 극대 아이디얼maximal Ideal이라 한다. 다시 말해,</description></item><item><title>힐베르트 공간은 리플렉시브임을 증명</title><link>https://freshrimpsushi.github.io/ko/posts/788/</link><pubDate>Thu, 27 Dec 2018 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/788/</guid><description>정리 힐베르트공간 $H$ 은 리플렉시브다: $$ H^{\ast \ast} \approx H $$ $X^{\ast}$ 는 $X$ 의 듀얼 스페이스고, $X^{\ast \ast}$ 는 더블듀얼을 나타낸다. $X \approx Y$ 는 $X$ 와 $Y$ 가 아이소메트릭함을 의미한다. 설</description></item><item><title>삼중대각행렬의 행렬식 유도</title><link>https://freshrimpsushi.github.io/ko/posts/787/</link><pubDate>Wed, 26 Dec 2018 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/787/</guid><description>공식 $$ X_{n} := \begin{bmatrix} x &amp;amp; 1 &amp;amp; 0 &amp;amp; \cdots &amp;amp; 0 &amp;amp; 0 \\ 1 &amp;amp; x &amp;amp; 1 &amp;amp; \cdots &amp;amp; 0 &amp;amp; 0 \\ 0 &amp;amp; 1 &amp;amp; x &amp;amp; \cdots &amp;amp; 0 &amp;amp; 0 \\ \vdots &amp;amp; \vdots &amp;amp; \vdots &amp;amp; \ddots &amp;amp; \vdots &amp;amp; \vdots \\ 0 &amp;amp; 0 &amp;amp; 0 &amp;amp; \cdots &amp;amp; x &amp;amp; 1 \\ 0 &amp;amp; 0 &amp;amp;</description></item><item><title>리즈 표현 정리 증명</title><link>https://freshrimpsushi.github.io/ko/posts/786/</link><pubDate>Tue, 25 Dec 2018 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/786/</guid><description>정리1 $\left( H, \left\langle \cdot,\cdot \right\rangle \right)$가 힐베르트 공간이라고 하자. $H$의 선형 범함수 $f \in H^{ \ast }$와 $\mathbf{x} \in H$ 에 대해 $f ( \mathbf{x} ) = \left\langle \mathbf{x} , \mathbf{w} \right\ran</description></item><item><title>단원을 가지는 아이디얼</title><link>https://freshrimpsushi.github.io/ko/posts/785/</link><pubDate>Mon, 24 Dec 2018 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/785/</guid><description>정리 1 [1]: 단위원 $1$ 을 갖는 환 $R$ 의 아이디얼 $I$ 가 단원을 가지면 $I = R$ [2]: 체 $F$ 는 $\left\{ 0 \right\}$, $F$ 외의 아이디얼을 가지지 않는다. 설명 정리 [1]은 아이디얼에 단원이 있다는</description></item><item><title>직교 분해 정리 증명</title><link>https://freshrimpsushi.github.io/ko/posts/784/</link><pubDate>Sun, 23 Dec 2018 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/784/</guid><description>정리1 $\left( H, \left\langle \cdot,\cdot \right\rangle \right)$를 힐베르트 공간이라 하자. 그러면 $H$의 닫힌 부분공간 $M$에 대해서 $$ H = M \oplus M^{\perp} $$ 따름정리 $$ \left( M^{\perp} \right)^{\perp} = M $$ 따름정리</description></item><item><title>베이즈 인자를 통한 가설검정</title><link>https://freshrimpsushi.github.io/ko/posts/782/</link><pubDate>Fri, 21 Dec 2018 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/782/</guid><description>빌드업 고전적인 가설검정을 쓸 수 있게 되려면 기각역, 유의확률과 같은 개념에 대한 수학적인 이해를 포함해서 이를 직관적으로 받아들일 수 있을 정도의 통계학적 센스까</description></item><item><title>방데르몽드 행렬의 행렬식 유도</title><link>https://freshrimpsushi.github.io/ko/posts/736/</link><pubDate>Thu, 20 Dec 2018 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/736/</guid><description>정의 서로 다른 $1, x_{1} , x_{2 } , \cdots , x_{n}$ 에 대해 다음과 같이 정의된 행렬 $V_{n}$ 을 방데르몽드 행렬vandermonde matrix이라고 한다. $$ V_{n} := \begin{bmatrix} 1 &amp;amp; x_{1} &amp;amp; x_{1}^{2} &amp;amp;</description></item><item><title>제1종 제2종 체비셰프 다항함수의 관계</title><link>https://freshrimpsushi.github.io/ko/posts/780/</link><pubDate>Wed, 19 Dec 2018 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/780/</guid><description>정리 제1종 체비셰프 다항함수 $T_{n} (x) = \cos \left( n \cos^{-1} x \right)$ 과 제2종 체비셰프 다항함수 $\displaystyle U_{n} (x) = {{1} \over {n+1} } T_{n+1} &amp;rsquo; (X)$ 은 다음의 관계를 가진다. [1]: $$U_{n} (x) - U_{n-2} (x) = 2 T_{n} (X)$$ [2]: $$T_{n} (x) -</description></item><item><title>크레이머 법칙 증명</title><link>https://freshrimpsushi.github.io/ko/posts/783/</link><pubDate>Wed, 19 Dec 2018 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/783/</guid><description>개요 크레이머 공식cramer rule은 연립방정식을 제대로 풀어내는데에 효율적이라곤 할 수 없지만 $A_{j}$ 가 비가역행렬이라거나 $A$ 자체가 행렬식을 구하기 편리하</description></item><item><title>제2종 체비셰프 다항함수</title><link>https://freshrimpsushi.github.io/ko/posts/779/</link><pubDate>Tue, 18 Dec 2018 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/779/</guid><description>정의 $$U_{n} (x) := {{1} \over {n+1} } T_{n+1} &amp;rsquo; (x) = {{\sin \left( ( n +1 ) \theta \right)} \over { \sin \theta }} $$ 을 제2종 체비셰프 다항함수라 한다. 기초 성질 재귀 공식 [0]: $$U_{n+1} (x) = 2x U_{n} (x) - U_{n-1} (X)$$ 직교 집합 [1] 함수의 내</description></item><item><title>최단 벡터 정리 증명</title><link>https://freshrimpsushi.github.io/ko/posts/778/</link><pubDate>Mon, 17 Dec 2018 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/778/</guid><description>정리1 $\left( H, \left\langle \cdot,\cdot \right\rangle \right)$를 힐베르트 공간이라고 하자. $M \lneq H$ 을 공집합이 아니고 닫힌 컨벡스 부분집합이라고 하자. 그러면 $\mathbf{x} \in ( H \setminus M)$ 에 대해 $$ \delta :=</description></item><item><title>제1종 체비셰프 다항함수</title><link>https://freshrimpsushi.github.io/ko/posts/777/</link><pubDate>Sun, 16 Dec 2018 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/777/</guid><description>정의 1 $T_{n} (x) = \cos \left( n \cos^{-1} x \right)$ 을 제1종 체비셰프 다항함수라 한다. 기초 성질 재귀 공식 [0]: $$T_{n+1} (x) = 2x T_{n} (x) - T_{n-1} (X)$$ 직교 집합 [1] 함수의 내적: $\displaystyle \left&amp;lt;f, g\right&amp;gt;:=\int_a^b f(x) g(x) w(x) dx$ 에 대해 웨이트</description></item><item><title>함수해석학에서 힐베르트 공간</title><link>https://freshrimpsushi.github.io/ko/posts/776/</link><pubDate>Sat, 15 Dec 2018 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/776/</guid><description>정의1 완비 내적 공간을 힐베르트 공간hilbert space라고 한다. 힐베르트의 이름을 따서 주로 $H$라고 표기한다. 설명 완비 공간이란, 모든 코시수열</description></item><item><title>벡터 공간의 리플렉시브</title><link>https://freshrimpsushi.github.io/ko/posts/770/</link><pubDate>Thu, 13 Dec 2018 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/770/</guid><description>정의 1 $X$를 벡터공간, $X^{\ast \ast}$를 바이듀얼이라고 하자. $X^{\ast \ast} \approx X$면, $X$가 리플렉시브reflexive라고 한다. 설명 일반적으로 벡터 공</description></item><item><title>최고사후밀도 신용구간</title><link>https://freshrimpsushi.github.io/ko/posts/769/</link><pubDate>Wed, 12 Dec 2018 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/769/</guid><description>정의 1 모수공간 $\Theta$ 의 부분집합 $C \subset \Theta$ 가 유의수준 $\alpha$ 에 대해 $C : = \left\{ \theta \in \Theta \ | \ p ( \theta | y ) \ge k (\alpha) \right\}$ 를 자료 $y$ 가 주어졌을 때 $\theta$ 에 대한 $100(1 - \alpha) % $ 최고사후밀도</description></item><item><title>등거리 사상</title><link>https://freshrimpsushi.github.io/ko/posts/756/</link><pubDate>Tue, 11 Dec 2018 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/756/</guid><description>정의 두 거리공간 $(X,\ d_X), (Y,\ d_Y)$에 대해서 아래의 조건을 만족하는 사상 $f : X \to Y$가 존재하면 $X$와 $Y$가 아이소메트릭isometric이라 하고 $X</description></item><item><title>복소수의 부호</title><link>https://freshrimpsushi.github.io/ko/posts/755/</link><pubDate>Mon, 10 Dec 2018 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/755/</guid><description>정의 1 2 복소수 $\lambda \in \mathbb{C}$ 에 대해 부호sign를 다음과 같이 정의한다. $$ \operatorname{sign} ( \lambda ) = \begin{cases} \displaystyle {{ \lambda } \over { \left| \lambda \right| }} &amp;amp;, \lambda \ne 0 \\ 0 &amp;amp;, \lambda = 0 \end{cases} $$ 설명 쉽게 체크할 수 있는 예</description></item><item><title>쌍대 공간</title><link>https://freshrimpsushi.github.io/ko/posts/753/</link><pubDate>Sat, 08 Dec 2018 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/753/</guid><description>쌍대공간 정의11 벡터공간 $X$의 모든 연속인 선형 범함수들의 집합을 $X^{ \ast }$로 표기하고 이를 $X$의 쌍대공간dual space, 간단히 $X$의 듀얼이라 하고 다음</description></item><item><title>신용구간과 신뢰구간의 차이</title><link>https://freshrimpsushi.github.io/ko/posts/752/</link><pubDate>Fri, 07 Dec 2018 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/752/</guid><description>요약 신용구간과 신뢰구간의 차이는 실로 베이지안과 프리퀀티스트의 차이라고 볼 수 있다. 신뢰구간(프리퀀티스트): 모수는 고정된 상수고, 신뢰구간이 랜덤으로</description></item><item><title>선형범함수가 선형독립결합으로 나타나는 필요충분조건</title><link>https://freshrimpsushi.github.io/ko/posts/748/</link><pubDate>Thu, 06 Dec 2018 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/748/</guid><description>정리 $f, f_{1} , \cdots , f_{n}$ 가 정의역이 $X$ 인 선형범함수라고 하자. (a) $c_{1} , \cdots , c_{n} \in \mathbb{C}$ 에 대해 $\displaystyle f = \sum_{i=1}^{n} c_{i} f_{i}$ $\iff$ $\displaystyle \bigcap_{i=1}^{n} \ker ( f_{i} ) \subset \ker (f)$ (b) $f_{1} , \cdots , f_{n}$ 이 선형독립 $\iff$ $f_{j} (x_{i} ) = \delta_{ij}$ 을</description></item><item><title>추상대수학에서의 래디컬과 닐래디컬</title><link>https://freshrimpsushi.github.io/ko/posts/744/</link><pubDate>Wed, 05 Dec 2018 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/744/</guid><description>정의 1 $N$ 이 환 $R$ 의 아이디얼이라고 하자. $\text{rad} N := \left\{ a \in R \ | \ a^n \in N \right\}$ 을 $N$ 의 래디컬radical이라 한다. $a^{n} = 0$ 을 만족하는 $n \in \mathbb{N}$ 이 존재하면 $a$ 가 닐포</description></item><item><title>회귀분석에서의 교호작용</title><link>https://freshrimpsushi.github.io/ko/posts/696/</link><pubDate>Wed, 05 Dec 2018 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/696/</guid><description>빌드업 우선 질적변수를 포함한 회귀분석에 대해 읽어보는 것을 추천한다. 올해 취업자 전체의 수능 성적 $X_{1}$, 연령 $X_{2}$, 성별 $S$, 최종학력 $E$ 로 초봉 $Y$ 를 추측한다고 상상해보자</description></item><item><title>선형범함수가 연속일 필요충분조건</title><link>https://freshrimpsushi.github.io/ko/posts/742/</link><pubDate>Tue, 04 Dec 2018 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/742/</guid><description>정리1 선형 범함수 $f$가 연속이다. $\iff$ $\ker(f)$ 은 $X$ 에서 닫힌 집합이다. 여기서 $\mathcal{N} (f) = \ker (f) = \left\{ x \in X \ | \ f(x) = 0 \right\}$는 선형변환 $f$의 커널이</description></item><item><title>질적변수를 포함한 회귀분석</title><link>https://freshrimpsushi.github.io/ko/posts/686/</link><pubDate>Tue, 04 Dec 2018 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/686/</guid><description>개요 회귀분석을 하면서 독립변수로 언제나 양적변수가 들어온다는 보장은 없다. 성별이 무엇인지, 어떤 기업 소속인지, 무슨 색상인지, 금속인지 등등 범주형 자료 역</description></item><item><title>모형진단으로 확인하는 잔차의 정규성</title><link>https://freshrimpsushi.github.io/ko/posts/683/</link><pubDate>Mon, 03 Dec 2018 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/683/</guid><description>진단법 표준화 잔차 그림을 통해 회귀분석이 제대로 되었는지 확인할 수가 있다. 정규성은 잔차들의 흩어진 모양보다는 히스토그램으로 확인하거나 정규성 검정을 하는 게</description></item><item><title>신용구간</title><link>https://freshrimpsushi.github.io/ko/posts/741/</link><pubDate>Mon, 03 Dec 2018 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/741/</guid><description>정의 1 모수공간 $\Theta$ 의 부분집합 $C \subset \Theta$ 가 유의수준 $\alpha$ 에 대해 $P ( \theta \in C | y ) \ge 1 - \alpha$ 를 만족할 때, $C$ 를 자료 $y$ 가 주어졌을 때 $\theta$ 에 대한 $100(1 - \alpha) % $ 신용구간cre</description></item><item><title>모형진단으로 확인하는 잔차의 독립성</title><link>https://freshrimpsushi.github.io/ko/posts/679/</link><pubDate>Sun, 02 Dec 2018 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/679/</guid><description>진단법 직관적 패턴 파악 표준화 잔차 그림을 통해 회귀분석이 제대로 되었는지 확인할 수가 있다. 독립성을 확인하려면 잔차 그림에 어떤 뚜렷한 경향이 나타나지 않으면 된</description></item><item><title>통계학의 세가지 대표값: 최빈값, 중앙값, 평균</title><link>https://freshrimpsushi.github.io/ko/posts/740/</link><pubDate>Sun, 02 Dec 2018 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/740/</guid><description>개요 대표값은 데이터를 설명하는 대표적인 값을 말한다. 수천 수만에 달하는 데이터가 있어도 일일이 다 살펴볼 게 아니라면 결국 중요한 것은 데이터가 무엇을 의미하느냐</description></item><item><title>추상대수학에서의 아이디얼</title><link>https://freshrimpsushi.github.io/ko/posts/739/</link><pubDate>Sat, 01 Dec 2018 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/739/</guid><description>정의 1 환 $(R , + , \cdot )$ 의 모든 $a,b \in R$ 에 대해 $a I \subset I$ 와 $I b \subset I$ 을 만족하는 부분군 $(I, +)$ 을 아이디얼ideal이라 한다. 설명 간단한 예시로써 $n \mathbb{Z}$ 는 $\mathbb{Z}$ 의 아이디</description></item><item><title>의사 코드란?</title><link>https://freshrimpsushi.github.io/ko/posts/738/</link><pubDate>Fri, 30 Nov 2018 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/738/</guid><description>용어 1 자연어를 사용하여 플랫폼에 무관하고 심층적인 코드에 대해 설명한 것을 의사 코드pseudo code라 한다. 설명 의사 코드는 말 그대로 코드인 것 같지만 실</description></item><item><title>아이젠슈타인 판정법</title><link>https://freshrimpsushi.github.io/ko/posts/737/</link><pubDate>Thu, 29 Nov 2018 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/737/</guid><description>정리 1 $f(x) = a_{n} x^{n} + \cdots + a_{0 } \in \mathbb{Z} [ x ]$ 가 소수 $p \in \mathbb{Z}$ 와 $k = 0,1,2, \cdots , n-1$ 에 대해 다음 조건들을 만족하면 $f(x)$ 는 $\mathbb{Q}$ 상에서 기약함수다. (i): $a_{n} \not\equiv 0 \pmod{p}$ (ii): $a_{k} \equiv 0 \pmod{p} $ (iii): $a_{0} \not\equiv 0</description></item><item><title>라플라스 전개</title><link>https://freshrimpsushi.github.io/ko/posts/781/</link><pubDate>Wed, 28 Nov 2018 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/781/</guid><description>정리 정사각행렬 $A_{n \times n} = (a_{ij})$ 이 주어져 있다고 하자. [1]: 선택된 $i$행 에 대해 $$ \det A = \sum_{j=1}^{n} a_{ij} C_{ij} = \sum\limits_{j=1}^{n}a_{ij}[\operatorname{adj}(A)]_{ji} $$ [2]: 선택된 $j$열 에 대해 $$ \det A = \sum_{i=1}^{n} a_{ij} C_{ij} = \sum\limits_{i=1}^{n}a_{ij}[\operatorname{adj}(A)]_{ji} $$ 정사각행렬 $A_{n</description></item><item><title>다항함수의 기약원</title><link>https://freshrimpsushi.github.io/ko/posts/735/</link><pubDate>Tue, 27 Nov 2018 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/735/</guid><description>정의 1 상수함수가 아닌 $f(x) \in F [ x ]$ 가 $f(x)$ 보다 차수가 낮은 어떤 $g(x) , h(x) \in F [ x ]$ 의 곱 $f(x) = g(x) h(x)$ 으로 나타낼 수 없을 때 $f(x)$ 를 $F$ 상에서의 기약원irreducibl</description></item><item><title>인수 정리 증명</title><link>https://freshrimpsushi.github.io/ko/posts/733/</link><pubDate>Sun, 25 Nov 2018 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/733/</guid><description>정리 1 $f(x) \in F [ x ]$ 라고 하자. $$ f(a) = 0 \iff f(x) = (x-a) q(x) $$ 설명 중학교부터 지겹도록 해온 인수분해의 존재성을 보장하는 정리다. 주의할 것은 나눗셈 정리나 인수 정리와</description></item><item><title>나눗셈 정리 증명</title><link>https://freshrimpsushi.github.io/ko/posts/729/</link><pubDate>Fri, 23 Nov 2018 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/729/</guid><description>정리 1 $a_{n} \ne 0$ 과 $b_{m} \ne 0$, 그리고 $n &amp;gt; m &amp;gt; 0$ 에 대해 $F [ x ]$ 의 두 원소를 $$ f(x) = a_{n} x^{n} + \cdots + a_{1} x + a_{0} \\ g(x) = b_{m} x^{m} + \cdots + b_{1} x + b_{0} $$ 이라고 하자. 그러면 $f(x) = g(x) q(x) + r(x)$</description></item><item><title>선형작용소의 성질</title><link>https://freshrimpsushi.github.io/ko/posts/730/</link><pubDate>Thu, 22 Nov 2018 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/730/</guid><description>정리 1 $T : (X , \left\| \cdot \right\|_{X}) \to ( Y , \left\| \cdot \right\|_{Y} )$ 가 선형작용소라고 하자. (a) $T$가 유계이면 모든 $x \in X$ 에 대해 $\left\| T(x) \right\|_{Y} \le \left\| T \right\| \left\| x \right\|_{X}$ (b) $T$는 연속 $\iff$ $T$ 는 유계 (c) $</description></item><item><title>다항함수의 영</title><link>https://freshrimpsushi.github.io/ko/posts/723/</link><pubDate>Wed, 21 Nov 2018 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/723/</guid><description>정의 1 $$ f(x) : = \sum_{k=0}^{n} a_{k} x^{k} = a_{0} + a_{1} x + \cdots + a_{n} x^{n} $$ 다항함수 $f \in F [x]$ 와 체 $F \le E$ 에 대해 $\alpha \in E$ 에서의 평가함수evaluation $\phi_{\alpha} : F [ x ] \to E$ 를 다음과 같</description></item><item><title>함수해석학에서 작용소란</title><link>https://freshrimpsushi.github.io/ko/posts/728/</link><pubDate>Tue, 20 Nov 2018 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/728/</guid><description>정의1 $(X, \left\| \cdot \right\|_{X}), (Y, \left\| \cdot \right\|_{Y})$를 놈 공간이라고 하자. 놈 공간에서 놈 공간으로의 사상을 작용소operator라 한다. $x,x_{1},x_{2}\in X$ 에 대해서,</description></item><item><title>빅오 노테이션이 분모에 있을 때 분자로 올리는 법</title><link>https://freshrimpsushi.github.io/ko/posts/727/</link><pubDate>Mon, 19 Nov 2018 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/727/</guid><description>정리 $a \ne 0$ 와 $p&amp;gt;0$, $n \in \mathbb{N}$ 에 대해 다음이 성립한다. $$ {{1} \over { \sqrt[p]{a + O ( h^n ) } }} = {{1} \over { \sqrt[p]{a } }}+ O(h^n) $$ 설명 복잡하게 생긴 분모를 깔끔한 형태로 바꿔주는 렘마로써 요긴하</description></item><item><title>리즈 정리 증명</title><link>https://freshrimpsushi.github.io/ko/posts/725/</link><pubDate>Sat, 17 Nov 2018 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/725/</guid><description>정리 1 놈 공간 $(X , \left\| \cdot \right\|)$의 스칼라 필드를 $\mathbb{C}$라고 하자. 그러면 $X$는 유한차원이다. $\iff$ $\overline{ B ( 0 ; 1 ) }$은 컴</description></item><item><title>다항함수의 환</title><link>https://freshrimpsushi.github.io/ko/posts/721/</link><pubDate>Thu, 15 Nov 2018 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/721/</guid><description>정의 1 $$ f(x) : = \sum_{k=0}^{n} a_{k} x^{k} = a_{0} + a_{1} x + \cdots + a_{n} x^{n} $$ 환 $R$ 의 다항함수polynomial $f(x)$ 를 위와 같이 정의한다. $a_{i} \in R$ 들을 $f(x)$ 의 계수coefficient라</description></item><item><title>수치해석에서의 차분</title><link>https://freshrimpsushi.github.io/ko/posts/722/</link><pubDate>Wed, 14 Nov 2018 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/722/</guid><description>정의 1 전방차분: $$ \begin{align*} \Delta f(x) =&amp;amp; f(x+h) - f(x) \\ \Delta^{r+1} f(x) =&amp;amp; \Delta^{r} f(x+h) - \Delta^{r} f(x) \end{align*} $$ 후방차분: $$ \begin{align*} \nabla f(x) =&amp;amp; f(x) - f(x- h) \\ \nabla^{r+1} f(x) =&amp;amp; \nabla^{r} f(x) - \nabla^{r} f(x- h) \end{align*} $$ 설명 일반적으로 계차differen</description></item><item><title>환의 영인자가 멱등원이면 직합으로 나타낼 수 있다</title><link>https://freshrimpsushi.github.io/ko/posts/731/</link><pubDate>Tue, 13 Nov 2018 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/731/</guid><description>정리 단위원 $1$ 을 가지는 환 $R$ 의 영인자 $a$ 가 $a^2 = a$ 를 만족하면, 즉 멱등원이면 $R$ 은 $aR$ 과 $(1-a)R$ 의 유일한 직곱으로 나타난다. $$ R = a R \times (1-a)R $$ 설명 따로 환에 대한 직합을</description></item><item><title>R 에서 자료구조 뜯어보는 법</title><link>https://freshrimpsushi.github.io/ko/posts/720/</link><pubDate>Mon, 12 Nov 2018 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/720/</guid><description>개요 R에서 여러가지 함수를 사용하다보면 아래와 같이 친절하게 결과가 출력되는 경우를 자주 볼 수 있게 된다. 문제는 이 결과를 그냥 보는 게 아니라 아웃풋으로써 받아서</description></item><item><title>영인자와 정역</title><link>https://freshrimpsushi.github.io/ko/posts/719/</link><pubDate>Sun, 11 Nov 2018 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/719/</guid><description>정의 1 환 $R$ 에 대해 $ab = 0$ 을 만족시키는 $0$ 이 아닌 $a,b \in R$ 을 영인자zero divisor라 한다. 단위원 $1 \ne 0$ 을 가진 $D$ 가 영인자를 가지지 않으면 정역inte</description></item><item><title>불리언 링</title><link>https://freshrimpsushi.github.io/ko/posts/717/</link><pubDate>Fri, 09 Nov 2018 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/717/</guid><description>정의 1 $R$ 을 환이라고 하자. $r \in R$ 이 $r^2 = r$ 을 만족하면 $r$ 을 멱등원idempotent element이라 한다. $R$ 의 모든 원소가 멱원소면 $R$ 을 불리언 링bo</description></item><item><title>제프리 사전분포</title><link>https://freshrimpsushi.github.io/ko/posts/716/</link><pubDate>Thu, 08 Nov 2018 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/716/</guid><description>정의 1 자료의 분포 $p( y | \theta)$ 에 대해 $\pi ( \theta ) \propto I^{1/2} ( \theta )$ 를 제프리 사전분포jeffreys prior라 한다. $I$ 는 피셔정보fishser Informat</description></item><item><title>추상대수학에서의 체</title><link>https://freshrimpsushi.github.io/ko/posts/715/</link><pubDate>Wed, 07 Nov 2018 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/715/</guid><description>정의 1 환 $(R , + , \cdot)$ 이 곱셈 $\cdot$ 에 대한 항등원 $1 \in R$ 을 가질 때, $1$ 을 단위원unity이라 한다. 단위원을 가진 환 $R$ 에서 곱셈에 대한 역원이 존재하는 원소 $r \ne 0$ 를</description></item><item><title>라플라스 사전분포</title><link>https://freshrimpsushi.github.io/ko/posts/714/</link><pubDate>Tue, 06 Nov 2018 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/714/</guid><description>빌드업 모수에 대한 정보가 거의 없다면 구태여 복잡한 사전분포를 생각할 이유는 없다: 예시1: 내년 모 대학의 통계학과 신입생의 성비를 추측해보라고 했을 때, 통계학</description></item><item><title>리즈 보조정리 증명</title><link>https://freshrimpsushi.github.io/ko/posts/713/</link><pubDate>Mon, 05 Nov 2018 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/713/</guid><description>정리 1 놈 공간 $(X , \| \cdot \| )$ 의 부분 공간 $Y \subsetneq X$ 에 대해 $Y$ 는 닫힌 집합이라고 하자. 모든 $\theta \in (0,1)$ 와 $y \in Y$ 에 대해 $\| x_{ \theta } \| = 1$ 와 $\| x_{ \theta } - y \| &amp;gt; \theta$ 를 만족하는 $x_{\theta}</description></item><item><title>민코프스키 부등식</title><link>https://freshrimpsushi.github.io/ko/posts/288/</link><pubDate>Mon, 05 Nov 2018 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/288/</guid><description>정리 두 벡터 $\mathbf{x}= (x_{1} , x_{2} , \dots , x_{n} )$ , $\mathbf{y} = (y_{1} , y_{2} , \dots , y_{n} )$ 와 $1$보다 큰 실수 $p$ 에 대해 다음의 식이 성립한다. $$ \left( \sum_{k=1}^{n} | x_{k} + y_{k} |^{p} \right)^{{1} \over {p}} \le \left( \sum_{k=1}^{n} |x_{k}|^{p} \right)^{{1} \over {p}} + \left( \sum_{k=1}^{n} |y_{k}|^{p}</description></item><item><title>켤레사전분포</title><link>https://freshrimpsushi.github.io/ko/posts/712/</link><pubDate>Sun, 04 Nov 2018 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/712/</guid><description>정의 1 사전분포와 사후분포가 동일한 분포족에 속하면 사전분포를 켤레사전분포conjugate prior 혹은 공액사전분포라고 한다. 설명 베이지안이란 본래 사전분</description></item><item><title>유한 차원 놈 공간은 완비성을 가짐을 증명</title><link>https://freshrimpsushi.github.io/ko/posts/711/</link><pubDate>Sat, 03 Nov 2018 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/711/</guid><description>정리 1 유한 차원 놈 공간은 완비성을 가진다. 설명 이에 따라 유한 차원 벡터 공간은 놈이 정의되는 것만으로 바나흐 공간이 된다. 대표적으로 많이 쓰이는 $\mathbb{R}^{n}$ 혹은 $\mathbb{C}^{n}$ 이 있기</description></item><item><title>라플라스 계승 법칙</title><link>https://freshrimpsushi.github.io/ko/posts/710/</link><pubDate>Fri, 02 Nov 2018 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/710/</guid><description>정리 1 이항모형 $\displaystyle p(y | \theta) = \binom{ n }{ y} \theta^{y} (1- \theta)^{n-y}$ 의 사전분포가 일양 분포 $U (0,1)$ 를 따르고 사후분포가 베타 분포 $\beta (y+1 , n-y+1)$ 을 따라 $p( \theta | y ) \sim \theta^{y} (1- \theta)^{n-y}$ 이라고 하자. 그러면 이</description></item><item><title>유한 차원 벡터 공간 상에서 정의된 모든 놈은 동치임을 증명</title><link>https://freshrimpsushi.github.io/ko/posts/709/</link><pubDate>Thu, 01 Nov 2018 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/709/</guid><description>정리 1 유한 차원 벡터 공간 상에서 정의된 모든 놈은 동치다. 설명 유클리드 공간 상에서 정의된 모든 놈은 동치라는 사실은 본 정리의 따름 정리에 해당한다. 증명 전략: $c</description></item><item><title>유한 차원 놈 공간은 기저를 가짐을 증명</title><link>https://freshrimpsushi.github.io/ko/posts/707/</link><pubDate>Mon, 29 Oct 2018 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/707/</guid><description>정리 1 모든 유한 차원 놈 공간은 기저를 가진다. 설명 특정 조건을 만족하는 기저도 아니고 기저의 존재성을 밝힌다는 것이 생소하겠지만, 실제로 기저의 정의에서 모든 벡</description></item><item><title>놈의 동치관계</title><link>https://freshrimpsushi.github.io/ko/posts/274/</link><pubDate>Sun, 28 Oct 2018 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/274/</guid><description>정의 벡터공간 $V$ 상에서 정의된 두 놈 $\left\| \cdot \right\|_{\alpha}, \left\| \cdot \right\|_{\beta}$과 임의의 벡터 $\mathbf{v} \in V$ 에 대해 $$ c \left\| \mathbf{v} \right\|_{\alpha} \le \left\| \mathbf{v} \right\|_{\beta} \le C \left\| \mathbf{v} \right\|_{\alpha} $$ 를 만족하는 상</description></item><item><title>부분공간의 직교여공간</title><link>https://freshrimpsushi.github.io/ko/posts/273/</link><pubDate>Sat, 27 Oct 2018 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/273/</guid><description>정의1 벡터공간 $V$ 의 부분공간 $W$ 에 대해서 집합 $$ W^{\perp} = \left\{ \mathbf{v} \in V \ : \left\langle \mathbf{v} , \mathbf{w} \right\rangle = 0,\quad \forall \mathbf{w} \in W \right\} $$ 를 $W$ 의 직교여공간orthogonal complement</description></item><item><title>유한 차원 벡터 공간의 하멜 베이시스</title><link>https://freshrimpsushi.github.io/ko/posts/705/</link><pubDate>Sat, 27 Oct 2018 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/705/</guid><description>정의 1 벡터 공간 $X$ 가 주어져 있다고 하자. $X$의 벡터 $x_{1} , \dots , x_{n}$와 스칼라 $\alpha_{1} , \dots , \alpha_{n}$ 에 대해 $\alpha_{1} x_{1} + \cdots + \alpha_{n} x_{n}$를 벡터 $x_{1} , \dots , x_{n}</description></item><item><title>바나흐 공간</title><link>https://freshrimpsushi.github.io/ko/posts/703/</link><pubDate>Thu, 25 Oct 2018 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/703/</guid><description>정의1 완비 놈 공간을 바나흐 공간banach space이라 한다. 설명 완비 공간이란, 모든 코시수열이 수렴하는 공간을 말한다. 바나흐 스페이스는 아래의 각 호</description></item><item><title>횔더 부등식</title><link>https://freshrimpsushi.github.io/ko/posts/258/</link><pubDate>Thu, 25 Oct 2018 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/258/</guid><description>정의 $\dfrac{1}{p} + \dfrac{1}{q} = 1$ 을 만족하고 1보다 큰 두 상수 $p, q$ 와 $\mathbf{u}, \mathbf{v} \in \mathbb{C}^n$에 대해 다음의 부등식이 성립한다. $$ | \left\langle \mathbf{u}, \mathbf{v} \right\rangle | = |\mathbf{u} ^{\ast} \mathbf{v}| \le ||\mathbf{u}||_{p} ||\mathbf{v}||_{q} $$ 이를</description></item><item><title>베이지안 패러다임</title><link>https://freshrimpsushi.github.io/ko/posts/702/</link><pubDate>Wed, 24 Oct 2018 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/702/</guid><description>빌드업 통계학이란 &amp;lsquo;모수를 파악하는 방법을 연구하는 학문&amp;rsquo;이라고 할 수 있다. 어떤 물리량을 측정하는 것처럼 공식이나 법칙을 통해 정확</description></item><item><title>영의 부등식 증명</title><link>https://freshrimpsushi.github.io/ko/posts/267/</link><pubDate>Wed, 24 Oct 2018 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/267/</guid><description>정리 $\displaystyle {{1} \over {p}} + {{1} \over {q}} = 1$ 을 만족하고 1보다 큰 두 상수 $p,q$와 두 양수 $a,b$ 에 대해 $$ ab \le { {a^{p}} \over {p} } + {{b^{q}} \over {q}} $$ 설명 대수적으로 모양이 아름다운 점을 빼면 횔더</description></item><item><title>p=∞ 일 때 p-놈이 맥시멈 놈이 됨을 증명</title><link>https://freshrimpsushi.github.io/ko/posts/699/</link><pubDate>Sun, 21 Oct 2018 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/699/</guid><description>정리 수열 공간 $l^{p}$ 와 $1 &amp;lt; p_{0} &amp;lt; \infty$ 에 대해 $\left\{ x_{n} \right\}_{n \in \mathbb{N} } \in \mathcal{l}^{p_{0}}$ 라 두자. $$ \lim_{p \to \infty} \left( \sum_{n \in \mathbb{N} } | x_{n} |^{p} \right)^{ {{1} \over {p}} } = \sup_{n \in \mathbb{N}} | x_{ n } | $$ 설명 맥시멈 놈은 해석학이나 선형대</description></item><item><title>베이즈 정리로 보는 몬티홀 딜레마</title><link>https://freshrimpsushi.github.io/ko/posts/697/</link><pubDate>Mon, 08 Oct 2018 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/697/</guid><description>설명 알다시피 몬티홀 게임은 실제로 경품이 어디있든 관계 없이 선택을 바꾸는 것이 유리하다. 이것을 팩트로써 받아들이냐와 별개로 몬티홀 게임을 직관적으로 이해하지</description></item><item><title>옌센 부등식의 유한 폼 증명</title><link>https://freshrimpsushi.github.io/ko/posts/264/</link><pubDate>Mon, 08 Oct 2018 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/264/</guid><description>정리 $I \subset \mathbb{R}$ 에서 컨벡스(볼록) 함수 $f : I \to \mathbb{R}$ 와 $\displaystyle \sum_{k=1}^{n} \lambda_{k} = 1, \lambda_{k}&amp;gt;0$ 에 대해 $$ \begin{align*} f( \lambda_{1} x_{1} + \lambda_{2} x_{2} + \cdots + \lambda_{n} x_{n} ) &amp;amp; \le \lambda_{1} f( x_{1}) + \lambda_{2} f( x_{2}) + \cdots + \lambda_{n} f( x_{n} ) \\ f\left( \sum\limits_{k=1}^{n}\lambda_{k}x_{k} \right) &amp;amp;\le \sum\limits_{k=1}^{n} \lambda_{k} f(x_{k}) \end{align*}</description></item><item><title>선형대수학에서 노름 혹은 놈이란</title><link>https://freshrimpsushi.github.io/ko/posts/257/</link><pubDate>Sat, 06 Oct 2018 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/257/</guid><description>정의 $V$를 $\mathbb{F}$ 상에서의 벡터공간이라고 하자. $\left\| \cdot \right\| : V \to \mathbb{F}$ 가 $\mathbf{u}, \mathbf{v} \in V$와 $k \in \mathbb{F}$ 에 대해서 다음 세 조건을 만족시키면 $\left\| \cdot \right\|$ 을 $V$ 상에서의 놈이라고 정의한다</description></item><item><title>수열 공간(ℓp 공간)</title><link>https://freshrimpsushi.github.io/ko/posts/695/</link><pubDate>Tue, 02 Oct 2018 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/695/</guid><description>정의 1 $1 \le p &amp;lt; \infty$ 에 대해 거리공간 $( \ell^{p} , d^{p} )$ 는 다음과 같이 정의된다. (i) 수렴하는 수열의 집합: $$ \ell^{p} := \left\{ \left\{ x_{n} \right\}_{n \in \mathbb{N}} \subset \mathbb{C} \left| \left( \sum_{i=1}^{\infty} | x_{i} |^{p} \right)^{{1} \over {p}} &amp;lt; \infty \right. \right\} $$ (ii) 거리</description></item><item><title>R 에서 리스트 해체하기, 중복 성분 제거하기</title><link>https://freshrimpsushi.github.io/ko/posts/688/</link><pubDate>Sun, 23 Sep 2018 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/688/</guid><description>개요 온갖가지 정제되지 않은 데이터를 상대할 일이 많은 R 에서 리스트 자료형은 데이터를 정리하는데에 특히 유용하다. 그러나 반대급부로 데이터에 접근하는 것이 조금</description></item><item><title>다양체란</title><link>https://freshrimpsushi.github.io/ko/posts/673/</link><pubDate>Thu, 20 Sep 2018 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/673/</guid><description>정의 1 위상공간 $X$가 아래의 세 조건을 만족시킬 때 $X$를 $n$차원 매니폴드manifold라 한다. (i): 제 2가산이다. (ii): 하우스도르프이다. (iii): $X$</description></item><item><title>모형진단으로 확인하는 잔차의 등분산성</title><link>https://freshrimpsushi.github.io/ko/posts/681/</link><pubDate>Sun, 16 Sep 2018 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/681/</guid><description>진단법 1 표준화 잔차 그림을 통해 회귀분석이 제대로 되었는지 확인할 수가 있다. 등분산성을 확인하려면 잔차들의 흩어진 모양이 전체적으로 고른지 확인하면 된다. 흔</description></item><item><title>피보나치 수열의 일반항 유도</title><link>https://freshrimpsushi.github.io/ko/posts/680/</link><pubDate>Sat, 15 Sep 2018 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/680/</guid><description>정리 시퀀스 $\left\{ F_{n} \right\}_{n=0}^{\infty}$ 이 $F_{n+1} := F_{n} + F_{n-1}$ 과 같이 정의되어있다고 하자. $F_{0} = F_{1} = 1$ 이면 $\displaystyle r_{0} : = {{1 + \sqrt{5} } \over {2}}$ 와 $\displaystyle r_{1} : = {{1 - \sqrt{5} } \over {2}}$ 에 대해 $$ F_{n} = {{ {r_{0}}^{n+1} - {r_{1}}^{n+1} } \over { r_{0} -</description></item><item><title>모형진단으로 확인하는 잔차의 선형성</title><link>https://freshrimpsushi.github.io/ko/posts/677/</link><pubDate>Wed, 12 Sep 2018 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/677/</guid><description>진단법 1 표준화 잔차 그림을 통해 회귀분석이 제대로 되었는지 확인할 수가 있다. 선형성이 있는지 확인하려면 $0$ 을 중심으로 잔차들이 대칭적으로 나타나는지 확인하면</description></item><item><title>회귀분석의 모형진단</title><link>https://freshrimpsushi.github.io/ko/posts/675/</link><pubDate>Mon, 10 Sep 2018 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/675/</guid><description>필요성 단순회귀분석의 경우엔 독립변수와 종속변수를 고려해봤자 $2$차원이기 때문에 분석이 제대로 되었는지 한 눈에 확인할 수 있다. 하지만 다중회귀분석의 경우</description></item><item><title>파푸스-굴딘 정리 증명</title><link>https://freshrimpsushi.github.io/ko/posts/685/</link><pubDate>Sat, 08 Sep 2018 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/685/</guid><description>정리 $yz$-평면 상의 도형 $F$ 의 넓이를 $A$ 라고 하고 $F$ 를 $z$-축으로 회전시켜서 얻은 회전체 $W$ 의 부피를 $V$ 라고 하자. $z$-축과 $F$ 의 무게중심 사이의 거리</description></item><item><title>파푸스-굴딘 정리 증명</title><link>https://freshrimpsushi.github.io/ko/posts/685/</link><pubDate>Sat, 08 Sep 2018 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/685/</guid><description>정리 $yz$-평면 상의 도형 $F$ 의 넓이를 $A$ 라고 하고 $F$ 를 $z$-축으로 회전시켜서 얻은 회전체 $W$ 의 부피를 $V$ 라고 하자. $z$-축과 $F$ 의 무게중심 사이의 거리</description></item><item><title>회귀계수의 F-검정</title><link>https://freshrimpsushi.github.io/ko/posts/672/</link><pubDate>Fri, 07 Sep 2018 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/672/</guid><description>가설검정 선형다중회귀모델의 모형진단에서 잔차가 선형성과 등분산성과 독립성과 정규성을 만족시킨다고 하자. $n$ 개의 관측치와 $p$ 개의 독립변수에 대한 다중회귀분</description></item><item><title>R 에서 다중회귀분석 결과 보는 법</title><link>https://freshrimpsushi.github.io/ko/posts/670/</link><pubDate>Wed, 05 Sep 2018 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/670/</guid><description>데이터 탐색 tail(attitude) R에서 내장데이터 attitude를 불러와 tail() 함수를 통해 확인해보자. 우리는 이 데이터에서 다중회귀분석을 실시하려 한다. 우리는 rating</description></item><item><title>R 에서 그래프 그릴 때 사용하는 심볼들</title><link>https://freshrimpsushi.github.io/ko/posts/669/</link><pubDate>Tue, 04 Sep 2018 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/669/</guid><description>코드 각종 그래프 관련 함수에서 찍히는 점의 모양을 바꿀 때 pch 옵션을 사용한다. 위 그림은 특히 자주 쓰는 심볼들을 한 눈에 볼 수 있게 나타낸 것이다.쓸만한 게 많지만 특히</description></item><item><title>쉴로브 정리</title><link>https://freshrimpsushi.github.io/ko/posts/668/</link><pubDate>Mon, 03 Sep 2018 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/668/</guid><description>정리 1 소수 $p$ 와 $\gcd (p, m) = 1$ 을 만족하는 어떤 자연수 $m$ 에 대해 $G$ 가 $|G| = p^{n} m$ 인 유한군이라고 하자. $G$ 의 $p$-부분군 중 다른 $p$-부분군에 포함되지 않는 $p</description></item><item><title>R 에서 그림에 문자열 찍는 법</title><link>https://freshrimpsushi.github.io/ko/posts/667/</link><pubDate>Sun, 02 Sep 2018 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/667/</guid><description>코드 text() 함수를 통해 그래프에 문자열이 찍히도록 할 수 있다. 첫번째 옵션은 $x$ 축 좌표의 벡터, 두번째 옵션은 $y$ 축 좌표의 벡터, 세번째 옵션은 입력될 문자열의 벡터를 받</description></item><item><title>다중회귀분석</title><link>https://freshrimpsushi.github.io/ko/posts/666/</link><pubDate>Sat, 01 Sep 2018 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/666/</guid><description>개요 회귀분석이란 변수 사이의 관계를 알아내는 방법으로써, 특히 선형 관계를 밝히는 데 유용하다. 다중회귀분석multiple Linear regression은 하나</description></item><item><title>몫 공간</title><link>https://freshrimpsushi.github.io/ko/posts/665/</link><pubDate>Fri, 31 Aug 2018 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/665/</guid><description>정의 1 위상공간 $(X, \mathscr{T} )$ 와 동치 관계 $\sim$ 에 대해 동치류를 $[x] = \left\{ y \in X \ | \ x \sim y \right\}$ 이라 하자. $X / \sim$ 을 몫 집합이라 정의한다. $q : X \to X / \sim$ 을 $q(x) = [ x ]$ 로 정</description></item><item><title>R 에서 수평선 수직선 그리는 법</title><link>https://freshrimpsushi.github.io/ko/posts/664/</link><pubDate>Thu, 30 Aug 2018 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/664/</guid><description>예시 1. abline(h=0) 수평선을 긋는다. 2. abline(v=0) 수직선을 긋는다. 3. abline(0,3/4) $y$ 절편이 $0$ 이고 기울기가 $3/4$ 인 직선을 긋는다. 애초에 abline() 함수 자체가 $y=a+bx$ 의 계수인 $a,b$ 에서 이름을 따온 것이다.</description></item><item><title>군론에서의 코시 정리 증명</title><link>https://freshrimpsushi.github.io/ko/posts/663/</link><pubDate>Wed, 29 Aug 2018 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/663/</guid><description>정리 1 유한군 $G$ 에 대해 소수 $p$ 가 $|G|$ 의 약수면 $|H| = p$ 를 만족하는 부분군 $H \leqslant G$ 가 존재한다. 설명 보통 코시 정리라고 할 때 이 정리를 떠올리지는 않는다. 또다른 코시 정</description></item><item><title>R 에서 그래프 그리기</title><link>https://freshrimpsushi.github.io/ko/posts/662/</link><pubDate>Tue, 28 Aug 2018 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/662/</guid><description>개요 R 은 다른 언어와 비교했을때 그래프의 표현이 아주 쉽다는 장점이 있다. 여타 통계 패키지와 비교하자면 쉬운 그림은 패키지가 빨라도 세세한 표현이 많아지면 R 이 편</description></item><item><title>추상대수학에서의 p-군</title><link>https://freshrimpsushi.github.io/ko/posts/660/</link><pubDate>Mon, 27 Aug 2018 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/660/</guid><description>정의 1 유한군 $G$ 의 항등원이 $e$ 라고 할 때, $g \in G$ 가 $g^{n} = e$ 를 만족하는 가장 작은 $n \in \mathbb{N}$ 에 대해 $|g| = n$ 이라 나타낸다. 모든 $g \in G$ 와 주어진 소수 $p$ 에 대해 $|g| = p^{m}$ 을 만</description></item><item><title>R 에서 조건부로 데이터 필터링하는 법</title><link>https://freshrimpsushi.github.io/ko/posts/659/</link><pubDate>Sun, 26 Aug 2018 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/659/</guid><description>개요 R 이 주로 통계학에서 쓰이기 때문인지, 필요한 데이터를 골라내고 편집하는 기능은 타의 추종을 불허한다. 이러한 데이터의 핸들링에 익숙해지는 것은 조금 어렵지</description></item><item><title>우리손 보조정리와 티체 확장 정리</title><link>https://freshrimpsushi.github.io/ko/posts/658/</link><pubDate>Sat, 25 Aug 2018 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/658/</guid><description>정리 우리손 보조정리 1 $X$ 가 정규 공간이면 $A \cap B = \emptyset$ 인 모든 닫힌 집합 $A, B \subset X$ 에 대해 $f(A) = \left\{ 0 \right\}$ 와 $f(B) = \left\{ 1 \right\}$ 를 만족하는 연속 함수 $f:X \to [0,1]$ 가 존재한다. 티체 확장</description></item><item><title>엔탈피 헬름홀츠 함수 깁스 함수</title><link>https://freshrimpsushi.github.io/ko/posts/657/</link><pubDate>Fri, 24 Aug 2018 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/657/</guid><description>정의 엔탈피enthalpy $H$ 는 다음과 같이 정의된다. $$ H := U + PV $$ 헬름홀츠 함수helmholtz function $F$ 는 다음과 같이 정의된다. $$ F := U - TS $$ 깁스 함</description></item><item><title>R 에서 조건부 합 조건부 평균 구하기</title><link>https://freshrimpsushi.github.io/ko/posts/656/</link><pubDate>Thu, 23 Aug 2018 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/656/</guid><description>개요 엑셀이라고 치면 sumif() 혹은 averageif() 함수가 필요한 상황이 가끔 있다.R 에선 그처럼 단순한 함수는 없지만, 압도적인 상위호환으로 apply 계열 함수가 있다. 이 함수를 꼼꼼하게</description></item><item><title>깁스의 엔트로피 표현</title><link>https://freshrimpsushi.github.io/ko/posts/655/</link><pubDate>Wed, 22 Aug 2018 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/655/</guid><description>공식 주어진 계의 거시상태가 $i$ 번째 상태일 확률을 $P_{i}$ 라고 하자. 이 계에서 측정되는 엔트로피measured Entropy $S$ 는 다음과 같이 표현할 수 있다. $$ S = - k_{B} \sum_{i} P_{i} \ln</description></item><item><title>회귀계수의 t-검정</title><link>https://freshrimpsushi.github.io/ko/posts/654/</link><pubDate>Tue, 21 Aug 2018 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/654/</guid><description>가설검정 $$ \begin{bmatrix} y_{1} \\ y_{2} \\ \vdots \\ y_{n} \end{bmatrix} = \begin{bmatrix} 1 &amp;amp; x_{11} &amp;amp; \cdots &amp;amp; x_{p1} \\ 1 &amp;amp; x_{12} &amp;amp; \cdots &amp;amp; x_{p2} \\ \vdots &amp;amp; \vdots &amp;amp; \ddots &amp;amp; \vdots \\ 1 &amp;amp; x_{1n} &amp;amp; \cdots &amp;amp; x_{pn} \end{bmatrix} \begin{bmatrix} \beta_{0} \\ \beta_{1} \\ \vdots \\ \beta_{p} \end{bmatrix} + \begin{bmatrix} \varepsilon_{1} \\ \varepsilon_{2} \\ \vdots \\ \varepsilon_{n} \end{bmatrix} $$ 독립</description></item><item><title>우주의 엔트로피는 감소하지 않는다</title><link>https://freshrimpsushi.github.io/ko/posts/653/</link><pubDate>Mon, 20 Aug 2018 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/653/</guid><description>정리 우주의 엔트로피는 감소하지 않는다. 설명 위 명제를 보고 가장 먼저 알 수 있는 사실은 &amp;lsquo;뭔가 멋있다&amp;rsquo;는 점이다. 하지만 정말로 멋있는</description></item><item><title>R 에서 단순회귀분석 결과 보는 법</title><link>https://freshrimpsushi.github.io/ko/posts/652/</link><pubDate>Sun, 19 Aug 2018 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/652/</guid><description>실습 회귀분석하는 법 head(faithful) R에서 내장데이터 faithful을 불러와 head() 함수를 통해 확인해보자. 데이터만 봐서는 두 변수 사이에 선형관계가 있는지 확인하기 어려우</description></item><item><title>열역학에서 엔트로피란</title><link>https://freshrimpsushi.github.io/ko/posts/651/</link><pubDate>Sat, 18 Aug 2018 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/651/</guid><description>정의 다음의 식을 만족하는 $S$를 엔트로피entropy라 정의한다. $$ dS = {{ \delta Q_{\text{rev} } } \over { T }} $$ 설명 엔트로피는 &amp;lsquo;무질서도&amp;rsquo;</description></item><item><title>단순회귀분석</title><link>https://freshrimpsushi.github.io/ko/posts/648/</link><pubDate>Fri, 17 Aug 2018 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/648/</guid><description>개요 회귀분석이란 변수 사이의 관계를 알아내는 방법으로써, 특히 선형 관계를 밝히는 데 유용하다. 단순회귀분석simple Linear regression은 그 중에서</description></item><item><title>클라우지우스 부등식 유도</title><link>https://freshrimpsushi.github.io/ko/posts/649/</link><pubDate>Thu, 16 Aug 2018 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/649/</guid><description>정리 순환 과정에서 다음의 부등식이 성립한다. $$ \oint {{\delta Q} \over {T}} \le 0 $$ 특히 가역 과정이면 다음이 성립한다. $$ \oint {{\delta Q_{\text{rev}}} \over {T}} = \oint dS = 0 $$ 여기서 $\delta$ 는 불완전 미분ine</description></item><item><title>적합치, 예측치, 잔차, 오차</title><link>https://freshrimpsushi.github.io/ko/posts/650/</link><pubDate>Wed, 15 Aug 2018 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/650/</guid><description>정의 1 회귀분석 $Y \gets X_{1} + X_{2} + \cdots + X_{n}$ 으로 얻은 회귀식을 $y = \beta_{0} + \beta_{1} x_{1} + \beta_{2} x_{2} + \cdots + \beta_{n} x_{n}$ 이라고 하고 $i$번째 데이터를 $(y_{i} , x_{i1} , x_{i2} , \cdots , x_{in})$ 와 같이 나타내도록 하</description></item><item><title>카르노 정리 증명</title><link>https://freshrimpsushi.github.io/ko/posts/647/</link><pubDate>Tue, 14 Aug 2018 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/647/</guid><description>정리 카르노 기관보다 효율이 높은 기관은 존재하지 않는다. 설명 어차피 카르노 기관을 실제로 구현할 순 없지만 이론적인 한계가 된다는 점에서 대단히 의미있는 정리다.</description></item><item><title>위상수학에서의 함수공간</title><link>https://freshrimpsushi.github.io/ko/posts/646/</link><pubDate>Mon, 13 Aug 2018 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/646/</guid><description>정의 1 위상공간 $X$ 와 $Y$ 에 대해 다음과 같이 정의된 곱 공간 $Y^{X}$를 함수 공간이라 한다. $$ Y^{X} : = \prod_{x \in X} Y = \left\{ f \ | \ f : X \to Y \text{ is a function} \right\} $$ 함수공간</description></item><item><title>카르노 기관</title><link>https://freshrimpsushi.github.io/ko/posts/645/</link><pubDate>Sun, 12 Aug 2018 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/645/</guid><description>정의 다음 네 가지 과정을 순서대로 수행하는 기관을 카르노 기관Carnot engine이라 한다. Step 1. 등온 팽창 과정 $A \to B$: 온도가 $T_{h}$로 유지된 상태</description></item><item><title>제3동형 정리 증명</title><link>https://freshrimpsushi.github.io/ko/posts/644/</link><pubDate>Sat, 11 Aug 2018 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/644/</guid><description>정리 1 $G,G'$ 가 군이라 하자. 제1동형 정리: 준동형사상 $\phi : G \to G'$ 이 존재하면 $$ G / \ker ( \phi ) \simeq \phi (G) $$ 제2동형 정리: $H \le G$ 이고 $N \triangleleft G$ 면 $$ (HN) / N \simeq H / (H \cap N)</description></item><item><title>열역학 제2법칙</title><link>https://freshrimpsushi.github.io/ko/posts/643/</link><pubDate>Fri, 10 Aug 2018 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/643/</guid><description>법칙 클라우지우스: 스스로 차가운 쪽에서 뜨거운 쪽으로 열을 보내는 과정은 존재하지 않는다. 켈빈: 열을 완전히 일로 바꾸는 과정은 존재하지 않는다. 설명 열역학 제</description></item><item><title>제2동형 정리 증명</title><link>https://freshrimpsushi.github.io/ko/posts/642/</link><pubDate>Thu, 09 Aug 2018 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/642/</guid><description>정리 1 $G,G'$ 가 군이라 하자. 제1동형 정리: 준동형사상 $\phi : G \to G'$ 이 존재하면 $$ G / \ker ( \phi ) \simeq \phi (G) $$ 제2동형 정리: $H \le G$ 이고 $N \triangleleft G$ 면 $$ (HN) / N \simeq H / (H \cap N)</description></item><item><title>단열감률의 열역학적 유도</title><link>https://freshrimpsushi.github.io/ko/posts/638/</link><pubDate>Wed, 08 Aug 2018 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/638/</guid><description>공식 $m$ 을 기체 분자의 질량, $h$를 높이, $T$를 온도라고하면 다음의 식이 성립한다. $$ \dfrac{dT}{dh} = - {{ \gamma -1} \over { \gamma }} \dfrac{ mg }{k_{B}} $$ 이때 $\gamma = \dfrac{C_{p}}{C_{V}}$ 는 등압 열용량과 등적 열용</description></item><item><title>제1동형 정리 증명</title><link>https://freshrimpsushi.github.io/ko/posts/637/</link><pubDate>Tue, 07 Aug 2018 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/637/</guid><description>정리 1 $G,G'$ 가 군이라 하자. 제1동형 정리: 준동형사상 $\phi : G \to G'$ 이 존재하면 $$ G / \ker ( \phi ) \simeq \phi (G) $$ 제2동형 정리: $H \le G$ 이고 $N \triangleleft G$ 면 $$ (HN) / N \simeq H / (H \cap N)</description></item><item><title>이상기체의 단열 팽창</title><link>https://freshrimpsushi.github.io/ko/posts/636/</link><pubDate>Mon, 06 Aug 2018 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/636/</guid><description>정리 몰수가 $1$이고 단열 팽창을 하는 이상기체의 계에서 압력이 $p$, 부피가 $V$라고 하면 $p V^{\gamma}$은 상수다. 이때 $\gamma = \dfrac{C_{p}}{C_{V}}$ 는 등압 열용량과 등적</description></item><item><title>번사이드 공식 유도</title><link>https://freshrimpsushi.github.io/ko/posts/634/</link><pubDate>Sun, 05 Aug 2018 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/634/</guid><description>개요 번사이드 공식은 군의 작용과 등방부분군에 대한 대표적인 응용으로써 조합론을 비롯한 분야에서 즉시 쓰일 수 있다. 공식 1 유한군 $G$ 에 대해 유한집합 $X$ 가 $G$-</description></item><item><title>이상기체의 등온 팽창</title><link>https://freshrimpsushi.github.io/ko/posts/633/</link><pubDate>Sat, 04 Aug 2018 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/633/</guid><description>공식 몰 수가 $1$이고 등온 팽창을 하는 이상기체의 계에서 열에너지가 $Q$, 온도가 $T$, 팽창 전의 부피를 $V_{1}$, 팽창 후의 부피를 $V_{2}$라고 할 때 다음의 식이 성립한다</description></item><item><title>등방부분군</title><link>https://freshrimpsushi.github.io/ko/posts/632/</link><pubDate>Fri, 03 Aug 2018 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/632/</guid><description>정의 1 군 $G$ 에 대해 $X$ 를 $G$-집합이라고 하자. $x \in X$ 와 $g \in G$ 에 대해 $X_{g} := \left\{ x \in X \ | \ gx = x \right\}$ 그리고 $G_{x} := \left\{ g \in G \ | \ gx = x \right\}$ 라 두자. $G_{x}$ 를 $x$ 에 대</description></item><item><title>등적 열용량과 등압 열용량</title><link>https://freshrimpsushi.github.io/ko/posts/631/</link><pubDate>Thu, 02 Aug 2018 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/631/</guid><description>공식 몰 수가 $1$인 이상기체의 계에서 등적 열용량 $C_{V}$와 등압 열용량 $C_{p}$ 에 대해 다음의 식이 성립한다. $$ C_{p} = C_{V} + R = {{5} \over {2}} R $$ 설명 등적 과정이냐 등</description></item><item><title>군의 작용</title><link>https://freshrimpsushi.github.io/ko/posts/630/</link><pubDate>Wed, 01 Aug 2018 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/630/</guid><description>정의 1 항등원이 $e$ 인 군 $G$ 와 집합 $X$ 에 대해 다음의 두 조건을 만족하는 이항연산 $\ast : G \times X \to X$ 를 $X$ 상에서 $G$ 의 작용action이라 하고 $X$ 를 $G$-집합이라고</description></item><item><title>열역학 제1법칙</title><link>https://freshrimpsushi.github.io/ko/posts/629/</link><pubDate>Tue, 31 Jul 2018 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/629/</guid><description>법칙 열에너지가 $Q$인 계에 가해진 일이 $W$일 때, 내부에너지 $U$ 에 대해서 다음의 식이 성립한다. $$ d U = \delta Q + \delta W $$ $\delta$ 는 불완전 미분inexact di</description></item><item><title>추상대수학에서의 몫군</title><link>https://freshrimpsushi.github.io/ko/posts/628/</link><pubDate>Mon, 30 Jul 2018 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/628/</guid><description>정의 1 $H \subset G$ 의 모든 잉여류의 집합을 $G / H$ 라고 하자. $(aH) \ast\ (bH) = (ab) H$ 와 같이 잘 정의된 이항연산 $\ast$ 이 존재하면 $\left&amp;lt; G / H , * \right&amp;gt;$ 를 몫군factor group이라</description></item><item><title>열용량</title><link>https://freshrimpsushi.github.io/ko/posts/627/</link><pubDate>Sun, 29 Jul 2018 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/627/</guid><description>정의1 물체의 온도를 $dT$만큼 올리는데 필요한 열 $dQ$ 열을 물체의 열용량heat capacity이라 하고 capacity의 C를 따서 다음과 같이 표기한다</description></item><item><title>티호노프 정리 증명</title><link>https://freshrimpsushi.github.io/ko/posts/626/</link><pubDate>Sat, 28 Jul 2018 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/626/</guid><description>정리 인덱스 집합 $\mathscr{A}$ 이 주어져 있다고 하자. $\left\{ X_{\alpha} \ | \ \alpha \in \mathscr{A} \right\}$ 가 컴팩트 공간들의 집합이면 $\displaystyle X : = \prod_{\alpha \in \mathscr{A}} X_{ \alpha}$ 는 컴팩트다. 설명 이름까지 붙은 정리치고는 일개 성</description></item><item><title>기체분자의 평균 운동에너지</title><link>https://freshrimpsushi.github.io/ko/posts/625/</link><pubDate>Fri, 27 Jul 2018 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/625/</guid><description>공식1 온도가 $T$인 계에서 기체분자들의 평균 운동에너지는 다음과 같다. $$ \left\langle E_{K} \right\rangle = {{3} \over {2}} k_{B} T $$ 설명 기체분자 하나하나에 대해 운동에너지를 구해서 평균을 구</description></item><item><title>알렉산더 부분기저 정리 증명</title><link>https://freshrimpsushi.github.io/ko/posts/624/</link><pubDate>Thu, 26 Jul 2018 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/624/</guid><description>정리 $X$ 가 위상공간이라고 하자. $X$ 는 컴팩트다. $\iff$ $\mathscr{S}$ 의 멤버들로 이루어진 $X$ 의 모든 열린 커버가 유한 부분커버를 갖게끔 하는 $X$ 의 어떤 부분기저 $\mathscr{S}$ 가 존재한다. 설명</description></item><item><title>맥스웰 분포</title><link>https://freshrimpsushi.github.io/ko/posts/623/</link><pubDate>Wed, 25 Jul 2018 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/623/</guid><description>정리1 기체분자의 속력을 나타내는 확률변수 $V$ 는 확률밀도함수가 아래와 같은 맥스웰 분포maxwell distribution를 따른다. $$ f(v) = \dfrac{4}{\sqrt{ \pi}} \left( \dfrac{m}{2 k_{B}</description></item><item><title>추상대수학에서의 핵, 커널</title><link>https://freshrimpsushi.github.io/ko/posts/622/</link><pubDate>Tue, 24 Jul 2018 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/622/</guid><description>정의 $G, G'$ 의 항등원 $e, e'$ 과 준동형사상 $\phi : G \to G'$ 에 대해 $\left\{ e' \right\}$ 의 원상 $\phi^{-1} [ \left\{ e' \right\} ]$ 을 $\phi$ 의 핵kernel이라 하고 $\ker \phi$ 라고 쓴다. 정리 [1]: $g \in G$ 에 대해 $g ( \ker \phi</description></item><item><title>연속제곱법 증명</title><link>https://freshrimpsushi.github.io/ko/posts/621/</link><pubDate>Mon, 23 Jul 2018 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/621/</guid><description>알고리즘 자연수 $a,k,m$ 에 대해 $b \equiv a^{k} \pmod{m}$ 를 다음과 같이 계산할 수 있다. Step 1. $k$ 의 이진법 전개 $u_{i} = 0$ 혹은 $u_{i} = 1$ 에 대해 다음과 같이 나타낸다. $$ k = \sum_{i=0}^{r} u_{i} 2^{i} = u_{0} + 2 u_{1} +</description></item><item><title>위상공간의 데카르트 곱</title><link>https://freshrimpsushi.github.io/ko/posts/620/</link><pubDate>Sun, 22 Jul 2018 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/620/</guid><description>정의 1 인덱스 집합 $\mathscr{A}$ 에 대해 $\left\{ X_{\alpha} \ | \ \alpha \in \mathscr{A} \right\}$ 가 위상공간들의 집합이고 $O_{\alpha}$ 을 $X_{\alpha}$ 에서 열린 집합이라고 하자. 데카르트 곱 $\displaystyle X := \prod_{\alpha \in \mathscr{A}} X_{ \alpha}$ 에 대해 $p_{\alpha} : X \to X_{\alpha}$ 를 사</description></item><item><title>군의 데카르트 곱</title><link>https://freshrimpsushi.github.io/ko/posts/619/</link><pubDate>Sat, 21 Jul 2018 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/619/</guid><description>정의 1 2 군 $G_{1} , \cdots , G_{n}$ 들의 데카르트 곱과 그 원소 $\displaystyle (a_{1},\cdots , a_{n}), (b_{1} , \cdots , b_{n} ) \in \prod_{i=1}^{n} G_{i}$ 에 대해 $$ (a_{1},\cdots , a_{n}) (b_{1} , \cdots , b_{n} ) = (a_{1} b_{1},\cdots , a_{n} b_{n}) $$ 이면 $\displaystyle \prod_{i=1}^{n} G_{i}$ 를 $G_{1} , \cdots , G_{n}$ 들의 직곱d</description></item><item><title>등온 대기에서 높이에 따른 기체 분자 수 공식</title><link>https://freshrimpsushi.github.io/ko/posts/618/</link><pubDate>Fri, 20 Jul 2018 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/618/</guid><description>공식1 기온 $T$가 일정하다고 할 때 높이 $h$에서 단위 부피 $V=1$당 기체분자의 수를 $N(h)$라고 하자. 기체분자의 질량이 $m$이고 중력가속도가</description></item><item><title>스털링 근사 공식의 엄밀한 증명</title><link>https://freshrimpsushi.github.io/ko/posts/616/</link><pubDate>Wed, 18 Jul 2018 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/616/</guid><description>정리 $$ \lim_{n \to \infty} {{n!} \over {e^{n \ln n - n} \sqrt{ 2 \pi n} }} = 1 $$ 설명 스털링 근사 혹은 스털링 공식stirling formula은 통계학이나 물리학 등 여러 곳에서 유용하게 쓰</description></item><item><title>볼츠만 분포</title><link>https://freshrimpsushi.github.io/ko/posts/615/</link><pubDate>Tue, 17 Jul 2018 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/615/</guid><description>정리1 온도가 $T$인 계의 에너지가 $\varepsilon$일 확률은 다음과 같다. $$ P(\varepsilon) \propto e^{ - \frac{\varepsilon}{k_{B} T} } $$ 이러한 분포를 볼츠만 분포boltzmann di</description></item><item><title>르벡공간에서의 민코프스키 부등식 증명</title><link>https://freshrimpsushi.github.io/ko/posts/614/</link><pubDate>Mon, 16 Jul 2018 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/614/</guid><description>정리1 $\Omega \subset \mathbb{R}^{n}$를 열린 집합이라고 하자. $1 \le p &amp;lt; \infty$이고 $u, v \in L^{p}(\Omega)$ 이면, $$ \left\| u + v \right\|_{p} \le \left\| u \right\|_{p}+\left\| v \right\|_{p} $$ 이를 민코프스</description></item><item><title>물리학에서 온도의 정의</title><link>https://freshrimpsushi.github.io/ko/posts/613/</link><pubDate>Sun, 15 Jul 2018 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/613/</guid><description>정의1 2 에너지가 $E$인 계가 있다고 하자. $E$ 에 대한 미시상태의 개수를 $\Omega (E) = \Omega$ 라고 할 때 $$ \dfrac{1}{k_{B} T} := \dfrac{d \ln ( \Omega )}{d E } $$ 를 만족하는 $T$를 계의 온도tempe</description></item><item><title>열역학 제0법칙</title><link>https://freshrimpsushi.github.io/ko/posts/612/</link><pubDate>Sat, 14 Jul 2018 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/612/</guid><description>법칙1 계 $A,B,C$ 에 대해 $A$ 와 $B$ 가 열역학적 평형을 이루고 $B$ 와 $C$ 열역학적 평형을 이루면 $A$ 와 $C$ 도 열역학적 평형 을 이룬다. 설명 열역학 제0법칙을 수학적으로 표현하자면</description></item><item><title>르벡공간의 횔더 부등식 증명</title><link>https://freshrimpsushi.github.io/ko/posts/609/</link><pubDate>Thu, 12 Jul 2018 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/609/</guid><description>정리1 $\Omega \subset \mathbb{R}^{n}$를 열린 집합이라고 하자. 다음의 식을 만족시키는 두 상수 $1 \lt p \lt \infty, 1 \lt p^{\prime} \lt \infty$가 주어졌다고 하자. $$</description></item><item><title>스털링 공식의 간단한 유도</title><link>https://freshrimpsushi.github.io/ko/posts/608/</link><pubDate>Wed, 11 Jul 2018 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/608/</guid><description>공식 다음의 방정식을 스털링 공식stirling's formula이라 한다. $$ \lim_{n \to \infty} {{n!} \over {e^{n \ln n - n} \sqrt{ 2 \pi n} }} = 1 $$ 설명1 이 근사는 큰 수에 대한 팩토리</description></item><item><title>칸토어 집합</title><link>https://freshrimpsushi.github.io/ko/posts/607/</link><pubDate>Tue, 10 Jul 2018 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/607/</guid><description>정의 $$ \begin{align*} I =&amp;amp; \left[ 0, 1 \right] \\ C_{1} =&amp;amp; \left[ 0, {{1} \over {3}} \right] \cup \left[ {{2} \over {3}} , 1 \right] \\ C_{2} =&amp;amp; \left[ 0, {{1} \over {3^2}} \right] \cup \left[ {{2} \over {3^2}}, {{3} \over {3^2}} \right] \cup \left[ {{6} \over {3^2}}, {{7} \over {3^2}} \right] \cup \left[ {{8} \over {3^2}} , 1 \right] \\ &amp;amp;\vdots \\ C_{n} =&amp;amp; \left[ 0, {{1}</description></item><item><title>Lp 공간, 르벡 공간</title><link>https://freshrimpsushi.github.io/ko/posts/605/</link><pubDate>Sun, 08 Jul 2018 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/605/</guid><description>정의1 2 3 $\Omega \subset \mathbb{R}^{n}$를 열린 집합, $p$를 양의 실수라고 하자. $\Omega$ 위에서 정의된 모든 가측함수 $f$에 대해서 집합 $L^{p}(</description></item><item><title>베르의 범주 정리 증명</title><link>https://freshrimpsushi.github.io/ko/posts/604/</link><pubDate>Sat, 07 Jul 2018 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/604/</guid><description>정의 위상공간 $X$ 의 모든 조밀한 열린 집합의 수열 $\left\{ O_{n} \right\}_{n=1}^{\infty}$ 에 대해 $\displaystyle \bigcap_{n=1}^{\infty} O_{n}$ 이 조밀한 공간을 베르 공간Baire space이라 한다. 베르의 범주 정리 1 모든 완비거리공</description></item><item><title>병렬회로의 합성저항 쉽게 구하기</title><link>https://freshrimpsushi.github.io/ko/posts/603/</link><pubDate>Fri, 06 Jul 2018 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/603/</guid><description>빌드업 위와 같은 회로의 합성저항을 구한다고 생각해보자. 물론 아래와 같이 병렬회로로 바꾸면 답 자체는 공식을 통해 구할 수 있다. 저항이 $n$ 개 있을 때 병렬의 저항 공식</description></item><item><title>이상기체 방정식</title><link>https://freshrimpsushi.github.io/ko/posts/602/</link><pubDate>Thu, 05 Jul 2018 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/602/</guid><description>공식1 기체의 분자 수를 $N$, 부피를 $V$, 압력을 $p$, 절대온도를 $T$라고 하자. 그러면 다음의 식이 성립하며 이를 이상기체 방정식ideal gas equation이라 한</description></item><item><title>월리스 곱</title><link>https://freshrimpsushi.github.io/ko/posts/601/</link><pubDate>Wed, 04 Jul 2018 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/601/</guid><description>정리 $$ \prod_{n=1}^{\infty} {{4n^2} \over {4n^2 - 1}} = \lim_{n \to \infty} {{2 \cdot 2 } \over { 1 \cdot 3 } } \cdot {{4 \cdot 4 } \over { 3 \cdot 5 } } \cdot \cdots \cdot {{2n \cdot 2n } \over { (2n-1) \cdot (2n+1) } } = {{ \pi } \over {2}} $$ 설명 급수뿐만이 아니라 곱으로</description></item><item><title>오일러의 완전수 정리 증명</title><link>https://freshrimpsushi.github.io/ko/posts/600/</link><pubDate>Tue, 03 Jul 2018 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/600/</guid><description>정리 1 짝수 $n = 2^{p-1} (2^p - 1)$ 가 완전수면 $2^{p}-1$ 는 메르센 소수다. 설명 언뜻 보면 유클리드 완전수 공식의 역이 되는 것 같지만 짝수에 대해서만 언급되었다는 점이 다르다. 그러</description></item><item><title>함수의 내적을 정적분으로 정의하는 이유</title><link>https://freshrimpsushi.github.io/ko/posts/599/</link><pubDate>Mon, 02 Jul 2018 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/599/</guid><description>빌드업 내적의 일반적인 정의는 다음과 같다. $H$를 벡터 공간이라고 하자. $x,y,z \in H$와 $\alpha, \beta \in \mathbb{C}$에 대해서 다음의 조건을 만족하는 함수 $$ \langle</description></item><item><title>한 점 컴팩트화</title><link>https://freshrimpsushi.github.io/ko/posts/598/</link><pubDate>Sun, 01 Jul 2018 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/598/</guid><description>정의 1 위상공간 $(X , \mathscr{T})$ 에 대해 $\infty \notin X$ 이라고 하자. $X_{\infty} := X \cup \left\{ \infty \right\}$ 에 대해 아래의 두 조건을 만족하는 위상 $\mathscr{T}_{\infty}$ 을 정의한 $(X_{\infty } , \mathscr{T}_{\infty} )$ 를 $(X, \mathscr{T})$ 의 한 점 컴팩트화one-P</description></item><item><title>라그랑주의 정리 증명</title><link>https://freshrimpsushi.github.io/ko/posts/597/</link><pubDate>Sat, 30 Jun 2018 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/597/</guid><description>정리 1 $H$ 가 유한군 $G$ 의 부분군이면 $|H|$ 는 $|G|$ 의 약수다. 구체적으로 다음이 성립한다. $$ |G : H| = |G| / |H| $$ 증명 조금 생각해보면 상식적으로 성립할 수밖에 없고 증명도</description></item><item><title>르벡 공간에서의 코시-슈바르츠 부등식</title><link>https://freshrimpsushi.github.io/ko/posts/596/</link><pubDate>Fri, 29 Jun 2018 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/596/</guid><description>정리1 $f,g \in L^{2} (E)$면 $fg \in L^{1}(E)$이고 다음이 성립한다. $$ \left| \int_{E} f \overline{g} dm \right| \le \left\| f g \right\|_{1} \le \left\| f \right\|_{2} \left\| g \right\|_{2} $$ 여기서 $\| \cdot \|_{2}$은 $L^{2}$ 공간의 놈</description></item><item><title>L2 공간</title><link>https://freshrimpsushi.github.io/ko/posts/594/</link><pubDate>Wed, 27 Jun 2018 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/594/</guid><description>정의 1 함수공간 $L^{2}$를 다음과 같이 정의한다. $$ L^{2} (E) := \left\{ f : \left( \int_{E} | f |^2 dm \right)^{{1} \over {2}} &amp;lt; \infty \right\} $$ 성질 $L^{2}$는 거리공간이다. 거리는 다음과 같이</description></item><item><title>유클리드의 완전수 공식 유도</title><link>https://freshrimpsushi.github.io/ko/posts/593/</link><pubDate>Tue, 26 Jun 2018 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/593/</guid><description>공식 1 $2^{p}-1$ 이 소수면 $2^{p-1}(2^{p} - 1)$ 은 완전수다. 설명 모든 완전수가 저런 형태일지는 확실하지 않지만, 저런 형태는 반드시 완전수다. 예를 들면 소수 $(2^2 -1) = 3$ 에 대해 $2^{2-1}(2^2 -1) = 6$</description></item><item><title>L1 공간</title><link>https://freshrimpsushi.github.io/ko/posts/592/</link><pubDate>Mon, 25 Jun 2018 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/592/</guid><description>정의1 함수공간 $L^{1}$ 을 다음과 같이 정의한다. $$ L^{1} (E) := \left\{ f : E \to \mathbb{R} \Big \vert \int_{E} | f | dm \lt \infty \right\} $$ 성질 $L^{1}$은 벡터공간이다. $L^{1}$은 놈 공간이다</description></item><item><title>페아노 공간 충전 정리 증명</title><link>https://freshrimpsushi.github.io/ko/posts/586/</link><pubDate>Sat, 23 Jun 2018 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/586/</guid><description>정리 1 $I = [0,1]$ 에 대해 전사 연속함수 $f : I \to I \times I$ 가 존재한다. 설명 짧지만 몹시 충격적인 정리다. 이 정리가 사실이라면 선만으로 평면을 구성할 수 있다는 뜻인데,</description></item><item><title>르벡 정리 증명</title><link>https://freshrimpsushi.github.io/ko/posts/585/</link><pubDate>Fri, 22 Jun 2018 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/585/</guid><description>정의 $\mathscr{O}$ 를 거리공간 $(X,d)$ 의 열린 커버라고 하자. $\sup \left\{ d(a,b) \ | \ a,b \in A \right\} &amp;lt; \varepsilon$ 를 만족시키는 모든 부분집합 $A \subset X$ 이 어떤 $O \in \mathscr{O}$ 에 대해 $A \subset O$ 를 만족하면 $\varepsilon &amp;gt; 0$ 를 $\mathscr{O}$ 에 대</description></item><item><title>디리클레 경계 조건이 주어진 파동방정식에 대한 초기값 문제의 풀이</title><link>https://freshrimpsushi.github.io/ko/posts/583/</link><pubDate>Wed, 20 Jun 2018 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/583/</guid><description>설명 $$ \begin{cases} u_{tt} = c^2 u_{xx} \\ u(0,x) = f(x) \\ u_{t}(0,x) = g(x) \\ \end{cases} $$ 위 방정식은 파동 방정식에서 길이가 $l$ 인 $1$차원 공간 상의 디리클레 경계조건 $$ \begin{cases} u(t,0) = \alpha (t) \\ u(t,l) = \beta (t) \end{cases} $$ 이 $\alpha = \beta</description></item><item><title>파동방정식에 대한 코시 문제의 풀이</title><link>https://freshrimpsushi.github.io/ko/posts/582/</link><pubDate>Tue, 19 Jun 2018 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/582/</guid><description>설명 $$ \begin{cases} u_{tt} = c^2 u_{xx} \\ u(0,x) = f(x) \\ u_{t}(0,x) = g(x) \end{cases} $$ 위 식은 다음과 같은 파동 방정식 $$ \rho (x) {{\partial^2 u} \over {\partial t^2}} = {{ \partial } \over {\partial x}} \left( \kappa (x) {{ \partial u } \over { \partial x }} \right) $$ 에서 밀도densit</description></item><item><title>디리클레 경계 조건이 주어진 열방정식에 대한 초기값 문제의 풀이</title><link>https://freshrimpsushi.github.io/ko/posts/581/</link><pubDate>Mon, 18 Jun 2018 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/581/</guid><description>설명 $$ \begin{cases} u_{t} = \gamma u_{xx} \\ u(t,0) = u(t,l) = 0 \\ u(0,x) = f(x) \end{cases} $$ 위 방정식은 열방정식에서 길이가 $l$ 인 $1$차원 공간 상의 디리클레 경계조건 $$ \begin{cases} u(t,0) = \alpha (t) \\ u(t,l) = \beta (t) \end{cases} $$ 이 $\alpha = \beta</description></item><item><title>열방정식의 풀이</title><link>https://freshrimpsushi.github.io/ko/posts/580/</link><pubDate>Sun, 17 Jun 2018 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/580/</guid><description>설명 $$ u_{t} = \gamma u_{xx} $$ 위 식은 다음의 일반화된 열방정식 $$ {{\partial} \over {\partial t}} \left( \sigma (x) u \right) = {{\partial} \over {\partial x }} \left( \kappa (x) {{\partial u} \over {\partial x}} \right) $$ 에서 열전도율thermal conductivity $\kappa (x) &amp;gt; 0$ 와 열용량</description></item><item><title>편미분 방정식 풀이를 위한 푸리에 급수</title><link>https://freshrimpsushi.github.io/ko/posts/579/</link><pubDate>Sat, 16 Jun 2018 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/579/</guid><description>정의 힐베르트 공간의 함수 $f \in \mathcal{L}^{2} [- \pi , \pi] $ 에 대해 $\displaystyle a_{k} = {{1} \over {\pi}} \int_{- \pi}^{\pi} f(x) \cos kx dx$ 그리고 $\displaystyle b_{k} = {{1} \over {\pi}} \int_{- \pi}^{\pi} f(x) \sin kx dx$ 에 대해 $$ f(x) \sim {{a_{0}} \over {2}} + \sum_{k=1}^{\infty} \left( a_{k} \cos kx + b_{x} \sin kx \right) $$</description></item><item><title>R 에서 여러가지 분포함수</title><link>https://freshrimpsushi.github.io/ko/posts/578/</link><pubDate>Mon, 04 Jun 2018 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/578/</guid><description>설명 R 에서 특정 분포에 대한 함수들은 다음과 같은 접두어와 접미어의 조합으로 만들어진다. 접두 확률분포 $X$ 의 확률분포함수를 $f(x)$ 라고 하자. r-:랜덤 추출, 확률</description></item><item><title>버거스 방정식에 대한 리만 문제의 풀이</title><link>https://freshrimpsushi.github.io/ko/posts/575/</link><pubDate>Mon, 04 Jun 2018 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/575/</guid><description>설명 $$ \begin{cases} u_{t} + u u_{x} = 0 &amp;amp; , t&amp;gt;0 \\ u(t,x) = \begin{cases} a &amp;amp; ,x&amp;lt;0 \\ b &amp;amp; ,x&amp;gt;0 \end{cases} &amp;amp; , t=0 \end{cases} $$ 리만 문제란 초기값이 주어진 버거스 방정식 중에서도 그 해를 계단 함수step function 로 갖는 경우를</description></item><item><title>R 에서 올림, 내림, 반올림, 자릿수 바꾸기</title><link>https://freshrimpsushi.github.io/ko/posts/577/</link><pubDate>Sat, 02 Jun 2018 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/577/</guid><description>개요 ceiling() 함수는 올림 처리를, floor() 함수는 내림 처리를 해준다. 이런 함수들은 주로 통계를 다루는 R 에서는 필요 없어 보이지만 의외로 데이터 핸들링을 할 때 써먹기가 편하다</description></item><item><title>볼자노-바이어슈트라스 성질과 집적점 컴팩트</title><link>https://freshrimpsushi.github.io/ko/posts/576/</link><pubDate>Fri, 01 Jun 2018 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/576/</guid><description>정의 1 위상공간 $X$ 의 모든 무한 부분집합의 집적점이 $X$ 에 속하면 $X$ 가 볼자노-바이어슈트라스 성질을 가진다고 하거나 집적점 컴팩트라 한다. 정리 [1]: 모든 컴팩트 공간</description></item><item><title>가산 컴팩트와 린델뢰프</title><link>https://freshrimpsushi.github.io/ko/posts/574/</link><pubDate>Thu, 31 May 2018 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/574/</guid><description>정의 1 $X$ 의 모든 가산 열린 커버가 유한 부분 커버를 가지면 $X$ 를 가산 컴팩트countably compact라 한다. $X$ 의 모든 열린 커버가 가산 부분 커버를 가지면</description></item><item><title>리만적분의 일반화로써의 르벡적분</title><link>https://freshrimpsushi.github.io/ko/posts/573/</link><pubDate>Wed, 30 May 2018 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/573/</guid><description>정리 1 유계 함수 $f : [a,b] \to \mathbb{R}$ 와 $g : \mathbb{R} \to [0,\infty)$ 이라고 하자. [1]: $f$ 가 $[a,b]$ 에서 리만 적분가능한 것은 $f$ 가 르벡 측도에 대해 $[a,b]$ 의 거의 어디에서나 연속인 것과 동치다. [2]: $\displaystyle \int_{a}^{b} f(x)</description></item><item><title>파이썬으로 웹 문서 크롤링하고 태그 제거하기</title><link>https://freshrimpsushi.github.io/ko/posts/572/</link><pubDate>Tue, 29 May 2018 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/572/</guid><description>개요 파이썬은 크롤링을 위한 패키지가 잘 갖춰져있어 쉽게 따라할 수 있다. 웹 페이지를 읽어들이고 html 태그를 제거해보자. 예제 코드 import requests from bs4 import BeautifulSoup import re rq = requests.get(&amp;#34;https://ko.wikipedia.org/wiki/%EC%98%A4%EB%A7%88%EC%9D%B4%EA%B1%B8&amp;#34;) rqctnt = rq.content soup</description></item><item><title>오류행렬과 민감도, 특이도</title><link>https://freshrimpsushi.github.io/ko/posts/571/</link><pubDate>Mon, 28 May 2018 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/571/</guid><description>정의 양성positive $P$ 와 음성negative $N$ 을 구분하는 분류문제에서 양성과 음성을 판정하는 모델이 주어져 있다고 하자. 양을 양으로 판정한 수를 참양</description></item><item><title>균등연속 정리</title><link>https://freshrimpsushi.github.io/ko/posts/570/</link><pubDate>Sun, 27 May 2018 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/570/</guid><description>정의 거리공간 $(X, d)$ 와 $(Y, d&amp;rsquo;)$ 에 대해 $f : X \to Y$ 라고 하자. 모든 $\varepsilon &amp;gt; 0$ 와 $x_{1}, x_{2} \in X$ 에 대해 $$ d(x_{1}, x_{2}) &amp;lt; \delta \implies d&amp;rsquo;( f( x_{1} ) , f( x_{2} ) ) &amp;lt; \varepsilon $$ 을 만족하는 $\delta &amp;gt; 0$ 가 존재하면 $f$ 를</description></item><item><title>랜킨-위고니오 조건과 엔트로피 조건</title><link>https://freshrimpsushi.github.io/ko/posts/569/</link><pubDate>Sat, 26 May 2018 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/569/</guid><description>정의 $$ \begin{cases} u_{t} + u u_{x} = 0 &amp;amp; , t&amp;gt;0 \\ u(t,x) = f(x) &amp;amp; , t=0 \end{cases} $$ 위 비점성 버거스 방정식의 해가 $u$고 그 파열 시간이 $t_{\ast}$ 라고 하자. 비점성 버거스 방정식의 해가 파열할 때, 위와</description></item><item><title>R 에서 문자열 다루기</title><link>https://freshrimpsushi.github.io/ko/posts/568/</link><pubDate>Fri, 25 May 2018 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/568/</guid><description>개요 개발자들이 많이 사용하는 언어들에 비교하면 그 정도가 덜하지만, R 에서도 문자열을 다룰 일이 생각보다 많다. 데이터가 방대하고 제멋대로일수록 이런 사소한 테</description></item><item><title>정수론에서의 시그마 함수</title><link>https://freshrimpsushi.github.io/ko/posts/567/</link><pubDate>Thu, 24 May 2018 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/567/</guid><description>정리 $\displaystyle \sigma (n) : = \sum_{d \mid n} d$ 에 대해 다음이 성립한다. [1]: 소수 $p$ 에 대해 $$\sigma ( p^k ) = {{p^{k+1} - 1} \over {p-1}}$$ [2]: $\gcd (n , m ) = 1$ 이면 $$\sigma (nm) = \sigma (n) \sigma (m)$$ 설명 시그마 함수는 쉽게 말해 약수</description></item><item><title>비점성 버거스 방정식에서의 질량 보존 법칙</title><link>https://freshrimpsushi.github.io/ko/posts/566/</link><pubDate>Wed, 23 May 2018 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/566/</guid><description>정리 $$ \begin{cases} u_{t} + u u_{x} = 0 &amp;amp; , t&amp;gt;0 \\ u(t,x) = f(x) &amp;amp; , t=0 \end{cases} $$ 위의 비점성 버거스 방정식의 해 $u$에 대해 구간 $[a,b]$까지의 선질량 $M$ 을 다음과 같이 정의하자. $$ M_{a,b}(t)</description></item><item><title>측도론에서의 레비의 정리 증명</title><link>https://freshrimpsushi.github.io/ko/posts/564/</link><pubDate>Tue, 22 May 2018 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/564/</guid><description>정리 1 만약 $\displaystyle \sum_{k=1}^{\infty} \int |f_{k}| dm &amp;lt; \infty$ 면, $\displaystyle \sum_{k=1}^{\infty} f_{k} (x)$ 는 거의 어디에서나 수렴하고 르벡적분가능하며 그 적분은 구체적으로 다음과 같다. $$ \int \sum_{k=1}^{\infty} f_{k} dm = \sum_{k=1}^{\infty} \int f_{k} dm $$ 증명 Part 1. $\displaystyle \sum_{k=1}^{\infty}</description></item><item><title>위상공간에서 최대최소값 정리 증명</title><link>https://freshrimpsushi.github.io/ko/posts/563/</link><pubDate>Mon, 21 May 2018 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/563/</guid><description>정리 1 컴팩트 공간 $X$ 에 대해 함수 $f : X \to \mathbb{R}$ 가 연속이면 모든 $x \in X$ 에 대해 $f(c) \le f(x) \le f(d)$ 을 만족하는 $c,d \in X$ 가 존재한다. 설명 $\mathbb{R}$ 에서 컴팩트란 폐구간 $[a,b]$ 인 것과 동치이</description></item><item><title>컴팩트 공간과 연속함수에 대한 유용한 성질들</title><link>https://freshrimpsushi.github.io/ko/posts/561/</link><pubDate>Sun, 20 May 2018 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/561/</guid><description>정리 $f : X \to Y$ 에 대해 $X$ 가 컴팩트, $f$ 가 연속이라고 하자. [1]: $f$ 가 전사면 $Y$ 는 컴팩트다. $f$ 가 전사가 아니더라도 $f(X)$ 는 컴팩트다. [2]: $Y$ 가 하우스도르프면 $f$ 는 닫힌</description></item><item><title>지프의 법칙</title><link>https://freshrimpsushi.github.io/ko/posts/560/</link><pubDate>Sat, 19 May 2018 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/560/</guid><description>법칙 코퍼스에서 $k$ 번째로 자주 나타나는 단어의 상대빈도를 $f_{k}$ 라고 하면 $$ f_{k} = {{C} \over {k}} $$ 설명 여기서 $C$ 는 $\displaystyle \sum_{k} f_{k} = 1$ 이 되도록하는 정규화계수다. 히스토그램으로 나</description></item><item><title>힙스의 법칙</title><link>https://freshrimpsushi.github.io/ko/posts/559/</link><pubDate>Fri, 18 May 2018 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/559/</guid><description>법칙 코퍼스에서 어휘의 갯수를 $M$, 토큰의 갯수를 $T$ 라고 하면 $$ M = kT^{b} $$ 설명 코퍼스가 영어일 경우 보통 상수 $k,b$ 는 $10 \le k \le 100$, 그리고 $b = 0.5$ 정도로 나타난다고 한다. 힙</description></item><item><title>R 에서 부트스트랩 함수 사용하는 법</title><link>https://freshrimpsushi.github.io/ko/posts/558/</link><pubDate>Thu, 17 May 2018 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/558/</guid><description>개요 R 에서 부트스트랩을 시행하는 코드를 직접 짜볼 수도 있지만, 기본적으로 제공되는 함수를 이용할 수도 있다. 그 과정은 아래와 같이 단순하지만 다른 함수들과 사용</description></item><item><title>지배 수렴 정리 증명</title><link>https://freshrimpsushi.github.io/ko/posts/557/</link><pubDate>Wed, 16 May 2018 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/557/</guid><description>정리 1 가측집합 $E \in \mathcal{M}$ 와 $g \in \mathcal{L}^{1} (E)$ 에 대해 가측함수열 $\left\{ f_{n} \right\}$ 이 $E$ 의 거의 어디서나 $|f_{n}| \le g$ 를 만족한다고 하자. 만약 $E$ 의 거의 어디서나 $\displaystyle f = \lim_{n \to \infty} f_{n}$ 이면, $f \in \mathcal{L}^{1}(E)$</description></item><item><title>메르센 소수</title><link>https://freshrimpsushi.github.io/ko/posts/552/</link><pubDate>Tue, 15 May 2018 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/552/</guid><description>정의 1 $M_{n} = 2^{n} - 1$ 가 소수면 $M_{n}$ 를 메르센 소수mersenne Prime라 한다. 설명 메르센 소수의 발견은 $p=x^{n}-1$ 꼴이 소수인지에 대한 탐구로부터 시작된다. 수식을</description></item><item><title>몬테카를로 방법과 부트스트랩의 차이점</title><link>https://freshrimpsushi.github.io/ko/posts/551/</link><pubDate>Mon, 14 May 2018 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/551/</guid><description>개요 몬테카를로 방법은 작위적인 데이터로 시뮬레이션을 반복해 새로운 기법을 확인하는 방법이고 부트스트랩은 실제 데이터에서 재표본 추출을 통해 비용을 절감하며 문</description></item><item><title>계획행렬</title><link>https://freshrimpsushi.github.io/ko/posts/550/</link><pubDate>Sun, 13 May 2018 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/550/</guid><description>빌드업 R에서 내장데이터 faithful을 불러와 head() 함수를 통해 확인해보자. 고작 여섯개지만, 척 봐도 eruptions와 waiting은 양의 상관관계</description></item><item><title>르벡 적분가능</title><link>https://freshrimpsushi.github.io/ko/posts/549/</link><pubDate>Sat, 12 May 2018 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/549/</guid><description>정의 1 $E \in \mathcal{M}$ 이라고 할 때 가측함수 $f$ 에 대해 $$f^{+} := \max \left\{ f , 0 \right\} \\ f^{-} := \max \left\{ -f , 0 \right\}$$ 라고 하자. 그러면 $$ f = f^{+} - f^{-} \\ | f | = f^{+} + f^{-} $$ 으로 나타낼 수 있다. 만약</description></item><item><title>회귀분석이란?</title><link>https://freshrimpsushi.github.io/ko/posts/548/</link><pubDate>Fri, 11 May 2018 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/548/</guid><description>설명 회귀분석은 거의 모든 통계적 기법의 근간이 되는만큼 너무 일반적이거나 너무 특수하게 설명된 경우가 많다. 그냥 회귀분석이 어떤건지 궁금한 사람에게 한마디로 설</description></item><item><title>포물선의 초점을 지나는 직선이 가지는 성질</title><link>https://freshrimpsushi.github.io/ko/posts/562/</link><pubDate>Thu, 10 May 2018 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/562/</guid><description>정리 포물선 $y^2 = 4px$ 에 대해 초점 $P(p,0)$ 을 지나는 직선이 포물선과 만나는 두 점을 각각 $A, B$ 라고 하면 $$ {{1} \over {\overline{PA}} } + {{1} \over {\overline{PB}} } = {{1} \over {p}} $$ 증명 경우 1. $a=b$ 초점을 지나는 직선이 $x</description></item><item><title>표본표준편차와 표준오차의 구분</title><link>https://freshrimpsushi.github.io/ko/posts/541/</link><pubDate>Thu, 10 May 2018 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/541/</guid><description>정의 $X$ 로부터 얻은 데이터를 $\mathbf{x} = ( x_{1}, x_{2}, \cdots , x_{n} )$ 라고 하자. 표본평균: $$ \overline{x} = {{1} \over {n}} \sum_{i=1}^{n} x_{i} $$ 표본표준편차: $$ s_{x} = \sqrt { {{1} \over {n-1}} \sum_{i=1}^{n} ( x_{i} - \overline{x} )^2 } $$ 표준오차: $$ \text{s.e.}</description></item><item><title>R 에서 멱함수 그래프 그리는 법</title><link>https://freshrimpsushi.github.io/ko/posts/538/</link><pubDate>Wed, 09 May 2018 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/538/</guid><description>개요 간단하게 일변량 함수의 그래프를 그리는 법을 소개한다. 통계학에서 적절한 예로써 멱함수를 그려보자. 정의 귀무가설 $H_{0} : \theta \in \Theta_{0}$ 과 대립가설 $H_{1} : \theta \in \Theta_{1}$ 에 대해</description></item><item><title>p값 혹은 유의확률의 쉬운 정의</title><link>https://freshrimpsushi.github.io/ko/posts/537/</link><pubDate>Tue, 08 May 2018 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/537/</guid><description>정의 1 가설검정에서 귀무가설을 기각할 확률을 유의확률p-value이라 한다. 설명 유의확률이 유의수준 보다 작으면 귀무가설이 기각된다고 보면 된다. 귀무가</description></item><item><title>상관관계가 없다고 독립인 것은 아니다</title><link>https://freshrimpsushi.github.io/ko/posts/536/</link><pubDate>Mon, 07 May 2018 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/536/</guid><description>설명 독립이면 상관관계가 없지만, 상관관계가 없다고 독립인 것은 아니다. 상관관계가 없을 때 독립인 경우, 즉 필요충분조건이 되는 경우는 확률변수가 정규분포를 따</description></item><item><title>단조 수렴 정리 증명</title><link>https://freshrimpsushi.github.io/ko/posts/535/</link><pubDate>Sun, 06 May 2018 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/535/</guid><description>정리 1 함숫값이 음이 아닌 가측 함수의 수열 $\left\{ f_{n} \right\}$ 이 $f_{n} \nearrow f$ 을 만족한다고 하자. 그러면 $$ \lim_{n \to \infty} \int_{E} f_{n} dm = \int_{E} f dm $$ 설명 $f_{n} \nearrow f$ 이란 모든 $x$ 에 대해 $f_{n}(x) \le f_{n+1} (x)$ 이면서 $\displaystyle</description></item><item><title>파투의 보조정리 증명</title><link>https://freshrimpsushi.github.io/ko/posts/534/</link><pubDate>Sat, 05 May 2018 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/534/</guid><description>정리 1 함숫값이 음이 아닌 가측 함수의 시퀀스 $\left\{ f_{n} \right\}$ 에 대해 $$ \int_{E} \left( \liminf_{n \to \infty} f_{n} \right) dm \le \liminf_{n \to \infty} \int_{E} f_{n} dm $$ $\liminf$ 는 리미트 인피멈이다. 설명 실해석에서의 단조 수렴 정리와 지배</description></item><item><title>비점성 버거스 방정식의 풀이</title><link>https://freshrimpsushi.github.io/ko/posts/532/</link><pubDate>Fri, 04 May 2018 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/532/</guid><description>정의 다음의 준선형 편미분방정식을 버거스 방정식burgers&amp;rsquo; equation이라 한다. $$ \begin{cases} u_{t} + u u_{x} = 0 &amp;amp; , t&amp;gt;0 \\ u(t,x) = f(x) &amp;amp; , t=0 \end{cases} $$ 여기</description></item><item><title>비균일 진행파 편미분방정식의 풀이</title><link>https://freshrimpsushi.github.io/ko/posts/531/</link><pubDate>Thu, 03 May 2018 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/531/</guid><description>정의 다음의 식을 만족하는 $u$를 비균일 진행파non-uiform traveling wave라고 한다. $$ \begin{cases} u_{t} + c(x) u_{x} = 0 &amp;amp; , t&amp;gt;0 \\ u(t,x) = f(x) &amp;amp; , t=0 \end{cases} $$ 여기서 $t$는 시간</description></item><item><title>균일 진행파 편미분방정식의 풀이</title><link>https://freshrimpsushi.github.io/ko/posts/530/</link><pubDate>Wed, 02 May 2018 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/530/</guid><description>정의 다음의 식을 만족하는 $u$를 균일 진행파uniform traveling wave라고 한다. $$ \begin{cases} u_{t} + c u_{x} + a u = 0 &amp;amp; , t&amp;gt;0 \\ u(t,x) = f(x) &amp;amp; , t=0 \end{cases} $$ 여기서 $t$는 시간,</description></item><item><title>정상파 편미분방정식의 풀이</title><link>https://freshrimpsushi.github.io/ko/posts/529/</link><pubDate>Wed, 02 May 2018 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/529/</guid><description>정의 다음의 조건을 만족하는 $u$를 정상파stationary wave라고 한다. $$ \begin{cases} u_{t} = 0 &amp;amp; , t&amp;gt;0 \\ u(t,x) = f(x) &amp;amp; , t=0 \end{cases} $$ 설명 정상파는 시간이 흘러도 모양이</description></item><item><title>R 에서 자리수 출력 제한 없애기</title><link>https://freshrimpsushi.github.io/ko/posts/528/</link><pubDate>Tue, 01 May 2018 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/528/</guid><description>개요 R 이 통계학을 위한 언어긴하지만 막상 R 콘솔은 데이터를 보는데 적합하지 않다. 그럼에도 불구하고 관측치가 수십만개에 달하는 빅데이터를 다룰 때나 핸들링이 잘</description></item><item><title>르벡 적분</title><link>https://freshrimpsushi.github.io/ko/posts/527/</link><pubDate>Mon, 30 Apr 2018 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/527/</guid><description>빌드업 리만 적분의 일반화를 생각하기 이전에 단순 함수simple function라는 것을 정의할 필요가 있다. 함숫값이 음이 아닌 $\phi : \mathbb{R} \to \mathbb{R}$ 의 치역이 유한 집</description></item><item><title>R 에서 NA 제거하기</title><link>https://freshrimpsushi.github.io/ko/posts/526/</link><pubDate>Sun, 29 Apr 2018 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/526/</guid><description>개요 NA는 Not Available의 약자로, R 프로그래밍에선 주로 &amp;lsquo;결측값&amp;rsquo;을 의미한다. 일반적인 프로그래밍 언어에서의 nul</description></item><item><title>n-그램과 자카드 계수</title><link>https://freshrimpsushi.github.io/ko/posts/525/</link><pubDate>Sat, 28 Apr 2018 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/525/</guid><description>정의 n-그램n-gram이란 어떠한 문자열을 n개씩 끊어서 자른 것을 말한다. 자카드 계수jaccard coefficient란 두 집합이 얼마나 비슷한지</description></item><item><title>측도론에서의 거의 어디서나와 거의 확실히</title><link>https://freshrimpsushi.github.io/ko/posts/524/</link><pubDate>Fri, 27 Apr 2018 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/524/</guid><description>정의 1 함수 $f : E \to \overline{\mathbb{R}}$ 가 $m(E_{0}) = 0$ 인 $E_{0} \subset E$ 을 제외하고 어떤 성질 $P$ 를 가질 때, $f$ 는 $E$ 의 거의 어디서나 $P$ 를 가진다고 한다. 표기 확률을 이야기 할 때 거의 어디서나al</description></item><item><title>정수와 실수의 포맷 코드에 d, f를 쓰는 이유</title><link>https://freshrimpsushi.github.io/ko/posts/523/</link><pubDate>Thu, 26 Apr 2018 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/523/</guid><description>왜 하필 d와 f인가 1 C 나 파이썬 등에서 문자열의 입출력에 사용하는 포맷 코드로 %s, %c, %d, %f 등이 있다. 알다시피 %s 은 문자열string을 나타내고 %c 는 문자cha</description></item><item><title>왜 '음함수'는 잘못된 번역인가?</title><link>https://freshrimpsushi.github.io/ko/posts/522/</link><pubDate>Wed, 25 Apr 2018 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/522/</guid><description>정의 양함수냐 음함수냐의 차이는 그저 각각을 어떻게 표현했느냐에 지나지 않는다. 수학에서는 다소 생소한 표현이지만, 그 구분은 &amp;lsquo;독립변수&amp;rsq</description></item><item><title>르벡 가측 함수</title><link>https://freshrimpsushi.github.io/ko/posts/518/</link><pubDate>Tue, 24 Apr 2018 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/518/</guid><description>정의 1 함수 $f: E \in \overline{ \mathbb{R} }$ 가 모든 구간 $I \subset \overline{ \mathbb{R} }$ 에 대해 $$ f^{-1} (I) = \left\{ x \in \mathbb{R} \ | \ f(x) \in I \right\} \in \mathcal{M} $$ 이면 $f$ 를 (르벡) 가측(Lesbegue) Measurab</description></item><item><title>사건의 독립과 조건부 확률</title><link>https://freshrimpsushi.github.io/ko/posts/521/</link><pubDate>Tue, 10 Apr 2018 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/521/</guid><description>정의 1 확률 공간 $(\Omega , \mathcal{F} , P)$ 이 주어져 있다고 하자. $P(B)&amp;gt;0$ 에 대해 $\displaystyle P (A | B) = {{P(A \cap B)} \over {P(B)}}$ 를 $B$ 에 대한 $A$ 의 조건부 확률conditional Probabilit</description></item><item><title>컴팩트 하우스도르프 공간은 정규 공간이다</title><link>https://freshrimpsushi.github.io/ko/posts/514/</link><pubDate>Tue, 10 Apr 2018 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/514/</guid><description>정리 1 [1]: 컴팩트 공간의 닫힌 부분 집합은 컴팩트다. [2]: 하우스도르프 공간의 컴팩트 부분 집합은 닫힌 집합이다. [3]: 하우스도르프 공간 $X$ 의 두 컴팩트 부분 집합 $A,B \subset X$ 가</description></item><item><title>기각역과 유의수준</title><link>https://freshrimpsushi.github.io/ko/posts/509/</link><pubDate>Sun, 08 Apr 2018 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/509/</guid><description>정의 1 귀무가설이 참임에도 불구하고 검정에서 귀무가설을 기각하는 오류를 제1종 오류라 한다. 대립가설이 참임에도 불구하고 검정에거 귀무가설을 기각하지 못하는</description></item><item><title>제1종 오류와 제2종 오류의 차이</title><link>https://freshrimpsushi.github.io/ko/posts/508/</link><pubDate>Sat, 07 Apr 2018 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/508/</guid><description>정의 가설검정에서 귀무가설 $H_{0}$ 에 대해 $H_{0}$ 이 참인데 채택하지 않은 경우의 오류를 제1종 오류type 1 error, $H_{0}$ 이 거짓인데 채택한 경우의 오류를 제2종 오류type 2 e</description></item><item><title>유한 교집합 성질</title><link>https://freshrimpsushi.github.io/ko/posts/502/</link><pubDate>Fri, 06 Apr 2018 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/502/</guid><description>정의 1 위상공간 $X$ 에 대해 $\mathscr{A} \subset \mathscr{P} (X)$ 라고 하자. 모든 유한 부분집합 $A \subset \mathscr{A}$ 에 대해 $\displaystyle \bigcap A \ne \emptyset$ 이면 $A$ 가 유한 교집합 성질finite Intersection Property을 가진다고</description></item><item><title>귀무가설과 대립가설을 정하는 방법</title><link>https://freshrimpsushi.github.io/ko/posts/500/</link><pubDate>Thu, 05 Apr 2018 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/500/</guid><description>설명 가설검정: 귀무가설 $H_{0}$ vs 대립가설 $H_{1}$ 2018년 4월 기준으로 일부 교과서나 위키백과에서는 귀무가설을 &amp;lsquo;통계학에서 처음부터 버릴것을 예상하</description></item><item><title>르장드르의 배 공식 유도</title><link>https://freshrimpsushi.github.io/ko/posts/499/</link><pubDate>Wed, 04 Apr 2018 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/499/</guid><description>공식 $$ \Gamma (2r) = {{2^{ 2r - 1} } \over { \sqrt{ \pi } } } \Gamma \left( r \right) \Gamma \left( {{1} \over {2}} + r \right) $$ 설명 쪼개지는 모양이 그렇게 예쁘지는 않지만 인수를 작게 나눌 수 있다는 것은 분명 유용한 사실</description></item><item><title>측도론으로 정의되는 확률</title><link>https://freshrimpsushi.github.io/ko/posts/498/</link><pubDate>Tue, 03 Apr 2018 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/498/</guid><description>정의 1 $\mathcal{F}$ 가 집합 $\Omega$ 의 시그마 필드라고 하자. 가측 집합 $E \in \mathcal{F}$ 를 사건event라고 한다. $\mathcal{F}$ 상의 측도 $P : \mathcal{F} \to \mathbb{R}$ 가 $P(\Omega) = 1$ 를 만족하면 $P$ 를 확률probabil</description></item><item><title>R 에서 범주형 데이터의 숫자를 숫자형 데이터로 바꾸기</title><link>https://freshrimpsushi.github.io/ko/posts/497/</link><pubDate>Mon, 02 Apr 2018 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/497/</guid><description>개요 숫자임에도 불구하고 범주형 자료로 읽혀서 연속형 데이터로 바꾸고 싶은데 생각대로 되지 않는 이들을 위한 팁이다. 이 포스트는 지면 대부분을 그 원리를 설명하기 위</description></item><item><title>R 에서 외부 데이터 불러오기</title><link>https://freshrimpsushi.github.io/ko/posts/496/</link><pubDate>Sun, 01 Apr 2018 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/496/</guid><description>개요 R 은 기본적으로 통계학을 위해 태어난 언어기 때문에 데이터의 입력 역시 편리하게 되어있다. read.table(file, header = FALSE, sep = &amp;#34;&amp;#34;, na.strings = &amp;#34;NA&amp;#34;, fileEncoding = &amp;#34;&amp;#34;) 함수 소개 read.table()</description></item><item><title>보렐 집합</title><link>https://freshrimpsushi.github.io/ko/posts/495/</link><pubDate>Fri, 30 Mar 2018 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/495/</guid><description>정의 1 $\mathcal{F}$ 를 유클리드 공간 $\mathbb{R}$ 의 시그마 필드라고 하자. $\displaystyle \mathcal{B} : = \bigcap \left\{ \mathcal{F} : \mathcal{I} \subset \mathcal{F} \right\}$ 을 모든 구간의 집합 $\mathcal{I}$ 에 의해 생성되었다고 한다. $B \in \mathcal{B}$ 을 보렐 집합borel s</description></item><item><title>르벡 측도</title><link>https://freshrimpsushi.github.io/ko/posts/494/</link><pubDate>Thu, 29 Mar 2018 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/494/</guid><description>정의 1 $E \in \mathcal{M}$ 에 대해 함수 $m : \mathcal{M} \to [0,\infty]$ 을 $m(E) := m^{ \ast } (E)$ 과 같이 정의하자. $m$ 을 (르벡) 측도라 한다. $\mathcal{M}$ 는 $X = \mathbb{R}$ 의 가측 집합들의 집합인 시그마 대수다. $m^{\ast}$ 는 외측도</description></item><item><title>중국인의 나머지 정리 증명</title><link>https://freshrimpsushi.github.io/ko/posts/493/</link><pubDate>Wed, 28 Mar 2018 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/493/</guid><description>정리 $\gcd(n,m) = 1$ 면 $\begin{cases} x \equiv b \pmod{n} \\ x \equiv c \pmod{m} \end{cases}$ 는 $1 \le x \le nm$ 에서 단 하나의 해를 갖는다. 설명 중국에서 서기 3세기에서 5세기에 쓰여졌다고 전해지는 한 수학서에는 이런 문</description></item><item><title>오일러의 토션트 합 공식 유도</title><link>https://freshrimpsushi.github.io/ko/posts/492/</link><pubDate>Tue, 27 Mar 2018 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/492/</guid><description>공식 $n$ 의 약수를 $d_{1}, d_{2} , \cdots , d_{r}$ 이라고 하면 $$ n = \sum_{ i = 1 }^{r} \phi (d_{i}) = \phi (d_{1}) + \phi (d_{2}) + \cdots + \phi (d_{r}) $$ 설명 토션트 함수는 정의할 때부터 다소 부자연스러운 개념이라고 느낄 수</description></item><item><title>오일러의 토션트 정리 증명</title><link>https://freshrimpsushi.github.io/ko/posts/491/</link><pubDate>Mon, 26 Mar 2018 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/491/</guid><description>정리 1 $$ \gcd(a,m) = 1 \implies a^{ \phi (m) } \equiv 1 \pmod{m} $$ 설명 보자마자 페르마의 소정리를 일반화한 정리임을 알 수 있고, 실제로 증명법도 사실상 거의 똑같다. 증명 토션트 함수의 정의에</description></item><item><title>시그마 대수와 가측 공간</title><link>https://freshrimpsushi.github.io/ko/posts/490/</link><pubDate>Sun, 25 Mar 2018 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/490/</guid><description>정의 집합 $X \ne \emptyset$ 에 대해 아래의 조건들을 만족하는 $\mathcal{E} \subset \mathscr{P} (X)$ 를 $X$ 상의 시그마 대수sigma Algebra 혹은 시그마 필드라 한다. 집합 $X$ 와 시그마 필드 $\mathcal{E}$ 의 순서쌍 $(X , \mathcal{E})$ 를 가</description></item><item><title>위상공간에서 컴팩트, 프리컴팩트란?</title><link>https://freshrimpsushi.github.io/ko/posts/489/</link><pubDate>Sat, 24 Mar 2018 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/489/</guid><description>정의 1 위상공간 $\left( X, \mathscr{T} \right)$ 에 대해 $A \subset X$ 라고 하자. $X$ 의 열린 집합으로 이루어진 집합 $\mathscr{O} \subset \mathscr{T}$ 가 다음을 만족하면 $\mathscr{O}$ 를 $A$ 의 오픈 커버링open covering라 한</description></item><item><title>위상수학자의 사인 곡선과 빗 공간</title><link>https://freshrimpsushi.github.io/ko/posts/488/</link><pubDate>Fri, 23 Mar 2018 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/488/</guid><description>정의 1 다음과 같이 정의된 $S$ 를 위상수학자의 사인 곡선topologist&amp;rsquo;s Sine curve이라 한다. $$ S : = \left\{ (0,y) \ | \ y \in [-1,1] \right\} \cup \left\{ \left. \left( x,</description></item><item><title>국소연결과 국소경로연결</title><link>https://freshrimpsushi.github.io/ko/posts/486/</link><pubDate>Thu, 22 Mar 2018 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/486/</guid><description>정의 $X$ 를 위상공간이라고 하자. $x \in X$ 를 포함하는 모든 $U$ 에 대해 $x \in C \subset U$ 를 만족하는 열린 연결 집합 $C$ 가 존재하면 $X$ 가 $x$ 에서 국소연결이라 한다. 모든 $x \in X$ 에</description></item><item><title>경로연결 성분</title><link>https://freshrimpsushi.github.io/ko/posts/485/</link><pubDate>Wed, 21 Mar 2018 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/485/</guid><description>정의 1 위상공간 $X$ 의 경로연결 부분공간들 중 자기 자신만을 연결 초집합Superset으로 갖는 경로연결 집합을 $X$ 의 경로연결 성분path Connected Componen</description></item><item><title>접착 보조정리 증명</title><link>https://freshrimpsushi.github.io/ko/posts/484/</link><pubDate>Tue, 20 Mar 2018 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/484/</guid><description>정리 위상공간 $X,Y$ 에 대해 두 닫힌 집합 $A,B \subset X$ 이 $A \cup B = X$ 를 만족하고 두 연속함수 $f : A \to Y$ 와 $g : B \to Y$ 가 모든 $x \in A \cap B$ 에 대해 $f(x) = g(x)$ 라고 하자. 그러면 다음과</description></item><item><title>외측도</title><link>https://freshrimpsushi.github.io/ko/posts/480/</link><pubDate>Mon, 19 Mar 2018 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/480/</guid><description>정의 1 $E \subset \mathbb{R}$, $\left\{ I_{n} \in \mathcal{I} \ | \ n \in \mathbb{N} \right\} $, $\left\{ E_{n} \in \mathscr{P} ( \mathbb{R} ) \ | \ n \in \mathbb{N} \right\}$ 에 대해 $$ Z_{E} : = \left\{ \left. \sum_{n=1}^{\infty} l (I_{n}) \ \right| \ E \subset \bigcup_{n=1}^{\infty} I_{n} \right\} $$ 라고 할 때 함수 $m^{ \ast } (E) : = \inf Z_{E}$ 를 외측</description></item><item><title>위상수학에서 경로연결성이란</title><link>https://freshrimpsushi.github.io/ko/posts/478/</link><pubDate>Sun, 18 Mar 2018 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/478/</guid><description>정의 1 $X$ 를 위상공간이라고 하고 $C \subset \mathbb{R}^{n}$ 이라고 하자. 연속함수 $p : [0,1] \to X$ 를 시점initial point $p(0)$ 에서 종점terminal point $p(1)$ 까지의 경로path라 한다</description></item><item><title>위상수학에서 고정점 성질이란?</title><link>https://freshrimpsushi.github.io/ko/posts/477/</link><pubDate>Sat, 17 Mar 2018 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/477/</guid><description>정의 함수 $f : X \to X$ 에 대해 $f(x_{0}) = x_{0}$ 를 만족하는 $x_{0}$ 을 $f$ 의 고정점fixed point이라 한다. 모든 연속함수 $f$ 가 고정점을 가지면 $X$ 가 고정점 성질fixed point</description></item><item><title>중간값 정리 증명</title><link>https://freshrimpsushi.github.io/ko/posts/476/</link><pubDate>Fri, 16 Mar 2018 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/476/</guid><description>정의 1 $f : [a,b] \to \mathbb{R}$ 가 연속이면 $f(a)$ 와 $f(b)$ 사이의 $y_{0}$ 에 대해 $y_{0} = f(c)$ 를 만족하는 $c \in (a,b)$ 가 존재한다. 설명 대우 명제를 이용하면 $\mathbb{R}^2$ 상에서 특정한 조건을 만족한 두 도형을 연결</description></item><item><title>영집합</title><link>https://freshrimpsushi.github.io/ko/posts/475/</link><pubDate>Thu, 15 Mar 2018 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/475/</guid><description>정의 1 실수의 구간들의 집합 $\mathcal{I}$ 에 대해 함수 $l : \mathcal{I} \to [ 0 , \infty )$ 을 $l( I ) := \sup{I} - \inf{I}$ 와 같이 정의하고 길이length라 하자. 임의의 $\varepsilon &amp;gt; 0$ 에 대해 $$ A \subset \bigcup_{n = 1}^{\infty} I_{n}</description></item><item><title>연결 성분과 완전 분리 공간</title><link>https://freshrimpsushi.github.io/ko/posts/474/</link><pubDate>Wed, 14 Mar 2018 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/474/</guid><description>정의 위상공간 $X$ 의 연결 부분공간들 중 자기 자신만을 연결 초집합superset으로 갖는 연결 집합을 $X$ 의 연결 성분connected Component이라</description></item><item><title>연결 공간의 부분 공간의 성질들</title><link>https://freshrimpsushi.github.io/ko/posts/473/</link><pubDate>Tue, 13 Mar 2018 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/473/</guid><description>정리 위상공간 $X$ 에 대해 $Y \subset X$ 라고 하자. [1]: $Y$ 가 연결 공간이면 $\overline{Y}$ 도 연결 공간이다. [2]: $Y$ 가 비연결 공간인 것과 $$ U \cap Y \ne \emptyset \\ V \cap Y \ne \emptyset \\ U \cap V \cap Y = \emptyset \\ Y \subset</description></item><item><title>추상대수학에서의 잉여류와 정규부분군</title><link>https://freshrimpsushi.github.io/ko/posts/469/</link><pubDate>Fri, 09 Mar 2018 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/469/</guid><description>정의 1 군 $G$ 과 그 부분군 $H$ 에 대해 $aH = \left\{ ah \ | \ h \in H \right\}$ 를 좌잉여류left Coset, $Ha = \left\{ ha \ | \ h \in H \right\}$ 를 우잉여류right Coset이라 한다. 여기서 $a</description></item><item><title>추상대수학에서의 교대군</title><link>https://freshrimpsushi.github.io/ko/posts/468/</link><pubDate>Thu, 08 Mar 2018 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/468/</guid><description>정의 1 대칭군 $S_{n}$ 의 짝순열들로 이루어진 군을 교대군alternating group이라 하고 $A_{n}$ 으로 쓴다. 정리 $n \ge 2$ 에 대해 $$ \left| A_{n} \right| = {{\left| S_{n} \right|} \over {2}} = {{ n! }</description></item><item><title>짝이면서 홀인 순열은 존재하지 않음을 증명</title><link>https://freshrimpsushi.github.io/ko/posts/467/</link><pubDate>Wed, 07 Mar 2018 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/467/</guid><description>정의 유한 대칭군의 순열이 짝수 만큼의 전위의 곱으로 나타날 수 있으면 짝even이라 하고 홀수 만큼의 전위의 곱으로 나타날 수 있으면 홀odd라 한다. 순열의 부호 $\sgn</description></item><item><title>전사 연속함수는 연결성을 보존한다</title><link>https://freshrimpsushi.github.io/ko/posts/462/</link><pubDate>Tue, 06 Mar 2018 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/462/</guid><description>정리 연결 공간 $X$ 에 대해 $f : X \to Y$ 가 전사 연속함수면 $Y$ 는 연결 공간이다. 설명 연결과 연속처럼 비슷한 말이 섞여있어서 조금 헷갈릴 수도 있다. 대개는 영어로 외우면</description></item><item><title>연결 공간의 여러가지 동치조건</title><link>https://freshrimpsushi.github.io/ko/posts/461/</link><pubDate>Mon, 05 Mar 2018 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/461/</guid><description>정의 1 위상공간 $X$ 에 대해 부분집합 $A \subset X$ 가 $$ A \ne \emptyset \\ A \ne X $$ 면 $A$ 를 $X$ 의 진부분집합proper Subset이라 한다. 두 진부분집합 $A,B \subset X$ 에 대해 $$ \overline{A} \cap</description></item><item><title>추상대수학에서의 궤도, 순환, 전위</title><link>https://freshrimpsushi.github.io/ko/posts/460/</link><pubDate>Sun, 04 Mar 2018 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/460/</guid><description>정의 1 $\sigma$ 를 군 $G$ 에 대한 순열이라고 하면 $a, b \in G$ 에 대한 동치관계 $\sim$ 는 $b=\sigma^n (a)$ 를 만족하는 정수 $n \in \mathbb{Z}$ 이 존재할 때 $a \sim b$ 로 정의된다. $\sim$ 의 동치류들을 $\sigma$ 의 궤도orb</description></item><item><title>위상수학에서 연결성이란</title><link>https://freshrimpsushi.github.io/ko/posts/457/</link><pubDate>Sat, 03 Mar 2018 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/457/</guid><description>정의 1 위상공간 $X$ 에서 $A \cap B = \emptyset$ 과 $A \cup B = X$ 을 만족하는 열린 집합 $A \ne \emptyset$, $B \ne \emptyset$ 이 존재하면 $X$ 를 비연결disconnected 공간이라고 한다. 비연결공</description></item><item><title>하우스도르프 공간에서는 시퀀스의 극한이 유일하다</title><link>https://freshrimpsushi.github.io/ko/posts/456/</link><pubDate>Fri, 02 Mar 2018 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/456/</guid><description>정리 $T_{2}$-공간 $X$ 상의 수열 $\left\{ x_{n} \right\}$ 은 둘 이상의 점으로 수렴하지 않는다. 설명 극한의 유일성에 대해서 그 중요함을 굳이 역설할 필요가 있을까 싶다. 이런 성</description></item><item><title>T1-공간인 것과 모든 유한부분집합이 닫혀있는 것은 동치다</title><link>https://freshrimpsushi.github.io/ko/posts/455/</link><pubDate>Wed, 28 Feb 2018 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/455/</guid><description>정리 $X$ 가 $T_{1}$-공간인 것과 필요충분조건은 $X$ 의 모든 홑원소집합 $\left\{ x \right\}$ 가 $X$ 에서 닫힌 집합인 것이다. 증명 $(\Rightarrow)$ $T_{1}$-공간 $X$ 에 대해 $x \in X$, $x'</description></item><item><title>케일리의 정리 증명</title><link>https://freshrimpsushi.github.io/ko/posts/459/</link><pubDate>Wed, 28 Feb 2018 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/459/</guid><description>정리 1 모든 군은 대칭군의 어떤 부분군과 동형이다. 설명 짧고도 굵직한 이 정리는 대칭군을 연구하면 모든 군을 파악할 수 있다는 메세지를 담고 있다. 증명 증명은 언뜻 지</description></item><item><title>베타함수의 삼각함수 표현</title><link>https://freshrimpsushi.github.io/ko/posts/458/</link><pubDate>Tue, 27 Feb 2018 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/458/</guid><description>정리 $$ B(p,q) = 2 \int_{0}^{{\pi} \over {2}} \left( \sin \theta \right) ^{2p-1} \left( \cos \theta \right) ^{2q-1} d \theta $$ 설명 그것이 어떤 종류의 수학이라고 하더라도 어떤 함수를 다른 방식으로 표현할 수 있다는 건 좋은 일이다. 증명 $\displaystyle B(p,q)</description></item><item><title>위상수학에서의 분리성질</title><link>https://freshrimpsushi.github.io/ko/posts/454/</link><pubDate>Tue, 27 Feb 2018 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/454/</guid><description>정의 1 $X$ 를 위상공간이라고 하자. $a,b \in X$ 에 대해 $a \ne b$ 고 $U, V \subset X$ 는 $X$ 에서 열린 집합이다. $T_{0}$: 임의의 $a$ 와 $b$ 중 하나만 포함하는 $U$ 가 존재하면, $X$ 를 콜모고로프k</description></item><item><title>클라인 사원군</title><link>https://freshrimpsushi.github.io/ko/posts/453/</link><pubDate>Mon, 26 Feb 2018 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/453/</guid><description>정의 1 $V = \left\{ e, a, b, c \right\}$ 과 이항연산 $\cdot$ 에 대해, $\left&amp;lt; V , \ \cdot \ \right&amp;gt;$ 을 클라인 사원군klein 4-group이라고 한다. 설명 보다시피 원소의 갯수가 항등원을 포</description></item><item><title>토션트 함수의 곱셈적 성질 증명</title><link>https://freshrimpsushi.github.io/ko/posts/452/</link><pubDate>Mon, 26 Feb 2018 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/452/</guid><description>정리 1 $$ \gcd (n , m) =1 \implies \phi ( n m ) = \phi (n) \phi (m) $$ 설명 토션트 함수에서 유도되는 여러가지 중요한 결과를 얻기 위해선 반드시 필요한 성질이다. 분명히 $\gcd (n , m) =1$ 라는</description></item><item><title>이항계수의 일반화 베타함수</title><link>https://freshrimpsushi.github.io/ko/posts/450/</link><pubDate>Sun, 25 Feb 2018 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/450/</guid><description>정리: 베타함수로 표현되는 이항계수 $0 \le k\le n$ 을 만족하는 두 자연수 $k,n$ 에 대해서 아래의 식이 성립한다. $$ \binom{n}{k}={}_{n}C_{k}=C(n,k)=\frac{1}{(n+1)B(n-k+1,k+1)} $$ 두 자연수 $m,n$ 에 대해서 아래의 식이 성립한다. $$ B(m,n)=\left[ \frac{mn}{m+n} \begin{pmatrix}</description></item><item><title>일양 분포의 평균과 분산</title><link>https://freshrimpsushi.github.io/ko/posts/444/</link><pubDate>Sun, 25 Feb 2018 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/444/</guid><description>공식 $X \sim U[a,b]$ 면 $$ E(X) = {{ a+b } \over { 2 }} \\ \Var(X) = {{ (b-a)^{2} } \over { 12 }} $$ 유도 전략: 일양 분포의 정의에서 직접 연역한다. 일양 분포의 정의: $[a,b] \subset \mathbb{R}$ 에 대해 다음과 같은 확률 밀</description></item><item><title>슈발츠-크리스토플 변환</title><link>https://freshrimpsushi.github.io/ko/posts/449/</link><pubDate>Sat, 24 Feb 2018 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/449/</guid><description>정리 1 복소평면 상에서 $n$ 개의 각을 가진 꺾인 선을 $\mathscr{P}$ 라고 하고 그 각들을 $w_{r}$, 그 내각의 크기를 $\psi_{r}$ 라 하자. 그러면 $K, C, z_{0} \in \mathbb{C}$ 와 $x_{r} \in \mathbb{R}$ 에 대해 $f(x_{r}) = w_{r}$ 를 만족시키는 변환 $$</description></item><item><title>일양 분포</title><link>https://freshrimpsushi.github.io/ko/posts/443/</link><pubDate>Sat, 24 Feb 2018 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/443/</guid><description>정의 1 연속형 $[a,b] \subset \mathbb{R}$ 에 대해 다음과 같은 확률 밀도 함수를 가지는 연속 확률 분포 $U(a,b)$ 를 일양 분포uniform distribution라 한다. $$ f(x) = {{ 1 } \over {</description></item><item><title>쥬코프스키 변환</title><link>https://freshrimpsushi.github.io/ko/posts/448/</link><pubDate>Fri, 23 Feb 2018 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/448/</guid><description>정의 1 $\displaystyle w = f(z) = a z + {{b} \over {z}}$ 라고 하자. $a=b$ 면 $f$ 를 쥬코프스키 변환joukowski transform이라고 하고, 중심이 $0$ 이 아닌 원을 비행기 날개의 단</description></item><item><title>등각사상으로써의 삼각함수</title><link>https://freshrimpsushi.github.io/ko/posts/447/</link><pubDate>Thu, 22 Feb 2018 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/447/</guid><description>정리 1 등각사상 $w = f(z) = \sin z$은 수직선 $y=k$ 를 타원으로, 수평선 $x = k$ 를 쌍곡선으로 대응시킨다. 증명 $$ z = x + iy \\ w = u + i v $$ 라고 하면 $$ u = \sin x \cosh y</description></item><item><title>등각사상으로써의 지수함수</title><link>https://freshrimpsushi.github.io/ko/posts/446/</link><pubDate>Wed, 21 Feb 2018 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/446/</guid><description>정리 1 등각사상 $w = f(z) = e^{z} = e^{x} e^{i y}$ 은 직사각형을 부채꼴 혹은 고리로 대응시킨다. 설명 $f(z) = e^{z}$ 는 분명 등각사상이지만 단사는 아니므로 역사상을 생각할 땐 여러가지</description></item><item><title>위상수학에서 계승적 성질이란?</title><link>https://freshrimpsushi.github.io/ko/posts/451/</link><pubDate>Wed, 21 Feb 2018 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/451/</guid><description>빌드업: 부분공간 위상공간 $(X, \mathscr{T})$ 에 대해 $Y \subset X$ 라고 하자. $\mathscr{T}&amp;rsquo; := \left\{ U \cap Y \ | \ U \in \mathscr{T} \right\}$ 라고 하면 $(Y , \mathscr{T}&amp;rsquo; )$ 는 $X$ 의 부분공간subspace이 되고 $\mathscr{T} ' $ 를 $\mathscr{T}$ 에</description></item><item><title>위상적 성질</title><link>https://freshrimpsushi.github.io/ko/posts/440/</link><pubDate>Tue, 20 Feb 2018 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/440/</guid><description>정의 1 위상동형인 두 공간 $X,Y$ 에 대해 $X$ 의 성질 $P$ 를 $Y$ 도 갖고 있으면 $P$ 를 위상적 성질topological Property이라 한다. 위상적 성질의 예시로는 아</description></item><item><title>토션트 함수</title><link>https://freshrimpsushi.github.io/ko/posts/445/</link><pubDate>Tue, 20 Feb 2018 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/445/</guid><description>같이보기 해석적 정수론에서의 토션트 함수 정의 1 다음과 같이 정의된 $\phi$ 를 오일러 토션트 함수라 한다. $$ \phi ( m ) := \left| \left\{ a \ | \ 1 \le a \le m \land \gcd (a,m) = 1 \right\} \right| = m \prod_{p</description></item><item><title>추상대수학에서의 여러 사상들</title><link>https://freshrimpsushi.github.io/ko/posts/439/</link><pubDate>Mon, 19 Feb 2018 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/439/</guid><description>정의 군 $\left&amp;lt; G , \ast\ \right&amp;gt; , \left&amp;lt; G' , *' \right&amp;gt;$ 에 대해 $\phi : G \to G'$ 이라고 하자. $\forall x ,y \in G $, $\phi (x \ast\ y) = \phi (x ) *' \phi ( y)$ 이면 $\phi$ 를 준동형사상homomorphism이라 한</description></item><item><title>포물선을 반평면으로 대응시키는 등각사상</title><link>https://freshrimpsushi.github.io/ko/posts/437/</link><pubDate>Mon, 19 Feb 2018 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/437/</guid><description>정리 1 등각사상 $\displaystyle w = f(z) = z^{1/2}$ 은 포물선을 반평면으로 대응시킨다. 설명 $\mathbb{R}^2$ 에서 배운 것을 생각해보면야 당연하긴하지만 복소평면에서도 성립하는지는 체크가 필요하</description></item><item><title>부채꼴을 원으로 대응시키는 등각사상</title><link>https://freshrimpsushi.github.io/ko/posts/436/</link><pubDate>Wed, 14 Feb 2018 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/436/</guid><description>정리 1 등각사상 $\displaystyle w = f(z) = z^{n}$ 은 부채꼴을 반원으로 대응시킨다. 설명 부채꼴의 반지름이 무한대라고 생각해보면 $f$ 는 각을 평각으로 보내고 그 내부를 반평면으로 대응</description></item><item><title>위상공간에서 위상동형이란</title><link>https://freshrimpsushi.github.io/ko/posts/438/</link><pubDate>Wed, 14 Feb 2018 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/438/</guid><description>정의 1 두 위상공간 $X,Y$ 에 대해 전단사 $f : X \to Y$ 가 존재해서 $f$ 와 그 역함수 $f^{-1}$ 모두 연속함수면 $f$ 를 위상동형사상homeomorphism라 부르고 두 위상공간이</description></item><item><title>반원을 사분면으로 대응시키는 등각사상</title><link>https://freshrimpsushi.github.io/ko/posts/434/</link><pubDate>Tue, 13 Feb 2018 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/434/</guid><description>정리 1 등각사상 $\displaystyle w = f(z) = {{z - a} \over {z + a}}$ 는 반원을 사분면으로 대응시킨다. 설명 $\displaystyle w = {{z - a} \over {z + a}}$ 는 별다른 이름은 없지만 매우 중요하고 빈번하게 쓰이는 함</description></item><item><title>열린 함수와 닫힌 함수</title><link>https://freshrimpsushi.github.io/ko/posts/435/</link><pubDate>Tue, 13 Feb 2018 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/435/</guid><description>정의 위상공간 $X,Y$ 에 대해 $f : X \to Y$ 라고 하자. 모든 열린 집합 $O \subset X$ 에 대해, $f (O)$ 가 $Y$ 에서 열린 집합이면 $f$ 를 열린 함수라 한다. 모든 닫힌 집합 $C \subset X$ 에 대해, $f (C)$</description></item><item><title>윌슨의 정리 증명</title><link>https://freshrimpsushi.github.io/ko/posts/122/</link><pubDate>Tue, 13 Feb 2018 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/122/</guid><description>정리 1 2보다 큰 소수 $p$ 에 대해, $(p-1)! \equiv -1 \pmod{p}$ 설명 페르마의 소정리만큼은 아니더라도, 윌슨의 정리 역시 여기저기서 유용하게 쓰인다. 생긴 모양새부터가 연속되는 수들</description></item><item><title>복소해석학에서의 역점</title><link>https://freshrimpsushi.github.io/ko/posts/433/</link><pubDate>Mon, 12 Feb 2018 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/433/</guid><description>정의 1 직선 $L: 2px + 2qy + c = 0$ 과 원 $\mathscr{C}: |z - A | = r$ 의 점이 아닌 $P: z = x + iy$ 를 생각하자. 이에 대한 역점inverse point은 다음과 같이 정의된다. $\displaystyle {{y</description></item><item><title>위상수학에서 연속이란</title><link>https://freshrimpsushi.github.io/ko/posts/432/</link><pubDate>Mon, 12 Feb 2018 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/432/</guid><description>정의 한국어 위상공간 $(X, \mathscr{T}_{X} )$ 와 $(Y, \mathscr{T}_{Y} )$ 에 대해, $f: X \to Y$ 라고 하자. $f(a)$ 를 포함하는 모든 $V \in \mathscr{T}_{Y}$ 에 대해 $f(U) \subset V$ 를 만족하면서 $a$ 를 포함하는 $U \in \mathscr{T}_{X}$ 가 존재하면 $f$ 를 $a$ 에</description></item><item><title>페르마의 소정리 증명</title><link>https://freshrimpsushi.github.io/ko/posts/121/</link><pubDate>Mon, 12 Feb 2018 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/121/</guid><description>정리 1 소수 $p$ 와 서로소인 정수 $a$ 에 대해, $a^{p-1} \equiv 1 \pmod{p}$ 설명 페르마의 소정리는 단순하지만 아주 많은 곳에 쓰이는 정리 중 하나다. 오일러에 의해 일반화된 정리도 있지만 페</description></item><item><title>원시 피타고라스 수끼리는 서로소다</title><link>https://freshrimpsushi.github.io/ko/posts/429/</link><pubDate>Sun, 11 Feb 2018 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/429/</guid><description>정리 $a^2 + b^2 = c^2$ 를 만족하는 세 자연수 $a,b,c$ 에 대해 $\gcd (a,b,c) = 1$ 면 $$ \gcd (a,b) = 1 \\ \gcd (b,c) = 1 \\ \gcd (c,a) = 1 $$ 설명 언뜻 피타고라스 수든 뭐든 당연해보이지만 공약수라는 걸 잘 생각</description></item><item><title>추상대수학에서의 정이면체군</title><link>https://freshrimpsushi.github.io/ko/posts/431/</link><pubDate>Sun, 11 Feb 2018 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/431/</guid><description>정의 1 대칭군의 부분군 $D_{n} \leqslant S_{n}$ 을 $n$각형에 대해 회전, 반전하는 순열만을 가지는 군으로 정의하고 정이면체군dihedral group이라 부른다. 설명 도</description></item><item><title>원시 피타고라스 트리플은 두 홀수만으로 표현할 수 있다</title><link>https://freshrimpsushi.github.io/ko/posts/428/</link><pubDate>Sat, 10 Feb 2018 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/428/</guid><description>정리 1 $a^2 + b^2 = c^2$ 를 만족하는 세 자연수 $a,b,c$ 에 대해 $$ \begin{align*} a =&amp;amp; st \\ b =&amp;amp; {{s^2 - t^2 } \over {2}} \\ c =&amp;amp; {{s^2 + t^2 } \over {2}} \end{align*} $$ 를 만족하는 서로소인 두 홀수 $s&amp;gt;t$ 가 존재한다. 설명 이 정리</description></item><item><title>위상수학에서 기저의 동치 조건</title><link>https://freshrimpsushi.github.io/ko/posts/430/</link><pubDate>Sat, 10 Feb 2018 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/430/</guid><description>정의 1 집합 $X$ 에서 $\mathscr{B}$ 가 위상 $\mathscr{T}$ 에 대한 기저, $\mathscr{B} ' $ 가 위상 $\mathscr{T} ' $ 에 대한 기저라고 할 때, $\mathscr{T} = \mathscr{T} ' $ 이면 $\mathscr{B}$ 와 $\mathscr{B} ' $ 를 서로 동치equivalent라 한다. 정</description></item><item><title>복소해석학에서의 교차비</title><link>https://freshrimpsushi.github.io/ko/posts/426/</link><pubDate>Fri, 09 Feb 2018 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/426/</guid><description>정의 1 확장복소평면상에서 네 개의 서로 다른 점 $ z_{1} , z_{2} , z_{3} , z_{4} \in \overline{ \mathbb{C} }$ 에 대해 다음을 교차비cross Ratio라고 정의한다. $$ (z_{1} , z_{2} , z_{3} , z_{4} ) = {{( z_{1}</description></item><item><title>위상수학에서의 부분기저</title><link>https://freshrimpsushi.github.io/ko/posts/427/</link><pubDate>Fri, 09 Feb 2018 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/427/</guid><description>정의 1 위상공간 $\left( X , \mathscr{T} \right)$ 에 대해 $\mathscr{S} \subset \mathscr{T}$ 이라 하자. $\displaystyle \mathscr{B} = \left\{ \left. B = \bigcap_{ i = 1}^{n} S_{i} \ \right| \ S_{i} \in \mathscr{S} \right\}$ 가 $\mathscr{T}$ 의 기저가 될 때, $\mathscr{S}$ 를 $\mathscr{T}$ 의 부분기저subbasis라 한다</description></item><item><title>피타고리스 수 중 하나는 반드시 3의 배수여야한다</title><link>https://freshrimpsushi.github.io/ko/posts/96/</link><pubDate>Thu, 08 Feb 2018 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/96/</guid><description>정의 1 자연수 $a,b,c$ 가 $a^2 + b^2 = c^2$ 를 만족할 때, $a$ 혹은 $b$ 는 $3$ 의 배수다. 설명 피타고라스 수 중 하나는 반드시 짝수일 뿐만이 아니라 적어도 하나는 $3$ 의 배수라는 이야기를</description></item><item><title>피타고라스 트리플</title><link>https://freshrimpsushi.github.io/ko/posts/415/</link><pubDate>Wed, 07 Feb 2018 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/415/</guid><description>정의 1 $a^2 + b^2 = c^2$ 를 만족하는 세 자연수의 순서쌍 $(a,b,c)$ 을 피타고라스 트리플이라 한다. 만약 세 자연수가 공약수를 가지지 않으면 원시 피타고라스 트리플primiti</description></item><item><title>피타고리스 수 중 하나는 반드시 짝수여야한다</title><link>https://freshrimpsushi.github.io/ko/posts/416/</link><pubDate>Wed, 07 Feb 2018 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/416/</guid><description>정리 1 자연수 $a,b,c$ 가 $a^2 + b^2 = c^2$ 를 만족할 때, $a$ 혹은 $b$ 는 짝수다. 설명 흥미롭게도 피타고라스 수 중 하나는 반드시 짝수여야한다. 증명 짝수의 제곱은 짝수고 홀수의 제</description></item><item><title>확장복소평면에서 원은 쌍선형변환에 대해 불변이다</title><link>https://freshrimpsushi.github.io/ko/posts/423/</link><pubDate>Tue, 06 Feb 2018 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/423/</guid><description>정리 1 모든 쌍선형변환은 $\overline { \mathbb{C} }$ 의 원을 $\overline { \mathbb{C} }$ 의 원으로 대응시킨다. 증명 일반적인 원의 방정식을 $$ a ( x^2 + y^2 ) + 2p x + 2q y + c = 0 $$ 로 나타내보자. 그</description></item><item><title>산술의 기본정리 증명</title><link>https://freshrimpsushi.github.io/ko/posts/419/</link><pubDate>Mon, 05 Feb 2018 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/419/</guid><description>정리 1 자연수 $n &amp;gt;2$ 은 유일한 소인수분해 $n = p_{1} p_{2} \cdots p_{r}$ 를 가진다. 이때 소수 $p_{1} , p_{2} , \cdots , p_{r}$ 의 순서는 무시한다. 설명 초등학교부터 자연스럽게 써오던 성질이니만큼</description></item><item><title>오일러의 증명: 소수는 무한히 존재한다</title><link>https://freshrimpsushi.github.io/ko/posts/420/</link><pubDate>Mon, 05 Feb 2018 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/420/</guid><description>정리 소수는 무한히 많이 존재한다. 증명 전략: 어떤 방법을 사용하든 같은 결과에만 도달한다면야 상관은 없지만, 정말 특이하게 풀어냈다면 그 자체로 공부할 가치가 있</description></item><item><title>소수 분해 원리</title><link>https://freshrimpsushi.github.io/ko/posts/418/</link><pubDate>Sun, 04 Feb 2018 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/418/</guid><description>정리 1 소수 $p$ 가 자연수 $ n : = d_{1} d_{2} \cdots d_{r}$ 에 대해 $p \mid n$ 면 $p$ 는 $d_{1} , d_{2} , \cdots , d_{r}$ 중 적어도 하나를 나누어야한다. 설명 $p \mid n$ 은 $n$ 이 $p$ 의 배수, 즉 $p$ 가 $n$ 을 나눈다는</description></item><item><title>쌍선형변환</title><link>https://freshrimpsushi.github.io/ko/posts/422/</link><pubDate>Sun, 04 Feb 2018 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/422/</guid><description>정의 1 정의역에서 등각사상인 $f$ 를 다음과 같이 부른다. 이동translation $f(z) = z + \alpha$ 확대magnification: $f(z) = \rho z$ 회전rotati</description></item><item><title>추상대수학에서의 대칭군</title><link>https://freshrimpsushi.github.io/ko/posts/421/</link><pubDate>Sun, 04 Feb 2018 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/421/</guid><description>정의 1 집합 $A$ 에 대해 전단사 $\phi : A \to A$ 를 순열permutation이라 한다. $S_{A}$ 는 $A$ 의 모든 순열을 모아놓은 집합으로써 함수의 합성 $\circ$ 에 대해 군 $\left&amp;lt; S_{A} , \circ \right&amp;gt;$ 를</description></item><item><title>확장된 유클리드 정리 증명</title><link>https://freshrimpsushi.github.io/ko/posts/417/</link><pubDate>Sun, 04 Feb 2018 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/417/</guid><description>정리 1 두 정수 $a,b$ 에 대해 $ax + by = \gcd (a,b)$ 는 반드시 정수해를 가진다. 설명 이 정리는 $\gcd (a,b)$ 가 $a$ 와 $b$ 의 일차linear식으로 나타날 수 있다는 의미에서 선형 합동 정리l</description></item><item><title>거리공간의 제1가산성과 제2가산성</title><link>https://freshrimpsushi.github.io/ko/posts/414/</link><pubDate>Sat, 03 Feb 2018 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/414/</guid><description>정리 [1]: 모든 거리공간은 제1가산이다. [2]: 모든 가분 거리공간은 제2가산이다. 설명 위상수학에서 온갖 추상적인 공간들을 보고나면 거리공간이 얼마나 편리하고 좋은</description></item><item><title>위상수학에서의 기저와 국소기저</title><link>https://freshrimpsushi.github.io/ko/posts/412/</link><pubDate>Fri, 02 Feb 2018 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/412/</guid><description>정의 위상공간 $\left( X , \mathscr{T} \right)$ 에 대해 $\mathscr{B} , \mathscr{B}_{x} \subset \mathscr{T}$ 라고 하자. $B_{\lambda} \in \mathscr{B}$ 이라고 할 때, 모든 $U \in \mathscr{T}$ 에 대해 $$ U = \bigcup_{\lambda \in \Lambda} B_{ \lambda } $$ 를 만족하는 첨수집합 $\Lambda$ 가 존재하면 $\mathscr{B}$ 를 $\mathscr{T}$ 에</description></item><item><title>제1가산과 제2가산</title><link>https://freshrimpsushi.github.io/ko/posts/413/</link><pubDate>Fri, 02 Feb 2018 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/413/</guid><description>정의 1 위상공간 $X$ 이 주어져 있다고 하자. 모든 점 $x \in X$ 에 대해 가산 국소기저가 존재하면 제1가산 공간이라 한다. $X$ 가 가산 기저를 가지면 제2가산 공간이라 한다.</description></item><item><title>등각사상은 내각의 크기를 보존한다</title><link>https://freshrimpsushi.github.io/ko/posts/410/</link><pubDate>Thu, 01 Feb 2018 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/410/</guid><description>정리 1 복소영역 $\mathscr{R}$ 에서 함수 $f$ 가 등각사상이고 곡선 $\mathscr{C}_{1}$ 과 $\mathscr{C}_{2}$ 가 한 점 $\alpha$ 에서 만나며 그 내각을 $\psi$ 라고 하자. $\mathscr{C}_{1} ' $ 과 $\mathscr{C}_{2} ' $ 가 $\mathscr{C}_{1}$ 과 $\mathscr{C}_{2}$ 를 $f$ 로 보낸 상이라고 하면 두 곡선은</description></item><item><title>모든 순환군은 정수군과 동형임을 증명</title><link>https://freshrimpsushi.github.io/ko/posts/411/</link><pubDate>Thu, 01 Feb 2018 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/411/</guid><description>정리 1 순환군 $\left&amp;lt; a \right&amp;gt;$ 가 유한군이면 $\left&amp;lt; a \right&amp;gt; \simeq \mathbb{Z}_{n}$ 이고 무한군이면 $\left&amp;lt; a \right&amp;gt; \simeq \mathbb{Z}$ 이다. 설명 이 정리로 순환군에 대한 탐구는 사실상 거의 끝난다. 추상적이기만 했던 군이 단</description></item><item><title>복소해석에서 등각사상이란?</title><link>https://freshrimpsushi.github.io/ko/posts/409/</link><pubDate>Wed, 31 Jan 2018 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/409/</guid><description>정의 1 함수 $f: A \subset \mathbb{C} \to \mathbb{C}$ 가 $\mathscr{R} \subset A$ 에서 해석적이고 모든 $z \in \mathscr{R}$ 에 대해 $f ' (z) \ne 0$ 이면 $f$ 를 등각사상conformal mapping 혹은 등각변환conformal tr</description></item><item><title>복소해석에서 역함수 정리 증명</title><link>https://freshrimpsushi.github.io/ko/posts/408/</link><pubDate>Wed, 31 Jan 2018 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/408/</guid><description>정리 1 함수 $f : \mathbb{C} \to \mathbb{C}$ 가 $\alpha$ 에서 해석적이고 $f ' (\alpha) \ne 0$ 이면 $\mathcal{N} \left( f(\alpha) \right)$ 에서 $f^{-1}$ 가 존재한다. 설명 $f ' (\alpha) \ne 0$ 이라는 조건을 잘 생각해보자. 실수함수로 생각해보면 증</description></item><item><title>여유한위상과 여가산위상</title><link>https://freshrimpsushi.github.io/ko/posts/406/</link><pubDate>Tue, 30 Jan 2018 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/406/</guid><description>정의 $X$ 가 무한집합이라고 하자. $\mathscr{T}_{f} : = \left\{ \emptyset , X \right\} \cup \left\{ U \subset X : | X \setminus U | &amp;lt; \infty \right\}$ 를 여유한위상이라 한다. $\mathscr{T}_{c} : = \left\{ \emptyset , X \right\} \cup \left\{ U \subset X : | X \setminus U | = \aleph_{0} \right\}$ 를</description></item><item><title>일반적인 위상공간에서 수열의 극한은 유일하지 않다</title><link>https://freshrimpsushi.github.io/ko/posts/407/</link><pubDate>Tue, 30 Jan 2018 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/407/</guid><description>정리 일반적으로, 위상공간에서 수열의 극한은 유일하지 않다. 설명 도대체 이게 무슨 소린가 싶겠지만 놀랍게도 사실이다. 우리는 이제껏 해석학 등에서 수열을 포함하</description></item><item><title>위상공간에서의 가분과 폐포</title><link>https://freshrimpsushi.github.io/ko/posts/405/</link><pubDate>Mon, 29 Jan 2018 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/405/</guid><description>정의 1 위상공간 $X$ 에 대해 $A \subset X$ 라고 하자. $x \in O \subset A$ 를 만족하는 열린 집합 $O$ 가 존재할 때, $x$ 를 $A$ 의 내점interior point이라 한다. $A$ 의 내점의 집</description></item><item><title>자명 위상과 이산 위상</title><link>https://freshrimpsushi.github.io/ko/posts/404/</link><pubDate>Mon, 29 Jan 2018 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/404/</guid><description>정의 1 어떤 집합 $X$ 가 주어져 있을 때 자명 위상trivial Topology $\left\{ \emptyset , X \right\}$ 를 주면 그 공간은 가장 작은 공간이며 자명 공간이라 한다. 반대로 이산 위상discret</description></item><item><title>순환군의 부분군은 순환군임을 증명</title><link>https://freshrimpsushi.github.io/ko/posts/402/</link><pubDate>Sun, 28 Jan 2018 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/402/</guid><description>정의 1 순환군 $G$ 의 부분군 $ H \leqslant G$ 은 순환군이다. 설명 생각을 조금만 해보면 당연한 사실이지만 상당히 중요한 정리일뿐만 아니라 증명 역시 간단하지만은 않다. 증명</description></item><item><title>추상대수학에서의 동형</title><link>https://freshrimpsushi.github.io/ko/posts/403/</link><pubDate>Sun, 28 Jan 2018 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/403/</guid><description>정의 1 두 이항연산구조 $\left&amp;lt; S , * \right&amp;gt;$ 와 $\left&amp;lt; S' , *' \right&amp;gt;$ 에 대해 전단사 함수 $\phi : S \to S'$ 가 존재해서 모든 $x , y \in S$ 에 대해 $$ \phi (x \ast\ y) = \phi ( x ) *' \phi ( y ) $$ 를 만족하면</description></item><item><title>모든 순환군은 가환군임을 증명</title><link>https://freshrimpsushi.github.io/ko/posts/401/</link><pubDate>Sat, 27 Jan 2018 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/401/</guid><description>정리 1 모든 순환군은 가환군이다. 설명 굳이 따로 증명하지 않더라도 순환군이 정수군과 동형이라는 것을 보이면 자연스럽게 따라오는 사실이기도 하다. 증명 순환군 $G</description></item><item><title>위상공간에서의 집적점과 수렴, 도집합</title><link>https://freshrimpsushi.github.io/ko/posts/400/</link><pubDate>Sat, 27 Jan 2018 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/400/</guid><description>정의 1 위상공간 $\left( X , \mathscr{T} \right)$ 이 주어져 있다고 하자. $A \subset X$ 에 대해 $x$ 를 포함하는 임의의 열린 집합 $O$ 가 $O \cap ( A \setminus \left\{ x \right\} ) \ne \emptyset$ 를 만족하면 $x$ 를 $A$ 의 집적점limi</description></item><item><title>위상공간이란?</title><link>https://freshrimpsushi.github.io/ko/posts/398/</link><pubDate>Fri, 26 Jan 2018 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/398/</guid><description>정의 위상공간 1 집합 $X$ 가 주어졌을 때 $\mathscr{T} \subset \mathscr{P} (X)$ 가 $T \in \mathscr{T}$ 에 대해 다음 세가지 조건을 만족하면 $\mathscr{T}$ 를 $X$ 의 위상topology이라 부르고, $\left( X , \mathscr{T} \right)$ 를 위상공간t</description></item><item><title>거리공간에서 완비성과 조밀성</title><link>https://freshrimpsushi.github.io/ko/posts/396/</link><pubDate>Thu, 25 Jan 2018 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/396/</guid><description>정의 1 거리공간 $\left( X , d \right)$ 에 대해 $A \subset X$ 라고 하자. $X$ 의 수열 $\left\{ x_{n} \right\}$ 이 모든 $\varepsilon &amp;gt; 0$ 에 대해 $n,m &amp;gt; n_{0}$ 일때마다 $d(x_{n} , x_{m}) &amp;lt; \varepsilon$ 을 만족하는 자연수 $n_{0}$ 가 존재하면 코시 수열C</description></item><item><title>그램-슈미트 직교화</title><link>https://freshrimpsushi.github.io/ko/posts/394/</link><pubDate>Wed, 24 Jan 2018 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/394/</guid><description>정리 모든 유한차원 내적공간은 정규직교기저를 갖는다. 설명 존재성 증명이라는 게 대개 그렇듯 길지도 않고 별것도 아닌것 같아보이지만 엄청나게 중요한 정리다. 선형</description></item><item><title>추상대수학에서의 순환군</title><link>https://freshrimpsushi.github.io/ko/posts/392/</link><pubDate>Tue, 23 Jan 2018 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/392/</guid><description>정의 1 군 $G$ 의 어떤 원소 $a$ 과 임의의 $x \in G$ 에 대해 $x = a^{n}$ 을 만족하는 정수 $n \in \mathbb{Z}$ 이 존재하면 $G$ 를 순환군cyclic group이라 하고 $\braket{a}</description></item><item><title>복소해석을 이용한 제곱수의 역수의 합 계산</title><link>https://freshrimpsushi.github.io/ko/posts/390/</link><pubDate>Mon, 22 Jan 2018 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/390/</guid><description>정리 1 $$ \sum_{n =1 }^{\infty} {{1} \over {n^2}} = {{ \pi ^2 } \over { 6 }} $$ 오일러의 풀이가 깔끔하고 멋지긴 한데 아이디어가 너무 기발해서 막상 써먹을데는 별로 없다. 복소해석을 공부하면서 가</description></item><item><title>오일러의 증명: 싱크함수를 이용한 제곱수의 역수의 합 구하기</title><link>https://freshrimpsushi.github.io/ko/posts/391/</link><pubDate>Mon, 22 Jan 2018 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/391/</guid><description>정리 $$ \sum_{n =1 }^{\infty} {{1} \over {n^2}} = {{ \pi ^2 } \over { 6 }} $$ 증명 전략: 이는 오일러가 남긴 풀이로써, 다름아닌 싱크함수의 오일러 표현을 사용해서 증명한다. 아이디어가 상당히 신</description></item><item><title>유수정리를 이용한 모든 정수에 대한 급수의 합 공식</title><link>https://freshrimpsushi.github.io/ko/posts/388/</link><pubDate>Sun, 21 Jan 2018 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/388/</guid><description>공식 다항함수의 비, 즉 유리함수인 $f$ 가 $n \in \mathbb{Z}$ 에서 $f(n) \ne 0$ 이면서 $\lim_{z \to \infty} z f(z) = 0$ 이라고 하자. $f$ 가 유한한 특이점 $z_{1}, \cdots , z_{m}$ 을 가질 때, $$ \sum_{n=-\infty}^{\infty} f(n) = - \sum_{n = 1}^{m} \text{Res}_{z_{n}} (\pi f(z) \cot</description></item><item><title>코탄젠트와 코시컨트의 로랑 전개</title><link>https://freshrimpsushi.github.io/ko/posts/389/</link><pubDate>Sun, 21 Jan 2018 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/389/</guid><description>공식 $$ \cot z = {{1} \over {z}} - {{z} \over {3}} - {{z^{3}} \over {45}} - {{2 z^{5}} \over {945}} - \cdots \\ \csc z = {{1} \over {z}} + {{z} \over {6}} + {{7 z^{3}} \over {360}} + {{31 z^{5}} \over {15120}} + \cdots $$ 설명 복소해석에서 급수의 합 공식을 쓰기 위해선 코탄</description></item><item><title>거리공간에서 볼과 열린 집합 닫힌 집합</title><link>https://freshrimpsushi.github.io/ko/posts/382/</link><pubDate>Thu, 18 Jan 2018 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/382/</guid><description>정의 거리 공간 $\left( X, d \right)$ 에 대해 $a \in X$ 이고 $r &amp;gt; 0$ 이라고 하자. $B_{d} (a,r) = \left\{ x \in X \ | \ d(a,x) &amp;lt; r \right\}$ 을 중심이 $a$ 고 반경이 $r$ 인 열린 볼open Ball이라 한다. $B_{d} [a,r]</description></item><item><title>거리공간의 정의</title><link>https://freshrimpsushi.github.io/ko/posts/381/</link><pubDate>Wed, 17 Jan 2018 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/381/</guid><description>정의 집합 $X$ 에 대해 함수 $d : X \times X \to [0, \infty)$가 $x,y,z \in X$ 에 대해 아래의 조건들을 만족시킬 때, $d$를 거리metric라고 하고 $\left( X, d\right</description></item><item><title>다가함수의 이상적분</title><link>https://freshrimpsushi.github.io/ko/posts/375/</link><pubDate>Thu, 11 Jan 2018 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/375/</guid><description>빌드업 1 다가함수를 적분할 때의 가장 큰 문제점은 경로를 지나면서 분기선을 만나면 함수값이 원치 않게 바뀐다는 것이다. 이러한 함수를 적분할 땐 이제까지 해왔던 것과</description></item><item><title>복소해석학에서의 다가함수와 분기</title><link>https://freshrimpsushi.github.io/ko/posts/374/</link><pubDate>Thu, 11 Jan 2018 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/374/</guid><description>정의 1 $X = \mathbb{C}$ 의 원소를 $Y$ 의 여러 값으로 대응시키는 사상을 다가함수multifunction라 한다. 오픈셋 $A \subset \mathbb{C}$ 에서 정의된 다가함수 $g$ 에 대해 $\alpha \in \mathbb{C}$ 을 감</description></item><item><title>실수축의 특이점을 포함했을 때 조르당 보조정리를 통한 이상적분</title><link>https://freshrimpsushi.github.io/ko/posts/373/</link><pubDate>Sun, 07 Jan 2018 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/373/</guid><description>빌드업 전체적인 흐름은 조르당 보조정리를 통한 이상적분과 비슷하다. 두 다항함수 $p(z) , q(z)$ 에 대해 $\displaystyle f(z) = {{q(z)} \over {p(z)}}$ 이라고 하자. $p(z) = 0$ 을 만족하는 실수해 $a$ 가 존재한다</description></item><item><title>조르당 보조정리를 통한 이상적분</title><link>https://freshrimpsushi.github.io/ko/posts/372/</link><pubDate>Sun, 07 Jan 2018 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/372/</guid><description>설명 1 우선은 발산하는 반원 상의 복소경로적분을 통한 유리함수의 이상적분과 비슷하게 시작해보자. 두 다항함수 $p(z) , q(z)$ 에 대해 $\displaystyle f(z) = {{q(z)} \over {p(z)}}$ 이라고 하자. $p(z) = 0$ 을</description></item><item><title>조르당 보조정리 증명</title><link>https://freshrimpsushi.github.io/ko/posts/371/</link><pubDate>Sat, 06 Jan 2018 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/371/</guid><description>정리 1 반원호 $\Gamma$ 를 $z(\theta) = R e^{i \theta} , 0 \le \theta \le \pi$ 와 같이 나타냈을 때, 함수 $f: \mathbb{C} \to \mathbb{C}$ 가 $\Gamma$ 에서 연속이고 $\displaystyle \lim_{z \to \infty} f(z) = 0$ 이면 양수 $m \in \mathbb{R}^{+}$ 에 대해 $$ \lim_{R \to \infty} \int_{\Gamma} e^{m i z } f(z) dz</description></item><item><title>특이값 분해를 통한 최소제곱법</title><link>https://freshrimpsushi.github.io/ko/posts/359/</link><pubDate>Sat, 06 Jan 2018 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/359/</guid><description>알고리즘 $A \in \mathbb{C}^{m \times n}$ 과 벡터 $\mathbf{b} \in \mathbb{C}^{m}$ 에 대해 $\text{rank} A = n$ 이고 $A \mathbf{x} = \mathbf{b}$ 의 최소제곱해를 $\mathbf{x}_{\ast}$ 이라고 하자. Step 1. 특이값 분해 $A = \widehat{U} \widehat{\Sigma} V^{\ast}$ 를 만족하는 직교행렬 $\widehat{U}$ 과 대각행렬 $\widehat{\Sigma}$</description></item><item><title>QR 분해를 통한 최소제곱법</title><link>https://freshrimpsushi.github.io/ko/posts/358/</link><pubDate>Fri, 05 Jan 2018 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/358/</guid><description>알고리즘 $A \in \mathbb{C}^{m \times n}$ 과 벡터 $\mathbf{b} \in \mathbb{C}^{m}$ 에 대해 $\text{rank} A = n$ 이고 $A \mathbf{x} = \mathbf{b}$ 의 최소제곱해를 $\mathbf{x}_{\ast}$ 이라고 하자. Step 1. QR 분해 $A = \widehat{Q} \widehat{R}$ 을 만족하는 직교행렬 $\widehat{Q}$ 과 상삼각행렬 $\widehat{R}$ 을 구</description></item><item><title>콜레스키 분해를 통한 최소제곱법</title><link>https://freshrimpsushi.github.io/ko/posts/357/</link><pubDate>Fri, 05 Jan 2018 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/357/</guid><description>알고리즘 $A \in \mathbb{C}^{m \times n}$ 과 벡터 $\mathbf{b} \in \mathbb{C}^{m}$ 에 대해 $\text{rank} A = n$ 이고 $A \mathbf{x} = \mathbf{b}$ 의 최소제곱해를 $\mathbf{x}_{\ast}$ 이라고 하자. Step 1. 주어진 방정식의 양변에 $A^{\ast}$ 을 곱해 표준방정식 $A^{\ast} A \mathbf{x} = A^{\ast} \mathbf{b}$ 을</description></item><item><title>최소제곱법</title><link>https://freshrimpsushi.github.io/ko/posts/356/</link><pubDate>Thu, 04 Jan 2018 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/356/</guid><description>정의1 행렬 $A \in \mathbb{C}^{m \times n}$ 와 벡터 $\mathbf{b} \in \mathbb{C}^{m}$에 대해 선형시스템 $A\mathbf{x} = \mathbf{b}$가 과도결정이거나 과소결정라고 하자. 그러</description></item><item><title>행렬의 QR 분해</title><link>https://freshrimpsushi.github.io/ko/posts/355/</link><pubDate>Thu, 04 Jan 2018 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/355/</guid><description>개요 효율적인 행렬 분해에는 여러가지 조건이 필요하지만, 효율 이전에 분해 자체를 할 수 있느냐 없느냐가 중요할 수 있다. QR 분해는 정방행렬이라는 조건이 필요 없는 행</description></item><item><title>행렬대수에서 사영이란</title><link>https://freshrimpsushi.github.io/ko/posts/352/</link><pubDate>Wed, 03 Jan 2018 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/352/</guid><description>정의 정방행렬 $P \in \mathbb{C}^{m \times m}$ 가 $P^2 = P$ 면 사영작용소projector라 한다. 설명 대수학적인 용어로는 멱등원idempotent이라는 표현을 사용하고, 마</description></item><item><title>행렬대수에서 정사영이란</title><link>https://freshrimpsushi.github.io/ko/posts/354/</link><pubDate>Wed, 03 Jan 2018 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/354/</guid><description>정의 사영 $P \in \mathbb{C}^{m \times m}$ 가 $\mathcal{C} (P) ^{\perp} = \mathcal{N} (P)$ 를 만족하면 $P$ 를 정사영이라 한다. 설명 사영의 성질 $\mathbb{C}^{m } = \mathcal{C} (P) \oplus \mathcal{N} (P)$ 에 따라 $P$ 는 $\mathbb{C}^{m}$ 을 정확히 두 개의 부분공간 $\mathcal{C} (P)$ 과 $\mathcal{N} (P)$ 으로</description></item><item><title>벡터공간에서 직합이란</title><link>https://freshrimpsushi.github.io/ko/posts/353/</link><pubDate>Tue, 02 Jan 2018 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/353/</guid><description>정의 벡터공간 $V$ 의 두 부분공간 $W_{1}$과 $W_{2}$ 에 대해 다음을 만족하면 $V$를 $W_{1}$과 $W_{2}$ 의 직합direct sum이라 하고, $V = W_{1} \oplus W_{2</description></item><item><title>콜레스키 분해의 유일성 증명</title><link>https://freshrimpsushi.github.io/ko/posts/351/</link><pubDate>Tue, 02 Jan 2018 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/351/</guid><description>정리 $A&amp;gt;0$ 은 오직 하나의 콜레스키 분해를 가진다. 설명 고유값 대각화, 특이값 분해, 슈어 분해, LU 분해, LDU 분해 모두 유일성을 가지지 않는다는 공통점이 있다. 이 방법</description></item><item><title>양의 정부호 행렬의 콜레스키 분해</title><link>https://freshrimpsushi.github.io/ko/posts/350/</link><pubDate>Sat, 30 Dec 2017 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/350/</guid><description>개요 가역행렬에서 대각행렬로 조건이 강화되면서 LDU 분해를 할 수 있었듯 양의 정부호 행렬로 조건이 강화되면 더욱 효율적인 행렬 분해인 콜레스키 분해cholesky</description></item><item><title>대칭행렬의 LDU 분해</title><link>https://freshrimpsushi.github.io/ko/posts/349/</link><pubDate>Fri, 29 Dec 2017 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/349/</guid><description>개요 $L^{T}$ 는 상삼각행렬이므로 $A = LU$ 에서의 $U$ 를 $U:= DL^{T}$ 으로 바꾼다고 보면 된다. 일반적인 LU 분해보다 조건이 까다로워진만큼 계산량은 많이 줄어든다. 정리 가역대칭행</description></item><item><title>가역행렬의 LU 분해</title><link>https://freshrimpsushi.github.io/ko/posts/345/</link><pubDate>Thu, 28 Dec 2017 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/345/</guid><description>빌드업 행렬 $A \in \mathbb{R}^{m \times m}$ 의 왼쪽에 곱해졌을 때 $(i, j)$ 성분을 $0$ 이 되도록 하는 행렬 $E_{ij}$ 를 $A$ 에 대한 $ij$-소거연산자라고 정의해보자. 구체적으로 정방행렬 $(a_{ij}) \in \mathbb{R}^{m \times</description></item><item><title>에르미트 행렬의 고유값 대각화: 스펙트럴 이론 증명</title><link>https://freshrimpsushi.github.io/ko/posts/346/</link><pubDate>Wed, 27 Dec 2017 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/346/</guid><description>정리 가역행렬 $A \in \mathbb{C}^{m \times m}$ 의 고유값 $\lambda_{k}$ 들로 구성된 대각행렬을 $\Lambda : = \text{diag} ( \lambda_{1} , \cdots , \lambda_{m} )$, 그 고유값들에 해당하는 정규직교 고유벡터 $\mathbf{q}_{k}$ 들로 구성된 직교행렬을 $Q$ 라고 하</description></item><item><title>정방행렬의 슈어 분해</title><link>https://freshrimpsushi.github.io/ko/posts/342/</link><pubDate>Tue, 26 Dec 2017 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/342/</guid><description>정의 어떤 유니터리 행렬 $Q$ 와 상삼각행렬 $T$ 에 대해, $A = Q T Q^{\ast}$ 이면 $A$ 는 슈어 분해schur Factorization를 갖는다고 한다. 정리 모든 정방행렬 $A</description></item><item><title>전체 특이값 분해의 존재성 증명</title><link>https://freshrimpsushi.github.io/ko/posts/341/</link><pubDate>Sun, 24 Dec 2017 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/341/</guid><description>개요 고유값 대각화는 적용에 있어서 정방행렬이라는 제한이 있었지만 특이값 분해는 그러한 제약이 없었다. 이렇게 쓸만한 분해법이 모든 행렬에 통하는지, 즉 분해의 존</description></item><item><title>행렬의 특이값 분해</title><link>https://freshrimpsushi.github.io/ko/posts/340/</link><pubDate>Sat, 23 Dec 2017 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/340/</guid><description>개요 늘 고유값 대각화를 통해 행렬을 쪼갤 수 있다면 좋겠지만, 이 방법엔 아쉽게도 주어지는 행렬이 정방행렬이어야한다는 제한이 있다. 이에 대각화할 행렬을 정방행렬</description></item><item><title>가역행렬의 고유값 대각화</title><link>https://freshrimpsushi.github.io/ko/posts/339/</link><pubDate>Mon, 18 Dec 2017 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/339/</guid><description>정의 $A \in \mathbb{C}^{ m \times m }$ 에 대해 $A = Q^{ \ast } \Lambda Q$ 를 만족하는 유니터리 행렬 $Q$ 와 대각행렬 $\Lambda$ 가 존재하면, 행렬 $A$ 는 유니터리 대각화 가능하다고 말한다. 정리 가역행렬 $A</description></item><item><title>발산하는 반원 상의 복소경로적분을 통한 유리함수의 이상적분</title><link>https://freshrimpsushi.github.io/ko/posts/338/</link><pubDate>Thu, 14 Dec 2017 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/338/</guid><description>빌드업 두 다항함수 $p(z) , q(z)$ 에 대해 $\displaystyle f(z) = {{q(z)} \over {p(z)}}$ 이라고 하자. $p(z) = 0$ 을 만족하는 실수해가 존재하지 않으면 $f$ 는 실수 특이점을 갖지 않을 것이다. 이러한 유리함수의 이</description></item><item><title>복소평면 상에서의 삼각함수 치환을 통한 정적분</title><link>https://freshrimpsushi.github.io/ko/posts/333/</link><pubDate>Sun, 26 Nov 2017 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/333/</guid><description>정리 $$ \int_{0}^{2 \pi} f( \cos \theta , \sin \theta ) d \theta = \int_{\mathscr{C}} f(z) dz = 2 \pi i \sum \text{Res} f(z) $$ 설명 정적분을 구하기 힘든 실함수는 복소해석으로의 우회를 통해 비교적 쉽게 풀어낼 수 있다. 그 중에서도</description></item><item><title>R 에서 데이터 프레임의 행과 열의 위치 바꾸기</title><link>https://freshrimpsushi.github.io/ko/posts/332/</link><pubDate>Sat, 25 Nov 2017 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/332/</guid><description>개요 R 의 강점 중 하나는 프로그래밍 언어가 익숙한 사람의 입장에서 상당히 어려운 조작들을 손쉽게 구현시켜준다는 것이다. 예컨대 배열을 사용할 때 미리 메모리를 할당</description></item><item><title>R 에서 내장 데이터셋 불러오는 법</title><link>https://freshrimpsushi.github.io/ko/posts/331/</link><pubDate>Fri, 24 Nov 2017 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/331/</guid><description>개요 R 은 대표적인 통계 프로그래밍 언어로써 유용한 메소드 뿐만 아니라 예제로 쓰기 좋은 데이터셋도 제공한다. 만약 이런 데이터셋이 없다면 강의를 할 때마다 새로운 데</description></item><item><title>고유값의 대수적 중복도는 기하적 중복도보다 크거나 같다</title><link>https://freshrimpsushi.github.io/ko/posts/328/</link><pubDate>Tue, 21 Nov 2017 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/328/</guid><description>정리 행렬 $A \in \mathbb{C}^{ m \times m}$ 의 고유값 $\lambda$ 가 대수적 중복도 $a$ 를 갖고 기하적 중복도 $g$ 를 갖는다고 하면 $a \ge g$ 이다. 설명 고유값의 대수적 중복도와 기하적 중복도는 서로 같다</description></item><item><title>닮은 행렬은 같은 고유값을 갖는다</title><link>https://freshrimpsushi.github.io/ko/posts/329/</link><pubDate>Mon, 20 Nov 2017 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/329/</guid><description>정리 두 행렬 $A,B$ 가 닮음이면, 같은 고유값을 같는다. $$ \det (A - \lambda I) = \det (B - \lambda I) $$ 이때 $\lambda$는 $A, B$의 고유값이다. 설명 고유값이 같다는 말은, 특</description></item><item><title>고유값의 대수적 중복도와 기하적 중복도</title><link>https://freshrimpsushi.github.io/ko/posts/311/</link><pubDate>Sun, 19 Nov 2017 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/311/</guid><description>대수적 중복도 행렬 $A \in \mathbb{R}^{m \times m}$ 에 대해 고유값은 $\det (A - \lambda I ) =0$ 을 만족하는 $\lambda$ 로 정의된다. 특성방정식은 $\lambda$ 에 대한 $m$ 차 방정식, 즉 $$ \det (A - \lambda I ) = (-1)^m \lambda ^m + c_{m-1} \lambda</description></item><item><title>단순극에서의 유수</title><link>https://freshrimpsushi.github.io/ko/posts/323/</link><pubDate>Sat, 18 Nov 2017 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/323/</guid><description>정리 1 함수 $f$ 를 $\displaystyle f(z) = {{g(z)} \over {h(z)}}$ 으로 나타낼 수 있다고 하자. 여기서 $g$ 와 $h$ 는 $\alpha$ 에서 해석적이고, $g(\alpha) \ne 0 , h(\alpha) = 0, h ' (\alpha) \ne 0$ 라고 하면 $\alpha$ 는 $f$ 의 단순 극이고 $$ \text{Res}_{\alpha} f(z) =</description></item><item><title>극점에서의 유수</title><link>https://freshrimpsushi.github.io/ko/posts/324/</link><pubDate>Fri, 17 Nov 2017 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/324/</guid><description>정리 1 $\alpha$ 가 함수 $f: A \subset \mathbb{C} \to \mathbb{C}$ 의 pole of order $m$, 즉 $\displaystyle f(z) = {{g(z)} \over { (z - \alpha)^m }}$ 으로 나타낼 수 있다고 하자. 여기서 $g$ 는 $\alpha$ 에서 해석적이며 $g(\alpha) \ne 0$ 이라고 하면 $$ \text{Res}_{\alpha} f(z) = {{g^{(m-1)} (\alpha)} \over {(m-1)!}</description></item><item><title>R 에서 행렬의 곱 역행렬 전치행렬 구하기</title><link>https://freshrimpsushi.github.io/ko/posts/317/</link><pubDate>Wed, 15 Nov 2017 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/317/</guid><description>개요 R 의 강점은 행렬을 위시한 각종 데이터셋의 조작이 간편하다는 점과 풍부한 통계 패키지를 무료로 제공한다는 것이다. 당연한 이야기지만 통계적 분석에서 행렬의 계</description></item><item><title>R 에서 몫과 나머지 구하기</title><link>https://freshrimpsushi.github.io/ko/posts/316/</link><pubDate>Tue, 14 Nov 2017 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/316/</guid><description>개요 프로그래밍 언어의 문법에서 정말 통일이 안 되는 게 바로 몫과 나머지 연산자다. 기본적으론 다 비슷비슷하게 생긴 것 같지만 오히려 그래서 헷갈리는데 한 몫한다.C</description></item><item><title>R 에서 모든 변수 제거하기 콘솔창 초기화</title><link>https://freshrimpsushi.github.io/ko/posts/315/</link><pubDate>Mon, 13 Nov 2017 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/315/</guid><description>개요 R 은 인터프리터 언어기 때문에 콘솔을 계속 보며 작업을 하게 된다. 이때 디버그 등을 하기 위해서는 이런 저런 테스트도 같은 작업환경에서 할 수밖에 없는데, 테스트</description></item><item><title>R 에서 else if문 사용하기 Error: unexpected else in else 해결</title><link>https://freshrimpsushi.github.io/ko/posts/314/</link><pubDate>Sun, 12 Nov 2017 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/314/</guid><description>개요 R 에는 switch문과 같은 분기문이 없기 때문에 if문을 여러개 이어서 분기를 나누어야만 한다. 여기서 이 조건문이라는 게 프로그래밍 언어마다 if 와 els</description></item><item><title>추상대수학에서의 가환군</title><link>https://freshrimpsushi.github.io/ko/posts/309/</link><pubDate>Sat, 11 Nov 2017 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/309/</guid><description>정의 1 군 $\left&amp;lt; G, \ast\ \right&amp;gt;$ 의 두 원소 $a, b$ 에 대해 $a \ast\ b = b \ast\ a$ 면 $\left&amp;lt; G, \ast\ \right&amp;gt;$를 가환군Abelian group이라 정의한다. 설명 가환은 &amp;ls</description></item><item><title>유수 정리 증명</title><link>https://freshrimpsushi.github.io/ko/posts/308/</link><pubDate>Fri, 10 Nov 2017 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/308/</guid><description>정리 1 해석적인 함수 $f: A \subset \mathbb{C} \to \mathbb{C}$ 가 단순폐경로 $\mathscr{C}$ 내부의 유한한 특이점 $z_{1} , z_{2} , \cdots , z_{m}$ 들을 가진다고 하자. 그러면 $$ \int_{\mathscr{C}} f(z) dz = 2 \pi i \sum_{k=1}^{m} \text{Res}_{z_{k}} f(z) $$ 설명 처음 읽어보면</description></item><item><title>로랑 급수의 주부분과 특이점의 분류</title><link>https://freshrimpsushi.github.io/ko/posts/293/</link><pubDate>Tue, 07 Nov 2017 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/293/</guid><description>개요 1 로랑 전개의 주분기principal part를 잘 살펴보면 특이점의 종류를 파악할 수 있다. $\alpha$ 를 함수 $f:A\subset \mathbb{C} \to \mathbb{C}$ 의 고립된 특이점이라 하자. 이의 로랑 전개</description></item><item><title>로랑 급수란?</title><link>https://freshrimpsushi.github.io/ko/posts/290/</link><pubDate>Mon, 06 Nov 2017 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/290/</guid><description>빌드업 테일러 정리는 평균값의 정리를 미분 횟수에 대해 일반화한 정리다. 원래 $1$번 미분한 것만을 다루던 것에서 $n \in \mathbb{N}$ 으로 확장한 것이다. 그런데 자연수로 일반</description></item><item><title>복소해석에서 특이점의 종류</title><link>https://freshrimpsushi.github.io/ko/posts/281/</link><pubDate>Sat, 04 Nov 2017 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/281/</guid><description>정의 특이점 1 함수 $f$ 가 $\alpha$ 에서 어떤 $\mathcal{N}(\alpha)$ 의 모든 점에서 미분가능하면 $\alpha$ 에서 해석적analytic이라고 한다. 함수 $f$ 가 $\alpha \in \mathbb{C}$ 에서는 해석적이지는 않지만 모든 $\mathcal{N}(\alpha)$</description></item><item><title>선형 독립과 선형 종속</title><link>https://freshrimpsushi.github.io/ko/posts/253/</link><pubDate>Thu, 02 Nov 2017 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/253/</guid><description>정의1 $S = \left\{ \mathbf{v}_{1}, \mathbf{v}_{2}, \dots, \mathbf{v}_{r} \right\}$를 벡터공간 $V$ 의 공집합이 아닌 부분집합이라고 하자. 상수 $k_{1}, k_{2}, \dots, k_{r}$들에 대해서 다음의 방정식 $$ k_{1} \mathbf{v}_{1} + k_{2} \mathbf{v}_{2}</description></item><item><title>연립방정식으로 이해하는 랭크와 무효차수</title><link>https://freshrimpsushi.github.io/ko/posts/279/</link><pubDate>Thu, 02 Nov 2017 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/279/</guid><description>역사적 배경 역사적으로는 행렬이 고안된 배경 자체가 연립방정식을 보다 쉽고 편하게 표기하기 위함이었다. 예를 들어 연립방정식 $$ \begin{cases} 2x_{1} &amp;amp; + &amp;amp; x_{2} &amp;amp; + &amp;amp; x_{3} =&amp;amp; 0 \\ &amp;amp; x_{2}</description></item><item><title>군에서의 항등원과 역원의 유일성 증명</title><link>https://freshrimpsushi.github.io/ko/posts/130/</link><pubDate>Wed, 01 Nov 2017 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/130/</guid><description>정리 1 군 $\left&amp;lt;G, \ast \right&amp;gt;$ 에 대해, $G$ 의 모든 원소 $x$ 에 대해 $e \ast x = x \ast e = x$ 를 만족하는 항등원 $e$ 는 유일하다. $G$ 의 어떤 원소 $a$ 에 대해 $a \ast {a^{\prime}} = {a^{\prime}} \ast a = e$ 를 만족시키는</description></item><item><title>좌우간약율 증명</title><link>https://freshrimpsushi.github.io/ko/posts/131/</link><pubDate>Wed, 01 Nov 2017 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/131/</guid><description>정리 1 군 $\left&amp;lt;G, \ast \right&amp;gt;$ 의 원소 $a,b,c$ 에 대해, $$ a \ast b = a \ast c \implies b = c \\ b \ast a = c \ast a \implies b=c $$ 설명 추상대수학을 접하면 이제까지 배워왔던 걸 새로운 언어로 배우게 된다.</description></item><item><title>추상대수학에서의 군</title><link>https://freshrimpsushi.github.io/ko/posts/278/</link><pubDate>Wed, 01 Nov 2017 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/278/</guid><description>정의 1 모노이드 $\left&amp;lt; G, \ast\ \right&amp;gt;$ 의 원소 $a$ 와 항등원 $e$ 대해 $a \ast\ a^{\prime} = a^{\prime} \ast\ a = e$ 를 만족하는 $a^{\prime}$ 가 존재하면 $\left&amp;lt; G, \ast\ \right&amp;gt;$를 군group이라고 정의한다</description></item><item><title>추상대수학에서 항등원과 모노이드</title><link>https://freshrimpsushi.github.io/ko/posts/277/</link><pubDate>Tue, 31 Oct 2017 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/277/</guid><description>정의 1 반군 $\left&amp;lt; M , \ast\ \right&amp;gt;$ 의 모든 원소 $a$ 에 대해, $a \ast\ e = e \ast\ a = a$ 를 만족하는 $e$ 가 존재하면 $\left&amp;lt; M , \ast\ \right&amp;gt;$ 를 모노이드monoid라 정의한다. 그리고 이러한 $e</description></item><item><title>추상대수학에서의 반군</title><link>https://freshrimpsushi.github.io/ko/posts/276/</link><pubDate>Mon, 30 Oct 2017 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/276/</guid><description>정의 1 결합법칙 집합 $S$와 이항연산 $\ast : S \times S \to S$가 주어졌다고 하자. 아래와 같은 꼴의 식을 결합법칙associative property이라 한다</description></item><item><title>추상대수학에서의 이항연산</title><link>https://freshrimpsushi.github.io/ko/posts/275/</link><pubDate>Sun, 29 Oct 2017 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/275/</guid><description>빌드업 수학을 크게 세 부류로 나누자면 기하학, 해석학, 대수학이라고 할 수 있을 것이다. 그 중에서 대수학은 교과과정 상에서 배우는 이항, 약분 등을 다루는 수학의 한</description></item><item><title>볼록 함수, 오목 함수</title><link>https://freshrimpsushi.github.io/ko/posts/262/</link><pubDate>Sun, 08 Oct 2017 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/262/</guid><description>정의 구간 $I \subset \mathbb{R}$ 의 두 원소 $x_{1} , x_{2}$ 와 함수 $f : I \to \mathbb{R}$ 와 $0 \le t \le 1$ 에 대해, $f( t x_{1} + (1-t) x_{2}) \le t f(x_{1}) + (1-t) f(x_{2})$ 일 때, $f$ 는 $I$ 에서의 볼록 함수로 정의한다. $f( t x_{1} + (1-t) x_{2}) \ge</description></item><item><title>옌센 부등식의 적분 폼 증명</title><link>https://freshrimpsushi.github.io/ko/posts/265/</link><pubDate>Sun, 08 Oct 2017 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/265/</guid><description>정리 컨벡스 함수 $ \phi : [a,b] \to \mathbb{R}$ 와 $f: [0,1] \to [a,b]$ 에 대해, $\phi \circ f$ 이 $[0,1]$ 에서 적분가능하면 $$ \phi \left( \int_{0}^{1} f(x) dx \right) \le \int_{0}^{1} (\phi \circ f ) (x) dx $$ 설명 당연하지만 주어진 조건만 만족한다면 치</description></item><item><title>삼차원 유클리드 공간에서 외적이란</title><link>https://freshrimpsushi.github.io/ko/posts/256/</link><pubDate>Fri, 06 Oct 2017 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/256/</guid><description>정의 $\mathbf{x}, \mathbf{y} \in \mathbb{R}^3$ 에 대해 다음을 $\mathbf{x}$와 $\mathbf{y}$의 외적cross product 으로 정의한다. $$ \begin{align*} \mathbf{x} \times \mathbf{y} =&amp;amp; (x_{2}y_{3} - x_{3}y_{2}, x_{3}y_{1} - x_{1}y_{3}, x_{1}y_{2} - x_{2}y_{1}) \\ =&amp;amp;</description></item><item><title>유클리드 공간에서 내적이란</title><link>https://freshrimpsushi.github.io/ko/posts/255/</link><pubDate>Fri, 06 Oct 2017 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/255/</guid><description>정의 벡터공간 $V = \mathbb{R}^n$ 에 대해 $\mathbf{x}, \mathbf{y}, \mathbf{z} \in V$ 그리고 $k \in \mathbb{R}$ 이라고 하자. $\left&amp;lt; \cdot , \cdot \right&amp;gt; : V^2 \to \mathbb{R}$ 가 아래 네 조건들을 만족시킬 때 $\left&amp;lt; \cdot , \cdot \right&amp;gt;$ 를 $V$ 상에서의 내적 으로 정의한다</description></item><item><title>행공간, 열공간, 영공간</title><link>https://freshrimpsushi.github.io/ko/posts/254/</link><pubDate>Tue, 03 Oct 2017 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/254/</guid><description>정의1 $$ A = \begin{bmatrix} a_{11} &amp;amp; a_{12} &amp;amp; \cdots &amp;amp; a_{1n} \\ a_{21} &amp;amp; a_{22} &amp;amp; \cdots &amp;amp; a_{2n} \\ \vdots &amp;amp; \vdots &amp;amp; \ddots &amp;amp; \vdots \\ a_{m1} &amp;amp; a_{m2} &amp;amp; \cdots &amp;amp; a_{mn} \end{bmatrix} $$ $m \times n$ 행렬 $A$에 대해서, $A$의 행으로 만들어지는 $m$개의</description></item><item><title>켤레 복소수</title><link>https://freshrimpsushi.github.io/ko/posts/245/</link><pubDate>Sat, 23 Sep 2017 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/245/</guid><description>정의 $z$ 를 $z=a+ib(a,b\in \mathbb{R})$ 인 복소수라고 하자. $\overline{z}$ 를 다음과 같이 정의하고 $z$ 의 켤레 복소수complex Conjugatre라고 한다. $$ \overline{z}:=\overline{a+ib}=a-ib $$ 설명 원래 복소수에 $i$ 대신 $-i$</description></item><item><title>생성함수란?</title><link>https://freshrimpsushi.github.io/ko/posts/232/</link><pubDate>Wed, 30 Aug 2017 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/232/</guid><description>정의 시퀀스 $\left\{ a_{n} \right\}$ 에 대해 $$ g(x) =\sum \limits _{n=0}^{\infty}a_{n}x^{n}= a_{0} + a_{1} x + a_{2} x^2 + \cdots $$ 와 같은 꼴로 나타나는 함수 $g$를 수열 $\left\{ a_{n}\right\}$ 의 생성함수 또는 간단히 생성함수라 한다. 수열이 $a_{</description></item><item><title>바이어슈트라스 M 판정법</title><link>https://freshrimpsushi.github.io/ko/posts/230/</link><pubDate>Tue, 29 Aug 2017 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/230/</guid><description>정리 1 함수 $f_{n}$ 와 $z \in A$ 에 대해 $|f_{n}(z)| \le M_{n}$ 을 만족하는 양수의 수열 $M_{n}$ 이 존재하고 $\displaystyle \sum_{n=1}^{\infty} M_{n}$ 이 수렴하면 $\displaystyle \sum_{n=1}^{\infty} f_{n}$ 은 $A$ 에서 절대수렴하고 균등수렴한다. 설명 M 판정법이라는 이</description></item><item><title>복소해석을 사용한 테일러 급수 유도</title><link>https://freshrimpsushi.github.io/ko/posts/231/</link><pubDate>Tue, 29 Aug 2017 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/231/</guid><description>정리 1 함수 $f: A \subseteq \mathbb{C} \to \mathbb{C}$ 가 원 $|z - \alpha| &amp;lt; r$ 에서 해석적이면 $$ f(z) = \sum_{n = 0} ^{\infty} {{f^{(n)} (\alpha)} \over {n!}} (z - \alpha)^n $$ 설명 수학의 즐거움 중 하나가 바로 일반화다. 테일러 정리부터가 평균값</description></item><item><title>로체의 정리 증명</title><link>https://freshrimpsushi.github.io/ko/posts/229/</link><pubDate>Wed, 16 Aug 2017 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/229/</guid><description>정리 1 $f$ 와 $g$ 가 단순폐경로 $\mathscr{C}$ 와 그 내부에서 해석적이고 $\mathscr{C}$ 상에서 $|g(z)| &amp;lt; |f(z)|$ 을 만족하면 $f$ 와 $f + g$ 는 $\mathscr{C}$ 내부에서 같은 수의 영점을 갖는다. 설명 원래 주어진 함수를 $h =</description></item><item><title>유리형함수의 영점과 극점</title><link>https://freshrimpsushi.github.io/ko/posts/228/</link><pubDate>Wed, 16 Aug 2017 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/228/</guid><description>정리 1 단순폐경로 $\mathscr{C}$ 에서 해석적인 함수 $f$ 가 $\mathscr{C}$ 내부에서 $Z$개의 영점과 $P$개의 극점을 갖고 $\mathscr{C}$ 상에서 $f(z) \ne 0$ 이라고 하자. 그러면 $$ {{1} \over {2 \pi i }} \int_{\mathscr{C}} {{f ' (z)} \over</description></item><item><title>슈발츠 보조정리 증명</title><link>https://freshrimpsushi.github.io/ko/posts/227/</link><pubDate>Tue, 15 Aug 2017 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/227/</guid><description>정리 1 단위원 $|z| \le 1$ 에서 해석적인 함수 $f$ 에 대해 $f(0) = 0$이고 $0 &amp;lt; |z| &amp;lt; 1$ 에서 $|f(z)| \le 1$ 이라고 하자. 그러면 $0 &amp;lt; |z| &amp;lt; 1$ 에서 $$ |f ' (0)| \le 1 \\ |f(z)| \le |z| $$ 증명 물론 일반</description></item><item><title>푸아송 적분 공식 유도</title><link>https://freshrimpsushi.github.io/ko/posts/226/</link><pubDate>Tue, 15 Aug 2017 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/226/</guid><description>공식 1 함수 $f : \mathbb{C} \to \mathbb{C}$ 가 원 $\mathscr{C}: |z| = r$ 을 포함하는 단순연결영역에서 해석적이라고 하자. 그러면 $0 &amp;lt; \rho &amp;lt; r$ 에 대해 $$ f( \rho e ^{i \phi} ) = {{1} \over { 2 \pi }} \int_{0}^{2 \pi} {{r^2 - \rho^2 } \over</description></item><item><title>가우스의 평균값 정리 증명</title><link>https://freshrimpsushi.github.io/ko/posts/224/</link><pubDate>Mon, 14 Aug 2017 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/224/</guid><description>정리 함수 $f$ 가 닫힌 원 $| z - z_{0} | \le r$ 에서 해석적이라고 하자. 그러면 $$ f(z_{0}) = {{1} \over {2 \pi}} \int_{0}^{2 \pi} f(z_{0} + r e ^{i \theta } ) d \theta $$ 설명 미분의 평균값 정리가 일반화를 거치며 여러</description></item><item><title>최대절댓값 정리 증명</title><link>https://freshrimpsushi.github.io/ko/posts/225/</link><pubDate>Mon, 14 Aug 2017 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/225/</guid><description>정리 1 함수 $f$ 가 단순폐경로 $\mathscr{C}$ 상에서 연속이고 내부에서 해석적이면서 어떤 점에서도 상수함수가 아니라고 하자. 그러면 $\mathscr{C}$ 에서 $|f(z)|$ 를 가장 크게 하는 $z = z_{0}$ 는 $\mathscr{C}$ 상에 존</description></item><item><title>대수학의 기본정리 증명</title><link>https://freshrimpsushi.github.io/ko/posts/223/</link><pubDate>Sun, 13 Aug 2017 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/223/</guid><description>정리 1 $n$차 다항함수 $P(x) = a_{0} + a_{1} x + a_{2} x^2 + \cdots + a_{n} x^{n}$ 은 중근을 포함해서 정확히 $n$개의 근을 갖는다. 설명 사실 우리는 다항식을 풀 때 당연히 해가 존재하는마</description></item><item><title>복소해석에서의 리우빌의 정리 증명</title><link>https://freshrimpsushi.github.io/ko/posts/222/</link><pubDate>Sun, 13 Aug 2017 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/222/</guid><description>정리 1 함수 $f : \mathbb{C} \to \mathbb{C}$ 가 전해석함수고 모든 $z \in \mathbb{C}$ 에 대해 $|f(z)| \le M$ 을 만족하는 양수 $M$ 이 존재하면 $f$ 는 상수함수다. 설명 $f$ 가 전해석함수이라는 말은 복소평면 전체에</description></item><item><title>프레넬 사인 적분의 매클로린 전개</title><link>https://freshrimpsushi.github.io/ko/posts/220/</link><pubDate>Sat, 12 Aug 2017 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/220/</guid><description>공식 $$ S(x) = \sqrt{{2} \over {\pi}} \int_{0}^{x} \sin (w^2) dw = \sqrt{{2} \over {\pi}} \sum_{n=0}^{\infty} {{(-1)^{n}} \over {(2n+1)! (4n+3)}} x^{4n+3} $$ 설명 프레넬은 광학을 연구했던 물리학자로써 그의 이름이 붙은 결과들을 보면 대개는 삼각함수가 연관되어있다.</description></item><item><title>프레넬 적분 증명</title><link>https://freshrimpsushi.github.io/ko/posts/221/</link><pubDate>Sat, 12 Aug 2017 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/221/</guid><description>정리 1 $$ \int_{0}^{\infty} \cos x^2 dx = \int_{0}^{\infty} \sin x^2 dx = {{1}\over{2}} \sqrt{{\pi}\over{2}} $$ 설명 프레넬 적분은 언뜻 쉬워 보이지만 보이는것만큼 간단한 결과가 아니다. 단순히 삼각함수의 제곱이라면 쉽겠지만 그 안의 $x$</description></item><item><title>e^-x^2꼴의 정적분, 가우스 적분, 오일러-푸아송 적분</title><link>https://freshrimpsushi.github.io/ko/posts/219/</link><pubDate>Fri, 11 Aug 2017 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/219/</guid><description>정리 가우스 함수 $f(x) := e^{-x^2}$ 의 전체 영역에 대한 정적분은 다음과 같다. $$ \int_{-\infty}^{\infty} e^{-x^2} dx= \sqrt{\pi} $$ 설명 물리학자 켈빈은 &amp;lsquo;이 적분이 당연해 보이는 사람을 수학자라고 한다</description></item><item><title>조합론에서의 조합의 정의와 이항정리 증명</title><link>https://freshrimpsushi.github.io/ko/posts/218/</link><pubDate>Fri, 11 Aug 2017 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/218/</guid><description>정의 유한집합의 부분집합을 조합combination이라 한다. 기수가 $n$ 인 집합에서 기수가 $k$ 인 부분집합의 수를 $\binom{n}{k}$ 혹은 $_{n}C_{k}$ 과 같이 나타내고, 이항계수bin</description></item><item><title>모레라의 정리 증명</title><link>https://freshrimpsushi.github.io/ko/posts/214/</link><pubDate>Wed, 09 Aug 2017 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/214/</guid><description>정리 1 복소함수 $f : \mathbb{C} \to \mathbb{C}$ 가 단순연결영역 $\mathscr{R}$ 에서 연속이고 $\mathscr{R}$ 에 포함된 모든 폐경로 $\mathscr{C} \subset \mathscr{R}$ 에 대해 $\displaystyle \int_{\mathscr{C}} f(z) dz = 0$ 을 만족하면 $f$ 는 $\mathscr{R}$ 에서 해석적이다. 설명 코시 정리</description></item><item><title>코시 적분 공식 유도</title><link>https://freshrimpsushi.github.io/ko/posts/215/</link><pubDate>Wed, 09 Aug 2017 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/215/</guid><description>정리 1 복소함수 $f: A \subseteq \mathbb{C} \to \mathbb{C}$ 가 단순연결영역 $\mathscr{R}$ 에서 해석적이라고 하자. $\mathscr{R}$ 에 포함된 단순폐경로 $\mathscr{C} \subset \mathscr{R}$ 가 어떤 점 $\alpha$ 를 둘러싸고 있다면 다음이 성립한다. $$ f(\alpha) = {{1}</description></item><item><title>미적분학의 기본정리 증명</title><link>https://freshrimpsushi.github.io/ko/posts/213/</link><pubDate>Tue, 08 Aug 2017 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/213/</guid><description>정리1 함수 $f$ 가 폐구간 $[a,b]$ 에서 연속이라고 하자. (1) 함수 $\displaystyle F(x) = \int_{a}^{x} f(t) dt$ 는 $[a,b]$ 에서 연속, $(a,b)$ 에서 미분가능하며 $\displaystyle {{dF(x)} \over {dx}} = f(x)$ 를 만족한다. (2) $f$ 의 임의의 부정적분 $F$ 에</description></item><item><title>적분의 평균값 정리</title><link>https://freshrimpsushi.github.io/ko/posts/212/</link><pubDate>Tue, 08 Aug 2017 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/212/</guid><description>정리 폐구간 $[a,b]$ 에서 함수 $f$ 가 연속이라고 하면 $\displaystyle f(c) = {{1}\over {b-a} } \int_{a}^{b} f(x) dx$ 를 만족하는 $c$ 가 $(a,b)$ 에 적어도 하나 존재한다. 설명 평균값의 정리와 유사하지만 말 그대로 적분에 사용</description></item><item><title>복소경로적분의 수축 보조정리</title><link>https://freshrimpsushi.github.io/ko/posts/211/</link><pubDate>Mon, 07 Aug 2017 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/211/</guid><description>정리 1 단순폐경로 $\mathscr{C}$ 를 포함하는 단순연결영역에서 $f: A \subseteq \mathbb{C} \to \mathbb{C}$ 가 $\mathscr{C}$ 내부의 점 $\alpha$ 를 제외한 모든 점에서 해석적이라고 하자. 그러면 $\mathscr{C}$ 내부에서 $\alpha$ 를 중심으로 하는 폐</description></item><item><title>복소해석에서의 코시 정리 증명</title><link>https://freshrimpsushi.github.io/ko/posts/210/</link><pubDate>Mon, 07 Aug 2017 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/210/</guid><description>정리 1 단순폐경로 $\mathscr{C}$와 그 내부에서 $f: A \subseteq \mathbb{C} \to \mathbb{C}$ 가 해석적이고 $f '$ 가 연속이라고 하자. 그러면 $$ \int_{\mathscr{C}} f(z) dz = 0 $$ 증명 $a \le t \le b$ 에 대해</description></item><item><title>특정한 분포를 따르는 확률변수들의 덧셈 총정리</title><link>https://freshrimpsushi.github.io/ko/posts/202/</link><pubDate>Sat, 05 Aug 2017 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/202/</guid><description>정리 확률 변수 $X_{1} , \cdots , X_{n}$ 들이 상호 독립이라고 하자. [1] 이항 분포: $X_i \sim \text{Bin} ( n_{i}, p)$ 이면 $$ \sum_{i=1}^{m} X_{i} \sim \text{Bin} \left( \sum_{i=1}^{m} n_{i} , p \right) $$ [2] 푸아송 분포: $X_i \sim \text{Poi}( m_{i} )$ 이면 $$ \sum_{i=1}^{n} X_{i} \sim \text{Poi} \left( \sum_{i=1}^{n}</description></item><item><title>등비수열의 부분합들도 등비수열임을 증명</title><link>https://freshrimpsushi.github.io/ko/posts/194/</link><pubDate>Wed, 02 Aug 2017 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/194/</guid><description>정리 등비수열 $a_n = a r^{n-1}$과 그 부분합 $\displaystyle S_n = \sum_{k=1}^{n} a_k$ 그리고 어떤 자연수 $m$ 에 대해 $A_n = S_{mn} - S_{m(n-1)}$ 은 등비수열이다. 설명 모르면 정말 고생한다. 예를 들어, 2</description></item><item><title>등차수열의 부분합들도 등차수열임을 증명</title><link>https://freshrimpsushi.github.io/ko/posts/193/</link><pubDate>Wed, 02 Aug 2017 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/193/</guid><description>정리 등차수열 $a_n = a + (n-1)d$과 그 부분합 $\displaystyle S_n = \sum_{k=1}^{n} a_k $ 그리고 어떤 자연수 $m$ 에 대해 $A_n = S_{mn} - S_{m(n-1)} $은 등차수열이다. 설명 모르면 정말 고생한다. 예를 들어</description></item><item><title>싱크함수의 오일러 표현 증명</title><link>https://freshrimpsushi.github.io/ko/posts/187/</link><pubDate>Tue, 01 Aug 2017 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/187/</guid><description>정의 비정규화된 싱크함수 다음의 함수 $\sinc : \mathbb{R} \to \mathbb{R}$ 을 싱크 함수sinc function라 한다. $$ \sinc x := \begin{cases} \displaystyle {{\sin x} \over {x}} &amp;amp; , \text{if } x \ne 0 \\ 1 &amp;amp; , \text{if } x = 0 \end{cases} $$</description></item><item><title>오일러의 반사 공식 유도</title><link>https://freshrimpsushi.github.io/ko/posts/192/</link><pubDate>Tue, 01 Aug 2017 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/192/</guid><description>공식 정수가 아닌 $p$ 에 대해 $$ {\Gamma (1-p) \Gamma ( p )} = { {\pi} \over {\sin \pi p } } $$ 설명 감마함수를 이용한 공식 중 가장 유명한 공식이다. 반사 공식으로 얻을 수 있는 유용한 결과로는 $</description></item><item><title>제곱수의 합 구하기</title><link>https://freshrimpsushi.github.io/ko/posts/189/</link><pubDate>Fri, 28 Jul 2017 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/189/</guid><description>공식 $$ \sum_{k=1}^{n} { k^2} = {{n(n+1)(2n+1)} \over {6}} $$ 유도 한 차수 더 높은 $k^3$와 $(k-1)^3$ 의 차를 생각해보자. $$ 1^3 - 0^3 = 3 \cdot 1^2 - 3 \cdot 1 + 1 \\ 2^3 - 1^3 = 3 \cdot 2^2 - 3 \cdot 2 + 1 \\ 3^3 - 2^3 = 3 \cdot</description></item><item><title>감마함수에 대한 바이어슈트라스의 무한곱</title><link>https://freshrimpsushi.github.io/ko/posts/150/</link><pubDate>Wed, 26 Jul 2017 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/150/</guid><description>정리 감마함수 $\Gamma : (0, \infty) \to \mathbb{R}$ 에 대해 다음이 성립한다. $$ {1 \over \Gamma (x)} = x e^{\gamma x } \lim_{n \to \infty} \prod_{k=1}^{n} \left( 1 + {x \over k} \right) e^{- {x \over k} } $$ $\gamma$ 는 오일러-마스케로니 상수다. 설명 $$ \Gamma (x)</description></item><item><title>실수의 조밀성 증명</title><link>https://freshrimpsushi.github.io/ko/posts/185/</link><pubDate>Tue, 25 Jul 2017 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/185/</guid><description>정리 두 실수 $a&amp;lt;b$ 에 대해 $a&amp;lt;r&amp;lt;b$ 를 만족하는 $r \in \mathbb{R}$ 이 존재한다 설명 실수상에선 그 어떤 구간을 생각하든 그 사이엔 반드시 또 다른 실수가 존재한다. 아무리 작게 쪼개더라도 그곳</description></item><item><title>해석학의 여러가지 급수판정법 총정리</title><link>https://freshrimpsushi.github.io/ko/posts/186/</link><pubDate>Tue, 25 Jul 2017 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/186/</guid><description>개요 몇 가지 급수판정법들을 별도의 증명 없이 소개한다. 증명은 각 판정법의 문서를 참고하자. 이 포스트에서는 다음과 같은 노테이션을 공유한다: $\mathbb{N}$ 은 자연수를 모두</description></item><item><title>해석학에서 아르키메데스의 원리</title><link>https://freshrimpsushi.github.io/ko/posts/181/</link><pubDate>Mon, 24 Jul 2017 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/181/</guid><description>정리 양수 $a$ 와 실수 $b$ 에 대해, $an&amp;gt;b$ 를 만족하는 자연수 $n$ 이 존재한다. 설명 어떤 $b$를 가져오더라도 항상 그보다는 큰 $a$ 의 $n$ 배수를 생각할 수 있다는 뜻이다. 쉽게 말</description></item><item><title>해석학의 세 가지 공리: 3 완비성 공리</title><link>https://freshrimpsushi.github.io/ko/posts/180/</link><pubDate>Mon, 24 Jul 2017 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/180/</guid><description>공리1 집합 $E \subset \mathbb{R}$ 이 공집합이 아니고 $E$ 가 위로 유계면 상한 $\sup(E) &amp;lt; \infty$ 가 존재한다. 설명 체 공리와 순서 공리는 이미 알던 걸 어렵게 다시 썼지만 완비성 공리는 언뜻 보기에 그</description></item><item><title>해석학의 세 가지 공리: 1 체 공리</title><link>https://freshrimpsushi.github.io/ko/posts/178/</link><pubDate>Sun, 23 Jul 2017 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/178/</guid><description>공리1 실수 $a,b,c \in \mathbb{R}$ 와 연산 $+,\cdot$ 에 대해 다음의 성질들이 성립한다고 받아들이자. (A1) 덧셈에 대한 폐쇄성: $a+b \in \mathbb{R}$ (A2) 덧셈에 대한 결합법칙: $(a+b) + c = a + (b+c)$ (A3) 덧셈에 대한</description></item><item><title>해석학의 세 가지 공리: 2 순서 공리</title><link>https://freshrimpsushi.github.io/ko/posts/177/</link><pubDate>Sun, 23 Jul 2017 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/177/</guid><description>공리1 실수 $ a,b,c \in \mathbb{R}$ 에 대해, 다음의 성질들이 성립한다고 받아들이자. 삼분성: 주어진 $a,b$ 에 대해서, $a&amp;lt;b$ 혹은 $a&amp;gt;b$ 혹은 $a=b$ 이어야한다 추이성: $a&amp;lt;b$ 이고 $b&amp;lt;c$ 이면 $a&amp;lt;c$ 가산성</description></item><item><title>등비수열의 합 구하기</title><link>https://freshrimpsushi.github.io/ko/posts/170/</link><pubDate>Fri, 21 Jul 2017 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/170/</guid><description>공식 초항이 $a$ 고 공비가 $r$인 등비수열 $a_{n} = a r^{n-1}$ 에 대해, $$ \sum_{k=1}^{n} a_{k}= {{a (1- r^{n} ) } \over {1-r}} $$ 증명 $\displaystyle S= \sum_{k=1}^{n} a_{k}$ 라고 하자. 그러면 $$ S= a + ar + \cdots + ar^{n-2} + ar^{n-1} $$ 양변에 $r$ 을 곱하</description></item><item><title>등차수열의 합 구하기</title><link>https://freshrimpsushi.github.io/ko/posts/169/</link><pubDate>Fri, 21 Jul 2017 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/169/</guid><description>공식 초항이 $a$ 고 공차가 $d$ 인 등차수열 $a_{n} = a+(n-1)d$ 에 대해 $$ \sum_{k=1}^{n} a_{k}= {{n \left\{ 2a + (n-1)d \right\} } \over {2}} $$ 설명 처음에 한 번 보고는 다시 이 형태로 쓸 일이 없긴 한 급수지만 이 모양을 잊되 증명을</description></item><item><title>쌍곡함수의 미분법</title><link>https://freshrimpsushi.github.io/ko/posts/168/</link><pubDate>Thu, 20 Jul 2017 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/168/</guid><description>정리1 $$ \left( \sinh x \right)^{\prime} = \cosh x $$ $$ \left( \cosh x \right)^{\prime} = \sinh x $$ $$ \left( \tanh x \right)^{\prime} = \text{sech}^{2} x $$ 설명 쌍곡함수의 미분법은 사실 증명할 것도 외울 것도 별로 없다. 증명은 그냥 단순히 정의를 이용</description></item><item><title>역삼각함수의 미분법</title><link>https://freshrimpsushi.github.io/ko/posts/167/</link><pubDate>Thu, 20 Jul 2017 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/167/</guid><description>정리1 $$ \begin{align*} \left( \sin^{-1}x \right)^{\prime} &amp;amp;= {{1} \over {\sqrt{1-x^2}}} \\ \left( \cos^{-1}x \right)^{\prime} &amp;amp;= -{{1} \over {\sqrt{1-x^2}}} \\ \left( \tan^{-1}x \right)^{\prime} &amp;amp;= {{1} \over {1+x^2}} \end{align*} $$ 설명 각각 아크사인, 아크코사인, 아크탄젠트 로 읽는다. 세상에 이런 것도 미분이 되나 싶지만</description></item><item><title>그린의 정리 증명</title><link>https://freshrimpsushi.github.io/ko/posts/166/</link><pubDate>Wed, 19 Jul 2017 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/166/</guid><description>정리1 곡선 $\mathcal{C}$ 가 평면 상의 영역 $S = [a,b] \times [c,d]$ 안에서 시계반대방향을 가지고 조각마다 스무스한 단순 폐경로라고 하자. 함수 $P,Q : \mathbb{R}^2 \to \mathbb{R}$ 이 $\mathcal{C}$ 에서 연속이고 그 도함수도 연</description></item><item><title>푸비니의 정리 증명</title><link>https://freshrimpsushi.github.io/ko/posts/165/</link><pubDate>Wed, 19 Jul 2017 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/165/</guid><description>정리1 2차원 영역 $R : [a,b] \times [c,d]$ 에 대해 함수 $f : R \to \mathbb{R}$ 을 정의하자. $f(x,\cdot)$ 가 $[c,d]$ 에서 적분가능하고 $f(\cdot,y)$ 가 $[a,b]$ 에서 적분가능하며 $f$ 가 $R$ 에서 적분가능하면 $$ \iint _{R} f dA = \int_{a}^{b} \int_{c}^{d}</description></item><item><title>ML 보조정리 증명</title><link>https://freshrimpsushi.github.io/ko/posts/162/</link><pubDate>Tue, 18 Jul 2017 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/162/</guid><description>정리 1 함수 $f$ 가 적분경로 $\mathscr{C}: z = z(t), t \in [a,b]$ 에서 조각마다 연속라고 하자. 양수 $\displaystyle L = \int_{a}^{b} |z&amp;rsquo;(t)| dt$ 는 $\mathscr{C}$ 의 길이고, $\mathscr{C}$ 상의 모든 점에 대해 $|f(z)| \le M$ 을 만족하는 양수 $M$ 이 존재한</description></item><item><title>코시-리만 방정식의 역이 성립하는 조건</title><link>https://freshrimpsushi.github.io/ko/posts/160/</link><pubDate>Tue, 18 Jul 2017 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/160/</guid><description>정리 복소영역 $A \subseteq \mathbb{C}$ 에서 정의된 복소함수 $f: A \to \mathbb{C}$ 가 실수값을 가지는 함수 $u,v$ 에 대해 $$ f(z) = f(x+iy) = u(x,y) + iv(x,y) $$ 로 나타날 수 있고, $u,v$ 가 $x,y$ 에 대해 연속인 일차편도함수를 가</description></item><item><title>피타고라스의 정리 증명</title><link>https://freshrimpsushi.github.io/ko/posts/161/</link><pubDate>Tue, 18 Jul 2017 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/161/</guid><description>정리 직각삼각형의 빗변의 길이를 $c$, 나머지 두 변의 길이를 $a,b$라고 하면 아래의 식이 성립한다. $$ a^2 + b^2 = c^2 $$ 설명 여기저기서 쓰이는 건 둘째치고 그 자체만으</description></item><item><title>드 무아브르의 정리를 이용한 삼각함수의 삼배각 공식 유도</title><link>https://freshrimpsushi.github.io/ko/posts/154/</link><pubDate>Mon, 17 Jul 2017 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/154/</guid><description>공식 $$ \sin 3\theta = 3 \sin \theta - 4 \sin^{3} {\theta} \\ \cos 3\theta = 4 \cos^{3} {\theta} - 3 \cos \theta $$ 설명 기존의 변형 공식들은 보통 삼각함수의 덧셈정리를 여러번 써서 얻을 수 있었다. 예를 들어 배각 공식은 $\sin(a</description></item><item><title>복소해석에서 삼각함수와 쌍곡함수의 관계</title><link>https://freshrimpsushi.github.io/ko/posts/157/</link><pubDate>Mon, 17 Jul 2017 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/157/</guid><description>정의 1 복소함수로써의 쌍곡함수 $\sinh, \cosh : \mathbb{C} \to \mathbb{C}$ 를 아래와 같이 정의하자. $$ \sinh z := { {e^{z} - e^{-z}} \over 2 } \\ \cosh z := { {e^{z} + e^{-z}} \over 2 } $$ 정리 2 $$ \begin{align*} \sinh (iz) =&amp;amp; i \sin z \\ \sin (iz) =&amp;amp; i</description></item><item><title>복소해석에서 삼각함수와 지수함수의 관계</title><link>https://freshrimpsushi.github.io/ko/posts/155/</link><pubDate>Mon, 17 Jul 2017 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/155/</guid><description>정리 1 복소함수로써의 사인, 코사인 함수 $\sin , \cos : \mathbb{C} \to \mathbb{C}$ 는 다음과 같다. $$ \sin z = { {e^{iz} - e^{-iz}} \over 2 i } \\ \cos z = { {e^{iz} + e^{-iz}} \over 2 } $$ 설명 사실 정리라기보단 그냥 정의</description></item><item><title>코시-리만 방정식</title><link>https://freshrimpsushi.github.io/ko/posts/159/</link><pubDate>Mon, 17 Jul 2017 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/159/</guid><description>정리 1 함수 $f: A \subseteq \mathbb{C} \to \mathbb{C}$ 가 $\mathscr{R}$ 에서 해석적이라고 하자. 만약 실함수 $u,v$ 에 대해 $$ f(z) = f(x+iy) = u(x,y) + iv(x,y) $$ 이라면 $u,v$ 는 $x,y$ 에 대한 일차편도함수가 존재하며 $\mathscr{R}$ 상의 모든 점에서</description></item><item><title>오일러-마스케로니 상수의 수렴성 증명</title><link>https://freshrimpsushi.github.io/ko/posts/151/</link><pubDate>Sun, 16 Jul 2017 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/151/</guid><description>정리 $$ \gamma = \lim_{n \to \infty} \left( \sum_{k=1}^{n} \left( { 1 \over k } \right) - \ln{n} \right) = 0.577215664 \cdots $$ 설명 리만-제타 함수와 연관짓자면 $\gamma$ $0$번째 스틸체스 상수 $\gamma_{0}$ 기도 하다. $\gamma$ 는 짧게는 그냥 오일러 상수 라</description></item><item><title>감마함수에 대한 오일러의 극한 공식 유도</title><link>https://freshrimpsushi.github.io/ko/posts/149/</link><pubDate>Sat, 15 Jul 2017 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/149/</guid><description>공식 1 감마함수 $\Gamma : (0, \infty) \to \mathbb{R}$ 에 대해 다음이 성립한다. $$ \Gamma (x) = \lim_{n \to \infty} {{n^x n!} \over {x(x+1)(x+2) \cdots (x+n) }} $$ 설명 기존에 알고 있던 감마함수는 적분 꼴 $$ \Gamma (x) = \int_{0}^{\infty} t^{x-1} e^{-t} dt $$ 의 모양이고</description></item><item><title>적분을 이용한 타원의 넓이 구하기</title><link>https://freshrimpsushi.github.io/ko/posts/145/</link><pubDate>Fri, 14 Jul 2017 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/145/</guid><description>공식 타원 $\displaystyle {x^2 \over a^2} + {y^2 \over b^2} = 1$ 의 넓이는 $ab \pi$ 이다. 설명 특히 $a=b=r$, 즉 반지름이 $r$ 인 원 $x^2 + y^2=r^2$ 의 넓이는 익히 아는대로 $r^2 \pi$ 다. 증명 타원의 넓이를 구하기 위해선 색칠된</description></item><item><title>실수의 허수승의 크기는 항상 1이다</title><link>https://freshrimpsushi.github.io/ko/posts/126/</link><pubDate>Thu, 29 Jun 2017 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/126/</guid><description>정리 $$ \left| r^{i \theta} \right| = 1 $$ $0$ 이 아닌 실수 $r, \theta$ 에 대해 $r^{\theta}$ 의 허수승의 크기는 $1$ 이다. 설명 흔히 $\left| e^{i \theta} \right| = 1$ 는 잘 숙지하고 있지만 밑이 딱히 $e$ 가 아닌 어떤 실수라도 상관없</description></item><item><title>미적분학에서의 오일러 공식</title><link>https://freshrimpsushi.github.io/ko/posts/112/</link><pubDate>Tue, 23 May 2017 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/112/</guid><description>정리 오일러 공식: $$ { e }^{ ix }= \cos x + i \sin x $$ 오일러 등식: $$ { e }^{ i\pi }+1=0 $$ 설명 오일러 공식Euler&amp;rsquo;s formula은 그 형태 자체가 워낙</description></item><item><title>정수론에서의 합동</title><link>https://freshrimpsushi.github.io/ko/posts/106/</link><pubDate>Thu, 11 May 2017 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/106/</guid><description>정의 1 $a \equiv b \pmod{m}$ $\iff$ 정수 $a$, $b$, $m$ 에 대해 $a = b + mk$ 를 만족하는 정수 $k$ 가 존재한다. 정리 $a_{1} \equiv b_{1} \pmod{m}$ 과 $a_{2} \equiv b_{2} \pmod{m}$ 이 성립한다고 하자. [1] 덧셈: $a_{1} + a_{2} \equiv b_{1} + b_{2} \pmod{m}$ [2] 뺄셈</description></item><item><title>감마함수</title><link>https://freshrimpsushi.github.io/ko/posts/95/</link><pubDate>Sun, 30 Apr 2017 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/95/</guid><description>정의 다음과 같이 정의된 함수 $\Gamma : (0, \infty) \to \mathbb{R}$ 를 감마 함수라고 한다. $$ \Gamma (x) := \int_{0}^{\infty} t^{x-1} e^{-t} dt $$ 설명 위 수식에서 적분에 초점을 두면 오일러 적분이라고도 부른다. 감마함수는</description></item><item><title>아크탄젠트 함수의 급수전개</title><link>https://freshrimpsushi.github.io/ko/posts/86/</link><pubDate>Thu, 27 Apr 2017 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/86/</guid><description>정리1 $$ \tan ^{ -1 } x = \sum _{ n=0 }^{ \infty }{ \frac { (-1) ^{ n } { x } ^ { 2n+1 } } { 2n+1 } } $$ 설명 $\arctan$으로 쓰든 $\tan ^{-1}$로 쓰든 상관없다. 여러 삼각함</description></item><item><title>이차행렬의 곱의 성분의 합을 쉽게 구하는 공식</title><link>https://freshrimpsushi.github.io/ko/posts/70/</link><pubDate>Sat, 22 Apr 2017 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/70/</guid><description>공식 이차행렬 $\begin{bmatrix} { a }&amp;amp;{ b } \\ { c }&amp;amp;{ d } \end{bmatrix} \begin{bmatrix} { p }&amp;amp;{ q } \\ { r }&amp;amp;{ s } \end{bmatrix}$ 의 성분의 합은 다음과 같다. $$ {(a+c)(p+q)}+{(b+d)(r+s)} $$ 설명 두 이차행렬을 주고 그 곱의 성분의 합을 구하라는 문</description></item><item><title>유클리드 호제법 증명</title><link>https://freshrimpsushi.github.io/ko/posts/65/</link><pubDate>Thu, 20 Apr 2017 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/65/</guid><description>알고리즘 두 정수 $a \ge b$ 에 대해 $\text{gcd}(a,b)$ 는 다음과 같이 구할 수 있다. 의사코드 알고리즘: 유클리드 호제법 In 정수 $a, b$ 가 주어진다. 1. $r_{0} \gets a$ 2. $r_{1} \gets b$ 3. while $r_{i+1} \ne 0$ 4. 다음이</description></item><item><title>합동방정식에 대한 대수학의 기본정리 증명</title><link>https://freshrimpsushi.github.io/ko/posts/66/</link><pubDate>Thu, 20 Apr 2017 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/66/</guid><description>정리 1 어떤 소수 $p$ 에 대해 $p\nmid a_{ 0 }$ 라 하면 모든 계수가 정수인 다항식 $$ f(x)=a_{ 0 }x^{ d }+a_{ 1 }x^{ d-1 }+ \cdots +a_{ d-1 }x+a_{ d } $$ 에 대해 방정식 $f(x)\equiv 0 \pmod{p}$ 는 많아도 $d$ 개의 합동이 아닌 해를 가</description></item><item><title>유클리드의 증명: 소수는 무한히 존재한다</title><link>https://freshrimpsushi.github.io/ko/posts/64/</link><pubDate>Sat, 15 Apr 2017 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/64/</guid><description>정리 1 소수는 무한히 많이 존재한다. 설명 소수가 무한하다는 것을 증명하는 방법은 여러가지가 있다. 그 중에서도 가장 간단한 유클리드의 방법을 소개하도록 하겠다.</description></item><item><title>자연로그의 급수꼴 유도와 교대조화급수의 수렴성 증명</title><link>https://freshrimpsushi.github.io/ko/posts/58/</link><pubDate>Tue, 11 Apr 2017 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/58/</guid><description>정리 $$ \ln(1-x)=\sum _{ n=0 }^{ \infty }{ \frac { -{ x }^{ n+1 } }{ n+1 } } $$ 설명 $\ln(1-x)$ 의 급수꼴은 비교적 쉽게 구할 수 있다. $\ln(1+x)$의 경우는 정리의 결과로 얻은 식에 $x$ 대신 $-x$ 를 대</description></item><item><title>지수 함수 사인 함수 코사인 함수의 테일러 전개</title><link>https://freshrimpsushi.github.io/ko/posts/59/</link><pubDate>Tue, 11 Apr 2017 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/59/</guid><description>정리1 $$ \begin{equation} { { e ^ x } }=\sum _{ n=0 }^{ \infty }{ \frac { { x } ^{ n } }{ n! } } \end{equation} $$ $$ \begin{equation} \sin x=\sum _{ n=0 }^{ \infty }{ \frac { { x } ^{ 2n+1 } }{ (2n+1)! }{ { (-1) }^{ n } } } \end{equation} $$ $$ \begin{equation} \cos x=\sum _{ n=0 }^{ \infty }{ \frac</description></item><item><title>근의 공식 유도 무작정 따라하기</title><link>https://freshrimpsushi.github.io/ko/posts/56/</link><pubDate>Thu, 06 Apr 2017 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/56/</guid><description>공식 이차방정식 $ax^{2}+bx+c=0$ (단, $a\neq 0$)에 대해 $$ x=\dfrac{ -b\pm \sqrt { b^{2}-4ac } }{2a} $$ 설명 이차방정식이 주어졌을 때 그 근은 공식을 통해 쉽게 구할 수 있다. 유도 전략: 공식 유도의 핵심은 바</description></item><item><title>무한급수가 수렴하면 무한수열은 0으로 수렴함을 증명</title><link>https://freshrimpsushi.github.io/ko/posts/54/</link><pubDate>Thu, 06 Apr 2017 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/54/</guid><description>정리 $\displaystyle \sum _{ n=1 }^{ \infty }{ { a }_{ n }}$ 이 수렴하면 $\displaystyle \lim _{ n\to \infty }{ { a }_{ n }}=0$ 설명 처음 접하면 직관과 달라 조금 당황스러울 수 있는 정리로, 왜 역이 성리하지 않는지 궁금할 수</description></item><item><title>회전변환 행렬의 거듭제곱 공식 증명</title><link>https://freshrimpsushi.github.io/ko/posts/55/</link><pubDate>Thu, 06 Apr 2017 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/55/</guid><description>정리 모든 자연수 $n$ 에 대해 다음이 성립한다. $$ \begin{bmatrix} { \cos \theta }&amp;amp;{ -\sin \theta } \\ { \sin \theta }&amp;amp;{ \cos \theta } \end{bmatrix} ^{n} = \begin{bmatrix} { \cos n\theta }&amp;amp;{ -\sin n\theta } \\ { \sin n\theta }&amp;amp;{ \cos n\theta } \end{bmatrix} $$ 설명 원점을 중심으로 $\th</description></item><item><title>분수 함수의 역함수와 이차정사각 행렬의 역행렬의 모양</title><link>https://freshrimpsushi.github.io/ko/posts/53/</link><pubDate>Wed, 05 Apr 2017 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/53/</guid><description>정리 분수함수 $\displaystyle f(x)=\frac { ax+b }{ cx+d }$ 의 역함수는 $$ f^{ -1 }(x)=\frac { dx-b }{ -cx+a } $$ 2차 정사각행렬 $\begin{bmatrix} a &amp;amp; b \\ c &amp;amp; d \end{bmatrix}$ 의 역행렬은 $$ \frac { 1 }{ ad-bc } \begin{bmatrix} d &amp;amp; -b \\ -c &amp;amp; a \end{bmatrix} $$ 설명 단순</description></item><item><title>포물선의 접선의 방정식 유도</title><link>https://freshrimpsushi.github.io/ko/posts/52/</link><pubDate>Wed, 05 Apr 2017 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/52/</guid><description>유도 기울기가 주어진 경우 우선은 기울기가 주어진 경우를 먼저 보도록 하자. 포물선 $y^{ 2 }=4px$ 에 접하는 직선의 방정식이 $y=mx+n$일 때, 두 도형은 한 점에서만 만</description></item><item><title>코시-슈바르츠 부등식 증명</title><link>https://freshrimpsushi.github.io/ko/posts/51/</link><pubDate>Mon, 03 Apr 2017 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/51/</guid><description>정리 $$ ({a}^{2}+{b}^{2})({x}^{2}+{y}^{2})\ge { (ax+by) }^{ 2 } $$ 증명 $$ \begin{align*} &amp;amp; ({a}^{2}+{b}^{2})({x}^{2}+{y}^{2})-{ (ax+by) }^{ 2 } \\ =&amp;amp; {a}^{2}{x}^{2}+{b}^{2}{x}^{2}+{a}^{2}{y}^{2}+{b}^{2}{y}^{2}-{ (ax+by) }^{ 2 } \\ =&amp;amp; {b}^{2}{x}^{2}+{a}^{2}{y}^{2}-2axby \\ =&amp;amp; { (ay-bx) }^{ 2 } \\ \ge&amp;amp; 0 \end{align*} $$ 이므로, 정리하면 다음을 얻는다. $$ ({a}^{2}+{b}^{2})({x}^{2}+{y}^{2})\ge { (ax+by) }^{ 2 } $$ ■ 설명 빠르</description></item><item><title>한 직선과 x축 y축으로 둘러싸인 삼각형의 넓이</title><link>https://freshrimpsushi.github.io/ko/posts/50/</link><pubDate>Mon, 03 Apr 2017 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/50/</guid><description>개요 최댓값 혹은 최솟값, 접선을 구할 수 있는가를 묻는 문제 등에서 꽤 자주 나오는 것이 이런 삼각형의 넓이 $S$ 다. 물론 삼각형의 넓이를 구하는 건 어렵지 않지만 간단한 공</description></item><item><title>포커 족보별 경우의 수 확률 구하기</title><link>https://freshrimpsushi.github.io/ko/posts/48/</link><pubDate>Wed, 29 Mar 2017 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/48/</guid><description>문양과 끗수의 정의 확률 이전에 포커 자체를 잘 모른다면 족보를 찾아서 알아보는 걸 추천한다. 확률을 구하기에 앞서 두 가지 정의를 내리자: 문양: 집합 {♠,◇,♤,</description></item><item><title>삼각함수의 덧셈정리 여러가지 증명</title><link>https://freshrimpsushi.github.io/ko/posts/44/</link><pubDate>Tue, 28 Mar 2017 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/44/</guid><description>정리 $$ \sin\left( \alpha +\beta \right) =\sin\alpha \cos\beta +\cos\alpha \sin\beta \\ \sin\left( \alpha -\beta \right) =\sin\alpha \cos\beta -\cos\alpha \sin\beta \\ \cos\left( \alpha +\beta \right) =\cos\alpha \cos\beta -\sin\alpha \sin\beta \\ \cos\left( \alpha -\beta \right) =\cos\alpha \cos\beta +\sin\alpha \sin\beta \\ \tan\left( \alpha +\beta \right) =\frac { \tan\alpha +\tan\beta }{ 1-\tan\alpha \tan\beta } \\ \tan\left( \alpha -\beta \right) =\frac { \tan\alpha -\tan\beta }{ 1+\tan\alpha \tan\beta } $$ 증명 코사인</description></item><item><title>자연로그의 거듭제곱의 적분법</title><link>https://freshrimpsushi.github.io/ko/posts/45/</link><pubDate>Tue, 28 Mar 2017 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/45/</guid><description>공식 $$ \int {{(\ln x)}^{ n }} dx=x{{(\ln x)}^{ n }}-\int n{{(\ln x)}^{ n-1 }}dx $$ 설명 적분 문제를 풀다보면 심심치 않게 보게 되는 유형이다. 이런 문제들을 풀 때 정직하게 부분적분으로 풀면 시간을 너무 많이 빼</description></item><item><title>로피탈의 정리 증명</title><link>https://freshrimpsushi.github.io/ko/posts/39/</link><pubDate>Fri, 24 Mar 2017 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/39/</guid><description>정리1 $f(x)$ 와 $g(x)$ 가 $x=a$ 의 근방에서 미분가능하고 $g ' (x) \ne 0$ 이며 $\displaystyle \lim _{x \to a} f(x) = \lim _{x \to a} g(x) = 0$ 이면 $$ \lim _{x \to a} {{f(x)} \over {g(x)}} = \lim _{x \to a} {{f ' (x)} \over {g ' (x)}} $$ 설명 수험생들에</description></item><item><title>미분적분학에서 롤의 정리 증명</title><link>https://freshrimpsushi.github.io/ko/posts/36/</link><pubDate>Fri, 24 Mar 2017 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/36/</guid><description>정리1 함수 $f(x)$ 가 $[a,b]$ 에서 연속이고 $(a,b)$ 에서 미분가능하며 $f(a)=f(b)$ 면 $f ' (c)=0$ 를 만족하는 $c$ 가 $(a,b)$ 에 적어도 하나 존재한다. 설명 고등학교 과정에선 평균값의 정리만을 증명하기 위</description></item><item><title>미분적분학에서 평균값 정리 증명</title><link>https://freshrimpsushi.github.io/ko/posts/37/</link><pubDate>Fri, 24 Mar 2017 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/37/</guid><description>정리1 함수 $f(x)$ 가 $[a,b]$ 에서 연속이고 $(a,b)$ 에서 미분가능하면 $\displaystyle f '(c)={{f(b)-f(a)}\over{b-a}}$ 를 만족하는 $c$ 가 $(a,b)$ 에 적어도 하나 존재한다. 설명 그냥 자주 쓰는 정도가 아니라 MVT라는 약어도 사용할</description></item><item><title>우함수와 기함수</title><link>https://freshrimpsushi.github.io/ko/posts/40/</link><pubDate>Fri, 24 Mar 2017 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/40/</guid><description>정의 $f(-x) = f(x)$ 를 만족하는 함수 $f(x)$ 를 우함수even라고 한다. $f(-x) = -f(x)$ 를 만족하는 함수 $f(x)$ 를 기함수odd라고 한다. 설명 우함수는 좌표평면에서 $y$ 축에 대칭인 함수,</description></item><item><title>코시의 평균값 정리 증명</title><link>https://freshrimpsushi.github.io/ko/posts/38/</link><pubDate>Fri, 24 Mar 2017 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/38/</guid><description>정리1 $a &amp;lt; b$ 이라고 하자. 만약 함수 $f,g : \mathbb{R} \to \mathbb{R}$ 가 $[a,b]$ 의 모든 점에서 연속이고 모든 $x \in (a,b)$ 에서 미분가능하며 $g ' (x) \ne 0$ 이면, 다음을 만족하는 $c \in (a,b)$ 가 적어도 하나</description></item><item><title>테일러 정리 증명</title><link>https://freshrimpsushi.github.io/ko/posts/41/</link><pubDate>Fri, 24 Mar 2017 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/41/</guid><description>정리1 함수 $f(x)$ 가 $[a,b]$ 에서 연속이고 $(a,b)$ 에서 $n$ 번 미분가능하면 다음을 만족하는 $\xi \in (a,b)$ 가 존재한다. $$ \begin{align*} f(b) =&amp;amp; \sum_{k=0}^{n-1} {{(b-a)^{k}\over{k!}}{f^{(k)}( a )}} + {(b-a)^{n}\over{n!}}{f^{(n)}(\xi)} \\ =&amp;amp; {f(a)} + {(b-a)f ' (a)} + \cdots + {(b-a)^{n-1}\over{(n-1)!}}{f^{(n-1)}(a)} + {(b-a)^{n}\over{(n)!}}{f^{(n)}(\xi)} \end{align*} $$ 설명 수학</description></item><item><title>페르마의 정리 증명</title><link>https://freshrimpsushi.github.io/ko/posts/35/</link><pubDate>Fri, 24 Mar 2017 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/35/</guid><description>정리1 함수 $f(x)$ 가 $x=c$ 에서 극대 혹은 극소면서 $f ' (c)$ 가 존재하면 $f ' (c) = 0$ 설명 보통 고등학교 교과서엔 롤의 정리까지만 소개되어 있으나 롤의 정리를 엄밀하게 증명하기</description></item><item><title>함수와 함수의 테일러 급수가 같을 조건</title><link>https://freshrimpsushi.github.io/ko/posts/42/</link><pubDate>Fri, 24 Mar 2017 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/42/</guid><description>정리1 함수 $f$ 가 점 $a$ 근방에서 무한히 미분가능하고, $\displaystyle f(x) = \sum_{n=0}^{\infty} {{f^{(n)} (a)}\over{n!}} {(x-a)}^n$ 일 필요충분조건은 어떤 $\xi \in \mathscr{H} \left\{ x , a \right\}$ 에 대해 $$ \lim_{n \to \infty} {{f^{(n)} (\xi)}\over{n!}} {(x-a)}^n = 0 $$ $\xi \in \mathscr{H} \left\{ x , a \right\}$ 라</description></item><item><title>다양한 삼각함수의 적분법</title><link>https://freshrimpsushi.github.io/ko/posts/31/</link><pubDate>Thu, 23 Mar 2017 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/31/</guid><description>개요 적분 문제를 풀다보면 삼각함수의 적분을 상당히 많이 하게 된다. 그리고 이 적분법들에 익숙해지면 삼각함수도 다항함수처럼 빠르게 적분할 수 있다. 시컨트 함수의</description></item><item><title>두 사건이 독립이면 여사건끼리도 독립임을 증명</title><link>https://freshrimpsushi.github.io/ko/posts/28/</link><pubDate>Thu, 23 Mar 2017 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/28/</guid><description>정리 다음은 서로 동치다. $$ P(A \cap B) = P(A)P(B) \\ P(A \cap B^c)=P(A)P(B^c) \\ P(A^c \cap B)=P(A^c)P(B) \\ P(A^c \cap B^c)=P(A^c)P(B^c) $$ 설명 알아두면 큰 도움이 되는 팩트일 뿐만이 아니라 공식으로써도 유용하다. 증명 $P(A \cap B) = P(A)P(B)$ 이</description></item><item><title>두 사건이 서로 배반이면 서로 종속임을 증명</title><link>https://freshrimpsushi.github.io/ko/posts/27/</link><pubDate>Thu, 23 Mar 2017 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/27/</guid><description>정리 두 사건 $A,B$ 에 대해 $B=A^c$ 면 $P(A\cap B) \neq P(A)P(B)$ 설명 굳이 수식을 통한 증명이 없더라도 상식적으로 배반이면 독립일 리가 없다. 한 사건이 일어났을 때 다른 사건이 일어나지 않는다는</description></item><item><title>베이즈 정리의 증명과 사전분포, 사후분포</title><link>https://freshrimpsushi.github.io/ko/posts/29/</link><pubDate>Thu, 23 Mar 2017 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/29/</guid><description>정리 1 표본공간 $S$ 와 사건 $A$, 확률 $P$에 대해서 $\left\{ S_1, S_2, \cdots ,S_n \right\}$ 가 $S$ 의 분할이면 다음이 성립한다. $$ P(S_k|A)=\frac { P(S_k)P(A|S_k) }{ \sum _{ k=1 }^{ n }{ P(S_k)P(A|S_k) } } $$ 정의 베이즈 정리의 우변에 있는</description></item><item><title>이차함수의 극점 빠르게 구하기</title><link>https://freshrimpsushi.github.io/ko/posts/30/</link><pubDate>Thu, 23 Mar 2017 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/30/</guid><description>공식 이차함수 $f(x)=c(x-a)(x-b)$ 의 극점은 $\frac { a+b }{ 2 }$ (단, $c\neq 0$) 인수분해가 가능한 이차함수의 경우에는 굳이 이런 저런 계산할 것 없이 극점을 알 수 있다.생각해보면 당연하지만,</description></item><item><title>11의 배수판정법 더 간단한 증명</title><link>https://freshrimpsushi.github.io/ko/posts/23/</link><pubDate>Tue, 21 Mar 2017 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/23/</guid><description>빌드업 이 포스트에서는 진법에 대한 편의를 위해 다음과 같은 표기를 사용한다. $$ [a_{n} a_{n-1} &amp;hellip; a_{1} a_{0}] := a_{n} \cdot 10^{n} + a_{n-1} \cdot 10^{n-1} +&amp;hellip;+ a_{1} \cdot 10^{1} + a_{0} \cdot 10^{0} $$ 예를 들어 $5714$ 는 다음과 같이 나타낼</description></item><item><title>3의 배수판정법과 9의 배수판정법의 증명</title><link>https://freshrimpsushi.github.io/ko/posts/21/</link><pubDate>Tue, 21 Mar 2017 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/21/</guid><description>정리 각 자리 숫자를 모두 더해 $3$ 의 배수면 $3$ 의 배수, $9$ 의 배수면 $9$ 의 배수다. 설명 예로써 $8142$ 는 $8142=3 \cdot 2714$ 로 $3$의 배수고, 실제로 $8+1+4+2=15$ 는 $3$ 의 배수다. $1945125$ 는 $1945125=9 \cdot 216125$ 로 $</description></item><item><title>7의 배수판정법과 13의 배수판정법의 증명</title><link>https://freshrimpsushi.github.io/ko/posts/22/</link><pubDate>Tue, 21 Mar 2017 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/22/</guid><description>빌드업 이 포스트에서는 진법에 대한 편의를 위해 다음과 같은 표기를 사용한다. $$ [a_{n} a_{n-1} &amp;hellip; a_{1} a_{0}] := a_{n} \cdot 10^{n} + a_{n-1} \cdot 10^{n-1} +&amp;hellip;+ a_{1} \cdot 10^{1} + a_{0} \cdot 10^{0} $$ 예를 들어 $5714$ 는 다음과 같이 나타낼</description></item><item><title>이항계수 합 공식</title><link>https://freshrimpsushi.github.io/ko/posts/25/</link><pubDate>Tue, 21 Mar 2017 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/25/</guid><description>공식 이항계수 합 공식 1 이항계수의 합은 다음과 같다. $$ 2^{n} = \sum_{k=0}^{n} \binom{n}{k} $$ 따름정리: 멱집합의 기수 유한집합 $S$ 의 기수가 $n = |S|$ 이면 그 멱집합 $2^{S}$ 의 기수는 $2^{n}$ 이다. 유도 이</description></item><item><title>가비의 리 증명</title><link>https://freshrimpsushi.github.io/ko/posts/16/</link><pubDate>Thu, 16 Mar 2017 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/16/</guid><description>정리 $bdf(b+d)\neq 0$ 이면 $$ \frac { a }{ b }=\frac { c }{ d }=\frac { e }{ f } \implies \frac { a+c }{ b+d }=\frac { e }{ f } $$ 설명 &amp;lsquo;가비&amp;rsquo;는 다른 게 아니라 두 한자 더할 가加 견줄</description></item><item><title>구분구적법으로 구한 면적과 정적분의 관계</title><link>https://freshrimpsushi.github.io/ko/posts/12/</link><pubDate>Thu, 16 Mar 2017 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/12/</guid><description>공식 $$ \begin{align*} &amp;amp; \lim _{ n\to \infty }{ \sum _{ k=1 }^{ n }{ f\left( a+\frac { p }{ n }k \right) \frac { p }{ n } } } \\ =&amp;amp; \int _{ a }^{ a+p }{ f(x)dx } \\ =&amp;amp; \int _{ 0 }^{ p }{ f(a+x)dx } \\ =&amp;amp; \int _{ 0 }^{ 1 }{ pf(a+px)dx } \end{align*} $$ 설명 이따금 보</description></item><item><title>낙하한 물체의 속도를 구하는 공식 유도</title><link>https://freshrimpsushi.github.io/ko/posts/13/</link><pubDate>Thu, 16 Mar 2017 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/13/</guid><description>공식 $g$ 가 중력가속도라고 하자. 어떤 물체가 중력에 의해 높은 곳에서 낮은 곳으로 떨어졌을때, 이 물체의 속도를 낙하한 거리 $h$ 에 대한 공식으로 나타내면 다음과 같다.</description></item><item><title>드 무아브르의 정리 증명</title><link>https://freshrimpsushi.github.io/ko/posts/9/</link><pubDate>Thu, 16 Mar 2017 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/9/</guid><description>정리 $z = r \text{cis} \theta$ 이면 모든 자연수 $n$ 에 대해 $z^n = r^n \text{cis} n\theta$ 이 성립한다. $\text{cis} \theta: = \cos \theta + i \sin \theta$ 증명 수학적 귀납법을 사용하자. $n=1$ 에 대해서는 자명하고, $n=k$ 에 대해서도 성</description></item><item><title>삼각함수의 평행이동과 도함수의 관계</title><link>https://freshrimpsushi.github.io/ko/posts/11/</link><pubDate>Thu, 16 Mar 2017 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/11/</guid><description>공식 [1] 사인: $$\sin{\left( \theta +\frac { n }{ 2 }\pi \right)}={ \sin }^{ (n) }\theta$$ [2] 코사인: $$\cos{\left( \theta +\frac { n }{ 2 }\pi \right)}={ \cos }^{ (n) }\theta$$ $(n)$ 은 $n$ 번만큼 미분을 했다는 뜻이다. 설명 쉽게 말해서, 90˚만큼 움직일 때</description></item><item><title>에네스트롬-카케야 정리 증명</title><link>https://freshrimpsushi.github.io/ko/posts/5/</link><pubDate>Thu, 16 Mar 2017 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/5/</guid><description>정리 1 $\left\{ a_{i} \right\}_{i=0}^{n} \subset \mathbb{R}$ 이 $a_0 &amp;gt; a_1 &amp;gt; \cdots &amp;gt; a_n &amp;gt; 0$ 라고 하자. 그러면 다항 함수 $$ P(z) := a_0 + a_1 z + \cdots + a_{n-1} z^{n-1} + a_n z^n $$ 의 모든 근 $z \in \mathbb{C}$ 는 $|z| \ge 1$ 를 만족한다. 증명 만약 $P(z) = 0$</description></item><item><title>자주 쓰는 이차함수의 정적분</title><link>https://freshrimpsushi.github.io/ko/posts/15/</link><pubDate>Thu, 16 Mar 2017 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/15/</guid><description>공식 $$ \int _{ \alpha }^{ \beta }{ (x-\alpha )(x-\beta )dx }=-\frac { { (\beta -\alpha ) } ^ { 3 } }{ 6 } $$ 설명 문제를 풀다보면 생각보다 이런 꼴의 정적분을 할 일이 많다. 풀이를 빠르게 해주는데 외엔 전혀 쓸모</description></item><item><title>조화급수의 발산성에 대한 오렘의 증명</title><link>https://freshrimpsushi.github.io/ko/posts/17/</link><pubDate>Thu, 16 Mar 2017 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/17/</guid><description>정리 조화급수는 발산한다. $$ \sum _{ n=1 }^{ \infty }{ \frac { 1 }{ n } }=\infty $$ 설명 조화급수는 언뜻 보기에 그 값이 계속 작아지므로 수렴할 것도 같지만 오렘은 이것이 발산한다는 것을</description></item><item><title>조화평균을 활용해 평균속력 구하기</title><link>https://freshrimpsushi.github.io/ko/posts/14/</link><pubDate>Thu, 16 Mar 2017 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/14/</guid><description>공식 거리 $S$ 만큼 갈 때 속력 $a$ 로 이동하고 올 때 속력 $b$ 로 이동했다면 평균속력 $v$ 는 다음과 같이 두 속력의 조화평균으로 나타난다. $$ v = \frac { 2ab }{ a+b } $$ 설명 시속 60</description></item><item><title>평행한 두 직선 사이의 거리를 구하는 공식 유도</title><link>https://freshrimpsushi.github.io/ko/posts/4/</link><pubDate>Thu, 16 Mar 2017 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/4/</guid><description>공식 $$ d=\frac { |2k| }{ \sqrt { m^{ 2 }+1 } } $$ 설명 이차곡선의 접선을 구하는 문제를 풀다보면 두 접선 사이의 거리를 구하라는 경우가 종종 있다. 물론 적당한 한 점과 다른 직선의 거</description></item><item><title>산술평균과 기하평균 조화평균사이의 부등식</title><link>https://freshrimpsushi.github.io/ko/posts/3/</link><pubDate>Tue, 14 Mar 2017 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/3/</guid><description>정의 $n$ 개의 양수 ${x}_{1},{x}_{2},\cdots,{x}_{n}$ 에 대해 산술, 기하, 조화평균은 다음과 같다. 산술평균 : $$ \sum _{ k=1 }^{ n }{ \frac { {x}_{k} }{ n } }=\frac { {x}_{1}+{x}_{2}+\cdots+{x}_{n} }{ n } $$ 기하평균 : $$ \prod _{ k=1 }^{ n }{ { {x}_{k} }^{ \frac {</description></item><item><title>2025 여름 오마카세: 상상 속의 수</title><link>https://freshrimpsushi.github.io/ko/posts/2707/</link><pubDate>Thu, 08 Sep 2005 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/2707/</guid><description>소개 우리는 이차방정식 $x^{2} + 1 = 0$ 의 해 $i$ 를 &amp;lsquo;상상 속의 수&amp;rsquo;라는 의미에서 허수라 부르지만, 사실 무리수가 인정되지 않던 시대부터 수라</description></item><item><title>하츠오브아이언4에서 WASD로 화면이동하는 법</title><link>https://freshrimpsushi.github.io/ko/posts/2674/</link><pubDate>Mon, 04 Jul 2005 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/ko/posts/2674/</guid><description>개요 이 포스트의 다른 제목은 &amp;lsquo;윈도우즈에서 키 바인딩 설정하는 법&amp;rsquo;이다. 리눅스와는 달리 윈도우즈는 키 바인딩key binding</description></item></channel></rss>