<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>매트랩 on FreshrimpRestaurant</title>
    <link>https://freshrimpsushi.github.io/en/categories/%EB%A7%A4%ED%8A%B8%EB%9E%A9/</link>
    <description>Recent content in 매트랩 on FreshrimpRestaurant</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <lastBuildDate>Mon, 11 Jan 2021 00:00:00 +0000</lastBuildDate>
    <atom:link href="https://freshrimpsushi.github.io/en/categories/%EB%A7%A4%ED%8A%B8%EB%9E%A9/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>How to Print and Save a 2D Array as a Heatmap Image in MATLAB</title>
      <link>https://freshrimpsushi.github.io/en/posts/1948/</link>
      <pubDate>Mon, 11 Jan 2021 00:00:00 +0000</pubDate>
      <guid>https://freshrimpsushi.github.io/en/posts/1948/</guid>
      <description>Imagesc imagesc function allows you to display a 2D array as a heatmap. colorbar is a setting that outputs a color bar indicating the scale. N=2^8; p=phantom(&amp;#39;Modified Shepp-Logan&amp;#39;,N); figure() imagesc(p) colorbar Saving Method 1 You can use the saveas function to save the figure displayed above. The setting gcf refers to the current figure. Then, the picture below is saved. N=2^8; p=phantom(&amp;#39;Modified Shepp-Logan&amp;#39;,N); figure() imagesc(p) colorbar saveas(gcf,&amp;#39;phantom.png&amp;#39;) Method 2 You</description>
    </item>
    <item>
      <title>How to Initialize the Workspace and Remove All Variables in MATLAB</title>
      <link>https://freshrimpsushi.github.io/en/posts/1758/</link>
      <pubDate>Sun, 06 Sep 2020 00:00:00 +0000</pubDate>
      <guid>https://freshrimpsushi.github.io/en/posts/1758/</guid>
      <description>Method clear Command Typing clear in the command window will reset the workspace. Clearing Workspace (Alt+T+O) Right-clicking on the workspace window allows you to select &amp;lsquo;Clear Workspace (O)&amp;rsquo;. Pressing it resets the workspace. This can also be done using the shortcut Alt+T+O, but it does not work when an editor is opened. Deleting by Selection You can delete by dragging to select everything or by pressing Ctrl+a to select all</description>
    </item>
    <item>
      <title>Measuring Code Execution Time in MATLAB</title>
      <link>https://freshrimpsushi.github.io/en/posts/1467/</link>
      <pubDate>Fri, 03 Jan 2020 00:00:00 +0000</pubDate>
      <guid>https://freshrimpsushi.github.io/en/posts/1467/</guid>
      <description>Methods tic X1=rand(2^7); X2=rand(2^8); X3=rand(2^9); X4=rand(2^10); X5=rand(2^11); toc Y1=imrotate(X1,45,&amp;#39;bicubic&amp;#39;,&amp;#39;crop&amp;#39;); toc Y2=imrotate(X2,45,&amp;#39;bicubic&amp;#39;,&amp;#39;crop&amp;#39;); toc Y3=imrotate(X3,45,&amp;#39;bicubic&amp;#39;,&amp;#39;crop&amp;#39;); toc Y4=imrotate(X4,45,&amp;#39;bicubic&amp;#39;,&amp;#39;crop&amp;#39;); toc Y5=imrotate(X5,45,&amp;#39;bicubic&amp;#39;,&amp;#39;crop&amp;#39;); toc tic: Starts a stopwatch for measuring execution time. toc: Returns the current time on the stopwatch. Note that it&amp;rsquo;s not measuring the time between toc and toc. To measure the computation time of calculating Y1~Y6 in the example code above, you should enter the code as follows. tic X1=rand(2^7); X2=rand(2^8); X3=rand(2^9); X4=rand(2^10);</description>
    </item>
    <item>
      <title>Resizing Images in MATLAB</title>
      <link>https://freshrimpsushi.github.io/en/posts/1465/</link>
      <pubDate>Thu, 02 Jan 2020 00:00:00 +0000</pubDate>
      <guid>https://freshrimpsushi.github.io/en/posts/1465/</guid>
      <description>Methods imresize(A, scale): Returns a new image by adjusting the size of A by a factor of scale. If A is a 10x10 image and a scale of 0.5 is input, it returns a 5x5 image. You can also adjust the size directly as follows. imresize(A, [m n]): Returns an image with m rows and n columns. Below are example codes and their results. X=imread(&amp;#39;test\_{i}mage.jpg&amp;#39;); figure() imshow(X) saveas(gcf,&amp;#39;X.png&amp;#39;) title(&amp;#39;X&amp;#39;) Y1=imresize(X,0.5);</description>
    </item>
    <item>
      <title>How to Create Equally Spaced Row Vectors in MATLAB</title>
      <link>https://freshrimpsushi.github.io/en/posts/1376/</link>
      <pubDate>Tue, 08 Oct 2019 00:00:00 +0000</pubDate>
      <guid>https://freshrimpsushi.github.io/en/posts/1376/</guid>
      <description>Method linspace(a,b,n): Returns a row vector of $[a,b]$ divided into $n$ equal intervals. If the number of elements is not specified, it returns a $1\times 100$ vector. It is used when the number of intervals is important, not the length of the intervals. a: m :b : Returns a row vector of $[a,b]$ divided by equal intervals of $m$. If the interval is not specified, the interval is set to</description>
    </item>
    <item>
      <title>Selecting Specific Rows and Columns in a Matrix in MATLAB</title>
      <link>https://freshrimpsushi.github.io/en/posts/1362/</link>
      <pubDate>Mon, 30 Sep 2019 00:00:00 +0000</pubDate>
      <guid>https://freshrimpsushi.github.io/en/posts/1362/</guid>
      <description>Methods $m \times n$ Given a data in the form of a matrix, let&amp;rsquo;s call it $A$. If you want to use only a specific part of matrix $A$, you can use the following method. B=A(a:b, c:d) Running the code as above, $B$ becomes a $(b-a) \times (d-c)$ matrix containing the data from row $a$ to $b$, column $c$ to $d$ of matrix $A$. Below is the example code and</description>
    </item>
    <item>
      <title>How to Specify Colors, Line Styles, and Marker Types in MATLAB Graphs</title>
      <link>https://freshrimpsushi.github.io/en/posts/1330/</link>
      <pubDate>Thu, 26 Sep 2019 00:00:00 +0000</pubDate>
      <guid>https://freshrimpsushi.github.io/en/posts/1330/</guid>
      <description>Properties The properties of a graph can be specified as follows. Graph Color Marker Line Style Red r Dot . Solid - Green g Star * Dotted : Blue b X x Dash-dot -. Black k Circle o (letter o) Dashed -- Yellow y Plus + Magenta m Square s White w Diamond d Cyan c Star p Triangle down v Triangle up ^ Triangle left &amp;lt; Triangle right &amp;gt;</description>
    </item>
    <item>
      <title>Rotating an Image in MATLAB</title>
      <link>https://freshrimpsushi.github.io/en/posts/1328/</link>
      <pubDate>Wed, 25 Sep 2019 00:00:00 +0000</pubDate>
      <guid>https://freshrimpsushi.github.io/en/posts/1328/</guid>
      <description>Method imrotate(I,angle,method,bbox) I: Image to be rotated. angle: The angle of rotation in degrees. method: The interpolation method. Options are &amp;rsquo;nearest&amp;rsquo;, &amp;lsquo;bilinear&amp;rsquo;, &amp;lsquo;bicubic&amp;rsquo;. If nothing is specified, &amp;rsquo;nearet&amp;rsquo; is applied. X = phantom(&amp;#39;Modified Shepp-Logan&amp;#39;,64); figure() imagesc(X) title(&amp;#39;X&amp;#39;) Y1=imrotate(X,30,&amp;#39;nearest&amp;#39;,&amp;#39;crop&amp;#39;); Y2=imrotate(X,30,&amp;#39;bilinear&amp;#39;,&amp;#39;crop&amp;#39;); Y3=imrotate(X,30,&amp;#39;bicubic&amp;#39;,&amp;#39;crop&amp;#39;); figure() subplot(1,3,1) imagesc(Y1) title(&amp;#39;Y1 - nearest&amp;#39;) subplot(1,3,2) imagesc(Y2) title(&amp;#39;Y2 - bilinear&amp;#39;) subplot(1,3,3) imagesc(Y3) title(&amp;#39;Y3 - bicubic&amp;#39;) bbox: Specifies the size of the output image. &amp;rsquo;loose&amp;rsquo; enlarges the size of the</description>
    </item>
    <item>
      <title>Creating Special Matrices in MATLAB</title>
      <link>https://freshrimpsushi.github.io/en/posts/1327/</link>
      <pubDate>Tue, 24 Sep 2019 00:00:00 +0000</pubDate>
      <guid>https://freshrimpsushi.github.io/en/posts/1327/</guid>
      <description>Zero Matrix zeros(): Returns a zero matrix. zeros(n): Returns a $n\times n$ zero matrix. zeros(m,n): Returns a $n\times m$ zero matrix. zeros(size(A)): Returns a zero matrix of the same size as matrix A. Matrix with All Elements as 1 ones(): Returns a matrix where all elements are 1. However, for operations between two matrices, it&amp;rsquo;s more convenient to just use 1. It&amp;rsquo;s obvious that the code below is much simpler</description>
    </item>
    <item>
      <title>How to Perform Element-wise Operations on Two Matrices in MATLAB</title>
      <link>https://freshrimpsushi.github.io/en/posts/1326/</link>
      <pubDate>Mon, 23 Sep 2019 00:00:00 +0000</pubDate>
      <guid>https://freshrimpsushi.github.io/en/posts/1326/</guid>
      <description>Multiplication times(), .*: Returns the result of multiplying each element of two matrices. The operation can only proceed if the two matrices are of the exact same size, or one of them is a scalar, or if one is a row vector with the same row size, or a column vector with the same column size. If the sizes are different, the smaller matrix is treated as if it were</description>
    </item>
    <item>
      <title>Matrix Size and Related Functions in MATLAB</title>
      <link>https://freshrimpsushi.github.io/en/posts/1323/</link>
      <pubDate>Sat, 21 Sep 2019 00:00:00 +0000</pubDate>
      <guid>https://freshrimpsushi.github.io/en/posts/1323/</guid>
      <description>Functions size(): Returns a row vector that contains the lengths of the rows and columns of the matrix. It is useful for creating a zero matrix of the same size as the matrix being dealt with. zeros(size(A)): Returns a zero matrix of the same size as A. length(): Returns the larger number among the rows and columns. In the case of row vectors and column vectors, it is the same</description>
    </item>
    <item>
      <title>How to Output Multiple Figures on One Page in MATLAB</title>
      <link>https://freshrimpsushi.github.io/en/posts/1247/</link>
      <pubDate>Sat, 17 Aug 2019 00:00:00 +0000</pubDate>
      <guid>https://freshrimpsushi.github.io/en/posts/1247/</guid>
      <description>Method The subplot() function can be used to print multiple figures on one page. The first and second parameters respectively indicate the rows and columns of the chessboard on which images will be displayed, deciding the layout of the figures. The third parameter determines the sequence in which the specific figure will be placed. Below is the code and the actual output. X1=Phantom(); X2=radon(X1); X3=fft(X2); X4=iradon(X2,0:179); subplot(2,2,1) imagesc(X1) title(&amp;#34;Phantom&amp;#34;); subplot(2,2,2)</description>
    </item>
    <item>
      <title>List of Special Symbols Available for Graphs in MATLAB</title>
      <link>https://freshrimpsushi.github.io/en/posts/1191/</link>
      <pubDate>Wed, 17 Jul 2019 00:00:00 +0000</pubDate>
      <guid>https://freshrimpsushi.github.io/en/posts/1191/</guid>
      <description>Method When labeling graphs in MATLAB to indicate what each axis represents, you can use xlabel and ylabel. It&amp;rsquo;s also possible to use special symbols, bold, and italic styles. x=-3*pi:0.2:3* pi; y=sin(x-pi/6); plot(x,y); xlabel(&amp;#39;\beta&amp;#39;), ylabel(&amp;#39;\nabla f(x)&amp;#39;),; x=-3*pi:0.2:3* pi; y=sin(x-pi/6); plot(x,y); xlabel(&amp;#39;진폭{\bf Volt}&amp;#39;), ylabel(&amp;#39</description>
    </item>
    <item>
      <title>Importing Excel Data into MATLAB</title>
      <link>https://freshrimpsushi.github.io/en/posts/1163/</link>
      <pubDate>Fri, 28 Jun 2019 00:00:00 +0000</pubDate>
      <guid>https://freshrimpsushi.github.io/en/posts/1163/</guid>
      <description>Method Matlab provides the functionality to import data from Excel files. First, click on &amp;lsquo;Import Data&amp;rsquo; from the Home menu. Select the Excel file that contains the data you want to import. Then, you can select which data to import, which is automatically selected initially. Confirm and click &amp;lsquo;Import Selected&amp;rsquo;. From &amp;lsquo;Import Selected&amp;rsquo;, click on &amp;lsquo;Import Data&amp;rsquo;. Then, the data from the Excel file is input into a variable with</description>
    </item>
    <item>
      <title>How to Save Data Calculated in MATLAB to an Excel File</title>
      <link>https://freshrimpsushi.github.io/en/posts/1150/</link>
      <pubDate>Sun, 23 Jun 2019 00:00:00 +0000</pubDate>
      <guid>https://freshrimpsushi.github.io/en/posts/1150/</guid>
      <description>Method When you want to organize the data calculated in MATLAB into Excel and the amount of data is not too much, you can manually copy and paste. However, for a matrix of data like 128*128 shown in the picture above, that method is not feasible. In this case, you can use xlswrite to save the data into an Excel file. Compared to the picture above, xlswrite(&#39;test&#39;, Y) has been</description>
    </item>
    <item>
      <title>How to Comment and Uncomment Multiple Lines at Once in MATLAB</title>
      <link>https://freshrimpsushi.github.io/en/posts/1149/</link>
      <pubDate>Sat, 22 Jun 2019 00:00:00 +0000</pubDate>
      <guid>https://freshrimpsushi.github.io/en/posts/1149/</guid>
      <description>Method To comment out a section that you want, drag to select the area and then press Ctrl+R. This will comment out the entire selected portion. To undo, drag to select the same area and press Ctrl+T, which will remove the % from each line.</description>
    </item>
  </channel>
</rss>
