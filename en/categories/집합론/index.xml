<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>집합론 on FreshrimpRestaurant</title>
    <link>https://freshrimpsushi.github.io/en/categories/%EC%A7%91%ED%95%A9%EB%A1%A0/</link>
    <description>Recent content in 집합론 on FreshrimpRestaurant</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <lastBuildDate>Tue, 12 Nov 2019 00:00:00 +0000</lastBuildDate>
    <atom:link href="https://freshrimpsushi.github.io/en/categories/%EC%A7%91%ED%95%A9%EB%A1%A0/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Injection, Surjection, Bijection, Inverse Function</title>
      <link>https://freshrimpsushi.github.io/en/posts/471/</link>
      <pubDate>Tue, 12 Nov 2019 00:00:00 +0000</pubDate>
      <guid>https://freshrimpsushi.github.io/en/posts/471/</guid>
      <description>Definition 1 Let&amp;rsquo;s say $x \in X$, $y \in Y$, and $f: X \to Y$ are functions. For every $x_{1}, x_{2} \in X$, if $x_{1} \ne x_{2} \implies f(x_{1}) \ne f(x_{2})$ then $f$ is called injective. If $f(X) = Y$, then $f$ is called surjective. If $f$ is both injective and surjective, it is called bijective. $I : X \to X$ that satisfies $I(x) = x$ is called an Identity</description>
    </item>
    <item>
      <title>Functions and Mappings Rigorously Defined by Set Theory, Sequences</title>
      <link>https://freshrimpsushi.github.io/en/posts/470/</link>
      <pubDate>Sun, 10 Nov 2019 00:00:00 +0000</pubDate>
      <guid>https://freshrimpsushi.github.io/en/posts/470/</guid>
      <description>Definitions 1 Let&amp;rsquo;s assume two sets $X$, $Y$ that are not empty sets are given. A binary relation $f \subset (X,Y)$ is called a function if it satisfies the following and is denoted as $f : X \to Y$. $$ (x ,y_{1}) \in f \land (x,y_{2}) \in f \implies y_{1} = y_{2} $$ For the function $f : X \to Y$, $\text{Dom} (f) = X$ is called the domain of</description>
    </item>
    <item>
      <title>Axiom of Infinity</title>
      <link>https://freshrimpsushi.github.io/en/posts/1348/</link>
      <pubDate>Wed, 23 Oct 2019 00:00:00 +0000</pubDate>
      <guid>https://freshrimpsushi.github.io/en/posts/1348/</guid>
      <description>Axioms $$ \exists U \left( \emptyset \in U \land \forall X ( X \in U \implies S(X) \in U) \right) $$ There exists a set $U$ that contains the empty set and $X$ as elements, and also contains $S(X)$ as an element. For a set $X$, $S(X)$ is defined as a set that is equivalent to $S(X):= X \cup \left\{ X \right\}$. Explanation Rather than tediously explaining why this is</description>
    </item>
    <item>
      <title>Definition of Sets and Propositional Functions</title>
      <link>https://freshrimpsushi.github.io/en/posts/1316/</link>
      <pubDate>Fri, 04 Oct 2019 00:00:00 +0000</pubDate>
      <guid>https://freshrimpsushi.github.io/en/posts/1316/</guid>
      <description>Definitions 1 Set: A collection of distinct objects that are the subjects of our intuition or thought is called a set. Element: An object that belongs to a set is called an element. Propositional Function: For an element $x$ of the set $U$, a proposition $p(x)$ that is either true or false is called a propositional function in $U$. Explanation In mathematics, the concept of a set is as important</description>
    </item>
    <item>
      <title>Propositions and Connectives, Truth Tables</title>
      <link>https://freshrimpsushi.github.io/en/posts/1299/</link>
      <pubDate>Sun, 22 Sep 2019 00:00:00 +0000</pubDate>
      <guid>https://freshrimpsushi.github.io/en/posts/1299/</guid>
      <description>Definition 1 A statement that is either true or false is called a proposition. Propositions have a single truth value – either true or false. If the truth values of two propositions $p$ and $q$ are the same, then $p$ and $q$ are said to be logically equivalent, denoted as $p \equiv q$. The following symbols are used as connectives to form compound propositions: Negation: $\lnot$ Conjunction: $\land$ Disjunction: $\lor$</description>
    </item>
  </channel>
</rss>
