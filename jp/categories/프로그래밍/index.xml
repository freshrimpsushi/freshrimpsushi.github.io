<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>프로그래밍 on 生エビ寿司屋</title><link>https://freshrimpsushi.github.io/jp/categories/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%B0%8D/</link><description>Recent content in 프로그래밍 on 生エビ寿司屋</description><generator>Hugo -- gohugo.io</generator><language>jp</language><lastBuildDate>Sun, 11 Feb 2024 00:00:00 +0000</lastBuildDate><atom:link href="https://freshrimpsushi.github.io/jp/categories/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%B0%8D/index.xml" rel="self" type="application/rss+xml"/><item><title>Python matplotlibで望む任意の位置にサブプロットを描画するか、重ねて描画する方法</title><link>https://freshrimpsushi.github.io/jp/posts/3551/</link><pubDate>Sun, 11 Feb 2024 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/3551/</guid><description>概要 plt.subplotやgridspecを使えば、グリッドを基にした簡単または複雑なレイアウトでサブプロットを描くことができる。本文では</description></item><item><title>Python matplotlibで複雑なレイアウトのサブプロットを描く方法</title><link>https://freshrimpsushi.github.io/jp/posts/3550/</link><pubDate>Fri, 09 Feb 2024 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/3550/</guid><description>概要 基本的にplt.subplot(nrows, ncols, index)やplt.subplots(nrows, ncols)でグリッド形式のサブプロッ</description></item><item><title>Python matplotlibでサブプロットを描く方法</title><link>https://freshrimpsushi.github.io/jp/posts/3549/</link><pubDate>Wed, 07 Feb 2024 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/3549/</guid><description>概要 一つのfigureに複数の図を描く方法をいくつか紹介する。以下の方法はシンプルなレイアウトを描く方法で、より複雑なレイアウトを描く方法は</description></item><item><title>EasyDict: 辞書の便利な使用のためのPythonパッケージ</title><link>https://freshrimpsushi.github.io/jp/posts/3547/</link><pubDate>Sat, 03 Feb 2024 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/3547/</guid><description>概要1 辞書を便利に使用できるようにするeasydictパッケージを紹介する。パッケージ内のEasyDictを使用すると、辞書の値valueを</description></item><item><title>Pythonで既存の出力を新しい出力で置き換えて進行状況を表示する方法</title><link>https://freshrimpsushi.github.io/jp/posts/3507/</link><pubDate>Wed, 15 Nov 2023 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/3507/</guid><description>日本語訳 コードが実行される時、進行状況を知りたいなら、print()関数を使うと以下のように表示される。 for i in range(1,6): print(f&amp;#34;진행</description></item><item><title>Pythonで'False'、'True'などの文字列をBool型に変換する方法</title><link>https://freshrimpsushi.github.io/jp/posts/3505/</link><pubDate>Sat, 11 Nov 2023 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/3505/</guid><description>コード Pythonで文字列&amp;quot;False&amp;quot;をbool型のFalseに変えたい場合、最初に試すべきコードは下のようである。 &amp;gt;&amp;gt;&amp;gt;</description></item><item><title>Python Matplotlib 基礎＆カスタムラインスタイル</title><link>https://freshrimpsushi.github.io/jp/posts/3503/</link><pubDate>Tue, 07 Nov 2023 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/3503/</guid><description>基本設定1 &amp;lsquo;-&amp;rsquo; もしくは &amp;lsquo;solid&amp;rsquo;: 実線 &amp;lsquo;&amp;ndash;&amp;rsquo; もしくは &amp;lsquo;dashed&amp;rsquo;: 破線 &amp;lsquo;-.&amp;rsquo; もしくは &amp;lsquo;dashdot&amp;rsquo;: 一点鎖線 &amp;lsquo;:&amp;rsquo; もしくは &amp;lsquo;dotted&amp;rsquo;: 点線 &amp;rsquo;none&amp;rsquo;, &amp;lsquo;None&amp;rsquo;, &amp;rsquo; &amp;lsquo;, もしくは &amp;lsquo;&amp;rsquo;: 線なし linestyle または lsで線のスタイルを設定できる</description></item><item><title>CSSカラー名札</title><link>https://freshrimpsushi.github.io/jp/posts/3459/</link><pubDate>Wed, 09 Aug 2023 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/3459/</guid><description>개요1 名前のある140以上のCSSカラーパレットです。 코드</description></item><item><title>マップとリデュースを用いたプログラミング</title><link>https://freshrimpsushi.github.io/jp/posts/2380/</link><pubDate>Thu, 04 May 2023 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/2380/</guid><description>定義 マップ 関数 $f : X \to Y$ の集合を$F$としよう。以下のように定義される高階関数 $\text{map}$ をマップという。 $$ \text{map} : F \times 2^{X} \to 2^{Y} \\ \text{map} \left( f , \left\{ x_{1} , \cdots , x_{n} \right\} \right) :=</description></item><item><title>プログラミングにおける高階関数</title><link>https://freshrimpsushi.github.io/jp/posts/2378/</link><pubDate>Sun, 30 Apr 2023 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/2378/</guid><description>定義 プログラミングで、関数が第一級オブジェクトの場合、関数を引数に取ったり返したりする関数を高階関数と呼ぶ。その逆で、高階関数ではない関数を</description></item><item><title>ターミナルでテキストファイルのエンコーディングを確認する方法</title><link>https://freshrimpsushi.github.io/jp/posts/2282/</link><pubDate>Thu, 20 Oct 2022 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/2282/</guid><description>ガイド 1 この方法を使用するには、Pythonがインストールされている必要がある。ターミナルにpip install chardetと入力してchardetを</description></item><item><title>Pythonでのタプルによるインデクシング方法</title><link>https://freshrimpsushi.github.io/jp/posts/3299/</link><pubDate>Wed, 21 Sep 2022 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/3299/</guid><description>2次元配列 $A$を2次元配列としよう。すると$A[(y,x)]$と$A[y,x]$は同じ機能をする。 &amp;gt;&amp;gt;&amp;gt; import numpy as np &amp;gt;&amp;gt;&amp;gt; A = np.arange(16).reshape(4,4) &amp;gt;&amp;gt;&amp;gt; A array([[ 0, 1, 2, 3], [ 4, 5, 6,</description></item><item><title>VS CodeでCtrl+Shift+Cを使ってデフォルトのターミナルを変更する方法</title><link>https://freshrimpsushi.github.io/jp/posts/2215/</link><pubDate>Wed, 08 Jun 2022 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/2215/</guid><description>ガイド ビジュアルスタジオコードでCtrl + Shift + Cを押すと、ターミナルウィンドウが表示されます。さまざまなテストや理由で意外とよく使う機能なん</description></item><item><title>Python matplotlibで軸を削除する方法</title><link>https://freshrimpsushi.github.io/jp/posts/3197/</link><pubDate>Tue, 01 Mar 2022 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/3197/</guid><description>コード1 グラフの軸を表示したくない場合は、plt.axis('off') （または &amp;lsquo;off&amp;rsquo;の代わりにFalse）を使</description></item><item><title>Python matplotlibで垂直線と水平線を描く方法</title><link>https://freshrimpsushi.github.io/jp/posts/3195/</link><pubDate>Fri, 25 Feb 2022 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/3195/</guid><description>コード1 2 import numpy as np import matplotlib.pyplot as plt x = np.linspace(0,2*np.pi,num=1000) y = np.sin(x) plt.plot(x,y) plt.show() axhline(y=0, xmin=0, xmax=1, **kwargs) axvline(x=0, ymin=0, ymax=1, **kwargs) 水平線はplt.axhline()で、垂直線はplt.axvline()で追加でき</description></item><item><title>Python Pandasデータフレームの列と行の名前を取得する方法</title><link>https://freshrimpsushi.github.io/jp/posts/3189/</link><pubDate>Sun, 13 Feb 2022 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/3189/</guid><description>コード import pandas as pd data = { &amp;#39;나이&amp;#39; : [26,23,22,22,21,21,20,20,20,20,18,17], &amp;#39;키&amp;#39; : [160, 163, 163, 162, 164, 163, 164, 150, 158, 162, 172, 173], &amp;#39;별명&amp;#39; : [&amp;#39;땡모&amp;</description></item><item><title>Pythonパッケージ、ライブラリ、モジュールのバージョンを確認する方法</title><link>https://freshrimpsushi.github.io/jp/posts/2155/</link><pubDate>Tue, 08 Feb 2022 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/2155/</guid><description>ガイド コンソールで以下のコマンドを使うと、バージョンを確認できる。全体的に見るとlistの方が見やすいが、特定のパッケージのバージョンを確認</description></item><item><title>Python matplotlibでグラフのスケール範囲を指定する方法</title><link>https://freshrimpsushi.github.io/jp/posts/3185/</link><pubDate>Sat, 05 Feb 2022 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/3185/</guid><description>コード1 plt.clim()を使って、画像のスケールを固定することができる。ただし、plt.imshow()はデフォルトでカラーバーをプリン</description></item><item><title>Python shutilモジュールの総まとめ</title><link>https://freshrimpsushi.github.io/jp/posts/2151/</link><pubDate>Mon, 31 Jan 2022 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/2151/</guid><description>概要 1 shutilは、ファイルやディレクトリに関する高レベル命令を集めた標準モジュールだ。Pythonを使う理由の一つは、プログラムを素早く</description></item><item><title>Python npy ファイルが開かない時の解決方法</title><link>https://freshrimpsushi.github.io/jp/posts/3181/</link><pubDate>Fri, 28 Jan 2022 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/3181/</guid><description>エラー # code1 解決法 npyファイルを開いて上記のようなエラーに遭遇した場合、次のように allow_pickle=True を追加して解決できます。 # code2</description></item><item><title>Pythonで複数のforループを1行で書く方法</title><link>https://freshrimpsushi.github.io/jp/posts/3179/</link><pubDate>Mon, 24 Jan 2022 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/3179/</guid><description>コード インデックスiが2まで、jが4まで繰り返されることを望むなら、for文を次のように書けばいい。 &amp;gt;&amp;gt;&amp;gt; for i in range(3): ... for j in range(5): ... if j == 4: ... print((i,j)) ... else :</description></item><item><title>Python OSモジュールの総まとめ</title><link>https://freshrimpsushi.github.io/jp/posts/2147/</link><pubDate>Sun, 23 Jan 2022 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/2147/</guid><description>Overview 1 os is a base module that collects simple commands for operating system-dependent features. One of the reasons to use Python is that it is easy and quick to write programs, but it is very inconvenient that features that logically should be there are mixed with the shutil module. When handling the file system, you need to use both modules equally. It&amp;rsquo;s a summary, but it&amp;rsquo;s not just scraped</description></item><item><title>Pythonでプログラムを一時停止する3つの方法</title><link>https://freshrimpsushi.github.io/jp/posts/2145/</link><pubDate>Wed, 19 Jan 2022 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/2145/</guid><description>コード 1 input() input() モジュールを呼び出す必要がなく、メッセージを表示しないので、最も便利でよく使われる方法だ。入力を待っている間、プログラムは停止さ</description></item><item><title>Pythonでスライシングする際の注意点</title><link>https://freshrimpsushi.github.io/jp/posts/3143/</link><pubDate>Sat, 13 Nov 2021 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/3143/</guid><description>説明 Pythonで文字列やリストなどをインデックスするとき、最後のインデックスを超えるインデックスを入力すると、以下のようなエラーが出る。 &amp;gt;&amp;gt;&amp;gt;</description></item><item><title>WindowsでPythonを使ったTensorFlow GPUのインストール方法</title><link>https://freshrimpsushi.github.io/jp/posts/2099/</link><pubDate>Tue, 19 Oct 2021 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/2099/</guid><description>ガイド TensorFlow GPUのインストールは、通常のプログラムのようにインストーラー一つで簡単にできるわけではない。色々な問題があった場合、PCを一度初期</description></item><item><title>Linuxでスワップメモリを初期化する方法</title><link>https://freshrimpsushi.github.io/jp/posts/2086/</link><pubDate>Thu, 23 Sep 2021 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/2086/</guid><description>ガイド sudo swapoff -a sudo swapon -a メモリ不足の問題をスワップメモリで一時的に回避できるけど、関連する作業が終わった後にスワップメモリを空にしないと、とても遅</description></item><item><title>Python matplotlibでの「TK_GetPixmap in TKImgPhotoInstanceSetSizeでpixmapを作成できない」エラーの解決方法</title><link>https://freshrimpsushi.github.io/jp/posts/3091/</link><pubDate>Sun, 01 Aug 2021 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/3091/</guid><description>問題 import matplotlib.pyplot as plt import numpy as np for i in range(400): fig = plt.figure(figsize=(12, 12)) plt.plot(np.random.rand(10)) plt.savefig(&amp;#34;./plt_test/no_%d&amp;#34; %i) print(&amp;#34;test_%d&amp;#34; %i) 上のようにPythonでmatplotlib.pyplotを使ってグラフを描いて、それを保存す</description></item><item><title>2次元配列の行優先と列優先</title><link>https://freshrimpsushi.github.io/jp/posts/2014/</link><pubDate>Sun, 02 May 2021 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/2014/</guid><description>概要 1 行列や2次元配列の行優先row-majorと列優先column-majorについて説明する。簡単に言えば、配列を参照しながらどの方向で</description></item><item><title>RGBカラーチートシート</title><link>https://freshrimpsushi.github.io/jp/posts/2013/</link><pubDate>Wed, 28 Apr 2021 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/2013/</guid><description>概要 よく使われるRGB色の商標だ。 コード</description></item><item><title>gitの警告への対処法：LFがCRLFに置換されます…</title><link>https://freshrimpsushi.github.io/jp/posts/2007/</link><pubDate>Fri, 16 Apr 2021 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/2007/</guid><description>コマンド git config --global core.safecrlf false これはLinuxとWindowsの違いによって出る警告だけど、無視しても大丈夫だ。上記の通りに入力すればいい。</description></item><item><title>Gitのパスワードを保存する方法</title><link>https://freshrimpsushi.github.io/jp/posts/2001/</link><pubDate>Mon, 29 Mar 2021 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/2001/</guid><description>コマンド git config credential.helper store 上のように入力すればいい。</description></item><item><title>ジュリア、マットラボ、パイソン、Rでの同等のコード</title><link>https://freshrimpsushi.github.io/jp/posts/3031/</link><pubDate>Thu, 18 Feb 2021 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/3031/</guid><description>概要 Julia、Matlab、Python、Rで同じ機能をするコードを整理する。 Flux-PyTorch-TensorFlow チートシート Pythonについて次のような環境だとする。 import</description></item><item><title>LinuxでGCCコンパイラを使用してCコードをコンパイルする方法</title><link>https://freshrimpsushi.github.io/jp/posts/1653/</link><pubDate>Tue, 08 Sep 2020 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/1653/</guid><description>ガイド 普通、C/C++を使ったプログラム開発はウィンドウズでビジュアルスタジオを使うことが推奨されるが、簡単なテストや数値計算、シミュレーシ</description></item><item><title>メタプログラミング</title><link>https://freshrimpsushi.github.io/jp/posts/1457/</link><pubDate>Tue, 21 Jan 2020 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/1457/</guid><description>メタプログラミングとは？ 簡単に言うと、プログラムがコードを修正するようにするプログラミングと考えることができる。特定の技術というよりは、その</description></item><item><title>SCPを使用してサーバーにファイルをアップロードし、サーバーからダウンロードする方法</title><link>https://freshrimpsushi.github.io/jp/posts/1456/</link><pubDate>Sun, 19 Jan 2020 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/1456/</guid><description>コマンド scpはおそらくserver copyの略で、sshサーバーを使う時にアップロードやダウンロードをするコマンドだ。 スペースと@と:の位</description></item><item><title>ウィンドウズでSSHサーバーを構築する方法</title><link>https://freshrimpsushi.github.io/jp/posts/1445/</link><pubDate>Wed, 01 Jan 2020 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/1445/</guid><description>概要 Windowsはバージョン10になってから、PowerShellを含め、Linux固有の便利な機能を多く提供するようになった。sshサー</description></item><item><title>Pythonにおけるisと==の違い</title><link>https://freshrimpsushi.github.io/jp/posts/1444/</link><pubDate>Tue, 31 Dec 2019 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/1444/</guid><description>コード if type(150421) is int : print(&amp;#34;!&amp;#34;) else : print(&amp;#34;?&amp;#34;) x = [1,2] y = [1,2] x == y x is y 説明 GitHubでPythonのコードを見ていると、時々isが見えることがある。コードが文の</description></item><item><title>Pythonで二つの変数の値を交換する方法</title><link>https://freshrimpsushi.github.io/jp/posts/1441/</link><pubDate>Sat, 28 Dec 2019 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/1441/</guid><description>コード 変数同士のスワップは、一般的には一時変数を作って移動させる方法で簡単に実装できる。しかし、複数のプログラミング言語を扱う立場からすると</description></item><item><title>Pythonのnumpy arrayで行の結合と列の結合の方法</title><link>https://freshrimpsushi.github.io/jp/posts/1409/</link><pubDate>Mon, 02 Dec 2019 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/1409/</guid><description>コード import numpy as np a = np.array([[1,2,3]]) b = np.array([[4,5,6]]) print(a) print(b) print(np.c_[a,b]) print(np.r_[a,b]) Pythonのnumpyパッケージは、非常に便利な機能を多く提供する。以下のスクリーンショットで見るように</description></item><item><title>Pythonで大きなCSVファイルを一度に読む方法</title><link>https://freshrimpsushi.github.io/jp/posts/1403/</link><pubDate>Fri, 29 Nov 2019 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/1403/</guid><description>コード y_test=[] y_csv = open(&amp;#39;y_test.csv&amp;#39;, &amp;#39;r&amp;#39;, encoding=&amp;#39;utf-8&amp;#39;) rdr = csv.reader(y_csv) for line in rdr: y_test.append(line[0]) y_csv.close() 普通、csvファイルを読み込む時は、上のようにPythonの組み込み関数openを使って一行ずつ処理する</description></item><item><title>Pythonでpipを使用してcv2とPILパッケージをインストールする方法</title><link>https://freshrimpsushi.github.io/jp/posts/1400/</link><pubDate>Tue, 26 Nov 2019 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/1400/</guid><description>ガイド openCVパッケージとPILパッケージは、画像処理に便利なパッケージだ。問題は、例のコードでこれらのパッケージを呼び出す時にcv2、</description></item><item><title>プログラミングにおけるファーストクラスオブジェクト</title><link>https://freshrimpsushi.github.io/jp/posts/1368/</link><pubDate>Sat, 09 Nov 2019 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/1368/</guid><description>定義 プログラミングにおいて、ファーストクラスオブジェクトは、次の条件を満たす要素をいう。 (i) 関数の実際の引数となり得る。 (ii) 関数の戻り値となり得</description></item><item><title>プログラミングにおけるタイプ</title><link>https://freshrimpsushi.github.io/jp/posts/1364/</link><pubDate>Thu, 07 Nov 2019 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/1364/</guid><description>タイプの誕生 変数を宣言する際にタイプを指定しなければならない言語を使った経験があるなら、ほぼ確実に少しの不快感も感じたことだろう。何か言語は</description></item><item><title>プログラミングパラダイム</title><link>https://freshrimpsushi.github.io/jp/posts/1361/</link><pubDate>Tue, 05 Nov 2019 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/1361/</guid><description>定義 プログラミングパラダイムとは、与えられた問題を解決するプログラムを書くときの見解や方法論を指す。特定のパラダイムに適したプログラミング言</description></item><item><title>Windowsでコマンドプロンプトからファイルリストを取得する方法</title><link>https://freshrimpsushi.github.io/jp/posts/1072/</link><pubDate>Thu, 30 May 2019 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/1072/</guid><description>概要 複数のデータを集めるプログラムを作成する際に、ファイルが多すぎて問題になることがある。もちろん、どのプログラミング言語にもそれを解決する</description></item><item><title>WindowsでPythonのTensorFlowをインストールする方法</title><link>https://freshrimpsushi.github.io/jp/posts/958/</link><pubDate>Thu, 04 Apr 2019 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/958/</guid><description>ガイド TensorFlowをインストールする際に問題が発生する場合は、通常Pythonが正しくインストールされていないためです。開始する前に</description></item><item><title>LinuxでFortranをコンパイルした後のa.outの実行方法</title><link>https://freshrimpsushi.github.io/jp/posts/865/</link><pubDate>Wed, 23 Jan 2019 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/865/</guid><description>ガイド 拡張子が .f90 のファイル example.f90 をコンパイルするには、コンソール画面で gfortran example.f90 と入力すればいい。コンパイル後、同じディレクトリに a.out というファイルが生</description></item><item><title>PythonでWebドキュメントをクローリングして、タグを削除する</title><link>https://freshrimpsushi.github.io/jp/posts/572/</link><pubDate>Tue, 29 May 2018 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/572/</guid><description>概要 Pythonはクローリング用のパッケージがよく整っており、簡単にフォローできる。ウェブページを読み込んで、htmlタグを削除してみよう。</description></item><item><title>整数と浮動小数点数のフォーマットコードにdとfを使用する理由</title><link>https://freshrimpsushi.github.io/jp/posts/523/</link><pubDate>Thu, 26 Apr 2018 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/523/</guid><description>なぜ dと fなのか 1 CやPythonなどの言語で、文字列の入出力に使われるフォーマットコードには %s、%c、%d、%f などがある。知っての通り</description></item><item><title>Pythonでオペレーティングシステムを確認する方法</title><link>https://freshrimpsushi.github.io/jp/posts/3582/</link><pubDate>Sun, 13 Apr 2014 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/3582/</guid><description>コード platform.system()で確認できる。 &amp;gt;&amp;gt;&amp;gt; import platform &amp;gt;&amp;gt;&amp;gt; platform.system() &amp;#39;Windows&amp;#39; # Windows의 경우 &amp;gt;&amp;gt;&amp;gt; platform.system() &amp;#39;Linux&amp;#39; # Ubuntu의 경우</description></item><item><title>PythonでPCの名前を取得する方法</title><link>https://freshrimpsushi.github.io/jp/posts/3581/</link><pubDate>Fri, 11 Apr 2014 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/3581/</guid><description>コード os.getloginで取得できる。 &amp;gt;&amp;gt;&amp;gt; import os &amp;gt;&amp;gt;&amp;gt; os.getlogin() &amp;#39;rydbr&amp;#39; 環境 OS: Windows11 Version: Python 3.11.5</description></item><item><title>Pythonにおける復元抽出と非復元抽出の方法</title><link>https://freshrimpsushi.github.io/jp/posts/3565/</link><pubDate>Mon, 10 Mar 2014 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/3565/</guid><description>コード Pythonで復元・非復元抽出をする方法はnumpyの関数np.random.choice()を使えばいい。 random.choice(a, size=None, replace=True, p=None) a: 一次元配列か整数</description></item><item><title>Pythonのコマンドライン解析モジュールargparse</title><link>https://freshrimpsushi.github.io/jp/posts/3561/</link><pubDate>Sun, 02 Mar 2014 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/3561/</guid><description>説明 argparseはPythonの標準ライブラリの一つで、コマンドラインから渡された引数を扱うのに役立つ。sys.argvを使って入力引数</description></item><item><title>Python matplotlibでボックスプロットを描く方法</title><link>https://freshrimpsushi.github.io/jp/posts/3554/</link><pubDate>Mon, 17 Feb 2014 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/3554/</guid><description>説明 plt.boxplot()でボックスプロットを描くことができる。デフォルト設定で描くと、何の色もない白いボックスに黒い線だけ表示されるか</description></item><item><title>ウィンドウズ11 初期設定</title><link>https://freshrimpsushi.github.io/jp/posts/2532/</link><pubDate>Wed, 03 Mar 2004 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/2532/</guid><description>ガイド 詳細な説明は省略する。すべてのコマンドは、Windowsターミナルを管理者モードで実行した後に入力する必要がある。 コンテキストメニュー</description></item></channel></rss>