<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>最適化理論 on 生エビ寿司屋</title>
    <link>https://freshrimpsushi.github.io/jp/categories/%EC%B5%9C%EC%A0%81%ED%99%94%EC%9D%B4%EB%A1%A0/</link>
    <description>Recent content in 最適化理論 on 生エビ寿司屋</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>jp</language>
    <lastBuildDate>Mon, 08 Jan 2024 00:00:00 +0000</lastBuildDate>
    <atom:link href="https://freshrimpsushi.github.io/jp/categories/%EC%B5%9C%EC%A0%81%ED%99%94%EC%9D%B4%EB%A1%A0/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>多変数関数の極値に対する一階必要条件</title>
      <link>https://freshrimpsushi.github.io/jp/posts/3534/</link>
      <pubDate>Mon, 08 Jan 2024 00:00:00 +0000</pubDate>
      <guid>https://freshrimpsushi.github.io/jp/posts/3534/</guid>
      <description>要約1 関数 $f : \mathbb{R}^{n} \to \mathbb{R}$が与えられたとしよう。もし $x^{\ast}$がローカルオプティマイザーlocal optimizer</description>
    </item>
    <item>
      <title>多変数関数の極値に対する2階の必要/十分条件</title>
      <link>https://freshrimpsushi.github.io/jp/posts/3533/</link>
      <pubDate>Sat, 06 Jan 2024 00:00:00 +0000</pubDate>
      <guid>https://freshrimpsushi.github.io/jp/posts/3533/</guid>
      <description>要旨1 関数 $f : \mathbb{R}^{n} \to \mathbb{R}$ が与えられたとしよう。$\nabla f$, $\nabla^{2}f$ をそれぞれ $f$の勾配とヘシアンとする。 2次必要条件 $x^{\ast}$ が 局所最適解であり、$x^</description>
    </item>
    <item>
      <title>割線法: ニュートン法</title>
      <link>https://freshrimpsushi.github.io/jp/posts/3530/</link>
      <pubDate>Sun, 31 Dec 2023 00:00:00 +0000</pubDate>
      <guid>https://freshrimpsushi.github.io/jp/posts/3530/</guid>
      <description>定義1 2 目的関数 $J : \mathbb{R}^{n} \to \mathbb{R}$を最適化する問題で、次の繰り返しアルゴリズムをニュートン法Newton&amp;rsquo;s meth</description>
    </item>
    <item>
      <title>最適化理論：ラグランジュの未定乗数法</title>
      <link>https://freshrimpsushi.github.io/jp/posts/2404/</link>
      <pubDate>Wed, 21 Jun 2023 00:00:00 +0000</pubDate>
      <guid>https://freshrimpsushi.github.io/jp/posts/2404/</guid>
      <description>⚡ 이 포스트는 패스트 트랙Fast Track으로 작성되었습니다. 説明 非線形な目的関数を持つ非線形最適化問題で、ラグランジュ乗数法という解法があり</description>
    </item>
    <item>
      <title>Rで線形計画問題を解く方法</title>
      <link>https://freshrimpsushi.github.io/jp/posts/2362/</link>
      <pubDate>Wed, 29 Mar 2023 00:00:00 +0000</pubDate>
      <guid>https://freshrimpsushi.github.io/jp/posts/2362/</guid>
      <description>概要 lpSolveパッケージを使えばいいんだ1。行列形で表された線型計画問題の$A, \mathbf{b}, \mathbf{c}$を入れて使うんだ。 コード $$ \begin{matrix} \text{Maximize} &amp;amp;</description>
    </item>
    <item>
      <title>MATLABで線形計画問題を解く方法</title>
      <link>https://freshrimpsushi.github.io/jp/posts/2360/</link>
      <pubDate>Sat, 25 Mar 2023 00:00:00 +0000</pubDate>
      <guid>https://freshrimpsushi.github.io/jp/posts/2360/</guid>
      <description>概要 Optimization Toolboxを使えばいいんだ1。線形計画問題を行列形で表された$A, \mathbf{b}, \mathbf{c}$を入れて使う。 コード $$ \begin{matrix} \text{Maximize} &amp;amp; &amp;amp; x_{1} &amp;amp; + &amp;amp; x_{2}</description>
    </item>
    <item>
      <title>Pythonで線形計画問題を解く方法</title>
      <link>https://freshrimpsushi.github.io/jp/posts/2358/</link>
      <pubDate>Tue, 21 Mar 2023 00:00:00 +0000</pubDate>
      <guid>https://freshrimpsushi.github.io/jp/posts/2358/</guid>
      <description>概要 scipyパッケージを使えばいい1。行列形で示された線形計画問題の$A, \mathbf{b}, \mathbf{c}$を入れて使う。 コード $$ \begin{matrix} \text{Maximize} &amp;amp; &amp;amp; x_{1} &amp;amp; + &amp;amp; x_{2}</description>
    </item>
    <item>
      <title>ジュリアで線形計画問題を解く方法</title>
      <link>https://freshrimpsushi.github.io/jp/posts/2356/</link>
      <pubDate>Fri, 17 Mar 2023 00:00:00 +0000</pubDate>
      <guid>https://freshrimpsushi.github.io/jp/posts/2356/</guid>
      <description>Overview To solve optimization problems, one can use the JuMP package[^1]. JuMP stands for Julia Mathematical Programming. Compared to other languages, coding in Julia is almost like directly transcribing mathematical formulas, which is very intuitive. Code $$ \begin{matrix} \text{Maximize} &amp;amp; &amp;amp; x_{1} &amp;amp; + &amp;amp; x_{2} \\ \text{subject to} &amp;amp;-&amp;amp; x_{1} &amp;amp; + &amp;amp; x_{2} &amp;amp; \le &amp;amp; 1 \\ &amp;amp; &amp;amp; x_{1} &amp;amp; &amp;amp; &amp;amp; \le &amp;amp; 3 \\</description>
    </item>
    <item>
      <title>Excelで線形計画問題を解く方法</title>
      <link>https://freshrimpsushi.github.io/jp/posts/2354/</link>
      <pubDate>Mon, 13 Mar 2023 00:00:00 +0000</pubDate>
      <guid>https://freshrimpsushi.github.io/jp/posts/2354/</guid>
      <description>ガイド ステップ1. ソルバーアドインの有効化 ファイル/オプション/アドイン タブで、管理(A)の Excelアドイン の隣の 移動(G) ボタンをクリッ</description>
    </item>
    <item>
      <title>線形計画法における強い双対性定理の証明</title>
      <link>https://freshrimpsushi.github.io/jp/posts/2352/</link>
      <pubDate>Thu, 09 Mar 2023 00:00:00 +0000</pubDate>
      <guid>https://freshrimpsushi.github.io/jp/posts/2352/</guid>
      <description>要約 $$ \begin{align*} \text{Maximize} &amp;amp; \sum_{j=1}^{n} c_{j} x_{j} &amp;amp; \text{(Primal)} \\ \text{subject to} &amp;amp; \sum_{j=1}^{n} a_{ij} x_{j} \le b_{i} &amp;amp; i = 1 ,\cdots , m \\ &amp;amp; x_{j} \ge 0 &amp;amp; j = 1, \cdots , n \end{align*} $$ $$ \begin{align*} \text{Minimize} &amp;amp; \sum_{i=1}^{m} b_{i} y_{i} &amp;amp; \text{(Dual)} \\ \text{subject to} &amp;amp; \sum_{i=1}^{m} y_{i} a_{ij} \ge c_{j} &amp;amp; j = 1 ,\cdots , n \\ &amp;amp; y_{i} \ge</description>
    </item>
    <item>
      <title>線形計画法における弱双対性定理の証明</title>
      <link>https://freshrimpsushi.github.io/jp/posts/2350/</link>
      <pubDate>Sun, 05 Mar 2023 00:00:00 +0000</pubDate>
      <guid>https://freshrimpsushi.github.io/jp/posts/2350/</guid>
      <description>まとめ $$ \begin{align*} \text{Maximize} &amp;amp; \sum_{j=1}^{n} c_{j} x_{j} &amp;amp; \text{(Primal)} \\ \text{subject to} &amp;amp; \sum_{j=1}^{n} a_{ij} x_{j} \le b_{i} &amp;amp; i = 1 ,\cdots , m \\ &amp;amp; x_{j} \ge 0 &amp;amp; j = 1, \cdots , n \end{align*} $$ $$ \begin{align*} \text{Minimize} &amp;amp; \sum_{i=1}^{m} b_{i} y_{i} &amp;amp; \text{(Dual)} \\ \text{subject to} &amp;amp; \sum_{i=1}^{m} y_{i} a_{ij} \ge c_{j} &amp;amp; j = 1 ,\cdots , n \\ &amp;amp; y_{i}</description>
    </item>
    <item>
      <title>線形計画法における双対性</title>
      <link>https://freshrimpsushi.github.io/jp/posts/2348/</link>
      <pubDate>Wed, 01 Mar 2023 00:00:00 +0000</pubDate>
      <guid>https://freshrimpsushi.github.io/jp/posts/2348/</guid>
      <description>ビルドアップ $x_{1} , x_{2} \ge 0$ について、次のような線形計画問題があるとしよう。 $$ \begin{matrix} \text{Maximize} &amp;amp; &amp;amp; 2x_{1} &amp;amp; + &amp;amp; 3x_{2} \\ \text{subject to} &amp;amp; &amp;amp; 4x_{1} &amp;amp; + &amp;amp; 8x_{2} &amp;amp; \le &amp;amp; 12 \\ &amp;amp; &amp;amp; 2x_{1} &amp;amp; + &amp;amp; x_{2} &amp;amp; \le &amp;amp;</description>
    </item>
    <item>
      <title>線形計画法の基本定理の証明</title>
      <link>https://freshrimpsushi.github.io/jp/posts/2346/</link>
      <pubDate>Sat, 25 Feb 2023 00:00:00 +0000</pubDate>
      <guid>https://freshrimpsushi.github.io/jp/posts/2346/</guid>
      <description>まとめ 方程式形式の線形計画問題に関して、次の三つのうち一つは真である。 (1): もし最適解が存在しない場合、問題自体が不可解Infeasibleまた</description>
    </item>
    <item>
      <title>シンプレックス法のブランドのルール</title>
      <link>https://freshrimpsushi.github.io/jp/posts/2344/</link>
      <pubDate>Tue, 21 Feb 2023 00:00:00 +0000</pubDate>
      <guid>https://freshrimpsushi.github.io/jp/posts/2344/</guid>
      <description>要旨 辞書において、$i = 1 , \cdots , m$に対する以下の形式の方程式の組み合わせを辞書Dictionaryという。 $$ \begin{align*} \zeta &amp;amp;=&amp;amp; &amp;amp; &amp;amp; \sum_{j=1}^{n} c_{j} x_{j} \\ x_{n+i} &amp;amp;=&amp;amp; b_{i} &amp;amp;-&amp;amp; \sum_{j=1}^{n} a_{ij}</description>
    </item>
    <item>
      <title>シンプレックス・メソッドのサイクリング</title>
      <link>https://freshrimpsushi.github.io/jp/posts/2342/</link>
      <pubDate>Fri, 17 Feb 2023 00:00:00 +0000</pubDate>
      <guid>https://freshrimpsushi.github.io/jp/posts/2342/</guid>
      <description>定義 $$ \begin{matrix} \text{Maximize} &amp;amp; \mathbf{c}^{T} \mathbf{x} \\ \text{subject to} &amp;amp; A \mathbf{x} = \mathbf{b} \\ &amp;amp; \mathbf{x} \ge \mathbf{0} \end{matrix} $$ 行列 $A \in \mathbb{R}^{m \times n}$、$\mathbf{b} \in \mathbb{R}^{m \times 1}$、そして$\mathbf{c} \in \mat</description>
    </item>
    <item>
      <title>線形計画法における目的関数の無限大</title>
      <link>https://freshrimpsushi.github.io/jp/posts/2340/</link>
      <pubDate>Mon, 13 Feb 2023 00:00:00 +0000</pubDate>
      <guid>https://freshrimpsushi.github.io/jp/posts/2340/</guid>
      <description>説明 $$ \begin{matrix} \text{Maximize} &amp;amp; \mathbf{c}^{T} \mathbf{x} \\ \text{subject to} &amp;amp; A \mathbf{x} = \mathbf{b} \\ &amp;amp; \mathbf{x} \ge \mathbf{0} \end{matrix} $$ 行列 $A \in \mathbb{R}^{m \times n}$と$\mathbf{b} \in \mathbb{R}^{m \times 1}$と$\mathbf{c} \in \mathbb</description>
    </item>
    <item>
      <title>シンプレックス法の初期化と補助問題</title>
      <link>https://freshrimpsushi.github.io/jp/posts/2338/</link>
      <pubDate>Thu, 09 Feb 2023 00:00:00 +0000</pubDate>
      <guid>https://freshrimpsushi.github.io/jp/posts/2338/</guid>
      <description>ビルドアップ $$ \begin{matrix} \text{Maximize} &amp;amp; \mathbf{c}^{T} \mathbf{x} \\ \text{subject to} &amp;amp; A \mathbf{x} = \mathbf{b} \\ &amp;amp; \mathbf{x} \ge \mathbf{0} \end{matrix} $$ 行列 $A \in \mathbb{R}^{m \times n}$、$\mathbf{b} \in \mathbb{R}^{m \times 1}$、$\mathbf{c} \in \ma</description>
    </item>
    <item>
      <title>線形計画法のシンプレックス法</title>
      <link>https://freshrimpsushi.github.io/jp/posts/2336/</link>
      <pubDate>Sun, 05 Feb 2023 00:00:00 +0000</pubDate>
      <guid>https://freshrimpsushi.github.io/jp/posts/2336/</guid>
      <description>ビルドアップ 1 $x_{1} , x_{2} \ge 0$ に関して、次の線形計画問題が与えられたとしよう。 $$ \begin{matrix} \text{Maximize} &amp;amp; &amp;amp; x_{1} &amp;amp; + &amp;amp; x_{2} \\ \text{subject to} &amp;amp;-&amp;amp; x_{1} &amp;amp; + &amp;amp; x_{2} &amp;amp; \le &amp;amp; 1 \\ &amp;amp; &amp;amp; x_{1} &amp;amp; &amp;amp; &amp;amp; \le &amp;amp; 3 \\</description>
    </item>
    <item>
      <title>線形計画法における辞書と表</title>
      <link>https://freshrimpsushi.github.io/jp/posts/2334/</link>
      <pubDate>Wed, 01 Feb 2023 00:00:00 +0000</pubDate>
      <guid>https://freshrimpsushi.github.io/jp/posts/2334/</guid>
      <description>ノーテーション $$ \begin{matrix} \text{Maximize} &amp;amp; \mathbf{c}^{T} \mathbf{x} \\ \text{subject to} &amp;amp; A \mathbf{x} = \mathbf{b} \\ &amp;amp; \mathbf{x} \ge \mathbf{0} \end{matrix} $$ matrix $A \in \mathbb{R}^{m \times n}$、$\mathbf{b} \in \mathbb{R}^{m \times 1}$、$\mathbf{c} \in \ma</description>
    </item>
    <item>
      <title>線形計画問題において最適解が存在する場合、そのうちの一つは基底実行可能解である</title>
      <link>https://freshrimpsushi.github.io/jp/posts/2229/</link>
      <pubDate>Wed, 06 Jul 2022 00:00:00 +0000</pubDate>
      <guid>https://freshrimpsushi.github.io/jp/posts/2229/</guid>
      <description>要約 1 $$ \begin{matrix} \text{Maximize} &amp;amp; \mathbf{c}^{T} \mathbf{x} \\ \text{subject to} &amp;amp; A \mathbf{x} = \mathbf{b} \\ &amp;amp; \mathbf{x} \ge \mathbf{0} \end{matrix} $$ 行列 $A \in \mathbb{R}^{m \times n}$ および $\mathbf{b} \in \mathbb{R}^{m \times 1}$ と $\mathbf{c} \in \mathbb{R}^{n}$ について、線形計画問題が上のように方程式の形で表される</description>
    </item>
    <item>
      <title>線形計画問題の方程式形式における最適解の存在証明</title>
      <link>https://freshrimpsushi.github.io/jp/posts/2227/</link>
      <pubDate>Sat, 02 Jul 2022 00:00:00 +0000</pubDate>
      <guid>https://freshrimpsushi.github.io/jp/posts/2227/</guid>
      <description>定理 1 $$ \begin{matrix} \text{Maximize} &amp;amp; \mathbf{c}^{T} \mathbf{x} \\ \text{subject to} &amp;amp; A \mathbf{x} = \mathbf{b} \\ &amp;amp; \mathbf{x} \ge \mathbf{0} \end{matrix} $$ 行列$A \in \mathbb{R}^{m \times n}$、$\mathbf{b} \in \mathbb{R}^{m \times 1}$、そして$\mathbf{c} \in \m</description>
    </item>
    <item>
      <title>基底可溶性の一意性の証明</title>
      <link>https://freshrimpsushi.github.io/jp/posts/2225/</link>
      <pubDate>Tue, 28 Jun 2022 00:00:00 +0000</pubDate>
      <guid>https://freshrimpsushi.github.io/jp/posts/2225/</guid>
      <description>要約 1 $$ \begin{matrix} \text{Maximize} &amp;amp; \mathbf{c}^{T} \mathbf{x} \\ \text{subject to} &amp;amp; A \mathbf{x} = \mathbf{b} \\ &amp;amp; \mathbf{x} \ge \mathbf{0} \end{matrix} $$ 行列 $A \in \mathbb{R}^{m \times n}$ と $\mathbf{b} \in \mathbb{R}^{m \times 1}$ と $\mathbf{c} \in \mathbb{R}^{n}$ が与えられたとき、線形計画問題が上記のように方程式の形で表</description>
    </item>
    <item>
      <title>線形計画問題の基底解</title>
      <link>https://freshrimpsushi.github.io/jp/posts/2223/</link>
      <pubDate>Fri, 24 Jun 2022 00:00:00 +0000</pubDate>
      <guid>https://freshrimpsushi.github.io/jp/posts/2223/</guid>
      <description>定義 1 $$ \begin{matrix} \text{Maximize} &amp;amp; \mathbf{c}^{T} \mathbf{x} \\ \text{subject to} &amp;amp; A \mathbf{x} = \mathbf{b} \\ &amp;amp; \mathbf{x} \ge \mathbf{0} \end{matrix} $$ 行列 $A \in \mathbb{R}^{m \times n}$、$\mathbf{b} \in \mathbb{R}^{m \times 1}$、$\mathbf{c} \in \mathbb{R}^{n}$ に対して、</description>
    </item>
    <item>
      <title>線形計画問題の方程式フォーム</title>
      <link>https://freshrimpsushi.github.io/jp/posts/2221/</link>
      <pubDate>Mon, 20 Jun 2022 00:00:00 +0000</pubDate>
      <guid>https://freshrimpsushi.github.io/jp/posts/2221/</guid>
      <description>定義 1 行列 $A \in \mathbb{R}^{m \times n}$、$\mathbf{b} \in \mathbb{R}^{m \times 1}$、そして $\mathbf{c} \in \mathbb{R}^{n}$に関して、以下の線形計画問題を標準形S</description>
    </item>
    <item>
      <title>線形計画問題の定義</title>
      <link>https://freshrimpsushi.github.io/jp/posts/2207/</link>
      <pubDate>Mon, 23 May 2022 00:00:00 +0000</pubDate>
      <guid>https://freshrimpsushi.github.io/jp/posts/2207/</guid>
      <description>定義 1 目的関数Objective Functionと制約Constraintが線形な最適化問題を線形計画問題Linear Programming Problem、略し</description>
    </item>
    <item>
      <title>最適解：最大因数と最小因数</title>
      <link>https://freshrimpsushi.github.io/jp/posts/2031/</link>
      <pubDate>Sat, 05 Jun 2021 00:00:00 +0000</pubDate>
      <guid>https://freshrimpsushi.github.io/jp/posts/2031/</guid>
      <description>難しい定義 任意の集合$X$と全順序集合$\left( Y, \le \right)$が与えられているとしよう。 $X$の部分集合$S \subset X$について、関数$</description>
    </item>
    <item>
      <title>最適値：最大値と最小値</title>
      <link>https://freshrimpsushi.github.io/jp/posts/2027/</link>
      <pubDate>Fri, 28 May 2021 00:00:00 +0000</pubDate>
      <guid>https://freshrimpsushi.github.io/jp/posts/2027/</guid>
      <description>簡単な定義 最大値Maximumと最小値Minimumを合わせて最適値Optimumと言う。 集合$X$で最も大きい要素を最大値$\max X$、</description>
    </item>
    <item>
      <title>確率的勾配降下法</title>
      <link>https://freshrimpsushi.github.io/jp/posts/1464/</link>
      <pubDate>Wed, 29 Jan 2020 00:00:00 +0000</pubDate>
      <guid>https://freshrimpsushi.github.io/jp/posts/1464/</guid>
      <description>定義 目的関数 $Q$ とラーニングレート $\alpha &amp;gt; 0$、バッチサイズ $m$、そして$i$番目のデータに対して、 $$ \omega_{n+1} := \omega_{n} - \alpha {{ 1 } \over { n }} \sum_{i=1}^{m} \nabla Q_{i} ( \omega_{n} ) $$ を確</description>
    </item>
    <item>
      <title>数学における最適化技術</title>
      <link>https://freshrimpsushi.github.io/jp/posts/1463/</link>
      <pubDate>Sat, 25 Jan 2020 00:00:00 +0000</pubDate>
      <guid>https://freshrimpsushi.github.io/jp/posts/1463/</guid>
      <description>定義 関数$f : \mathbb{R}^{n} \to \mathbb{R}$の関数値を最小にする$x^{ \ast } = \argmin_{x} f(x)$を見つける問題を最適化問題Optimization Pr</description>
    </item>
    <item>
      <title>数学における勾配降下法</title>
      <link>https://freshrimpsushi.github.io/jp/posts/1012/</link>
      <pubDate>Tue, 30 Apr 2019 00:00:00 +0000</pubDate>
      <guid>https://freshrimpsushi.github.io/jp/posts/1012/</guid>
      <description>定義 1 スカラー関数 $\varphi : \mathbb{R}^{n} \to \mathbb{R}$ をコスト関数と言う。コスト関数 $ \varphi ( \mathbb{x} )$ の極小値を求めるために、$\mathbb{x} = \mathbb{x}_{</description>
    </item>
    <item>
      <title>近接交互線形化最小化アルゴリズム</title>
      <link>https://freshrimpsushi.github.io/jp/posts/3596/</link>
      <pubDate>Sun, 11 May 2014 00:00:00 +0000</pubDate>
      <guid>https://freshrimpsushi.github.io/jp/posts/3596/</guid>
      <description>概要 Jérôme Bolte、Shoham Sabach、Marc Teboulleの論文Proximal Alternating Linearized Minimization for nonconvex and nonsmooth problemsで紹介され</description>
    </item>
    <item>
      <title>近接勾配法</title>
      <link>https://freshrimpsushi.github.io/jp/posts/3595/</link>
      <pubDate>Fri, 09 May 2014 00:00:00 +0000</pubDate>
      <guid>https://freshrimpsushi.github.io/jp/posts/3595/</guid>
      <description>定義 1 微分不可能な目的関数$H(\mathbf{x}) : \mathbb{R}^{n} \to \mathbb{R}$が微分可能な関数$f$と微分不可能な関数$g$に分解される</description>
    </item>
    <item>
      <title>サブグラディエント法</title>
      <link>https://freshrimpsushi.github.io/jp/posts/3594/</link>
      <pubDate>Wed, 07 May 2014 00:00:00 +0000</pubDate>
      <guid>https://freshrimpsushi.github.io/jp/posts/3594/</guid>
      <description>定義1 目的関数 $f : \mathbb{R}^{n} \to \mathbb{R}$が凸関数だとしよう。点$\mathbf{x}^{(k)}$での$f$のサブグラディエントを$\m</description>
    </item>
    <item>
      <title>サブグラディエント</title>
      <link>https://freshrimpsushi.github.io/jp/posts/3593/</link>
      <pubDate>Mon, 05 May 2014 00:00:00 +0000</pubDate>
      <guid>https://freshrimpsushi.github.io/jp/posts/3593/</guid>
      <description>定義 1 2 関数$f : \mathbb{R}^{n} \to \mathbb{R}$に対して、以下を満たす$\mathbf{g} \in \mathbb{R}^{n}$を点$\mathbf</description>
    </item>
    <item>
      <title>交代最適化</title>
      <link>https://freshrimpsushi.github.io/jp/posts/3592/</link>
      <pubDate>Sat, 03 May 2014 00:00:00 +0000</pubDate>
      <guid>https://freshrimpsushi.github.io/jp/posts/3592/</guid>
      <description>定義 多変数の目的関数を最適化するとき、一つの変数だけを最適化し、変数ごとに交互に実行することを交互最適化alternating optimiz</description>
    </item>
    <item>
      <title>近接最小化アルゴリズム</title>
      <link>https://freshrimpsushi.github.io/jp/posts/3591/</link>
      <pubDate>Thu, 01 May 2014 00:00:00 +0000</pubDate>
      <guid>https://freshrimpsushi.github.io/jp/posts/3591/</guid>
      <description>定義1 目的関数 $f : \mathbb{R}^{n} \to \mathbb{R}^{n}$に対する最適化問題を解く時、プロキシマルオペレータを繰り返し適用して最適解 $\mathb</description>
    </item>
    <item>
      <title>近接作用素</title>
      <link>https://freshrimpsushi.github.io/jp/posts/3590/</link>
      <pubDate>Tue, 29 Apr 2014 00:00:00 +0000</pubDate>
      <guid>https://freshrimpsushi.github.io/jp/posts/3590/</guid>
      <description>定義1 ベクトル空間 $X$のノルムを$\left\| \cdot \right\|_{X}$とする。関数$f : X \to \mathbb{R}$に対する プロキシマ</description>
    </item>
  </channel>
</rss>
