<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>함수 on 生エビ寿司屋</title>
    <link>https://freshrimpsushi.github.io/jp/categories/%ED%95%A8%EC%88%98/</link>
    <description>Recent content in 함수 on 生エビ寿司屋</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>jp</language>
    <lastBuildDate>Sat, 21 Oct 2023 00:00:00 +0000</lastBuildDate>
    <atom:link href="https://freshrimpsushi.github.io/jp/categories/%ED%95%A8%EC%88%98/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>定数関数の定義</title>
      <link>https://freshrimpsushi.github.io/jp/posts/2465/</link>
      <pubDate>Sat, 21 Oct 2023 00:00:00 +0000</pubDate>
      <guid>https://freshrimpsushi.github.io/jp/posts/2465/</guid>
      <description>定義 関数 $c : X \to Y$ が全ての $x_{1} , x_{2} \in X$ に対して次を満足するなら、定数関数Constant Functionと言う。 $$ c \left( x_{1} \right) = c \left( x_{2} \right) $$ 説明 普通</description>
    </item>
    <item>
      <title>有理関数の定義</title>
      <link>https://freshrimpsushi.github.io/jp/posts/2463/</link>
      <pubDate>Tue, 17 Oct 2023 00:00:00 +0000</pubDate>
      <guid>https://freshrimpsushi.github.io/jp/posts/2463/</guid>
      <description>定義 1 2つの多項式関数 $P_{1}(z), P_{2}(z) : \mathbb{C} \to \mathbb{C}$ について、$P_{2} (z) \ne 0$ である全ての $z \in \mathbb{C}$ を $\left( P_{1} / P_{2} \right) (z)$ に対応させる次の関数 $Q$ を有理関数または代数的分</description>
    </item>
    <item>
      <title>同一関数</title>
      <link>https://freshrimpsushi.github.io/jp/posts/3167/</link>
      <pubDate>Fri, 31 Dec 2021 00:00:00 +0000</pubDate>
      <guid>https://freshrimpsushi.github.io/jp/posts/3167/</guid>
      <description>定義1 集合 $X$に対して、以下の関数 $I_{X} : X \to X$を恒等関数identity functionという。 $$ I_{X}(x) = x,\quad \forall x \in X $$ 説明 主に以下のような記法</description>
    </item>
    <item>
      <title>符号関数</title>
      <link>https://freshrimpsushi.github.io/jp/posts/3147/</link>
      <pubDate>Sun, 21 Nov 2021 00:00:00 +0000</pubDate>
      <guid>https://freshrimpsushi.github.io/jp/posts/3147/</guid>
      <description>定義 符号関数sign function $\mathrm{sgn} : \mathbb{R} \to \mathbb{R}$は以下のように定義される。 $$ \mathrm{sgn}(x) :=\begin{cases} 1 &amp;amp; x&amp;gt;0 \\ 0 &amp;amp; x=0 \\ -1 &amp;amp; x&amp;lt;0 \end{cases} $$ 説明 式や定義を簡単に記述するた</description>
    </item>
    <item>
      <title>関数の拡張と縮小</title>
      <link>https://freshrimpsushi.github.io/jp/posts/3123/</link>
      <pubDate>Mon, 04 Oct 2021 00:00:00 +0000</pubDate>
      <guid>https://freshrimpsushi.github.io/jp/posts/3123/</guid>
      <description>定義1 関数 $f : X \to Y$が与えられたとしよう。$U \subset X \subset V$が成立するとしよう。 縮小写像 次を満たす$f |_{U} \to Y$を$f$の縮小写像Uへの$f$の</description>
    </item>
    <item>
      <title>調和関数</title>
      <link>https://freshrimpsushi.github.io/jp/posts/2078/</link>
      <pubDate>Tue, 07 Sep 2021 00:00:00 +0000</pubDate>
      <guid>https://freshrimpsushi.github.io/jp/posts/2078/</guid>
      <description>定義 1 関数 $\phi (x,y)$ が領域 $\mathscr{R}$ で連続な二階微分を持ち、ラプラスの方程式の解であれば、ハーモニックであると言う。言い換えると、ハーモニック関数は次を満</description>
    </item>
    <item>
      <title>対数関数の定義</title>
      <link>https://freshrimpsushi.github.io/jp/posts/2063/</link>
      <pubDate>Sun, 08 Aug 2021 00:00:00 +0000</pubDate>
      <guid>https://freshrimpsushi.github.io/jp/posts/2063/</guid>
      <description>説明 ログは簡単な定義に反して、数学全般で非常に多くの意味を持つ。底Baseは正の数なら何でも良いが、普通は上の定義のようにオイラー定数 $e$ を使</description>
    </item>
    <item>
      <title>指数関数</title>
      <link>https://freshrimpsushi.github.io/jp/posts/2060/</link>
      <pubDate>Mon, 02 Aug 2021 00:00:00 +0000</pubDate>
      <guid>https://freshrimpsushi.github.io/jp/posts/2060/</guid>
      <description>概要 指数関数Exponential Functionは、数学全般で一貫して現れる乗算の一般化です。元々の乗算では、底 $a &amp;gt; 0$ が必ずしも $a = e$ であ</description>
    </item>
    <item>
      <title>多項関数</title>
      <link>https://freshrimpsushi.github.io/jp/posts/2058/</link>
      <pubDate>Thu, 29 Jul 2021 00:00:00 +0000</pubDate>
      <guid>https://freshrimpsushi.github.io/jp/posts/2058/</guid>
      <description>定義 1 $n \in \mathbb{N}_{0}$ と $\left\{ a_{k} \right\}_{k=0}^{n} \subset \mathbb{C}$ に対して、次のように定義される $P: \mathbb{C} \to \mathbb{C}$ を**$n$次の多項式関数**Polynomial of degree $n$という。 $$ P(z) := a_{0} +</description>
    </item>
    <item>
      <title>三角関数の定義</title>
      <link>https://freshrimpsushi.github.io/jp/posts/2056/</link>
      <pubDate>Sun, 25 Jul 2021 00:00:00 +0000</pubDate>
      <guid>https://freshrimpsushi.github.io/jp/posts/2056/</guid>
      <description>概要 三角関数は直角三角形の底角に三角比を対応させた関数だ。 定義 三角関数のサイン、コサイン$\sin, \cos : \mathbb{R} \to \mathbb{R}$は以下のよ</description>
    </item>
    <item>
      <title>絶対値関数</title>
      <link>https://freshrimpsushi.github.io/jp/posts/3083/</link>
      <pubDate>Fri, 16 Jul 2021 00:00:00 +0000</pubDate>
      <guid>https://freshrimpsushi.github.io/jp/posts/3083/</guid>
      <description>定義 次のように定義される関数 $f$ を絶対値関数absolute value functionと呼び、関数の値を $|x|$ のように表記する。 $$ |x| := f(x) = \begin{cases} x &amp;amp;\text{if } x&amp;gt;0 \\ 0 &amp;amp;\text{if</description>
    </item>
    <item>
      <title>周期関数</title>
      <link>https://freshrimpsushi.github.io/jp/posts/2050/</link>
      <pubDate>Tue, 13 Jul 2021 00:00:00 +0000</pubDate>
      <guid>https://freshrimpsushi.github.io/jp/posts/2050/</guid>
      <description>例 サイン$\sin$とコサイン$\cos$は代表的な周期関数であり、上の定義に従って$2\pi$周期関数だ。</description>
    </item>
    <item>
      <title>関数の合成</title>
      <link>https://freshrimpsushi.github.io/jp/posts/3048/</link>
      <pubDate>Mon, 19 Apr 2021 00:00:00 +0000</pubDate>
      <guid>https://freshrimpsushi.github.io/jp/posts/3048/</guid>
      <description>定義 関数 $f: X \to Y$, $g: f(X) \to Z$について次のように定義される$h: X \to Z$を**$f$と$g$の合成**composition of $g$ with $f$と呼び、</description>
    </item>
    <item>
      <title>線形関数</title>
      <link>https://freshrimpsushi.github.io/jp/posts/3037/</link>
      <pubDate>Sat, 20 Feb 2021 00:00:00 +0000</pubDate>
      <guid>https://freshrimpsushi.github.io/jp/posts/3037/</guid>
      <description>定義 関数 $f : X \to Y$が以下の二つの条件を満たす場合、線形linearという。$x,x_{1},x_{2}\in X$、$a \in \mathbb{R</description>
    </item>
    <item>
      <title>単調関数、増加関数、減少関数</title>
      <link>https://freshrimpsushi.github.io/jp/posts/848/</link>
      <pubDate>Thu, 15 Oct 2020 00:00:00 +0000</pubDate>
      <guid>https://freshrimpsushi.github.io/jp/posts/848/</guid>
      <description>定義 関数 $f:[a,b] \rightarrow \mathbb{R}$が与えられたとする。$x_{1}$、$x_{2}$、$\in [a,b]$に対して $$ x_{1} \lt x_{2} \ \implies f(x_{1}) \le f(x_{2}) $$ を満た</description>
    </item>
    <item>
      <title>特性関数、指示関数</title>
      <link>https://freshrimpsushi.github.io/jp/posts/1790/</link>
      <pubDate>Mon, 21 Sep 2020 00:00:00 +0000</pubDate>
      <guid>https://freshrimpsushi.github.io/jp/posts/1790/</guid>
      <description>定義 $A \subset X$ について、以下のように定義される 関数 $\chi_{A} : X \to \mathbb{R}$ を 特性関数 または 指示関数 と言う。 $$ \chi _{A}(x) := \begin{cases} 1, &amp;amp; x\in A \\ 0 ,&amp;amp; x \notin A \end{cases} $$ 説明 $\chi$ はギリシャ文</description>
    </item>
    <item>
      <title>リーマンゼータ関数</title>
      <link>https://freshrimpsushi.github.io/jp/posts/1626/</link>
      <pubDate>Wed, 19 Aug 2020 00:00:00 +0000</pubDate>
      <guid>https://freshrimpsushi.github.io/jp/posts/1626/</guid>
      <description>定義 次のように定義される関数 $\zeta : \mathbb{C} \setminus \left\{ 1 \right\} \to \mathbb{C}$ をリーマン ゼータ関数Riemann zeta Function&amp;lt;/supという。 $$ \zeta (s) := \sum_{n \in \mathbb{N}} n^{-s} =</description>
    </item>
    <item>
      <title>変形ベッセル方程式と変形ベッセル関数</title>
      <link>https://freshrimpsushi.github.io/jp/posts/1624/</link>
      <pubDate>Wed, 20 May 2020 00:00:00 +0000</pubDate>
      <guid>https://freshrimpsushi.github.io/jp/posts/1624/</guid>
      <description>ビルドアップ 以下の微分方程式は、変形ベッセル方程式と呼ばれる。 $$ x^2 y^{\prime \prime} + xy^{\prime}-(x^2-\nu^2)y=0 $$ ベッセル方程式で$y$項の符号が$+ \rightarrow -$に変わった形式だ。この</description>
    </item>
    <item>
      <title>ルジャンドル多項式</title>
      <link>https://freshrimpsushi.github.io/jp/posts/1611/</link>
      <pubDate>Fri, 08 May 2020 00:00:00 +0000</pubDate>
      <guid>https://freshrimpsushi.github.io/jp/posts/1611/</guid>
      <description>定義 ルジャンドル多項式Legendre polynomialは、いくつかの方法で定義される。 微分方程式の解として 次のルジャンドル微分方程式の解</description>
    </item>
    <item>
      <title>オイラー積分：ベータ関数とガンマ関数</title>
      <link>https://freshrimpsushi.github.io/jp/posts/1483/</link>
      <pubDate>Wed, 22 Jan 2020 00:00:00 +0000</pubDate>
      <guid>https://freshrimpsushi.github.io/jp/posts/1483/</guid>
      <description>定義 オイラー積分Euler integral 以下の二つの積分をオイラー積分と呼ぶ。 $(a)$ 第1種オイラー積分Euler integral of the first kind : ベータ関数 $$ B(p,q)=\int_{0}^1 t^{p-1}(1-t)^{q-1}dt,\quad p&amp;gt;0,\quad q&amp;gt;0 $$ $(b)$ 第2種オ</description>
    </item>
    <item>
      <title>ベータ関数とガンマ関数の関係</title>
      <link>https://freshrimpsushi.github.io/jp/posts/1481/</link>
      <pubDate>Sat, 18 Jan 2020 00:00:00 +0000</pubDate>
      <guid>https://freshrimpsushi.github.io/jp/posts/1481/</guid>
      <description>まとめ $$ B(p,q) = {{\Gamma (p) \Gamma (q)} \over {\Gamma (p+q) }} $$ 説明 ベータ関数は $\displaystyle B(p,q) := \int_{0}^{1} t^{p-1} (1-t)^{q-1} dt $ で定義され、ガンマ関数と同様に多くの分野で応用されている重要な関数だ。ガンマ関</description>
    </item>
    <item>
      <title>階乗、二重階乗、多重階乗</title>
      <link>https://freshrimpsushi.github.io/jp/posts/1477/</link>
      <pubDate>Tue, 14 Jan 2020 00:00:00 +0000</pubDate>
      <guid>https://freshrimpsushi.github.io/jp/posts/1477/</guid>
      <description>ファクトリアル 自然数$n$に対して、$n!$が$n$階乗$factorial, 계승, 차례곱이라 읽고 아래와 같이 정의한다. $$ n!=n\cdot(n-1)\cdot(n-2)\cdots 2\cdot 1 =\prod\limits_{k=1}^n k $$ 설명 많은</description>
    </item>
    <item>
      <title>ガンマ関数の導出</title>
      <link>https://freshrimpsushi.github.io/jp/posts/1476/</link>
      <pubDate>Sun, 12 Jan 2020 00:00:00 +0000</pubDate>
      <guid>https://freshrimpsushi.github.io/jp/posts/1476/</guid>
      <description>非負整数のためのガンマ関数 $\alpha &amp;gt;0$に対して $$ \int_{0}^{\infty} e^{-\alpha x} dx=\left[-\frac{1}{\alpha}e^{-\alpha x}\right]_{0}^{\infty}=\frac{1}{\alpha} $$ 両辺を$\alpha$に関して微分すると、ライプニッツの積分法則によって左辺の</description>
    </item>
    <item>
      <title>半線形関数</title>
      <link>https://freshrimpsushi.github.io/jp/posts/1333/</link>
      <pubDate>Mon, 05 Aug 2019 00:00:00 +0000</pubDate>
      <guid>https://freshrimpsushi.github.io/jp/posts/1333/</guid>
      <description>定義1 関数 $f : X \to Y$が下記の二つの条件を満たす場合、準線形sublinearと呼ばれる。$x,x_{1},x_{2}\in X$と$a \in \m</description>
    </item>
    <item>
      <title>加法関数と乗法関数</title>
      <link>https://freshrimpsushi.github.io/jp/posts/1096/</link>
      <pubDate>Wed, 22 May 2019 00:00:00 +0000</pubDate>
      <guid>https://freshrimpsushi.github.io/jp/posts/1096/</guid>
      <description>関数 $f : X \to Y$が与えられたとしよう。$a, b \in X$、$a_{i} \in X\ (i=1,\cdots)$とする。 部分加法関数 関数$f$が下の式を満た</description>
    </item>
    <item>
      <title>直交関数と直交集合：正規直交集合と関数のノルム</title>
      <link>https://freshrimpsushi.github.io/jp/posts/926/</link>
      <pubDate>Fri, 01 Mar 2019 00:00:00 +0000</pubDate>
      <guid>https://freshrimpsushi.github.io/jp/posts/926/</guid>
      <description>🚧 이 포스트는 아직 이관 작업이 완료되지 않았습니다 🚧 ** **内積inner product 区間$[a,b]$で定義された二つの複素関数$f$、$g$の内積は、以下</description>
    </item>
    <item>
      <title>ルジャンドル多項式のロドリゲスの公式</title>
      <link>https://freshrimpsushi.github.io/jp/posts/895/</link>
      <pubDate>Wed, 13 Feb 2019 00:00:00 +0000</pubDate>
      <guid>https://freshrimpsushi.github.io/jp/posts/895/</guid>
      <description>公式 ルジャンドル多項式の明示的explicitな公式は以下の通りです。 $$ P_{l}(x)=\dfrac{1}{2^{l} l!} \dfrac{d^{l}}{dx^{l}}(x^{2}-1)^{l} \tag{1} $$ 説明 $l$番目のルジャンドル多項式を得る公式であり、これを</description>
    </item>
    <item>
      <title>階段関数</title>
      <link>https://freshrimpsushi.github.io/jp/posts/757/</link>
      <pubDate>Fri, 09 Nov 2018 00:00:00 +0000</pubDate>
      <guid>https://freshrimpsushi.github.io/jp/posts/757/</guid>
      <description>定義 部分ごとに定数関数である関数をステップ関数と呼ぶ。 説明 上の図のように階段のような形をしているのでステップ関数と呼ばれる。最初に提案した人</description>
    </item>
    <item>
      <title>二項係数の一般化：ベータ関数</title>
      <link>https://freshrimpsushi.github.io/jp/posts/450/</link>
      <pubDate>Sun, 25 Feb 2018 00:00:00 +0000</pubDate>
      <guid>https://freshrimpsushi.github.io/jp/posts/450/</guid>
      <description>要約：ベータ関数で表される二項係数 $0 \le k\le n$が二つの自然数 $k,n$に対して満たされるとき、下記の式が成立する。 $$ \binom{n}{k}={}_{n}C_{k}=C(n,k)=\frac{1}{(n+1)B(n-k+1,k+1)} $$ 二つの自然数 $m,n$</description>
    </item>
    <item>
      <title>凸関数、凹関数</title>
      <link>https://freshrimpsushi.github.io/jp/posts/262/</link>
      <pubDate>Sun, 08 Oct 2017 00:00:00 +0000</pubDate>
      <guid>https://freshrimpsushi.github.io/jp/posts/262/</guid>
      <description>定義 区間 $I \subset \mathbb{R}$ の二つの要素 $x_{1} , x_{2}$ と関数 $f : I \to \mathbb{R}$ および $0 \le t \le 1$ について、 $f( t x_{1} + (1-t) x_{2}) \le t f(x_{1}) + (1-t) f(x_{2})$ のとき、$f$ は $I$での凸関数と定義され</description>
    </item>
    <item>
      <title>生成関数とは何か？</title>
      <link>https://freshrimpsushi.github.io/jp/posts/232/</link>
      <pubDate>Wed, 30 Aug 2017 00:00:00 +0000</pubDate>
      <guid>https://freshrimpsushi.github.io/jp/posts/232/</guid>
      <description>定義 シーケンス $\left\{ a_{n} \right\}$ に対して、 $$ g(x) =\sum \limits _{n=0}^{\infty}a_{n}x^{n}= a_{0} + a_{1} x + a_{2} x^2 + \cdots $$ の形で表される関数 $g$ を数列 $\left\{ a_{n}\right\}$ の生成関数または単に生成関数という。数列が $a_{n}=a_{n}(x)$ の場合</description>
    </item>
    <item>
      <title>オイラーの反射公式の導出</title>
      <link>https://freshrimpsushi.github.io/jp/posts/192/</link>
      <pubDate>Tue, 01 Aug 2017 00:00:00 +0000</pubDate>
      <guid>https://freshrimpsushi.github.io/jp/posts/192/</guid>
      <description>式 非整数の $p$ に対して $$ {\Gamma (1-p) \Gamma ( p )} = { {\pi} \over {\sin \pi p } } $$ 説明 ガンマ関数を使った式の中で最も有名な式だ。 反射公式から得られる役立つ結果には $ \Gamma (</description>
    </item>
    <item>
      <title>シンク関数のオイラー表現の証明</title>
      <link>https://freshrimpsushi.github.io/jp/posts/187/</link>
      <pubDate>Tue, 01 Aug 2017 00:00:00 +0000</pubDate>
      <guid>https://freshrimpsushi.github.io/jp/posts/187/</guid>
      <description>まとめ シンク関数の定義 次の関数 $\text{sinc} : \mathbb{R} \to \mathbb{R}$ をシンク関数と呼ぶ。 $$ \text{sinc} x := \begin{cases} \displaystyle {{\sin x} \over {x}} &amp;amp; , \text{if } x \ne 0 \\ 1 &amp;amp; , \text{if } x = 0 \end{cases} $$ オイラー表現 $$ \text{sinc} x = \prod_{n=1}^{\infty} \left(</description>
    </item>
    <item>
      <title>ディラックのデルタ関数</title>
      <link>https://freshrimpsushi.github.io/jp/posts/103/</link>
      <pubDate>Sat, 06 May 2017 00:00:00 +0000</pubDate>
      <guid>https://freshrimpsushi.github.io/jp/posts/103/</guid>
      <description>定義 以下の二つの条件を満たす関数をディラックデルタ関数という。 $$ \delta (x) = \begin{cases} 0, &amp;amp; x\neq 0 \\ \infty , &amp;amp; x=0 \end{cases} $$ $$ \int_{-\infty}^{\infty}{\delta (x) dx}=1 $$ 説明 ※クロネッカーデルタと間違えない</description>
    </item>
    <item>
      <title>ガンマ関数</title>
      <link>https://freshrimpsushi.github.io/jp/posts/95/</link>
      <pubDate>Sun, 30 Apr 2017 00:00:00 +0000</pubDate>
      <guid>https://freshrimpsushi.github.io/jp/posts/95/</guid>
      <description>定義 次のように定義された関数 $\Gamma : (0, \infty) \to \mathbb{R}$ をガンマ関数と言う。 $$ \Gamma (x) := \int_{0}^{\infty} t^{x-1} e^{-t} dt $$ 説明 上の式において積分に焦点を置くと、オイラー積分とも呼ばれる</description>
    </item>
    <item>
      <title>奇関数と偶関数</title>
      <link>https://freshrimpsushi.github.io/jp/posts/40/</link>
      <pubDate>Fri, 24 Mar 2017 00:00:00 +0000</pubDate>
      <guid>https://freshrimpsushi.github.io/jp/posts/40/</guid>
      <description>定義 $f(-x) = f(x)$ を満たす関数 $f(x)$ を偶関数Evenという。 $f(-x) = -f(x)$ を満たす関数 $f(x)$ を奇関数Oddという。 説明 偶関数は座標平面で$y$ 軸に関して対称な関数、</description>
    </item>
  </channel>
</rss>
