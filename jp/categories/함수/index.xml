<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>関数 on 生エビ寿司屋</title><link>https://freshrimpsushi.github.io/jp/categories/%ED%95%A8%EC%88%98/</link><description>Recent content in 関数 on 生エビ寿司屋</description><generator>Hugo -- gohugo.io</generator><language>jp</language><lastBuildDate>Sun, 10 Aug 2025 00:00:00 +0000</lastBuildDate><atom:link href="https://freshrimpsushi.github.io/jp/categories/%ED%95%A8%EC%88%98/index.xml" rel="self" type="application/rss+xml"/><item><title>多項式関数の微分法</title><link>https://freshrimpsushi.github.io/jp/posts/3686/</link><pubDate>Sun, 10 Aug 2025 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/3686/</guid><description>公式 多項式関数の導関数は次のとおりである。 $$ \dfrac{d x^{n}}{dx} = n x^{n-1} $$ $n \in \mathbb{N}$であれば、$x \in \mathbb{R}$で成立する。 $n \in \m</description></item><item><title>逆関数 (ぎゃくかんすう)</title><link>https://freshrimpsushi.github.io/jp/posts/3679/</link><pubDate>Sun, 27 Jul 2025 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/3679/</guid><description>定義 与えられた全単射関数$f: X \to Y$に対して、$f$の逆関数inverse functionは次のように定義される。 $$ f^{-1} : Y \to X, \quad f^{-1}(y) = x \iff f(x)</description></item><item><title>絶対値関数の微分</title><link>https://freshrimpsushi.github.io/jp/posts/3655/</link><pubDate>Wed, 11 Jun 2025 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/3655/</guid><description>定理 絶対値関数の微分は以下のように示される。 $$ \frac{ d |x| } {d x} = \dfrac{1}{|x|}x = \begin{cases} 1 &amp;amp; x &amp;gt; 0 \\ -1 &amp;amp; x &amp;lt; 0 \end{cases}, \qquad x \neq 0 $$ 説明 実際には絶対値関数は$x = 0$の地点</description></item><item><title>準周期関数</title><link>https://freshrimpsushi.github.io/jp/posts/759/</link><pubDate>Sun, 16 Mar 2025 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/759/</guid><description>定義 1 関数 $h : \mathbb{R} \to \mathbb{R}^{n}$ が 基礎周波数basic frequency $\omega_{1} , \cdots , \omega_{n}$ およびそれぞれの $x_{1} , \cdots , x_{n}$ に対して $2 \pi$-周期関数である $H$として次のように表す</description></item><item><title>ゼロ機能, 零機能</title><link>https://freshrimpsushi.github.io/jp/posts/1155/</link><pubDate>Fri, 07 Mar 2025 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/1155/</guid><description>定義 実数空間で 次のように定義される$0 : \mathbb{R} \to \mathbb{R}$を 零関数zero functionと呼ぶ。 $$ 0(x) = 0 \quad \text{for all } x \in \mathbb{R} $$ ベクトル空</description></item><item><title>双曲関数の表記法と命名の由来</title><link>https://freshrimpsushi.github.io/jp/posts/1825/</link><pubDate>Sat, 09 Nov 2024 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/1825/</guid><description>定義 二つの 指数関数 の 線形結合 $\frac{1}{2}e^{x} - \frac{1}{2}e^{-x}$ を 双曲線正弦関数hyperbolic sine function として、次のように表記する。 $$ \sinh x := \dfrac{e^{x} - e^{-x}}{2} $$ 同様に $\frac{1}{2}e^{x} + \frac{1}{2}e^{-x}$ を 双曲線余</description></item><item><title>三角関数の特別な角</title><link>https://freshrimpsushi.github.io/jp/posts/1849/</link><pubDate>Sun, 03 Nov 2024 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/1849/</guid><description>公式 いくつかの特定の角度に対する三角関数の関数値は次の通りだ。 ラジアン（角度） $0$ $\frac{\pi}{12} (15^{\circ})$ $\frac{\pi}{6} (30^{\circ})$ $\frac{\pi}{4} (45^{\circ})$ $\frac{\pi}{3} (60^{\circ})$ $\frac{\pi}{2} (90^{\circ})$ $\sin$ $0$ $\dfrac{\sqrt{6} - \sqrt{2}}{4}$ $\dfrac{1}{2}$ $\dfrac{\sqrt{2}}{2}$ $\dfrac{\sqrt{3}}{2}$ $1$ $\cos$ $1$ $ \dfrac{\sqrt{6} + \sqrt{2}}{4}$ $\dfrac{\sqrt{3}}{2}$ $\dfrac{\sqrt{2}}{2}$ $\dfrac{1}{2}$ $0$ $\tan$</description></item><item><title>ガンマ関数の単純極</title><link>https://freshrimpsushi.github.io/jp/posts/2621/</link><pubDate>Sun, 01 Sep 2024 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/2621/</guid><description>定理 複素関数としてのガンマ関数 $\Gamma$ の定義域は以下の通りです。 $$ \mathbb{C} \setminus \left( \mathbb{Z} \setminus \mathbb{N} \right) = \mathbb{C} \setminus \left\{ 0 , -1, -2, \cdots \right\} $$ それだけでなく、$\Gamma$ の特異点の集</description></item><item><title>逆双曲線関数の導関数</title><link>https://freshrimpsushi.github.io/jp/posts/1976/</link><pubDate>Thu, 29 Aug 2024 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/1976/</guid><description>式1 逆双曲線関数の導関数は以下の通りです。 $$ \begin{align*} \dfrac{d}{dx} (\sinh^{-1} x) &amp;amp;= \dfrac{1}{\sqrt{x^{2} + 1}} \qquad &amp;amp; \dfrac{d}{dx} (\csch^{-1} x) &amp;amp;= - \dfrac{1}{|x|\sqrt{x^{2} + 1}} \\ \dfrac{d}{dx} (\cosh^{-1} x) &amp;amp;= \dfrac{1}{\sqrt{x^{2} - 1}} \qquad &amp;amp; \dfrac{d}{dx} (\sech^{-1} x) &amp;amp;= - \dfrac{1}{x\sqrt{1 - x^{2}}} \\ \dfrac{d}{dx} (\tanh^{-1} x) &amp;amp;= \dfrac{1}{1 - x^{2}} \qquad &amp;amp; \dfrac{d}{dx} (\coth^{-1}</description></item><item><title>逆双曲線関数</title><link>https://freshrimpsushi.github.io/jp/posts/1977/</link><pubDate>Tue, 27 Aug 2024 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/1977/</guid><description>定義1 双曲線関数の逆関数を逆双曲線関数と言います。 $$ \begin{align*} y = \sinh^{-1} x &amp;amp;\iff \sinh y = x \\ y = \cosh^{-1} x &amp;amp;\iff \cosh y = x \\ y = \tanh^{-1} x &amp;amp;\iff \tanh y = x \\ \end{align*} $$ クローズド形式 逆双曲線</description></item><item><title>双曲線関数の導関数</title><link>https://freshrimpsushi.github.io/jp/posts/1978/</link><pubDate>Sun, 25 Aug 2024 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/1978/</guid><description>式1 双曲線関数の導関数は以下の通りです。 $$ \begin{align*} \dfrac{d}{dx} (\sinh x) &amp;amp;= \cosh x \qquad &amp;amp; \dfrac{d}{dx} (\csch x) &amp;amp;= - \csch x \coth x \\ \dfrac{d}{dx} (\cosh x) &amp;amp;= \sinh x \qquad &amp;amp; \dfrac{d}{dx} (\sech x) &amp;amp;= - \sech x \tanh x \\ \dfrac{d}{dx} (\tanh x) &amp;amp;= \sech^{2} x \qquad &amp;amp; \dfrac{d}{dx} (\coth x) &amp;amp;=</description></item><item><title>ガンマ関数の1における微分係数</title><link>https://freshrimpsushi.github.io/jp/posts/2617/</link><pubDate>Sat, 24 Aug 2024 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/2617/</guid><description>定理 ガンマ関数 $\Gamma$ とオイラー-マスケローニ定数 $\gamma$ について、以下が成立します。 $$ \Gamma ' (1) = - \gamma $$ 証明 1 ガンマ関数の導関数と逆数の積: $$ {{ \Gamma ' (z) } \over</description></item><item><title>三角関数の恒等式</title><link>https://freshrimpsushi.github.io/jp/posts/1979/</link><pubDate>Fri, 23 Aug 2024 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/1979/</guid><description>公式 三角関数について、次の恒等式が成立します。 $$ \begin{align} \cos^{2} x + \sin^{2} x &amp;amp;= 1 \\ 1 + \tan^{2} x &amp;amp;= \sec^{2} x \\ 1 + \cot^{2} x &amp;amp;= \csc^{2} x \end{align} $$ 証明 $(1)$ 三角関数の加法定理から、 $$ \cos (x - y)</description></item><item><title>逆三角関数の微分法</title><link>https://freshrimpsushi.github.io/jp/posts/1980/</link><pubDate>Wed, 21 Aug 2024 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/1980/</guid><description>公式 逆三角関数の導関数は以下の通りである。 $$ \begin{align*} \dfrac{d}{dx} \sin ^{-1} x &amp;amp;= \dfrac{1}{\sqrt{1-x^2}} \qquad &amp;amp; \dfrac{d}{dx} \csc ^{-1} x &amp;amp;= -\dfrac{1}{x\sqrt{x^2-1}} \\ \dfrac{d}{dx} \cos ^{-1} x &amp;amp;= -\dfrac{1}{\sqrt{1-x^2}} \qquad &amp;amp; \dfrac{d}{dx} \sec ^{-1} x &amp;amp;= \dfrac{1}{x\sqrt{x^2-1}} \\ \dfrac{d}{dx} \tan ^{-1} x &amp;amp;= \dfrac{1}{1+x^2} \qquad &amp;amp; \dfrac{d}{dx} \cot ^{-1} x &amp;amp;= -\dfrac{1}{1+x^2} \end{align*} $$ 証</description></item><item><title>ディガンマ関数：ガンマ関数の導関数とその逆数の積</title><link>https://freshrimpsushi.github.io/jp/posts/2615/</link><pubDate>Tue, 20 Aug 2024 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/2615/</guid><description>定義 対数ガンマ関数の導関数をディガンマ関数digamma functionと言います。 $$ \psi_{0} (z) := \dfrac{d}{dz} \ln \Gamma (z) = \dfrac{\Gamma^{\prime}(z)}{\Gamma (z)} $$ 定理 ガンマ関数 $\Gamma$ とオイラー-マス</description></item><item><title>変数分離可能な関数</title><link>https://freshrimpsushi.github.io/jp/posts/1985/</link><pubDate>Fri, 09 Aug 2024 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/1985/</guid><description>定義 多変数関数に対して、以下の式を満たす$g_{i}$が存在する場合、$f$を変数分離可能と言う。 $$ f(x_{1}, x_{2}, \dots, x_{n}) = g_{1}(x_{1}) g_{2}(x_{2}) \cdots g_{n}(x_{n}) $$ 説明 簡単に言うと、変</description></item><item><title>エルミート多項式のロドリゲスの公式</title><link>https://freshrimpsushi.github.io/jp/posts/1996/</link><pubDate>Sat, 20 Jul 2024 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/1996/</guid><description>公式 エルミート多項式の明示的explicit 公式は次の通り。 物理学者のエルミート多項式 $$ H_{n} = (-1)^{n} e^{x^2} {{d^{n}} \over {dx^{n}}} e^{-x^2} \tag{1} $$ 確率論者のエルミート多項式 $$ H_{e_{n}} =</description></item><item><title>ラゲール多項式</title><link>https://freshrimpsushi.github.io/jp/posts/3630/</link><pubDate>Thu, 18 Jul 2024 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/3630/</guid><description>定義 ラゲール多項式Laguerre polynomialは次のような方法で定義される。 微分方程式の解として 次のようなラゲール微分方程式の解をラ</description></item><item><title>複数の多項式のロドリゲスの公式</title><link>https://freshrimpsushi.github.io/jp/posts/3622/</link><pubDate>Tue, 02 Jul 2024 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/3622/</guid><description>説明 ロドリゲスの公式Rodrigues&amp;rsquo; formulaは元々、ルジャンドル多項式の明示的な形を表すために使われた言葉だったが、そ</description></item><item><title>特殊関数とは?</title><link>https://freshrimpsushi.github.io/jp/posts/3621/</link><pubDate>Sun, 30 Jun 2024 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/3621/</guid><description>説明 数学で特殊関数special functionと呼ばれるものは、通常、特定の微分方程式の解であったり、複雑な積分で定義されたり、初等関数で</description></item><item><title>一般的な多面体写像、集合値写像の定義</title><link>https://freshrimpsushi.github.io/jp/posts/2583/</link><pubDate>Thu, 13 Jun 2024 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/2583/</guid><description>定義 1 2 3 二つの集合 $X, Y$ と $Y$ の冪集合 $\mathcal{P} (Y)$ に関して、関数 $f : X \to \mathcal{P} (Y)$ を多値写像multivalued mappingまたは集合値写像set-va</description></item><item><title>ハードスレッショルディングとソフトスレッショルディングの関数として</title><link>https://freshrimpsushi.github.io/jp/posts/2569/</link><pubDate>Thu, 16 May 2024 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/2569/</guid><description>定義 1 閾値threshold $\lambda \in \mathbb{R}$ が与えられているとする。 ハードスレッショルディング 以下のように定義された $\eta _{H} \left( x ; \lambda \right) : \mathbb{R} \to \mathbb{R}$ をハードスレ</description></item><item><title>アークタンジェント2関数の定義</title><link>https://freshrimpsushi.github.io/jp/posts/2559/</link><pubDate>Fri, 26 Apr 2024 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/2559/</guid><description>定義 アークタンジェント2arc Tangent 2 $\arctan 2 : \left( \mathbb{R}^{2} \setminus \left\{ (0,0) \right\} \right) \to \mathbb{R}$ は次のように定義される。 $$ \arctan 2 : \left( r \sin \theta , r \cos \theta \right) \mapsto \theta $$ $r &amp;gt; 0$ は任意の正数だ。 説明</description></item><item><title>ポリハーモニック関数</title><link>https://freshrimpsushi.github.io/jp/posts/3584/</link><pubDate>Wed, 17 Apr 2024 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/3584/</guid><description>定義 $\Delta = \nabla^{2}$をラプラシアンと呼ぼう。自然数$k \in \mathbb{N}$に対して、$\Delta ^{k}$をポリハーモニック</description></item><item><title>バイハーモニック関数</title><link>https://freshrimpsushi.github.io/jp/posts/3583/</link><pubDate>Mon, 15 Apr 2024 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/3583/</guid><description>定義1 $\Delta = \nabla^{2}$をラプラシアンと呼ぼう。$\Delta ^{2}$をバイハーモニックオペレーター又はバイラプラシアンという。以</description></item><item><title>因数階乗0が0!=1と定義される理由</title><link>https://freshrimpsushi.github.io/jp/posts/2546/</link><pubDate>Sun, 31 Mar 2024 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/2546/</guid><description>定義 $0 \notin \mathbb{N}$に対する階乗の$0!$を次のように定義する。 $$ 0! := 1 $$ 説明 なぜ$0!$が$0$ではなく、$1$なのか？元々$0</description></item><item><title>三角関数の微分法</title><link>https://freshrimpsushi.github.io/jp/posts/3569/</link><pubDate>Mon, 18 Mar 2024 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/3569/</guid><description>公式1 三角関数の導関数は次の通り。 $$ \begin{align*} \dfrac{d}{dx} \sin x &amp;amp;= \cos x \qquad &amp;amp; \dfrac{d}{dx} \csc x &amp;amp;= -\csc x \cot x \\[1em] \dfrac{d}{dx} \cos x &amp;amp;= - \sin x \qquad &amp;amp; \dfrac{d}{dx} \sec x &amp;amp;= \sec x \tan x \\[1em] \dfrac{d}{dx} \tan x &amp;amp;= \sec^{2} x \qquad &amp;amp; \dfrac{d}{dx} \cot x &amp;amp;= -\csc^{2} x \end{align*} $$</description></item><item><title>同次関数</title><link>https://freshrimpsushi.github.io/jp/posts/3540/</link><pubDate>Sat, 20 Jan 2024 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/3540/</guid><description>定義 定数$a$と関数$f$に対して、次を満たす$k \in \mathbb{N}$が存在する場合、$f$を$k$次の同次関数$k$次の同次関数と言う</description></item><item><title>三角関数の語源 (さんかくかんすうのごげん)</title><link>https://freshrimpsushi.github.io/jp/posts/3538/</link><pubDate>Tue, 16 Jan 2024 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/3538/</guid><description>説明 数学では、三角関数trigonometric functionと呼ばれるものがある。$\sin, \cos, \tan, \sinh, \sec, \dots$などがそれにあたる。こ</description></item><item><title>逆三角関数のarc表記法の由来</title><link>https://freshrimpsushi.github.io/jp/posts/3537/</link><pubDate>Sun, 14 Jan 2024 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/3537/</guid><description>定義 三角関数の逆関数を逆三角関数inverse trigonometric functionと呼ぶ。 説明 逆三角関数は基本的に使われる逆関数の表記方法として$\sin^{</description></item><item><title>有界関数</title><link>https://freshrimpsushi.github.io/jp/posts/3517/</link><pubDate>Tue, 05 Dec 2023 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/3517/</guid><description>定義1 関数$f : X \to \mathbb{R}^{n}$について、次を満たす定数$M \in \mathbb{R}$が存在する場合、$f$を有界bound</description></item><item><title>定数関数の定義</title><link>https://freshrimpsushi.github.io/jp/posts/2465/</link><pubDate>Sat, 21 Oct 2023 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/2465/</guid><description>定義 関数 $c : X \to Y$ が全ての $x_{1} , x_{2} \in X$ に対して次を満足するなら、定数関数constant functionと言う。 $$ c \left( x_{1} \right) = c \left( x_{2} \right) $$ 説明 普通</description></item><item><title>放射状関数</title><link>https://freshrimpsushi.github.io/jp/posts/3493/</link><pubDate>Wed, 18 Oct 2023 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/3493/</guid><description>定義1 $\mathbb{R}^{n}$で定義された関数が以下を満たす場合、レイディアルと呼ばれる。 $$ f(R\mathbf{x}) = f(\mathbf{x}) \text{ for all rotations } R $$ 説明 直訳すると放射型</description></item><item><title>有理関数の定義</title><link>https://freshrimpsushi.github.io/jp/posts/2463/</link><pubDate>Tue, 17 Oct 2023 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/2463/</guid><description>定義 1 2つの多項式関数 $P_{1}(z), P_{2}(z) : \mathbb{C} \to \mathbb{C}$ について、$P_{2} (z) \ne 0$ である全ての $z \in \mathbb{C}$ を $\left( P_{1} / P_{2} \right) (z)$ に対応させる次の関数 $Q$ を有理関数または代数的分</description></item><item><title>一般的な凸関数の定義</title><link>https://freshrimpsushi.github.io/jp/posts/2400/</link><pubDate>Tue, 13 Jun 2023 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/2400/</guid><description>定義 ベクトル空間 $V$ で定義された関数 $f : V \to \mathbb{R}$ が全ての $\mathbf{x}, \mathbf{y} \in V$ と全ての $t \in [0,1]$ に対して次を満たす時、凸関数convex functionと言われる</description></item><item><title>双曲線関数の合成公式</title><link>https://freshrimpsushi.github.io/jp/posts/3372/</link><pubDate>Thu, 16 Feb 2023 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/3372/</guid><description>公式 以下が成り立つ。 $$ c_{1} \cosh x + c_{2} \sinh x = \begin{cases} A\cosh(x + y_{1}) &amp;amp; \text{if } c_{1} \gt c_{2} \\ B e^{x} &amp;amp; \text{if } c_{1} = c_{2} = B \\ C\sinh(x + y_{2}) &amp;amp; \text{if } c_{1} \lt c_{2} \end{cases} $$ $A = \sqrt{c_{2}^{2} - c_{1}^{2}}$ $C = \sqrt{c_{2}^{2} - c_{1}^{2}}$ $y_{1} = \cosh^{-1}\left( \dfrac{c_{1}}{\sqrt{c_{1}^{2} - c_{2}^{2}}} \right) =</description></item><item><title>三角関数の合成公式</title><link>https://freshrimpsushi.github.io/jp/posts/3370/</link><pubDate>Sun, 12 Feb 2023 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/3370/</guid><description>公式 サインへの合成 $$ A \cos \theta + B \sin \theta = C\sin(\theta + \phi) $$ ここに、$C = \sqrt{A^{2} + B^{2}}$、$\phi = \sin^{-1} \left( \dfrac{A}{\sqrt{A^{2} + B^{2}}} \right) = \cos^{-1} \left( \dfrac{B}{\sqrt{A^{2} + B^{2}}} \right)$がある。 コ</description></item><item><title>凸関数の様々な性質</title><link>https://freshrimpsushi.github.io/jp/posts/3366/</link><pubDate>Sat, 04 Feb 2023 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/3366/</guid><description>定理1 全ての凸関数は連続である。 $f$が増加する凸関数であり、$g$が凸関数であるならば、$f \circ g$も凸関数である。 $f$が$(a, b)$で</description></item><item><title>ランプ関数</title><link>https://freshrimpsushi.github.io/jp/posts/3360/</link><pubDate>Mon, 23 Jan 2023 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/3360/</guid><description>定義 以下の関数をランプ関数ramp functionと呼ぶ。 $$ R(x) := \begin{cases} x &amp;amp; x \gt 0 \\ 0 &amp;amp; x \le 0 \end{cases} $$ 複数の定義方法1 次のように、複数の方法で定義され</description></item><item><title>同一関数</title><link>https://freshrimpsushi.github.io/jp/posts/3167/</link><pubDate>Fri, 31 Dec 2021 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/3167/</guid><description>定義1 集合 $X$に対して、以下の関数 $I_{X} : X \to X$を恒等関数identity functionという。 $$ I_{X}(x) = x,\quad \forall x \in X $$ 説明 主に以下のような記法</description></item><item><title>符号関数</title><link>https://freshrimpsushi.github.io/jp/posts/3147/</link><pubDate>Sun, 21 Nov 2021 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/3147/</guid><description>定義 符号関数sign function $\mathrm{sgn} : \mathbb{R} \to \mathbb{R}$は以下のように定義される。 $$ \mathrm{sgn}(x) :=\begin{cases} 1 &amp;amp; x&amp;gt;0 \\ 0 &amp;amp; x=0 \\ -1 &amp;amp; x&amp;lt;0 \end{cases} $$ 説明 式や定義を簡単に記述するた</description></item><item><title>交代関数</title><link>https://freshrimpsushi.github.io/jp/posts/3137/</link><pubDate>Mon, 01 Nov 2021 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/3137/</guid><description>定義 集合$X$が与えられたとする。以下を満たす関数を交代関数alternating functionと呼ぶ。 $$ \phi : \overbrace{X \times X \times \cdots \times X}^{n} \to \mathbb{R} \\ \phi (x_{1}, \dots, x_{i},</description></item><item><title>含有関数</title><link>https://freshrimpsushi.github.io/jp/posts/3124/</link><pubDate>Wed, 06 Oct 2021 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/3124/</guid><description>定義 $X \subset Y$としよう。次を満たす関数を包含関数inclusion (function)という。 $$ i : X \to Y, \quad \text{and} \quad i(x) = x,\quad \forall x\in X $$ 説明 簡単に言えば</description></item><item><title>関数の拡張と縮小</title><link>https://freshrimpsushi.github.io/jp/posts/3123/</link><pubDate>Mon, 04 Oct 2021 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/3123/</guid><description>定義1 関数 $f : X \to Y$が与えられたとしよう。$U \subset X \subset V$が成立するとしよう。 縮小写像 次を満たす$f |_{U} \to Y$を$f$の縮小写像Uへの$f$の</description></item><item><title>逆三角関数</title><link>https://freshrimpsushi.github.io/jp/posts/2091/</link><pubDate>Sun, 03 Oct 2021 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/2091/</guid><description>定義1 三角関数の逆関数を逆三角関数と言って、三角関数の名前にarc-を付けて表記する。 $$ \begin{align*} \arcsin x &amp;amp;= \sin^{-1} x \qquad &amp;amp; \operatorname{arccsc} x &amp;amp;= \csc^{-1} x \\ \arccos x &amp;amp;= \cos^{-1} x \qquad &amp;amp; \operatorname{arcsec} x &amp;amp;= \sec^{-1} x</description></item><item><title>調和関数</title><link>https://freshrimpsushi.github.io/jp/posts/2078/</link><pubDate>Tue, 07 Sep 2021 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/2078/</guid><description>定義 1 関数 $\phi (x,y)$ が領域 $\mathscr{R}$ で連続な二階微分を持ち、ラプラスの方程式の解であれば、ハーモニックであると言う。言い換えると、ハーモニック関数は次を満</description></item><item><title>階乗に関連する公式들</title><link>https://freshrimpsushi.github.io/jp/posts/3106/</link><pubDate>Tue, 31 Aug 2021 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/3106/</guid><description>連続する奇数の積 整数 $n \ge 0$に対して、次が成り立つ。 $$ (2n-1) \cdot (2n-3) \cdots 5 \cdot 3 \cdot 1 = \dfrac{(2n)!}{2^{n} (n!)} = (2n-1)!! $$ ここで、$n!!$はダブルファクトリアルを意味する。 証明</description></item><item><title>対数関数の定義</title><link>https://freshrimpsushi.github.io/jp/posts/2063/</link><pubDate>Sun, 08 Aug 2021 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/2063/</guid><description>定義 指数関数の逆関数をログ関数$\log : (0,\infty) \to \mathbb{R}$と定義する。すべての$x \in (0,\infty)$に対して$x = e^y$な</description></item><item><title>指数関数</title><link>https://freshrimpsushi.github.io/jp/posts/2060/</link><pubDate>Mon, 02 Aug 2021 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/2060/</guid><description>概要 指数関数exponential functionは、数学全般で一貫して現れる乗算の一般化です。元々の乗算では、底 $a &amp;gt; 0$ が必ずしも $a = e$ であ</description></item><item><title>多項関数</title><link>https://freshrimpsushi.github.io/jp/posts/2058/</link><pubDate>Thu, 29 Jul 2021 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/2058/</guid><description>定義 1 $n \in \mathbb{N}_{0}$ と $\left\{ a_{k} \right\}_{k=0}^{n} \subset \mathbb{C}$ に対して、次のように定義される $P: \mathbb{C} \to \mathbb{C}$ を**$n$次の多項式関数**polynomial of degree $n$という。 $$ P(z) := a_{0} +</description></item><item><title>三角関数の定義</title><link>https://freshrimpsushi.github.io/jp/posts/2056/</link><pubDate>Sun, 25 Jul 2021 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/2056/</guid><description>概要 三角関数は直角三角形の底角に三角比を対応させた関数だ。 定義 三角関数のサイン、コサイン$\sin, \cos : \mathbb{R} \to \mathbb{R}$は以下のよ</description></item><item><title>生存関数</title><link>https://freshrimpsushi.github.io/jp/posts/2053/</link><pubDate>Mon, 19 Jul 2021 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/2053/</guid><description>定義 1 $S(0)=1$ であり、増加しない関数 $S : [0,\infty) \to [0,1]$ を 生存関数survival functionと定義する。 説明 簡単に言えば、生存関数とは時間 $t$ に生存して</description></item><item><title>絶対値関数</title><link>https://freshrimpsushi.github.io/jp/posts/3083/</link><pubDate>Fri, 16 Jul 2021 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/3083/</guid><description>定義 次のように定義される関数 $f$ を絶対値関数absolute value functionと呼び、関数の値を $|x|$ のように表記する。 $$ |x| := f(x) = \begin{cases} x &amp;amp;\text{if } x&amp;gt;0 \\ 0 &amp;amp;\text{if</description></item><item><title>周期関数</title><link>https://freshrimpsushi.github.io/jp/posts/2050/</link><pubDate>Tue, 13 Jul 2021 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/2050/</guid><description>定義 関数 $f : \mathbb{R} \to \mathbb{R}$ がある定数 $T \ne 0$ と全ての $t \in \mathbb{R}$ に対して以下を満たす時、$T$-周期関数$T$-periodic functionと言います。</description></item><item><title>関数としての対角行列、対角成分</title><link>https://freshrimpsushi.github.io/jp/posts/2048/</link><pubDate>Fri, 09 Jul 2021 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/2048/</guid><description>定義 対角成分 行列に対する$\text{diag} : \mathbb{R}^{n \times n} \to \mathbb{R}^{n}$は、以下のように行列の対角成分から成るベクトルを意味</description></item><item><title>天井関数と床関数</title><link>https://freshrimpsushi.github.io/jp/posts/2039/</link><pubDate>Mon, 21 Jun 2021 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/2039/</guid><description>定義 1 天井関数ceil $\lceil \cdot \rceil : \mathbb{R} \to \mathbb{Z}$ と 床関数floor $\lceil \cdot \rceil : \mathbb{R} \to \mathbb{Z}$ は、次のように定義される。 $$ \lceil x \rceil := \min \left\{ n \in \mathbb{Z} : x \le n \right\} \\ \lfloor x \rfloor := \max \left\{ n</description></item><item><title>指数関数と対数関数の極限</title><link>https://freshrimpsushi.github.io/jp/posts/3053/</link><pubDate>Tue, 11 May 2021 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/3053/</guid><description>公式 指数関数と対数関数に関して、以下の式が成り立つ。 $$ \begin{equation} \lim \limits_{x \to 0} \dfrac{\log (x + 1) }{x} = 1 \end{equation} $$ $$ \begin{equation} \lim \limits_{x \to 0} \dfrac{ e^{x} - 1}{x} = 1 \end{equation} $$ 証明 $(1)$ $$ \begin{align*} \lim \limits_{x \to 0} \dfrac{\log (x + 1) }{x} &amp;amp;=</description></item><item><title>指数関数の微分法</title><link>https://freshrimpsushi.github.io/jp/posts/3049/</link><pubDate>Sun, 25 Apr 2021 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/3049/</guid><description>式 指数関数の導関数は次の通りである。 $$ \begin{equation} \dfrac{d e^{x}}{dx} = e^{x} \label{fml1} \end{equation} $$ 指数合成関数の導関数は次の通りである。 $$ \begin{equation} \dfrac{d \left( e^{f(x)} \right)}{dx} = f^{\prime}(x)e^{f(x)} \label{fml2} \end{equation} $$ 説明 指数関数は導関数と自分</description></item><item><title>関数の合成</title><link>https://freshrimpsushi.github.io/jp/posts/3048/</link><pubDate>Mon, 19 Apr 2021 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/3048/</guid><description>定義 関数 $f: X \to Y$, $g: f(X) \to Z$について次のように定義される$h: X \to Z$を**$f$と$g$の合成**composition of $g$ with $f$と呼び、</description></item><item><title>対数関数の微分법</title><link>https://freshrimpsushi.github.io/jp/posts/3047/</link><pubDate>Tue, 13 Apr 2021 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/3047/</guid><description>公式 底が$e$の対数関数の導関数は次の通りだ。 $$ \begin{equation} \dfrac{d \log x}{dx}=\dfrac{1}{x} \end{equation} $$ 対数合成関数の導関数は次の通りだ。 $$ \begin{equation} \dfrac{d \left( \log f(x) \right)}{dx} = \dfrac{f^{\prime}(x)}{f(x)} \end{equation} $$ 説明 特に$(2)$は便利</description></item><item><title>1+2+3+4+5+⋯=-1/12の解析的証明</title><link>https://freshrimpsushi.github.io/jp/posts/2005/</link><pubDate>Sat, 10 Apr 2021 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/2005/</guid><description>定理 $$ \begin{align*} &amp;amp; 1 + 2 + 3 + 4 + 5 + \cdots \\ =&amp;amp; \sum_{n \in \mathbb{N}} {{ 1 } \over { n^{-1} }} \\ =&amp;amp; \zeta (-1) \\ =&amp;amp; -{{ 1 } \over { 12 }} \end{align*} $$ 説明 正の数をずっと足していたら、どうして負の数が出るん</description></item><item><title>線形関数</title><link>https://freshrimpsushi.github.io/jp/posts/3037/</link><pubDate>Sat, 20 Feb 2021 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/3037/</guid><description>定義 関数 $f : X \to Y$が以下の二つの条件を満たす場合、線形linearという。$x,x_{1},x_{2}\in X$、$a \in \mathbb{R</description></item><item><title>1+1+1+1+1+⋯=-1/12 の解析的証明</title><link>https://freshrimpsushi.github.io/jp/posts/1944/</link><pubDate>Sat, 06 Feb 2021 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/1944/</guid><description>定理 $$ \begin{align*} &amp;amp; 1 + 1 + 1 + 1 + 1 + \cdots \\ =&amp;amp; \sum_{n \in \mathbb{N}} {{ 1 } \over { n^{0} }} \\ =&amp;amp; \zeta (0) \\ =&amp;amp; -{{ 1 } \over { 2 }} \end{align*} $$ 説明 正の数をずっと足していくのにどうして負の数が出るん</description></item><item><title>ラマヌジャンの和</title><link>https://freshrimpsushi.github.io/jp/posts/1936/</link><pubDate>Tue, 02 Feb 2021 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/1936/</guid><description>定義 発散する級数に値を割り当てることをラマヌジャン和と呼び、シンボル$\re$を通じて表される。 定理 [1] グランディ級数 1: $$ 1-1+1-1+ \cdots = {{ 1 } \over { 2 }}</description></item><item><title>リーマンゼータ関数のローラン展開の導出</title><link>https://freshrimpsushi.github.io/jp/posts/1934/</link><pubDate>Mon, 01 Feb 2021 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/1934/</guid><description>定理 リーマンのゼータ関数$\zeta$のローラン展開は以下の通りです。 $$ \zeta (s) = {{ 1 } \over { s-1 }} + \sum_{n=0}^{\infty} \gamma_{n} {{ (1-s)^{n} } \over { n! }} \qquad , s &amp;gt; 1 $$ ここで、$\ga</description></item><item><title>リーマン予想</title><link>https://freshrimpsushi.github.io/jp/posts/1920/</link><pubDate>Sun, 24 Jan 2021 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/1920/</guid><description>推測 $\zeta (s) = 0$ を満たす全ての非自明な解 $s$ は $\displaystyle \operatorname{Re} (s) = {{ 1 } \over { 2 }}$ を満たすだろう。 $\zeta$ はリーマンのζ（ゼータ）関数だ。 $\re(z)$ は複素数 $z \in \mathbb{C}$ の実部を意味</description></item><item><title>半線形（共役線形）関数</title><link>https://freshrimpsushi.github.io/jp/posts/1841/</link><pubDate>Sat, 24 Oct 2020 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/1841/</guid><description>定義 関数 $f : X \to \mathbb{C}$が与えられたとする。$x,y\in X$、$a,b \in \mathbb{C}$に対して、下記の式が成立するな</description></item><item><title>単調関数、増加関数、減少関数</title><link>https://freshrimpsushi.github.io/jp/posts/848/</link><pubDate>Thu, 15 Oct 2020 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/848/</guid><description>定義 関数 $f:[a,b] \rightarrow \mathbb{R}$が与えられたとする。$x_{1}$、$x_{2}$、$\in [a,b]$に対して $$ x_{1} \lt x_{2} \ \implies f(x_{1}) \le f(x_{2}) $$ を満た</description></item><item><title>特性関数、指示関数</title><link>https://freshrimpsushi.github.io/jp/posts/1790/</link><pubDate>Mon, 21 Sep 2020 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/1790/</guid><description>定義 $A \subset X$ について、以下のように定義される 関数 $\chi_{A} : X \to \mathbb{R}$ を 特性関数 または 指示関数 と言う。 $$ \chi _{A}(x) := \begin{cases} 1, &amp;amp; x\in A \\ 0 ,&amp;amp; x \notin A \end{cases} $$ 説明 $\chi$ はギリシャ文</description></item><item><title>リーマン予想とリーマンゼータ関数の自明な根</title><link>https://freshrimpsushi.github.io/jp/posts/1668/</link><pubDate>Fri, 18 Sep 2020 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/1668/</guid><description>式 次をリーマンの関数方程式という。 $$ \zeta (s) = 2^{s} \pi^{s - 1} \sin \left( {{ \pi s } \over { 2 }} \right) \Gamma (1-s) \zeta (1-s) $$ $\Gamma$ はガンマ関数だ。 $\zeta$ はリーマンゼータ関数だ。 説明 リーマンの</description></item><item><title>デルタ関数の歴史とディラックがデルタ関数を使用した理由</title><link>https://freshrimpsushi.github.io/jp/posts/1781/</link><pubDate>Tue, 15 Sep 2020 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/1781/</guid><description>デルタ関数の歴史1 2 3 デルタ関数は19世紀初頭、ポアッソン(1815)、フーリエ(1822)、コーシー(1823, 1827)といった数学や物</description></item><item><title>リーマン ゼータ関数</title><link>https://freshrimpsushi.github.io/jp/posts/1664/</link><pubDate>Mon, 14 Sep 2020 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/1664/</guid><description>定義 次のように定義された関数 $\xi$ をリーマンのシー関数riemann xi functionと呼ぶ。 $$ \xi (s) := {{ 1 } \over { 2 }} s ( s-1) \pi^{-s/2} \zeta (s) \Gamma \left( {{ s } \over { 2</description></item><item><title>ヤコビのセータ関数</title><link>https://freshrimpsushi.github.io/jp/posts/1644/</link><pubDate>Fri, 04 Sep 2020 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/1644/</guid><description>定義 次のように定義された関数$\vartheta$をヤコビセータ関数jacobi theta functionと呼ぶ。 $$ \vartheta (\tau) := \sum_{n \in \mathbb{Z}} e^{-\pi n^{2} \tau } $$ 説明 ヤコビ</description></item><item><title>双曲線関数</title><link>https://freshrimpsushi.github.io/jp/posts/1749/</link><pubDate>Thu, 03 Sep 2020 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/1749/</guid><description>定義 $z \in \mathbb{C}$について, $$ \begin{align*} \sinh z &amp;amp;:= \frac{e^{z}-e^{-z}}{2} \\ \cosh z &amp;amp;:= \frac{e^{z}+e^{-z}}{2} \\ \tanh z &amp;amp;:= \frac{\sinh z}{\cosh z} \end{align*} $$ $$ \begin{align*} \mathrm{csch}x&amp;amp;=\frac{1}{\sinh x} \\ \mathrm{sech} x&amp;amp;=\frac{1}{\cosh x} \\ \coth x &amp;amp;=\frac{1}{\tanh x} \end{align*} $$ 三角関数との関係 $$ \begin{align*} \sinh (iz) &amp;amp;= i\sin z</description></item><item><title>双曲線関数の二倍角と半角の公式</title><link>https://freshrimpsushi.github.io/jp/posts/1748/</link><pubDate>Thu, 03 Sep 2020 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/1748/</guid><description>式 二倍角の公式: $$ \begin{align} \sinh (2x) =&amp;amp;\ 2\sinh x \cosh x \label{1} \\ \cosh (2x) =&amp;amp;\ \cosh^{2} x + \sinh^{2} x = 2\cosh ^{2 } x -1 = 2\sinh ^{2} x +1 \\ \tanh (2x) =&amp;amp;\ \frac{2\tanh x}{1+\tanh^{2}x} \end{align} $$ 半角の公式: $$ \begin{align} \sinh^{2} \frac{x}{2} =&amp;amp;\ \frac{\cosh x -1 }{2} \\ \cosh^{2} \frac{x}{2} =&amp;amp;\ \frac{\cosh x +1 }{2} \\</description></item><item><title>双曲線関数の和差公式と乗法公式</title><link>https://freshrimpsushi.github.io/jp/posts/1750/</link><pubDate>Thu, 03 Sep 2020 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/1750/</guid><description>公式 和差公式: $$ \begin{align} \sinh x +\sinh y =&amp;amp;\ 2\sinh \left(\frac{x+y}{2}\right) \cosh \left(\frac{x-y}{2}\right) \\[1em] \sinh x -\sinh y =&amp;amp;\ 2\sinh \left(\frac{x-y}{2}\right) \cosh \left( \frac{x+y}{2} \right) \\[1em] \cosh x + \cosh y =&amp;amp;\ 2 \cosh \left(\frac{x+y}{2}\right) \cosh \left(\frac{x-y}{2}\right) \\[1em] \cosh x -\cosh y =&amp;amp;\ 2 \sinh \left( \frac{x+y}{2} \right) \sinh \left(\frac{x-y}{2}\right) \end{align} $$ 積の公式: $$ \begin{align} \sinh x \sinh y =&amp;amp;\ \frac{\cosh</description></item><item><title>双曲線関数の加法定理の証明</title><link>https://freshrimpsushi.github.io/jp/posts/1743/</link><pubDate>Wed, 02 Sep 2020 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/1743/</guid><description>公式 $$ \begin{align} \sinh (x\pm y) =&amp;amp;\ \sinh x \cosh y \pm \sinh y \cosh x \\ \cosh (x \pm y) =&amp;amp;\ \cosh x \cosh y \pm \sinh x \sinh y \\ \tanh{x \pm y}&amp;amp;=\frac{\tanh x \pm \tanh y}{1 \pm \tanh x \tanh y} \end{align} $$ 説明 双曲関数と三角関数の関係を考えてみれば、三</description></item><item><title>双曲線関数の恒等式</title><link>https://freshrimpsushi.github.io/jp/posts/1744/</link><pubDate>Wed, 02 Sep 2020 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/1744/</guid><description>数式 $$ \begin{align} \sinh(-x) =&amp;amp;\ -\sinh x \\ \cosh(-x) =&amp;amp;\ \cosh x \\ \tanh(-x) =&amp;amp;\ - \tanh x \\ \cosh x + \sinh x =&amp;amp;\ e^{x} \\ \cosh x - \sinh x =&amp;amp;\ e^{-x} \\ \cosh^{2}x -\sinh^{2}x =&amp;amp;\ 1 \end{align} $$ 説明 特に証明することもない。定義からすぐに分かる事実だ。</description></item><item><title>ポアソン和公式の導出</title><link>https://freshrimpsushi.github.io/jp/posts/1642/</link><pubDate>Mon, 31 Aug 2020 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/1642/</guid><description>式 $f : \mathbb{R} \to \mathbb{C}$ をシュワルツ関数とする。すると、 $$ \sum_{n \in \mathbb{Z}} f(n) = \sum_{k \in \mathbb{Z}} \widehat{f}(k) $$ シュワルツ関数 $f \in C^{\infty}(\mathbb{R})$ は、$x \to \pm \infty$ の時、関数値の大きさ $\left| f (x) \right|$ が速く $0$ に収</description></item><item><title>ガンマ関数とリーマンゼータ関数及びディリクレイータ関数との関係</title><link>https://freshrimpsushi.github.io/jp/posts/1641/</link><pubDate>Sat, 29 Aug 2020 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/1641/</guid><description>정리 $\operatorname{Re} (s) &amp;gt; 1$ だったら $$ \zeta (s) \Gamma (s) = \mathcal{M} \left[ {{ 1 } \over { e^{x} - 1 }} \right] (s) = \int_{0}^{\infty} {{ x^{s-1} } \over { e^{x} - 1 }} dx \\ \eta (s) \Gamma (s) = \mathcal{M} \left[ {{ 1 } \over { e^{x} + 1 }} \right] (s) = \int_{0}^{\infty} {{ x^{s-1} } \over { e^{x} + 1</description></item><item><title>ディリクレのエータ関数</title><link>https://freshrimpsushi.github.io/jp/posts/1635/</link><pubDate>Sun, 23 Aug 2020 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/1635/</guid><description>定義 次のように定義された関数 $\eta : \mathbb{C} \to \mathbb{C}$ をディリクレのエタ関数dirichlet eta functionと呼ぶ。 $$ \eta (s) := \sum_{n \in \mathbb{N}} (-1)^{n-1} n^{-s} $$ ディリクレのエタ</description></item><item><title>リーマンゼータ関数</title><link>https://freshrimpsushi.github.io/jp/posts/1626/</link><pubDate>Wed, 19 Aug 2020 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/1626/</guid><description>定義 次のように定義される関数 $\zeta : \mathbb{C} \setminus \left\{ 1 \right\} \to \mathbb{C}$ をリーマン ゼータ関数riemann zeta Function&amp;lt;/supという。 $$ \zeta (s) := \sum_{n \in \mathbb{N}} n^{-s} =</description></item><item><title>ラゲール多項式のロドリゲスの公式</title><link>https://freshrimpsushi.github.io/jp/posts/1658/</link><pubDate>Wed, 10 Jun 2020 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/1658/</guid><description>数式 ラゲール多項式の明示的な式は以下のようである。 $$ L_{n}(x) = \frac{1}{n!}e^{x}\frac{ d ^{n}}{ dx^{n} }(x^{n}e^{-x}) \tag{1} $$ 説明 上の式はラゲール多項式に対するロドリゲスの公式と言われる。ロドリゲ</description></item><item><title>エルミート多項式</title><link>https://freshrimpsushi.github.io/jp/posts/1655/</link><pubDate>Tue, 09 Jun 2020 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/1655/</guid><description>説明 エルミート多項式Hermite Polynomialは、下記のように様々な方式で定義される。 微分方程式の解として 以下のエルミート微分方程式</description></item><item><title>エルミート多項式の生成関数</title><link>https://freshrimpsushi.github.io/jp/posts/1654/</link><pubDate>Tue, 09 Jun 2020 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/1654/</guid><description>公式 エルミート多項式の生成関数は下記の通りだ。 $$ \Phi (x,t)=\sum \limits _{n=0}^{\infty} \frac{H_{n}(x)}{n!}t^{n}= e^{2xt-t^{2}} $$ 説明 エルミート多項式の生成関数とは、簡単に言えば、エルミート多項式を係数とする</description></item><item><title>エルミート多項式の再帰関係</title><link>https://freshrimpsushi.github.io/jp/posts/1656/</link><pubDate>Tue, 09 Jun 2020 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/1656/</guid><description>定理 エルミート多項式は次の再帰関係を満たす。 $$ \begin{align} H_{n}^{\prime}(x) &amp;amp;= 2nH_{n-1}(x) \\ H_{n+1}(x) &amp;amp;= 2xH_{n}(x)-2nH_{n-1}(x) \\ &amp;amp;= 2xH_{n}(x)-H_{n}^{\prime}(x) \nonumber \end{align} $$ 証明 $(1)$ 生成関数を用いた解法 エルミート多項式の生成関数 $$ \Phi (x,t) = e^{2xt-t^{2}}=\sum \limits _{n=0}^{\infty}</description></item><item><title>エルミート多項式の直交性</title><link>https://freshrimpsushi.github.io/jp/posts/1657/</link><pubDate>Tue, 09 Jun 2020 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/1657/</guid><description>定理 エルミート多項式 $\left\{ H_{n} \right\}_{n=0}^{\infty}$は区間 $(-\infty, \infty)$で重み関数 $w(x)=e^{-x^{2}}$</description></item><item><title>フォーハマー記号</title><link>https://freshrimpsushi.github.io/jp/posts/1652/</link><pubDate>Fri, 05 Jun 2020 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/1652/</guid><description>定義 ポッホハマー記号には、以下のように二種類の表現がある。 以下の式を下降階乗(falling factorial)と定義する。 $$ \begin{align*} x^{\underline{n}} := (x)_{n}&amp;amp;=x(x-1)(x-2)\cdots(x-n+1) \\ &amp;amp;=\frac{x!}{(x-n)!}=\frac{\Gamma (x+1)</description></item><item><title>エルミート関数</title><link>https://freshrimpsushi.github.io/jp/posts/1646/</link><pubDate>Tue, 02 Jun 2020 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/1646/</guid><description>定義 エルミート関数は以下のように定義される。 $$ \begin{align} y_{n} &amp;amp;= \left( D-x \right)^{n} e^{-\frac{x^{2}}{2}} \\ &amp;amp;=e^{\frac{x^{2}}{2}} D^{n} e^{-x^{2}} \end{align} $$ ここで$D=\frac{d}{dx}$は微分演算子である。 説明 エルミ</description></item><item><title>エルミート関数が満たす微分方程式の演算子解法</title><link>https://freshrimpsushi.github.io/jp/posts/1648/</link><pubDate>Tue, 02 Jun 2020 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/1648/</guid><description>定理 与えられた微分方程式 $$ y_{n}^{\prime \prime}-x^{2}y_{n}=-(2n+1)y_{n},\quad n=0,1,2,\cdots \tag{1} \label{eq1} $$ $(1)$の解は以下の通りであり、エルミート関数と呼ばれる。 $$ \begin{align*} y_{n} &amp;amp;= \left( D-x \right)^{n} e^{-\frac{x^{2}}{2}} \\ &amp;amp;= e^{\frac{x^{2}}{2}} D^{n} x^{-x^{2}} \end{align*} $$ ここで、$D</description></item><item><title>エアリー機能</title><link>https://freshrimpsushi.github.io/jp/posts/1629/</link><pubDate>Sun, 24 May 2020 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/1629/</guid><description>定義 以下の関数をエアリー関数Airy functionと呼ぶ。 $$ \begin{align*} \operatorname{Ai}(x) &amp;amp;= \frac{1}{\pi}\sqrt{\frac{x}{3}}K_{1/3}\left( \frac{2}{3}x^{2/3} \right) \\ \operatorname{Bi}(x) &amp;amp;= \sqrt{\frac{x}{3}}\left[ I_{-1/3}\left( \frac{2}{3}x^{3/2} \right) + I_{1/3} \left( \frac{2}{3}x^{2/3} \right) \right] \end{align*} $$ この時、$I_{\nu}$、$K_{</description></item><item><title>変形ベッセル方程式と変形ベッセル関数</title><link>https://freshrimpsushi.github.io/jp/posts/1624/</link><pubDate>Wed, 20 May 2020 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/1624/</guid><description>ビルドアップ 以下の微分方程式は、変形ベッセル方程式と呼ばれる。 $$ x^2 y^{\prime \prime} + xy^{\prime}-(x^2-\nu^2)y=0 $$ ベッセル方程式で$y$項の符号が$+ \rightarrow -$に変わった形式だ。この</description></item><item><title>ハンケル関数、第三種ベッセル関数</title><link>https://freshrimpsushi.github.io/jp/posts/1623/</link><pubDate>Tue, 19 May 2020 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/1623/</guid><description>定義 第1種ベッセル関数 $J_{\nu}$と第2種ベッセル関数 $N_{\nu}$の以下のような二つの線形結合をハンケル関数もしくは第3種ベッセ</description></item><item><title>ベッセル関数</title><link>https://freshrimpsushi.github.io/jp/posts/1622/</link><pubDate>Tue, 19 May 2020 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/1622/</guid><description>定義 ベッセル方程式 下の微分方程式を$\nu$次のベッセル方程式と言う。 $$ \begin{align*} x^2 y^{\prime \prime} +xy^{\prime} +(x^2-\nu^2)y&amp;amp;=0 \\ x(xy^{\prime})^{\prime}+(x^2- \nu ^2) y&amp;amp;=0 \\ y^{\prime \prime}+\frac{1}{x} y^{\prime} + \left( 1-\frac{\nu^{2}}{x^{2}} \right)y&amp;amp;=0 \end{align*} $$ 説明 関連する関数 第1種ベッ</description></item><item><title>ベッセル関数の直交性</title><link>https://freshrimpsushi.github.io/jp/posts/1621/</link><pubDate>Sun, 17 May 2020 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/1621/</guid><description>定理 $\alpha, \beta$を第一種ベッセル関数の$J_{\nu}(x)$の根とする。すると区間$[0,1]$で$\sqrt{x}J_{\nu}(x)</description></item><item><title>ベッセル関数の再帰関係</title><link>https://freshrimpsushi.github.io/jp/posts/1619/</link><pubDate>Fri, 15 May 2020 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/1619/</guid><description>定理 $$ J_{\nu}(x)=\sum \limits_{n=0}^{\infty} \frac{(-1)^{n} }{\Gamma (n+1) \Gamma (n+\nu+1)} \left(\frac{x}{2} \right)^{2n+\nu} \tag{1} $$ 上の関数は、階数$\nu$の第一種ベッセル関数と呼ばれる。第一種ベッセル関数$J_{\nu}(x)$は、下記の方</description></item><item><title>ベッセル方程式の第二の級数解：第二種ベッセル関数、ノイマン関数、ウェーバー関数</title><link>https://freshrimpsushi.github.io/jp/posts/1618/</link><pubDate>Thu, 14 May 2020 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/1618/</guid><description>定義[^1] ベッセル方程式の二番目の解をノイマン関数と呼び、$N_{\nu}(x)$または$Y_{\nu}(x)$で表される。非整数の$\n</description></item><item><title>関連ルジャンドル多項式</title><link>https://freshrimpsushi.github.io/jp/posts/1615/</link><pubDate>Tue, 12 May 2020 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/1615/</guid><description>定義 関連するルジャンドル多項式は、以下の方法で定義される。 微分方程式の解として 下の関連するルジャンドル微分方程式の解は関連するルジャンドル多</description></item><item><title>関連ルジャンドル多項式の直交性</title><link>https://freshrimpsushi.github.io/jp/posts/1613/</link><pubDate>Sun, 10 May 2020 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/1613/</guid><description>定理 区間$[-1,1]$で固定された$m$に対する関連ルジャンドル多項式は、直交集合を形成する。 $$ \int_{-1}^{1} P_{l}^{m}(x)P_{k}^{m}(x)dx =\frac{ 2}{ 2l+1 }\frac{(l+m)!}{(l-m)!}\delta_{lk} $$ $x=\cos \theta$の場合、 $$ \int_{0}^{\pi}</description></item><item><title>負の指数mの関連ルジャンドル多項式</title><link>https://freshrimpsushi.github.io/jp/posts/1612/</link><pubDate>Sat, 09 May 2020 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/1612/</guid><description>公式 関連するルジャンドル多項式は$m$の符号によって、下の比例関係が成立する。 $$ P_{l}^{-m}(x)=(-1)^{m}\frac{(l-m)!}{(l+m)!}P_{l}^{m}(x) $$ $$ (1-x^{2})\frac{ d^{2}y }{ dx^{2} }-2x \frac{dy}{dx}+\left( \frac{-m^{2}}{1-x^{2}}+l(l+1) \right)y=0 $$ 説明 関連するルジャンドル微分方程式を</description></item><item><title>ルジャンドル多項式</title><link>https://freshrimpsushi.github.io/jp/posts/1611/</link><pubDate>Fri, 08 May 2020 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/1611/</guid><description>定義 Legendre多項式はいくつかの方法で定義される。 微分方程式の解として 次のLegendre微分方程式の解をLegendre多項式という</description></item><item><title>ルジャンドル多項式の生成関数</title><link>https://freshrimpsushi.github.io/jp/posts/1610/</link><pubDate>Thu, 07 May 2020 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/1610/</guid><description>定理 ルジャンドル多項式の生成関数は次の通りだ。 $$ \Phi (x,t) = \frac{1}{\sqrt{1-2xt+t^{2}}} = \sum \limits_{l=0}^{\infty}P_{l}(x)t^{l},\quad |t|&amp;lt;1 $$ 説明 簡単に言えば、ルジャンドル多項式の生成関数はルジャンドル多項式$P_{</description></item><item><title>ルジャンドル多項式の再帰関係</title><link>https://freshrimpsushi.github.io/jp/posts/1609/</link><pubDate>Wed, 06 May 2020 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/1609/</guid><description>サマリー $$ P_{l}(x)=\dfrac{1}{2^l l!} \dfrac{d^l}{dx^l}(x^2-1)^l \tag{1} $$ 以下のようなルジャンドル多項式 $P_{l}$は、次の再帰関係式を満たす。 $$ P^{\prime}_{l+1}(x)-P^{\prime}_{l-1}(x)=(2l+1)P_{l}(x) \tag{a} $$ $$ lP_{l}(x)=(2l-1)xP_{l-1}(x)-(l-1)P_{l-2}(x) \tag{b} $$ $$ xP^{\prime}_{l}(x)-P^{\prime}_{l-1}(x)=lP_{l}(x)\tag{c} $$ 証明 $(a)$ まず、$P_{l}(</description></item><item><title>オイラー積分：ベータ関数とガンマ関数</title><link>https://freshrimpsushi.github.io/jp/posts/1483/</link><pubDate>Wed, 22 Jan 2020 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/1483/</guid><description>定義 オイラー積分Euler integral 以下の二つの積分をオイラー積分と呼ぶ。 $(a)$ 第1種オイラー積分Euler integral of the first kind : ベータ関数 $$ B(p,q)=\int_{0}^1 t^{p-1}(1-t)^{q-1}dt,\quad p&amp;gt;0,\quad q&amp;gt;0 $$ $(b)$ 第2種オ</description></item><item><title>ベータ関数の異常積分形式での表現</title><link>https://freshrimpsushi.github.io/jp/posts/1482/</link><pubDate>Mon, 20 Jan 2020 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/1482/</guid><description>定理 ベータ関数: $$ B(p,q)=\int_{0}^{1}t^{p-1}(1-t)^{q-1}dt\quad \cdots (1) $$ ベータ関数は、以下のような不適切積分で表せる。 $$ B(p,q)=\int_{0}^{\infty}\frac{ t^{p-1} }{ (1+t)^{p+q}}dt\quad \cdots (2) $$ 説明 上の式を使えば、計算が難しい積分値を簡単に得られ</description></item><item><title>ベータ関数とガンマ関数の関係</title><link>https://freshrimpsushi.github.io/jp/posts/1481/</link><pubDate>Sat, 18 Jan 2020 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/1481/</guid><description>定理 $$ B(p,q) = {{\Gamma (p) \Gamma (q)} \over {\Gamma (p+q) }} $$ 説明 ベータ関数は $\displaystyle B(p,q) := \int_{0}^{1} t^{p-1} (1-t)^{q-1} dt $ で定義され、ガンマ関数と同様に多くの分野で応用されている重要な関数だ。ガンマ関数</description></item><item><title>ガンマ関数と階乗を含むさまざまな重要な公式</title><link>https://freshrimpsushi.github.io/jp/posts/1478/</link><pubDate>Thu, 16 Jan 2020 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/1478/</guid><description>式 $$ \Gamma (\frac{1}{2})=\sqrt{\pi} \tag{a} $$ - オイラーの反射公式: $$ \Gamma (p)\Gamma (1-p)=\dfrac{\pi}{\sin(\pi p)} \tag{b} $$ $$ \Gamma (n+\frac{1}{2})=\frac{1\cdot 3\cdot \cdot5 \cdots (2n-1)}{2^{n}}\sqrt{\pi}=\frac{(2n-1)!!}{2^n}\sqrt{\pi}=\frac{(2n)!}{4^{n}n!}\sqrt{\pi},\quad n\in \mathbb{N} \tag{c} $$ $!!$はダブルファクトリアルです。 - 二項係数: $$ \begin{pmatrix} n \\ k \end{pmatrix}=\frac{\Gamma (n+1)}{k! \Gamma (n-k+1)} \tag{d} $$</description></item><item><title>要因分析、二重要因分析、多因子分析</title><link>https://freshrimpsushi.github.io/jp/posts/1477/</link><pubDate>Tue, 14 Jan 2020 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/1477/</guid><description>ファクトリアル 自然数 $n$に対して $n!$を $n$ファクトリアルfactorial, 階乗と読み、以下のように定義する。 $$ n!=n\cdot(n-1)\cdot(n-2)\cdots 2\cdot 1 =\prod\limits_{k=1}^n k $$ 説明 多く</description></item><item><title>ガンマ関数の導出</title><link>https://freshrimpsushi.github.io/jp/posts/1476/</link><pubDate>Sun, 12 Jan 2020 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/1476/</guid><description>非負整数のためのガンマ関数 $\alpha &amp;gt;0$に対して $$ \int_{0}^{\infty} e^{-\alpha x} dx=\left[-\frac{1}{\alpha}e^{-\alpha x}\right]_{0}^{\infty}=\frac{1}{\alpha} $$ 両辺を$\alpha$に関して微分すると、ライプニッツの積分法則によって左辺の</description></item><item><title>行列関数、行列指数関数の定義</title><link>https://freshrimpsushi.github.io/jp/posts/1342/</link><pubDate>Sun, 29 Sep 2019 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/1342/</guid><description>定義1 $$ \mathbf{x}(t) = \begin{pmatrix} x_{1}(t) \\ \vdots \\ x_{n}(t) \end{pmatrix},\quad \mathbf{A}(t) = \begin{pmatrix} a_{11}(t) &amp;amp; \cdots &amp;amp; a_{1m}(t) \\ \vdots &amp;amp; &amp;amp; \vdots \\ a_{n1}(t) &amp;amp; \cdots &amp;amp; a_{nm}(t) \end{pmatrix} $$ 行列の各要素が変数$t$の関数である場合、これを行列関数と呼ぶ。 $\ma</description></item><item><title>半線形関数</title><link>https://freshrimpsushi.github.io/jp/posts/1333/</link><pubDate>Mon, 05 Aug 2019 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/1333/</guid><description>定義1 関数 $f : X \to Y$が下記の二つの条件を満たす場合、準線形sublinearと呼ばれる。$x,x_{1},x_{2}\in X$と$a \in \m</description></item><item><title>加法性を持つ連続関数の性質</title><link>https://freshrimpsushi.github.io/jp/posts/1102/</link><pubDate>Sat, 08 Jun 2019 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/1102/</guid><description>定理 [1] 連続関数 $f : \mathbb{R} \to \mathbb{R}$ が全ての $x, y \in \mathbb{R}$ に対して $f(x + y) = f(x) + f(y)$ を満たす場合 $$ f(x) = f(1) x $$ [2] 連続関数 $g : \mathbb{R} \to ( 0 , \infty )$ が全ての $x, y \in \mathbb{R}$ に対して $g(x</description></item><item><title>加法関数と乗法関数</title><link>https://freshrimpsushi.github.io/jp/posts/1096/</link><pubDate>Wed, 22 May 2019 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/1096/</guid><description>関数 $f : X \to Y$が与えられたとしよう。$a, b \in X$、$a_{i} \in X\ (i=1,\cdots)$とする。 部分加法関数 関数$f$が下の式を満た</description></item><item><title>半波対称関数</title><link>https://freshrimpsushi.github.io/jp/posts/1003/</link><pubDate>Sat, 30 Mar 2019 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/1003/</guid><description>定義 周期が$2L$の周期関数$f$が、全ての$t$に対して以下の式を満たすとき、$f$を半波対称half wave symmetryと言う。 $$ f(t)=-f(t+L) $$ 説明</description></item><item><title>任意の関数は常に奇関数と偶関数の和として表すことができる</title><link>https://freshrimpsushi.github.io/jp/posts/1002/</link><pubDate>Fri, 29 Mar 2019 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/1002/</guid><description>定理 $\mathbb{R}$で定義された任意の関数$f$は、常に偶関数と奇関数の和として表せるんだ。 証明 $f_{e}(t)$と$f_o(t)</description></item><item><title>対数の底の変換公式の導出</title><link>https://freshrimpsushi.github.io/jp/posts/944/</link><pubDate>Thu, 28 Mar 2019 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/944/</guid><description>公式 任意の正数 $c&amp;gt;0$ に対して、 $$ \log_{a} b = {{ \log_{c} b } \over { \log_{c} a }} $$ 説明 現代において、公式自体の意味はなくなったが、入試ではまだ重要な公式である。簡単な性</description></item><item><title>周期関数の一周期にわたる積分は、積分区間に関わらず常に同じ値を持つ</title><link>https://freshrimpsushi.github.io/jp/posts/982/</link><pubDate>Sun, 24 Mar 2019 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/982/</guid><description>定理 $f$を$2L$-周期関数としよう。すると、以下の値は$a$の値に関わらず一定だ。 $$ \int_{a}^{a+2L}f(t)dt $$ 説明 周期関数の定義によれば、これは当然の事実だ。</description></item><item><title>三角関数の定義を用いた第二の余弦定理の証明</title><link>https://freshrimpsushi.github.io/jp/posts/935/</link><pubDate>Sat, 02 Mar 2019 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/935/</guid><description>公式 上に示された三角形について、次の式が成り立ち、これを第2の余弦定理law of cosinesと呼ぶ。 $$ \begin{cases} a^{2} =b^{2}+c^{2}-2bc\cos\alpha \\ b^{2}=a^{2}+c^{2}-2ac\cos\beta \\ c^{2}=a^{2}+b^{2}-2ab\cos\gamma \end{cases} $$ 証明 図の左上の三角形</description></item><item><title>ルジャンドル多項式の直交性</title><link>https://freshrimpsushi.github.io/jp/posts/931/</link><pubDate>Fri, 01 Mar 2019 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/931/</guid><description>概要 区間$[-1,\ 1]$で、ルジャンドル多項式は直交集合を成す。 $$ \int_{-1}^{1} P_{l}(x)P_{m}(x) dx =\frac{2}{2l+1}\delta_{lm} \quad (l, m = 0, 1, 2, \dots) $$ 証明 Case 1: $l \ne m$ ルジャンドル微分方程式 次の微分方</description></item><item><title>ルジャンドル多項式は、低次の任意の多項式と直交する</title><link>https://freshrimpsushi.github.io/jp/posts/933/</link><pubDate>Fri, 01 Mar 2019 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/933/</guid><description>定理 $P_{l}(x)$がルジャンドル多項式で、$f(x)$を$l$より低い次数の任意の多項式とするとき、$P_{l}(x)$と$f(x)$</description></item><item><title>ルジャンドル多項式のロドリゲスの公式</title><link>https://freshrimpsushi.github.io/jp/posts/895/</link><pubDate>Wed, 13 Feb 2019 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/895/</guid><description>公式 ルジャンドル多項式の明示的explicitな公式は以下の通りです。 $$ P_{l}(x)=\dfrac{1}{2^{l} l!} \dfrac{d^{l}}{dx^{l}}(x^{2}-1)^{l} \tag{1} $$ 説明 $l$番目のルジャンドル多項式を得る公式であり、これを</description></item><item><title>階段関数</title><link>https://freshrimpsushi.github.io/jp/posts/757/</link><pubDate>Fri, 09 Nov 2018 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/757/</guid><description>定義 部分ごとに定数関数である関数をステップ関数と呼ぶ。 説明 上の図のように階段のような形をしているのでステップ関数と呼ばれる。最初に提案した人</description></item><item><title>スターリングの近似公式の厳密な証明</title><link>https://freshrimpsushi.github.io/jp/posts/616/</link><pubDate>Wed, 18 Jul 2018 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/616/</guid><description>概要 $$ \lim_{n \to \infty} {{n!} \over {e^{n \ln n - n} \sqrt{ 2 \pi n} }} = 1 $$ 説明 スターリング近似あるいはスターリングの公式stirling formulaは、統計学や物理学など</description></item><item><title>ウォリス積</title><link>https://freshrimpsushi.github.io/jp/posts/601/</link><pubDate>Wed, 04 Jul 2018 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/601/</guid><description>定理 $$ \prod_{n=1}^{\infty} {{4n^2} \over {4n^2 - 1}} = \lim_{n \to \infty} {{2 \cdot 2 } \over { 1 \cdot 3 } } \cdot {{4 \cdot 4 } \over { 3 \cdot 5 } } \cdot \cdots \cdot {{2n \cdot 2n } \over { (2n-1) \cdot (2n+1) } } = {{ \pi } \over {2}} $$ 説明 級数だけではなく、積で</description></item><item><title>三角関数の和差公式と積和公式</title><link>https://freshrimpsushi.github.io/jp/posts/539/</link><pubDate>Wed, 25 Apr 2018 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/539/</guid><description>合成/乗算の公式は頻繁には使われないから、倍角/半角の公式ほど重要ではない。しかし、それで全く必要ないわけではない。導出過程がとても簡単だか</description></item><item><title>なぜ「陰関数」は誤解を招く翻訳なのか？</title><link>https://freshrimpsushi.github.io/jp/posts/522/</link><pubDate>Wed, 25 Apr 2018 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/522/</guid><description>定義 正関数か負関数かの違いは、それぞれがどのように表現されたかに過ぎません。数学では多少なじみが薄い表現ですが、区分は「独立変数」と「従属変</description></item><item><title>ルジャンドルの倍数公式の導出</title><link>https://freshrimpsushi.github.io/jp/posts/499/</link><pubDate>Wed, 04 Apr 2018 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/499/</guid><description>公式 $$ \Gamma (2r) = {{2^{ 2r - 1} } \over { \sqrt{ \pi } } } \Gamma \left( r \right) \Gamma \left( {{1} \over {2}} + r \right) $$ 説明 割れる形はそんなに綺麗じゃないけど、因数を小さく割れることは確かに便利な事</description></item><item><title>三角関数の倍角公式と半角公式</title><link>https://freshrimpsushi.github.io/jp/posts/481/</link><pubDate>Tue, 20 Mar 2018 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/481/</guid><description>概要 寿司屋の店長が高校生だった時には、加法定理や倍角公式、和差公式まで教育課程にあったが、最近はないと聞いている。以下の公式はすべて加法公式</description></item><item><title>サインの二乗プラスコサインの二乗が1に等しいことの証明</title><link>https://freshrimpsushi.github.io/jp/posts/482/</link><pubDate>Tue, 20 Mar 2018 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/482/</guid><description>公式 $$ \sin^2\theta+\cos^2\theta=1 $$ 証明 1-コサインの加法公式 コサインの加法定理を使えば、すごく簡単にわかる。 $$ \cos(\theta_{1}-\theta_2)=\cos\theta_{1}\cos\theta_2 + \sin\theta_{1}\sin\theta_2 $$ ここで、$\theta_{1}$, $\thet</description></item><item><title>ベータ関数の三角関数表示</title><link>https://freshrimpsushi.github.io/jp/posts/458/</link><pubDate>Tue, 27 Feb 2018 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/458/</guid><description>定理 $$ B(p,q) = 2 \int_{0}^{{\pi} \over {2}} \left( \sin \theta \right) ^{2p-1} \left( \cos \theta \right) ^{2q-1} d \theta $$ 説明 それがどんな種類の数学でも、ある関数を別の方法で表現できることは良いことだ。 証明 $\displaystyle B(p,q) = \int_{0}^{1} t^{p-1} (1-t)^{q-1}</description></item><item><title>二項係数の一般化：ベータ関数</title><link>https://freshrimpsushi.github.io/jp/posts/450/</link><pubDate>Sun, 25 Feb 2018 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/450/</guid><description>定理：ベータ関数で表される二項係数 $0 \le k\le n$が二つの自然数 $k,n$に対して満たされるとき、下記の式が成立する。 $$ \binom{n}{k}={}_{n}C_{k}=C(n,k)=\frac{1}{(n+1)B(n-k+1,k+1)} $$ 二つの自然数 $m,n$</description></item><item><title>オイラーの証明：シンク関数を使用して平方数の逆数の合計を求める</title><link>https://freshrimpsushi.github.io/jp/posts/391/</link><pubDate>Mon, 22 Jan 2018 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/391/</guid><description>定理 $$ \sum_{n =1 }^{\infty} {{1} \over {n^2}} = {{ \pi ^2 } \over { 6 }} $$ 証明 戦略: これはオイラーによって残された証明で、シンク関数のオイラー表示を使って証明する。このアイディ</description></item><item><title>凸関数、凹関数</title><link>https://freshrimpsushi.github.io/jp/posts/262/</link><pubDate>Sun, 08 Oct 2017 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/262/</guid><description>定義 区間 $I \subset \mathbb{R}$ の二つの要素 $x_{1} , x_{2}$ と関数 $f : I \to \mathbb{R}$ および $0 \le t \le 1$ について、 $f( t x_{1} + (1-t) x_{2}) \le t f(x_{1}) + (1-t) f(x_{2})$ のとき、$f$ は $I$での凸関数と定義され</description></item><item><title>生成関数とは何か？</title><link>https://freshrimpsushi.github.io/jp/posts/232/</link><pubDate>Wed, 30 Aug 2017 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/232/</guid><description>定義 シーケンス $\left\{ a_{n} \right\}$ に対して、 $$ g(x) =\sum \limits _{n=0}^{\infty}a_{n}x^{n}= a_{0} + a_{1} x + a_{2} x^2 + \cdots $$ の形で表される関数 $g$ を数列 $\left\{ a_{n}\right\}$ の生成関数または単に生成関数という。数列が $a_{n}=a_{n}(x)$ の場合</description></item><item><title>オイラーの反射公式の導出</title><link>https://freshrimpsushi.github.io/jp/posts/192/</link><pubDate>Tue, 01 Aug 2017 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/192/</guid><description>式 非整数の $p$ に対して $$ {\Gamma (1-p) \Gamma ( p )} = { {\pi} \over {\sin \pi p } } $$ 説明 ガンマ関数を使った式の中で最も有名な式だ。 反射公式から得られる役立つ結果には $ \Gamma (</description></item><item><title>シンク関数のオイラー表現の証明</title><link>https://freshrimpsushi.github.io/jp/posts/187/</link><pubDate>Tue, 01 Aug 2017 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/187/</guid><description>定義 非正規化シンク関数 次の 関数 $\sinc : \mathbb{R} \to \mathbb{R}$ をシンク関数sinc functionと言う。 $$ \sinc x := \begin{cases} \displaystyle {{\sin x} \over {x}} &amp;amp; , \text{if } x \ne 0 \\ 1 &amp;amp; , \text{if } x = 0 \end{cases} $$</description></item><item><title>ワイエルシュトラスのガンマ関数に対する無限積</title><link>https://freshrimpsushi.github.io/jp/posts/150/</link><pubDate>Wed, 26 Jul 2017 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/150/</guid><description>定理 ガンマ関数について$\Gamma : (0, \infty) \to \mathbb{R}$が成り立つ。 $$ {1 \over \Gamma (x)} = x e^{\gamma x } \lim_{n \to \infty} \prod_{k=1}^{n} \left( 1 + {x \over k} \right) e^{- {x \over k} } $$ $\gamma$ は オイ</description></item><item><title>オイラー・マスケローニ定数の収束性の証明</title><link>https://freshrimpsushi.github.io/jp/posts/151/</link><pubDate>Sun, 16 Jul 2017 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/151/</guid><description>定理 $$ \gamma = \lim_{n \to \infty} \left( \sum_{k=1}^{n} \left( { 1 \over k } \right) - \ln{n} \right) = 0.577215664 \cdots $$ 説明 リーマン・ゼータ関数と関連づけると$\gamma$ $0$番目のスティルチェス定数 $\ga</description></item><item><title>オイラーのガンマ関数に対する極限公式の導出</title><link>https://freshrimpsushi.github.io/jp/posts/149/</link><pubDate>Sat, 15 Jul 2017 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/149/</guid><description>式 1 ガンマ関数について $\Gamma : (0, \infty) \to \mathbb{R}$ が成立する。 $$ \Gamma (x) = \lim_{n \to \infty} {{n^x n!} \over {x(x+1)(x+2) \cdots (x+n) }} $$ 説明 以前知っていたガンマ関数は積分形 $$ \Gamma (x) = \int_{0}^{\infty} t^{x-1} e^{-t} dt $$ で全く異な</description></item><item><title>ディラックのデルタ関数</title><link>https://freshrimpsushi.github.io/jp/posts/103/</link><pubDate>Sat, 06 May 2017 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/103/</guid><description>定義 以下の二つの条件を満たす関数をディラックデルタ関数という。 $$ \delta (x) = \begin{cases} 0, &amp;amp; x\neq 0 \\ \infty , &amp;amp; x=0 \end{cases} $$ $$ \int_{-\infty}^{\infty}{\delta (x) dx}=1 $$ 説明 ※クロネッカーデルタと間違えない</description></item><item><title>ディラックのデルタ関数の性質</title><link>https://freshrimpsushi.github.io/jp/posts/104/</link><pubDate>Sat, 06 May 2017 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/104/</guid><description>特性 $$ \begin{equation} \delta (-x) =\delta (x) \end{equation} $$ $$ \begin{equation} \delta (kx)= \frac{1}{|k|} \delta (x) \end{equation} $$ 証明 $(1)$ の証明 $\int_{-\infty }^ { \infty } f(x) \delta (-x) dx$ を $-x \equiv y$ に置き換えると$x=-y$、$dx=-dy$ となり、 $$ \begin{align*} \int_{-\infty } ^{ \infty</description></item><item><title>ガンマ関数</title><link>https://freshrimpsushi.github.io/jp/posts/95/</link><pubDate>Sun, 30 Apr 2017 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/95/</guid><description>定義 次のように定義された関数 $\Gamma : (0, \infty) \to \mathbb{R}$ をガンマ関数と言う。 $$ \Gamma (x) := \int_{0}^{\infty} t^{x-1} e^{-t} dt $$ 説明 上の式において積分に焦点を置くと、オイラー積分とも呼ばれる</description></item><item><title>三角関数の加法定理：様々な証明</title><link>https://freshrimpsushi.github.io/jp/posts/44/</link><pubDate>Tue, 28 Mar 2017 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/44/</guid><description>定理 $$ \sin\left( \alpha +\beta \right) =\sin\alpha \cos\beta +\cos\alpha \sin\beta \\ \sin\left( \alpha -\beta \right) =\sin\alpha \cos\beta -\cos\alpha \sin\beta \\ \cos\left( \alpha +\beta \right) =\cos\alpha \cos\beta -\sin\alpha \sin\beta \\ \cos\left( \alpha -\beta \right) =\cos\alpha \cos\beta +\sin\alpha \sin\beta \\ \tan\left( \alpha +\beta \right) =\frac { \tan\alpha +\tan\beta }{ 1-\tan\alpha \tan\beta } \\ \tan\left( \alpha -\beta \right) =\frac { \tan\alpha -\tan\beta }{ 1+\tan\alpha \tan\beta } $$ 証明 コサイ</description></item><item><title>奇関数と偶関数</title><link>https://freshrimpsushi.github.io/jp/posts/40/</link><pubDate>Fri, 24 Mar 2017 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/40/</guid><description>定義 $f(-x) = f(x)$ を満たす関数 $f(x)$ を偶関数evenという。 $f(-x) = -f(x)$ を満たす関数 $f(x)$ を奇関数oddという。 説明 偶関数は座標平面で$y$ 軸に関して対称な関数、</description></item><item><title>さまざまな三角関数の積分法</title><link>https://freshrimpsushi.github.io/jp/posts/31/</link><pubDate>Thu, 23 Mar 2017 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/31/</guid><description>概要 積分問題を解くとき、三角関数の積分をかなりすることになる。そして、これらの積分法に慣れると、三角関数も多項式関数のように迅速に積分できる</description></item><item><title>三角関数の平行移動と導関数の関係</title><link>https://freshrimpsushi.github.io/jp/posts/11/</link><pubDate>Thu, 16 Mar 2017 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/11/</guid><description>公式 [1] サイン: $$\sin{\left( \theta +\frac { n }{ 2 }\pi \right)}={ \sin }^{ (n) }\theta$$ [2] コサイン: $$\cos{\left( \theta +\frac { n }{ 2 }\pi \right)}={ \cos }^{ (n) }\theta$$ $(n)$ は $n$ 回微分することを意味する。 説明 簡単に言うと、90˚動くた</description></item></channel></rss>