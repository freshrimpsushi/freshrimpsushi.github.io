<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>수리물리 on 生エビ寿司屋</title>
    <link>https://freshrimpsushi.github.io/jp/categories/%EC%88%98%EB%A6%AC%EB%AC%BC%EB%A6%AC/</link>
    <description>Recent content in 수리물리 on 生エビ寿司屋</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>jp</language>
    <lastBuildDate>Thu, 07 Jan 2021 00:00:00 +0000</lastBuildDate>
    <atom:link href="https://freshrimpsushi.github.io/jp/categories/%EC%88%98%EB%A6%AC%EB%AC%BC%EB%A6%AC/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>デル演算子を含む乗法則</title>
      <link>https://freshrimpsushi.github.io/jp/posts/93/</link>
      <pubDate>Thu, 07 Jan 2021 00:00:00 +0000</pubDate>
      <guid>https://freshrimpsushi.github.io/jp/posts/93/</guid>
      <description>公式 $f=f(x,y,z)$をスカラー関数とする。$\mathbf{A} = A_{x}\hat{\mathbf{x}} + A_{y}\hat{\mathbf{y}} + A_{z}\hat{\mathbf{z}}, \mathbf{B} = B_{x}\hat{\mathbf{x}} + B_{y}\hat{\mathbf{y}} + B_{z}\hat{\mathbf{z}}$</description>
    </item>
    <item>
      <title>三次元デカルト座標系におけるスカラー関数のラプラシアン</title>
      <link>https://freshrimpsushi.github.io/jp/posts/1879/</link>
      <pubDate>Sun, 15 Nov 2020 00:00:00 +0000</pubDate>
      <guid>https://freshrimpsushi.github.io/jp/posts/1879/</guid>
      <description>定義 3次元のスカラー関数 $f=f(x,y,z)$のグラディエントのダイバージェンスを $f$のラプラシアンLaplacianと言い、$\nab</description>
    </item>
    <item>
      <title>曲線座標系におけるベクトル関数の発散</title>
      <link>https://freshrimpsushi.github.io/jp/posts/1817/</link>
      <pubDate>Thu, 08 Oct 2020 00:00:00 +0000</pubDate>
      <guid>https://freshrimpsushi.github.io/jp/posts/1817/</guid>
      <description>要約 曲線座標系でのベクトル関数$\mathbf{F}=\mathbf{F}(q_{1},q_{2},q_{3})=F_{1}\hat{\ma</description>
    </item>
    <item>
      <title>曲線座標系でのスカラー関数の勾配</title>
      <link>https://freshrimpsushi.github.io/jp/posts/1816/</link>
      <pubDate>Wed, 07 Oct 2020 00:00:00 +0000</pubDate>
      <guid>https://freshrimpsushi.github.io/jp/posts/1816/</guid>
      <description>概要 曲線座標系でスカラー関数の$f=f(q_{1},q_{2},q_{3})$の勾配は次の通りだ。 $$ \nabla f= \frac{1}{h_{1}}\frac{ \partial f }{ \partial q_{1} } \hat{\mathbf{q}}_{1} + \frac{1}{h_{2}}\frac{ \partial f }{ \partial q _{2}}\hat{\mathbf{q}}_{2}+\frac{1}{h_{3}}\frac{ \partial f</description>
    </item>
    <item>
      <title>三次元空間の曲線座標系</title>
      <link>https://freshrimpsushi.github.io/jp/posts/1774/</link>
      <pubDate>Sat, 26 Sep 2020 00:00:00 +0000</pubDate>
      <guid>https://freshrimpsushi.github.io/jp/posts/1774/</guid>
      <description>ビルドアップ 3次元空間で位置を表現する最も一般的な方法はデカルト座標系だ。デカルトによって考案されたのでこの名前が付けられ、また直交座標系と</description>
    </item>
    <item>
      <title>全微分、完全微分</title>
      <link>https://freshrimpsushi.github.io/jp/posts/1773/</link>
      <pubDate>Thu, 24 Sep 2020 00:00:00 +0000</pubDate>
      <guid>https://freshrimpsushi.github.io/jp/posts/1773/</guid>
      <description>定義 多変数関数$f : \mathbb{R}^{n} \to \mathbb{R}$が与えられたとしよう。変数$\mathbf{x} = (x_{1}, x_{2}, \dots, x_{n})$の変化に伴う$f(\ma</description>
    </item>
    <item>
      <title>直交座標系におけるベクトル関数の発散</title>
      <link>https://freshrimpsushi.github.io/jp/posts/1796/</link>
      <pubDate>Wed, 23 Sep 2020 00:00:00 +0000</pubDate>
      <guid>https://freshrimpsushi.github.io/jp/posts/1796/</guid>
      <description>定義 ベクトル関数 $\mathbf{F}(x,y,z)=F_{x}\hat{\mathbf{x}}+F_{y}\hat{\mathbf{y}} + F_{z}\hat{\mathbf{z}}$について、以下のようなスカラー関数を$\mathbf{F}$のダイバージェン</description>
    </item>
    <item>
      <title>3次元デカルト座標系におけるスカラー関数の勾配</title>
      <link>https://freshrimpsushi.github.io/jp/posts/1778/</link>
      <pubDate>Sat, 12 Sep 2020 00:00:00 +0000</pubDate>
      <guid>https://freshrimpsushi.github.io/jp/posts/1778/</guid>
      <description>定義 スカラー関数 $f=f(x,y,z)$に対して、以下のようなベクトル関数を $f$のグラディエントgradient, 勾配と定義し、$\nab</description>
    </item>
    <item>
      <title>3次元デカルト座標系におけるベクトル関数のカール(回転)</title>
      <link>https://freshrimpsushi.github.io/jp/posts/1752/</link>
      <pubDate>Thu, 03 Sep 2020 00:00:00 +0000</pubDate>
      <guid>https://freshrimpsushi.github.io/jp/posts/1752/</guid>
      <description>定義 ベクトル関数 $\mathbf{F}(x,y,z)=(F_{x},F_{y},F_{z})=F_{x}\hat{\mathbf{x}} + F_{y}\hat{\mathbf{y}} + F_{z}\hat{\mathbf{z}}$に対して、以下のようなベクトルを$\mathbf{F}$のカールcurl</description>
    </item>
    <item>
      <title>物理学における微分作用素とは?</title>
      <link>https://freshrimpsushi.github.io/jp/posts/1638/</link>
      <pubDate>Sun, 31 May 2020 00:00:00 +0000</pubDate>
      <guid>https://freshrimpsushi.github.io/jp/posts/1638/</guid>
      <description>説明 微分方程式を解く方法の一つに、微分演算子を使って解く方法がある。微分演算子$D$を以下のように定義しよう。 $$ D:= \frac{d}{dx} $$ 微分される変数を明確に</description>
    </item>
    <item>
      <title>球面調和関数：球面座標ラプラス方程式の極角、方位角に対する一般解</title>
      <link>https://freshrimpsushi.github.io/jp/posts/1580/</link>
      <pubDate>Fri, 24 Apr 2020 00:00:00 +0000</pubDate>
      <guid>https://freshrimpsushi.github.io/jp/posts/1580/</guid>
      <description>説明 ラプラス方程式を満たす関数を調和関数という。球面調和関数は球座標系でのラプラス方程式を満たす関数を言い、正確には径成分を除いた極角$\t</description>
    </item>
    <item>
      <title>物理学におけるデル演算子</title>
      <link>https://freshrimpsushi.github.io/jp/posts/1575/</link>
      <pubDate>Tue, 21 Apr 2020 00:00:00 +0000</pubDate>
      <guid>https://freshrimpsushi.github.io/jp/posts/1575/</guid>
      <description>説明 物理学では、演算子とは、関数を別の関数に対応させる関数を言う。その中でもデル演算子del operatorは、ある関数が与えられたとき、そ</description>
    </item>
    <item>
      <title>物理学のための微分方程式の基礎：よく遭遇する微分方程式の解法</title>
      <link>https://freshrimpsushi.github.io/jp/posts/1538/</link>
      <pubDate>Sun, 23 Feb 2020 00:00:00 +0000</pubDate>
      <guid>https://freshrimpsushi.github.io/jp/posts/1538/</guid>
      <description>微分方程式 学部レベルの物理学を勉強する人向けに、できるだけ直感的に説明した。 微分方程式とは、簡単に言うと微分を含んだ方程式のことだ。難しく考</description>
    </item>
    <item>
      <title>ベッセル方程式の導出</title>
      <link>https://freshrimpsushi.github.io/jp/posts/1195/</link>
      <pubDate>Sat, 20 Jul 2019 00:00:00 +0000</pubDate>
      <guid>https://freshrimpsushi.github.io/jp/posts/1195/</guid>
      <description>定義 以下の微分方程式を**$\nu$次ベッセル方程式**Bessel&amp;rsquo;s equation of order $\nu$と呼ぶ。 $$ \begin{align*} x^2 y^{\prime \prime} +xy^{\prime} +(x^2-\nu^2)y =&amp;amp;\ 0 \\ x(xy^{\prime})^{\prime} + (x^2- \nu ^2) y</description>
    </item>
    <item>
      <title>物理学におけるテンソルとは</title>
      <link>https://freshrimpsushi.github.io/jp/posts/1040/</link>
      <pubDate>Wed, 17 Apr 2019 00:00:00 +0000</pubDate>
      <guid>https://freshrimpsushi.github.io/jp/posts/1040/</guid>
      <description>概要 断然この記事は、テンソルが何か分からなくてこのページにたどり着いた物理学部の学生に最も分かりやすいテンソルについての説明だから、是非読む</description>
    </item>
    <item>
      <title>デル演算子を含む式の部分積分</title>
      <link>https://freshrimpsushi.github.io/jp/posts/959/</link>
      <pubDate>Sun, 17 Mar 2019 00:00:00 +0000</pubDate>
      <guid>https://freshrimpsushi.github.io/jp/posts/959/</guid>
      <description>公式 デル演算子が含まれるベクトル積分について、次の式が成り立つ。 (a) $$ \int_{\mathcal{V}}\mathbf{A} \cdot (\nabla f)d\tau = \oint_{\mathcal{S}}f\mathbf{A} \cdot d \mathbf{a}-\int_{\mathcal{V}}f(\nabla \cdot \mathbf{A})d\tau $$ (b) $$ \int_{\mathcal{S}} f \left( \nabla \times \mathbf{A} \right)\mathbf{A} \cdot d \mathbf{a} = \int_{\mathcal{S}} \left[ \mathbf{A} \times \left( \nabla f \right) \right] \cdot d\mathbf{a}</description>
    </item>
    <item>
      <title>ストークスの定理</title>
      <link>https://freshrimpsushi.github.io/jp/posts/937/</link>
      <pubDate>Sun, 03 Mar 2019 00:00:00 +0000</pubDate>
      <guid>https://freshrimpsushi.github.io/jp/posts/937/</guid>
      <description>まとめ1 $\mathbf{v}, \mathcal{S}$をそれぞれ3次元空間におけるあるベクトル、面積だとしよう。$\mathcal{S}$の面積ベクトルを$d\</description>
    </item>
    <item>
      <title>ガウスの定理, 発散定理</title>
      <link>https://freshrimpsushi.github.io/jp/posts/565/</link>
      <pubDate>Sat, 12 May 2018 00:00:00 +0000</pubDate>
      <guid>https://freshrimpsushi.github.io/jp/posts/565/</guid>
      <description>まとめ1 3次元ベクトル関数$\mathbf{F}$について、以下が成り立つ。 $$ \begin{equation} \int_{\mathcal{V}} \nabla \cdot \mathbf{F} dV = \oint_{\mathcal{S}} \mathbf{F} \cdot d \mathbf{S} \label{1} \end{equation} $$ ここで、$\nabla \cdot \mat</description>
    </item>
    <item>
      <title>デカルト座標系におけるベクトル、内積、外積の微分</title>
      <link>https://freshrimpsushi.github.io/jp/posts/506/</link>
      <pubDate>Mon, 02 Apr 2018 00:00:00 +0000</pubDate>
      <guid>https://freshrimpsushi.github.io/jp/posts/506/</guid>
      <description>公式 $\mathbf{A} = A_{x}\hat{\mathbf{x}} + A_{y}\hat{\mathbf{y}} + A_{z}\hat{\mathbf{z}}, \mathbf{B} = B_{x}\hat{\mathbf{x}} + B_{y}\hat{\mathbf{y}} + B_{z}\hat{\mathbf{z}}$を3次元直交座標系でのベクトルとしよう。$n$を任意のスカラーとす</description>
    </item>
    <item>
      <title>曲線座標系における勾配、発散、回転、ラプラシアン</title>
      <link>https://freshrimpsushi.github.io/jp/posts/299/</link>
      <pubDate>Sun, 05 Nov 2017 00:00:00 +0000</pubDate>
      <guid>https://freshrimpsushi.github.io/jp/posts/299/</guid>
      <description>解説 物理学で、デル演算子$\nabla$を含む4つの演算、勾配、発散、回転、ラプラシアンは非常に重要である。そのため、3つの座標系における上</description>
    </item>
    <item>
      <title>三次元ユークリッド空間における外積</title>
      <link>https://freshrimpsushi.github.io/jp/posts/256/</link>
      <pubDate>Fri, 06 Oct 2017 00:00:00 +0000</pubDate>
      <guid>https://freshrimpsushi.github.io/jp/posts/256/</guid>
      <description>定義 $\mathbf{x}, \mathbf{y} \in \mathbb{R}^3$ に対して**$\mathbf{x}$と$\mathbf{y}$の外積**cross product を定義する。 $$ \begin{align*} \mathbf{x} \times \mathbf{y} =&amp;amp; (x_{2}y_{3} - x_{3}y_{2}, x_{3}y_{1} - x_{1}y_{3}, x_{1}y_{2} - x_{2}y_{1}) \\</description>
    </item>
    <item>
      <title>ユークリッド空間</title>
      <link>https://freshrimpsushi.github.io/jp/posts/205/</link>
      <pubDate>Fri, 04 Aug 2017 00:00:00 +0000</pubDate>
      <guid>https://freshrimpsushi.github.io/jp/posts/205/</guid>
      <description>定義 自然数$n \in \mathbb{N}$に対し、実数の集合$\mathbb{R}$のデカルト積$\mathbb{R}^{n}$をユークリッド空</description>
    </item>
    <item>
      <title>直交座標系の単位ベクトルで表された球面座標系の単位ベクトル</title>
      <link>https://freshrimpsushi.github.io/jp/posts/152/</link>
      <pubDate>Sun, 16 Jul 2017 00:00:00 +0000</pubDate>
      <guid>https://freshrimpsushi.github.io/jp/posts/152/</guid>
      <description>球面座標系の単位ベクトル $$ \begin{align*} \hat{\mathbf{r}} &amp;amp;= \cos\phi \sin\theta\hat{\mathbf{x}} + \sin\phi \sin\theta\hat{\mathbf{y}} + \cos\theta\hat{\mathbf{z}} \\ \hat{\boldsymbol{\theta}} &amp;amp;= \cos\phi \cos\theta \hat{\mathbf{x}} + \sin\phi \cos\theta \hat{\mathbf{y}} - \sin\theta\hat{\mathbf{z}} \\ \hat{\boldsymbol{\phi}} &amp;amp;= -\sin\phi \hat{\mathbf{x}} + \cos\phi \hat{\mathbf{y}} \end{align*} $$ 導出 まず、$\hat{\mathbf{r}}$を計</description>
    </item>
    <item>
      <title>スカラー三重積</title>
      <link>https://freshrimpsushi.github.io/jp/posts/144/</link>
      <pubDate>Fri, 14 Jul 2017 00:00:00 +0000</pubDate>
      <guid>https://freshrimpsushi.github.io/jp/posts/144/</guid>
      <description>定義 次の式をスカラー三重積scalar triple productと言う。 $$ \mathbf{A}\cdot (\mathbf{B} \times \mathbf{C} ) $$ 説明 スカラー三重積は、3つのベクトルを掛け合わせる操作で、結果が</description>
    </item>
    <item>
      <title>分離ベクトル</title>
      <link>https://freshrimpsushi.github.io/jp/posts/141/</link>
      <pubDate>Wed, 12 Jul 2017 00:00:00 +0000</pubDate>
      <guid>https://freshrimpsushi.github.io/jp/posts/141/</guid>
      <description>定義1 原点から観察点までのベクトルを分離ベクトルseparation vectorという。 $$ \bcR = \mathbf{r} - \mathbf{r}^{\prime} $$ 説明 原点ベクトルsource vector $\mathbf{r}^{\prime}$: 電荷や</description>
    </item>
    <item>
      <title>分離ベクトルの大きさの勾配</title>
      <link>https://freshrimpsushi.github.io/jp/posts/142/</link>
      <pubDate>Wed, 12 Jul 2017 00:00:00 +0000</pubDate>
      <guid>https://freshrimpsushi.github.io/jp/posts/142/</guid>
      <description>数式 分離ベクトル $\bcR$の大きさの$n$乗、$\cR ^{n}$の勾配は以下の通りだ。 $$ \nabla (\cR^n)=n\cR^{n-1}\crH $$ 説明 多項関数の微分と同じやり方で計算した後に</description>
    </item>
    <item>
      <title>二つのレビ-チビタ記号の積</title>
      <link>https://freshrimpsushi.github.io/jp/posts/88/</link>
      <pubDate>Sat, 29 Apr 2017 00:00:00 +0000</pubDate>
      <guid>https://freshrimpsushi.github.io/jp/posts/88/</guid>
      <description>まとめ 次のように定義される $\epsilon_{ijk}$ を レビ-チビタ記号 と呼ぶ。 $$ \epsilon_{ijk} = \begin{cases} +1 &amp;amp; \text{if} \ \epsilon_{123}, \epsilon_{231}, \epsilon_{312} \\ -1 &amp;amp; \text{if} \ \epsilon_{132}, \epsilon_{213}, \epsilon_{321} \\ 0 &amp;amp; \text{if} \ i=j \ \text{or} \ j=k \ \text{or} \ k=i \end{cases} $$ 次のように定義さ</description>
    </item>
    <item>
      <title>アインシュタインの記法</title>
      <link>https://freshrimpsushi.github.io/jp/posts/90/</link>
      <pubDate>Sat, 29 Apr 2017 00:00:00 +0000</pubDate>
      <guid>https://freshrimpsushi.github.io/jp/posts/90/</guid>
      <description>ノーテーション ２回以上繰り返される添字については、合計記号$\sum$を省略する。 説明 アインシュタインの合計規約Einstein summation conve</description>
    </item>
    <item>
      <title>クロネッカーのデルタ</title>
      <link>https://freshrimpsushi.github.io/jp/posts/84/</link>
      <pubDate>Wed, 26 Apr 2017 00:00:00 +0000</pubDate>
      <guid>https://freshrimpsushi.github.io/jp/posts/84/</guid>
      <description>定義 以下のように定義される$\delta_{ij}$をクロネッカーのデルタKronecker deltaと呼ぶ。 $$ \delta_{ij} := \begin{cases} 1,&amp;amp;i=j \\ 0, &amp;amp; i\ne j \end{cases} $$ 説明 ク</description>
    </item>
    <item>
      <title>レヴィ-チヴィタ記号</title>
      <link>https://freshrimpsushi.github.io/jp/posts/83/</link>
      <pubDate>Tue, 25 Apr 2017 00:00:00 +0000</pubDate>
      <guid>https://freshrimpsushi.github.io/jp/posts/83/</guid>
      <description>定義 以下のように定義される$\epsilon_{ijk}$を レビ-チビタ記号Levi-Civita-symbol という。 $$ \epsilon_{ijk} = \begin{cases} +1 &amp;amp; \text{if} \ \epsilon_{123}, \epsilon_{231},</description>
    </item>
    <item>
      <title>ベクトル三重積、BAC-CAB公式</title>
      <link>https://freshrimpsushi.github.io/jp/posts/71/</link>
      <pubDate>Sun, 23 Apr 2017 00:00:00 +0000</pubDate>
      <guid>https://freshrimpsushi.github.io/jp/posts/71/</guid>
      <description>説明 上の式の左辺をベクトル三重積と呼ぶ。右辺の結果を簡単に**BAC-CAB（バックキャップ）**という。ベクトル三重積は、結果がベクトルに</description>
    </item>
  </channel>
</rss>
