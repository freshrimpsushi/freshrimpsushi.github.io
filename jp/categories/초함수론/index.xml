<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>초함수론 on 生エビ寿司屋</title>
    <link>https://freshrimpsushi.github.io/jp/categories/%EC%B4%88%ED%95%A8%EC%88%98%EB%A1%A0/</link>
    <description>Recent content in 초함수론 on 生エビ寿司屋</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>jp</language>
    <lastBuildDate>Wed, 16 Jun 2021 00:00:00 +0000</lastBuildDate>
    <atom:link href="https://freshrimpsushi.github.io/jp/categories/%EC%B4%88%ED%95%A8%EC%88%98%EB%A1%A0/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>超関数の畳み込み収束定理</title>
      <link>https://freshrimpsushi.github.io/jp/posts/1895/</link>
      <pubDate>Wed, 16 Jun 2021 00:00:00 +0000</pubDate>
      <guid>https://freshrimpsushi.github.io/jp/posts/1895/</guid>
      <description>まとめ1 $\phi$が$\int_{\mathbb{R}^{n}}\phi (\mathbf{x})d\mathbf{x}=1$を満たすテスト</description>
    </item>
    <item>
      <title>シュワルツ空間における収束</title>
      <link>https://freshrimpsushi.github.io/jp/posts/1897/</link>
      <pubDate>Sun, 23 May 2021 00:00:00 +0000</pubDate>
      <guid>https://freshrimpsushi.github.io/jp/posts/1897/</guid>
      <description>定義 $\left\{ \phi_{n} \right\}$をシュワルツ空間での数列としよう。全てのマルチインデックス $\alpha$, $\beta$に対して数列 $\left\{ \mathbf{x}^{\beta}D^{\alpha}\phi_{n}(\mathbf{x}) \right\}$が $0</description>
    </item>
    <item>
      <title>テスト関数の空間がシュワルツ空間の真部分集合であることの証明</title>
      <link>https://freshrimpsushi.github.io/jp/posts/1896/</link>
      <pubDate>Sat, 28 Nov 2020 00:00:00 +0000</pubDate>
      <guid>https://freshrimpsushi.github.io/jp/posts/1896/</guid>
      <description>まとめ1 $\mathcal{D}$をテスト関数空間、$\mathcal{S}$をシュワルツ空間とする。それでは以下の式が成り立つ。 $$ \mathcal{D} \subsetneq \mathcal{S} $$</description>
    </item>
    <item>
      <title>超関数の畳み込みの補題</title>
      <link>https://freshrimpsushi.github.io/jp/posts/1894/</link>
      <pubDate>Thu, 26 Nov 2020 00:00:00 +0000</pubDate>
      <guid>https://freshrimpsushi.github.io/jp/posts/1894/</guid>
      <description>概説1 $F$を超関数、$\phi,\psi$をテスト関数としよう。すると$F \ast \phi$は実数空間で定義された関数であり、局所可積分である。</description>
    </item>
    <item>
      <title>超関数の畳み込み、実数で定義された関数としての超関数</title>
      <link>https://freshrimpsushi.github.io/jp/posts/1892/</link>
      <pubDate>Tue, 24 Nov 2020 00:00:00 +0000</pubDate>
      <guid>https://freshrimpsushi.github.io/jp/posts/1892/</guid>
      <description>ビルドアップ1 超関数論の目的は、ディラックのデルタ関数などナイーブに定義されたものを数学的に厳密に定義することである。したがって、関数空間で</description>
    </item>
    <item>
      <title>超関数の微分は弱収束に対して連続である</title>
      <link>https://freshrimpsushi.github.io/jp/posts/1890/</link>
      <pubDate>Sun, 22 Nov 2020 00:00:00 +0000</pubDate>
      <guid>https://freshrimpsushi.github.io/jp/posts/1890/</guid>
      <description>まとめ1 超函数の微分は、弱収束に対して連続である。つまり、$T_{k}$が$T$に弱収束するとき、$\partial ^{\alpha} T_{k}$も$\pa</description>
    </item>
    <item>
      <title>ディラックのデルタ超関数に収束する超関数</title>
      <link>https://freshrimpsushi.github.io/jp/posts/1889/</link>
      <pubDate>Sat, 21 Nov 2020 00:00:00 +0000</pubDate>
      <guid>https://freshrimpsushi.github.io/jp/posts/1889/</guid>
      <description>要約1 $f$が$\int_{\mathbb{R}^{n}} f(\mathbf{x})d\mathbf{x}=1$を満たす関数だとしよう。そし</description>
    </item>
    <item>
      <title>調整過飽和</title>
      <link>https://freshrimpsushi.github.io/jp/posts/1819/</link>
      <pubDate>Sun, 11 Oct 2020 00:00:00 +0000</pubDate>
      <guid>https://freshrimpsushi.github.io/jp/posts/1819/</guid>
      <description>定義1 シュワルツ空間の連続する線形汎関数 $T:\mathcal{S}(\mathbb{R}^{n}) \to \mathbb{C}$を調整された超関数tempered distributionと言う。つまり、</description>
    </item>
    <item>
      <title>シュワルツ空間とシュワルツ関数</title>
      <link>https://freshrimpsushi.github.io/jp/posts/1805/</link>
      <pubDate>Sun, 27 Sep 2020 00:00:00 +0000</pubDate>
      <guid>https://freshrimpsushi.github.io/jp/posts/1805/</guid>
      <description>定義 以下の二つの条件を満たす関数$\phi : \mathbb{R}^{n} \to \mathbb{C}$の集合をシュワルツ空間Schwartz spaceと呼び、$\mathc</description>
    </item>
    <item>
      <title>近似導関数</title>
      <link>https://freshrimpsushi.github.io/jp/posts/1085/</link>
      <pubDate>Sat, 26 Sep 2020 00:00:00 +0000</pubDate>
      <guid>https://freshrimpsushi.github.io/jp/posts/1085/</guid>
      <description>ビルドアップ 超関数の微分を定義するアイデアを思い出そう。$u \in {L}_{\mathrm{loc}}^1(\Omega)$に対して、正則超関数</description>
    </item>
    <item>
      <title>超関数と滑らかな関数の積</title>
      <link>https://freshrimpsushi.github.io/jp/posts/1803/</link>
      <pubDate>Sat, 26 Sep 2020 00:00:00 +0000</pubDate>
      <guid>https://freshrimpsushi.github.io/jp/posts/1803/</guid>
      <description>ビルドアップ 超関数は定義域が関数空間であるため、実数空間で定義された関数との乗算ができない。しかし、正則超関数の場合、対応する局所積分可能な</description>
    </item>
    <item>
      <title>超関数の積の微分法</title>
      <link>https://freshrimpsushi.github.io/jp/posts/1804/</link>
      <pubDate>Sat, 26 Sep 2020 00:00:00 +0000</pubDate>
      <guid>https://freshrimpsushi.github.io/jp/posts/1804/</guid>
      <description>要約1 $T\in D^{\ast}$を超関数、$f \in C^{\infty}$をスムース関数としよう。すると、以下の式が成り立つ。 $$ (fT)^{\prime}= f^{\prime}T+fT^{\prime} $$ 説明 既存の積の微</description>
    </item>
    <item>
      <title>分布の収束</title>
      <link>https://freshrimpsushi.github.io/jp/posts/1802/</link>
      <pubDate>Fri, 25 Sep 2020 00:00:00 +0000</pubDate>
      <guid>https://freshrimpsushi.github.io/jp/posts/1802/</guid>
      <description>定義1 $D^{\ast}$を超関数空間、$\left\{ T_{n} \right\}$を$D^{\ast}$の中の超関数列としよう。全てのテスト関数 $</description>
    </item>
    <item>
      <title>超関数の微分</title>
      <link>https://freshrimpsushi.github.io/jp/posts/1084/</link>
      <pubDate>Wed, 23 Sep 2020 00:00:00 +0000</pubDate>
      <guid>https://freshrimpsushi.github.io/jp/posts/1084/</guid>
      <description>ビルドアップ 配布物超関数は、その定義域が関数空間であるため、実数空間で定義された関数のように微分することはできません。しかし、正則超関数の場</description>
    </item>
    <item>
      <title>超関数のダイレーション</title>
      <link>https://freshrimpsushi.github.io/jp/posts/1794/</link>
      <pubDate>Tue, 22 Sep 2020 00:00:00 +0000</pubDate>
      <guid>https://freshrimpsushi.github.io/jp/posts/1794/</guid>
      <description>ビルドアップ 超関数はドメインが関数空間であるため、実数空間で定義された関数と同じ方法でダイレーションすることができない。しかし、正則超関数の</description>
    </item>
    <item>
      <title>ディラックのデルタ関数が正則化された分布ではないことの証明</title>
      <link>https://freshrimpsushi.github.io/jp/posts/1785/</link>
      <pubDate>Tue, 22 Sep 2020 00:00:00 +0000</pubDate>
      <guid>https://freshrimpsushi.github.io/jp/posts/1785/</guid>
      <description>定理1 $$ \delta (\phi) := \phi (0), \quad \phi \in \mathcal{D} $$ 上のように定義されたディラック・デルタ関数は正則超関数ではない。正則超関数ではない超関数を特異超関数singul</description>
    </item>
    <item>
      <title>超関数によって厳密に定義されるディラックのデルタ関数</title>
      <link>https://freshrimpsushi.github.io/jp/posts/1784/</link>
      <pubDate>Thu, 17 Sep 2020 00:00:00 +0000</pubDate>
      <guid>https://freshrimpsushi.github.io/jp/posts/1784/</guid>
      <description>定義1 テスト関数空間 $\mathcal{D}(\mathbb{R}^{n})$の汎関数 $\delta_{a} : \mathcal{D} \to \mathbb{C}$を下記のように定義し、デ</description>
    </item>
    <item>
      <title>分布の翻訳</title>
      <link>https://freshrimpsushi.github.io/jp/posts/1786/</link>
      <pubDate>Wed, 16 Sep 2020 00:00:00 +0000</pubDate>
      <guid>https://freshrimpsushi.github.io/jp/posts/1786/</guid>
      <description>ビルドアップ 超関数は、その定義域が関数空間であるため、実数空間で定義された関数と同じ方法でトランスレーションを行うことはできない。しかし、正</description>
    </item>
    <item>
      <title>超関数、一般化された関数</title>
      <link>https://freshrimpsushi.github.io/jp/posts/1009/</link>
      <pubDate>Wed, 16 Sep 2020 00:00:00 +0000</pubDate>
      <guid>https://freshrimpsushi.github.io/jp/posts/1009/</guid>
      <description>定義1 2 $\Omega \subset \mathbb{R}^{n}$が開集合だとしよう。テスト関数空間の連続な線形汎関数 $T : \mathcal{D}(\Omega) \to \mathbb{C}$を超関数dist</description>
    </item>
    <item>
      <title>すべての局所可積分関数が超関数に拡張可能であることを証明</title>
      <link>https://freshrimpsushi.github.io/jp/posts/1078/</link>
      <pubDate>Wed, 16 Sep 2020 00:00:00 +0000</pubDate>
      <guid>https://freshrimpsushi.github.io/jp/posts/1078/</guid>
      <description>要約1 すべての$u \in L_{\mathrm{loc} }^1(\Omega) $に対して、次のように定義される超関数 $T_{u} \in D^{\ast}(\Omega)$が存在する。 $$ T_{u} (\phi) := \int_{\Omega} u(x)\phi (x)dx, \quad \phi \in D(\Omega) $$ 説明</description>
    </item>
    <item>
      <title>テスト関数とテスト関数空間</title>
      <link>https://freshrimpsushi.github.io/jp/posts/1782/</link>
      <pubDate>Wed, 16 Sep 2020 00:00:00 +0000</pubDate>
      <guid>https://freshrimpsushi.github.io/jp/posts/1782/</guid>
      <description>定義1 開集合 $\Omega \subset \mathbb{R}^{n}$と関数 $\phi : \Omega \to \mathbb{C}$が与えられているとする。$\phi$が無限に微分可能で、そ</description>
    </item>
    <item>
      <title>テスト関数の空間における収束</title>
      <link>https://freshrimpsushi.github.io/jp/posts/1077/</link>
      <pubDate>Wed, 16 Sep 2020 00:00:00 +0000</pubDate>
      <guid>https://freshrimpsushi.github.io/jp/posts/1077/</guid>
      <description>テスト関数空間では、「収束」を特別な方法で定義する。ある空間 $X$が与えられたとき、通常は$X$で定義されたノルムや距離を使用して収束を定義</description>
    </item>
    <item>
      <title>ポアソン和公式の導出</title>
      <link>https://freshrimpsushi.github.io/jp/posts/1642/</link>
      <pubDate>Mon, 31 Aug 2020 00:00:00 +0000</pubDate>
      <guid>https://freshrimpsushi.github.io/jp/posts/1642/</guid>
      <description>式 $f : \mathbb{R} \to \mathbb{C}$ をシュワルツ関数とする。すると、 $$ \sum_{n \in \mathbb{Z}} f(n) = \sum_{k \in \mathbb{Z}} \widehat{f}(k) $$ シュワルツ関数 $f \in C^{\infty}(\mathbb{R})$ は、$x \to \pm \infty$ の時、関数値の大きさ $\left| f (x) \right|$ が速く $0$ に収</description>
    </item>
  </channel>
</rss>
