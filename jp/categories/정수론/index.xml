<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>整数論 on 生エビ寿司屋</title><link>https://freshrimpsushi.github.io/jp/categories/%EC%A0%95%EC%88%98%EB%A1%A0/</link><description>Recent content in 整数論 on 生エビ寿司屋</description><generator>Hugo</generator><language>jp</language><lastBuildDate>Thu, 24 Feb 2022 00:00:00 +0000</lastBuildDate><atom:link href="https://freshrimpsushi.github.io/jp/categories/%EC%A0%95%EC%88%98%EB%A1%A0/index.xml" rel="self" type="application/rss+xml"/><item><title>整数論</title><link>https://freshrimpsushi.github.io/jp/categories/%EC%A0%95%EC%88%98%EB%A1%A0/</link><pubDate>Thu, 24 Feb 2022 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/categories/%EC%A0%95%EC%88%98%EB%A1%A0/</guid><description>整数論はその名の通り、整数の性質と関係についての研究で、数学が誕生した時から歴史を刻んできた由緒ある分野だ。ガウスは整数論について次のような</description></item><item><title>素数と合成数</title><link>https://freshrimpsushi.github.io/jp/posts/2163/</link><pubDate>Thu, 24 Feb 2022 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/2163/</guid><description>定義 1 $p \ge 2$の自然数が$1$と$p$だけを約数に持つ場合、素数prime numberと言う。 $m \ge 2$の自然数が素数ではない場合、合成数co</description></item><item><title>偶数の定義</title><link>https://freshrimpsushi.github.io/jp/posts/2141/</link><pubDate>Tue, 11 Jan 2022 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/2141/</guid><description>定義 簡単な定義 $2$ で割った残りが $0$ の整数は、偶数と言われる。 難しい定義 $$ a = 2 \cdot k $$ 整数 $a$ に対して、上を満たす整数 $k$ が存在すれば、$a$ は偶数</description></item><item><title>商と余り</title><link>https://freshrimpsushi.github.io/jp/posts/2139/</link><pubDate>Fri, 07 Jan 2022 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/2139/</guid><description>定義 1 整数 $A$ と $B \ne 0$ があったとして、$B &amp;gt; R \ge 0$ と $$ A = Q \cdot B + R $$ を満たす整数 $Q$、$R$ が存在するとしよう。この場合、$Q$ を商quo</description></item><item><title>最大公約数と互いに素</title><link>https://freshrimpsushi.github.io/jp/posts/2137/</link><pubDate>Mon, 03 Jan 2022 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/2137/</guid><description>定義 1 二つの整数 $n$ と $m \ne 0$ について、次を満たす整数 $k$ が存在するなら、$n$ は $m$ で割り切れると言う。 $$ n = mk $$ この時、$n$ を $m$ の 倍数mult</description></item><item><title>指数補助補題の証明</title><link>https://freshrimpsushi.github.io/jp/posts/1708/</link><pubDate>Mon, 17 Aug 2020 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/1708/</guid><description>定理 $n \in \mathbb{N}$、$x , y \in \mathbb{Z}$、素数 $p \ne 2$ が $$ \gcd (n,p) = 1 \\ p \mid (x - y) \\ p \nmid x \\ p \nmid y $$ を満たすとき $$ v_{p} \left( x^{n} -</description></item><item><title>数論におけるp-進数</title><link>https://freshrimpsushi.github.io/jp/posts/1707/</link><pubDate>Mon, 17 Aug 2020 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/1707/</guid><description>定義 1 素数 $p$ と整数 $a \in \mathbb{Z}$ に対して次のように定義された $v_{p}$ を $a$ の $p$-進付値と言う。 $$ v_{p} (a) := \sup \left\{ e \in \mathbb{Z} : p^{e} \mid a \right\} $$ 定理 2 [0]: すべての素数 $p$ に対し</description></item><item><title>算術関数の部分和に対する一般化されたディリクレ積表現</title><link>https://freshrimpsushi.github.io/jp/posts/1607/</link><pubDate>Thu, 13 Aug 2020 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/1607/</guid><description>定理 1 $h = f \ast g$ における算術関数 $f,g,h$ について、次のように定義しよう。 $$ F (x) := \sum_{n \le x} f(x) \\ G (x) := \sum_{n \le x} g(x) \\ H (x) := \sum_{n \le x} h(x) $$ すると、 $$ H = f \circ G = g</description></item><item><title>一般化されたディリクレ積</title><link>https://freshrimpsushi.github.io/jp/posts/1603/</link><pubDate>Fri, 07 Aug 2020 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/1603/</guid><description>定義 1 $F : \mathbb{R}^{+} \to \mathbb{C}$を$x \in (0,1)$であり、$F(x) = 0$とする関数としよう。任意の算術関数 $\alpha$に対する以</description></item><item><title>ゼルバーグの恒等式の証明</title><link>https://freshrimpsushi.github.io/jp/posts/1560/</link><pubDate>Sat, 06 Jun 2020 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/1560/</guid><description>定理 1 $$ \Lambda (n) \log n + \sum_{d \mid n } \Lambda (d) \Lambda \left( {{ n } \over { d }} \right) = \sum_{d \mid n} \mu (d) \log^{2} {{ n } \over { d }} $$ 証明 ストラテジー：見た目ほど難しくない。算術関数の微分があれ</description></item><item><title>算術関数の微分</title><link>https://freshrimpsushi.github.io/jp/posts/1558/</link><pubDate>Tue, 02 Jun 2020 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/1558/</guid><description>定義 1 算術関数 $f$ の微分または導関数 $f '$ を次のように定義する。 $$ f ' (n) := f(n) \log n \qquad , n \in \mathbb{N} $$ 基本性質 [1] 和の微分法則: $(f+g)' = f '+g'$ [2] 積の微分法則: $\left( f</description></item><item><title>算術関数のベル級数</title><link>https://freshrimpsushi.github.io/jp/posts/1556/</link><pubDate>Thu, 28 May 2020 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/1556/</guid><description>[3] $f$ は完全乗法的なので、素数 $p$ に対して $f \left( p^{n} \right) = \left[ f(p) \right]^{n}$ となる。 $$ f_{p}(x) = \sum_{n=0}^{\infty} \left[ f(p) \right]^{n} x^{n} = {{ 1 } \over { 1 - f(p) x }} $$ ■</description></item><item><title>解析数論におけるリウヴィル関数</title><link>https://freshrimpsushi.github.io/jp/posts/1553/</link><pubDate>Sun, 24 May 2020 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/1553/</guid><description>定義 1 素数 $p_{1} , \cdots , p_{k}$ と 自然数 $n$ が $n = p_{1}^{a_{1}} \cdots p_{k}^{a_{k}}$ のように表されているとする。以下のように定義された算術関数 $\lambda$ をリウヴィル関数と呼ぶ。 $$ \lambda (n) = (-1)^{a_{1} + \cdots</description></item><item><title>解析的整数論とマンゴルト函数</title><link>https://freshrimpsushi.github.io/jp/posts/1551/</link><pubDate>Wed, 20 May 2020 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/1551/</guid><description>定義 1 次のように定義された算術関数 $\Lambda$ をマンゴルト関数と言う。 $$ \Lambda (n) := \begin{cases} \log p &amp;amp; n = p^{m} , p \text{ is prime}, m \in \mathbb{N} \\ 0 &amp;amp; \text{otherwise} \end{cases} $$ 基本性質 [1] マンゴルト級数：対数</description></item><item><title>メビウスの反転公式の導出</title><link>https://freshrimpsushi.github.io/jp/posts/1549/</link><pubDate>Sat, 16 May 2020 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/1549/</guid><description>公式 1 $f$ と $g$ は算術関数で、$\mu$ はメビウス関数だ。 $$ f(n) = \sum_{d \mid n} g(d) \iff g(n) = \sum_{d \mid n} f(d) \mu \left( {{ n } \over { d }} \right) $$ 説明 メビウス関数は、初めに見た時に不</description></item><item><title>解析的数論におけるユニット関数</title><link>https://freshrimpsushi.github.io/jp/posts/1547/</link><pubDate>Tue, 12 May 2020 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/1547/</guid><description>定義 1 次のように定義された算術関数 $u$ をユニット関数という。 $$ u(n) := 1 $$ 基本性質 [1] ユニット級数：約数の数に等しい $\sigma_{0}$。つまり</description></item><item><title>解析的整数論におけるオイラーのトーシェント関数</title><link>https://freshrimpsushi.github.io/jp/posts/1533/</link><pubDate>Tue, 28 Apr 2020 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/1533/</guid><description>定義 1 以下のように定義される算術関数 $\varphi$ をトーシェント関数という。 $$ \varphi (n) := \sum_{\gcd ( k , n ) = 1} 1 $$ 基本性質 [1] トーシェント級数: ノルム $N$ である。つま</description></item><item><title>解析数論におけるメビウス関数</title><link>https://freshrimpsushi.github.io/jp/posts/1531/</link><pubDate>Fri, 24 Apr 2020 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/1531/</guid><description>定義 1 素数 $p_{1} , \cdots , p_{k}$ に対して、自然数 $n$ を以下のように表すとしよう。このように定義された算術関数 $\mu$ をメビウス関数という。 $$ \mu (n) := \begin{cases} 1 &amp;amp;, n=1 \\ (-1)^{k} &amp;amp;,</description></item><item><title>解析的整数論におけるノルム</title><link>https://freshrimpsushi.github.io/jp/posts/1529/</link><pubDate>Mon, 20 Apr 2020 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/1529/</guid><description>定義 1 以下のように定義された算術関数 $N$ をノルムと呼ぶ。 $$ N(n) := n $$ 基本性質 [1] ノルム級数: シグマ関数 $\sigma = \sigma_{1}$ である。つまり、 $$ \sum_{d \mid n } N(d) = \sigma_{1}(n) $$ [2] 完</description></item><item><title>解析的整数論における約数関数</title><link>https://freshrimpsushi.github.io/jp/posts/1527/</link><pubDate>Thu, 16 Apr 2020 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/1527/</guid><description>定義 1 $\alpha \in \mathbb{C}$ に対して以下の $\sigma_{\alpha} : \mathbb{N} \to \mathbb{C}$ を約数関数と呼ぶ。 $$ \sigma_{\alpha} (n) := \sum_{d \mid n} d^{\alpha} $$ 基礎性質 [1] 乗法性: $\gcd (m,n) = 1$ を満たすすべての $m, n \in \mathbb{N}$ に対して、$\si</description></item><item><title>乗法的関数のアーベル群</title><link>https://freshrimpsushi.github.io/jp/posts/1525/</link><pubDate>Sun, 12 Apr 2020 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/1525/</guid><description>定理1 乗法的関数の集まり $M$と二項演算 $\ast$について $(M,*)$はアーベル群だ。 説明 算術関数の集合 $A$がコンボリューション $\ast$ とと</description></item><item><title>ディリクレ積と乗法的性質</title><link>https://freshrimpsushi.github.io/jp/posts/1523/</link><pubDate>Wed, 08 Apr 2020 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/1523/</guid><description>定理 1 [1]: $f$ と $g$ が乗法的関数ならば、$f \ast\ g$ も乗法的関数だ。 [2]: $g$ と $f \ast g$ が乗法的関数ならば、$f$ も乗法的関数だ。 説明 これらの性質は、乗法的関</description></item><item><title>算術関数の乗法的性質</title><link>https://freshrimpsushi.github.io/jp/posts/1521/</link><pubDate>Sat, 04 Apr 2020 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/1521/</guid><description>定義 1 $\forall n \in \mathbb{N}$について、$f(n) = 0$でない算術関数$f$が次を満たす場合、乗法的関数という。 $$ f(mn) = f(m) f(n) \qquad,\gcd(m,n)=1 $$ 乗法的関数</description></item><item><title>算術関数のアーベル群</title><link>https://freshrimpsushi.github.io/jp/posts/1514/</link><pubDate>Fri, 27 Mar 2020 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/1514/</guid><description>定理 1 $f(1) \ne 0$ でない算術関数の集合 $A = \left\{ f : \mathbb{N} \to \mathbb{C} \mid f(1) \ne 0 \right\}$ と二項演算 $\ast$ について、$(A,*)$ はアーベル群である。 説明 厳密に言うと、全ての算</description></item><item><title>ディリクレ積の逆수</title><link>https://freshrimpsushi.github.io/jp/posts/1494/</link><pubDate>Tue, 03 Mar 2020 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/1494/</guid><description>定義 1 算術関数 $f$ に対して、以下を満たす算術関数 $f^{-1}$ が一意に存在する場合、$f^{-1}$ を $f$ の**(ディリクレ)逆**という。 $$ f \ast\ f^{-1} = f^{-1} \ast\ f</description></item><item><title>ディリクレ積に関する恒等式</title><link>https://freshrimpsushi.github.io/jp/posts/1490/</link><pubDate>Mon, 24 Feb 2020 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/1490/</guid><description>定義 1 以下のように定義された算術関数 $I$ をアイデンティティ関数と言う。 $$ I(n) := \left[ {{ 1 } \over { n }} \right] $$ [1] アイデンティティ級数：単位関数 $u$ である。つま</description></item><item><title>算術関数のディリクレ積</title><link>https://freshrimpsushi.github.io/jp/posts/1488/</link><pubDate>Thu, 20 Feb 2020 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/1488/</guid><description>定義 1 二つの算術関数$f$、$g$に対し、以下を満たす算術関数$h$を$f$と$g$のディリクレ積と呼ぶ。 $$ h(n) = \sum_{d \mid n} f(d) g \left( {{ n } \over { d }} \right)</description></item><item><title>解析的整数論における算術関数</title><link>https://freshrimpsushi.github.io/jp/posts/1487/</link><pubDate>Tue, 18 Feb 2020 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/1487/</guid><description>定義 1 定義域が自然数の集合$\mathbb{N}$であり、値域が実数の集合$\mathbb{R}$または複素数の集合$\mathbb{C}$</description></item><item><title>1万番目までの素数点以下のリスト</title><link>https://freshrimpsushi.github.io/jp/posts/2339/</link><pubDate>Tue, 11 Feb 2020 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/2339/</guid><description>素数 1万番目までの素数のリストである。 ダウンロード 2 3 5 7 11 13 17 19 23 29 31 37 41 43 47 53 59 61 67 71 73 79 83 89 97 101 103 107 109 113 127 131 137 139 149 151 157 163 167 173 179 181 191 193 197</description></item><item><title>アイゼンシュタイン素数定理の証明</title><link>https://freshrimpsushi.github.io/jp/posts/1293/</link><pubDate>Thu, 19 Sep 2019 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/1293/</guid><description>定理 アイゼンシュタイン環の既約元をアイゼンシュタイン素数と呼ぶ。アイゼンシュタイン整数 $\pi \in \mathbb{Z}[ \omega ]$ が以下のいずれかの条件を満たすとき、アイゼン</description></item><item><title>アイゼンシュタイン環のノルム</title><link>https://freshrimpsushi.github.io/jp/posts/1291/</link><pubDate>Tue, 17 Sep 2019 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/1291/</guid><description>定理 アイゼンシュタイン環における$\mathbb{Z}[ \omega ]$について、関数$N : \mathbb{Z}[\omega] \to \mathbb{Z}$を考えてみよう。 [1]: $N(x + \omega y) := x^2 -</description></item><item><title>アイゼンシュタイン整数</title><link>https://freshrimpsushi.github.io/jp/posts/1289/</link><pubDate>Sun, 15 Sep 2019 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/1289/</guid><description>定義 $\mathbb{Z} [ \omega ] := \left\{ a + \omega b : a, b \in \mathbb{Z} \right\}$ をアイゼンシュタイン環eisenstein ringと呼び、その要素をアイゼンシュタイン整数という。 定理 [1]:</description></item><item><title>ガウス素数定理の証明</title><link>https://freshrimpsushi.github.io/jp/posts/1285/</link><pubDate>Fri, 13 Sep 2019 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/1285/</guid><description>定理 1 ガウス整数 の 既約元 をガウス素数と呼ぶ。ガウス整数 $\pi \in \mathbb{Z}[i]$ が次の条件のどれか一つを満たす場合、ガウス素数である。 (i): $\pi = 1 + i$ (ii): 素数 $p \in \mathbb{Z}$ に</description></item><item><title>ガウス環のノルム</title><link>https://freshrimpsushi.github.io/jp/posts/1277/</link><pubDate>Thu, 05 Sep 2019 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/1277/</guid><description>定理 1 ガウシアン環 $\mathbb{Z}[i]$について、$N : \mathbb{Z}[i] \to \mathbb{Z}$という関数を考えよう。 [1]: $N(x + iy) := x^2 + y^2$と定義</description></item><item><title>ガウス整数</title><link>https://freshrimpsushi.github.io/jp/posts/1267/</link><pubDate>Sat, 31 Aug 2019 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/1267/</guid><description>定義 1 $\mathbb{Z} [i] := \left\{ a + i b : a, b \in \mathbb{Z} \right\}$をガウス環と言い、その要素をガウス整数という。 定理 [1]: $\overline{i} = i^{3}$ [2]: $( a \pm ib ) + ( c \pm id) = (a \pm c) +</description></item><item><title>半素数の素因数分解が容易に解ける条件</title><link>https://freshrimpsushi.github.io/jp/posts/1189/</link><pubDate>Wed, 24 Jul 2019 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/1189/</guid><description>要旨 1 準素数の素因数分解問題 $N = pq$ は、次の条件下では比較的簡単に解ける。 (i): $p$ がスムーズな素数である。 (ii): $p \approx q$ 説明 条件 (ii) の意味は、$p$ と $q$ の</description></item><item><title>ポラードのp-1素因数分解アルゴリズムの証明</title><link>https://freshrimpsushi.github.io/jp/posts/1187/</link><pubDate>Tue, 23 Jul 2019 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/1187/</guid><description>アルゴリズム 1 準素数 $N$ が与えられたとする。$p$ が スムーズ 素数であれば、$N$ の素因数分解 $N = pq$ は次のように求めることができる。 ステップ 1. $a</description></item><item><title>ゴールドワッサー-ミカリ確率的鍵暗号システムの証明</title><link>https://freshrimpsushi.github.io/jp/posts/1185/</link><pubDate>Sun, 21 Jul 2019 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/1185/</guid><description>ビルドアップ 左から順に アリス、ボブ、イブとしよう。アリスとボブはメッセージを交換する当事者で、イブはメッセージに関心がある受動的な攻撃者だ。</description></item><item><title>RSA公開鍵暗号方式の証明</title><link>https://freshrimpsushi.github.io/jp/posts/1173/</link><pubDate>Fri, 19 Jul 2019 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/1173/</guid><description>ビルドアップ 左から順に アリス、ボブ、イブとしよう。アリスとボブはメッセージを交換する当事者で、イブはメッセージに興味がある受動的攻撃者だ。オ</description></item><item><title>素因数分解</title><link>https://freshrimpsushi.github.io/jp/posts/775/</link><pubDate>Wed, 17 Jul 2019 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/775/</guid><description>コード R 次に、Rコードで実装されたエラトステネスの篩である。自然数$n$が与えられると、エラトステネスの篩と同じ方法で素数かどうかを判断して</description></item><item><title>セミプライム</title><link>https://freshrimpsushi.github.io/jp/posts/950/</link><pubDate>Tue, 02 Apr 2019 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/950/</guid><description>定義 二つの素数の積を半素数semiprimeと呼ぶ。 説明 半素数の例として$4 = 2 \cdot 2$や$21 = 3 \cdot 7$、$673703 = 719 \cdot 937$などが</description></item><item><title>離散対数問題が容易に解決される条件</title><link>https://freshrimpsushi.github.io/jp/posts/942/</link><pubDate>Tue, 26 Mar 2019 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/942/</guid><description>要旨 1 グループ $G = F_{p}$ の要素 $g$ がオーダー $N$ であるとしよう。すると、離散対数問題 $g^{x} = h$ は、次の条件下では比較的簡単に解かれることになる。 (i): $p$ がス</description></item><item><title>ポラード・ロー アルゴリズムの証明</title><link>https://freshrimpsushi.github.io/jp/posts/940/</link><pubDate>Sun, 24 Mar 2019 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/940/</guid><description>アルゴリズム 群 $G$ の元 $g$ がオーダー $N = q_{1}^{r_{1}} q_{2}^{r_{2}} \cdots q_{t}^{r_{t}}$ だとしよう。そうすると、離散対数問題 $g^{x} = h$ は、以下のアルゴリズムに従って、多くても $\displaystyle O \left( \sum_{i=1}^{t} S_{q_{i}^{r_{i}}} + \log</description></item><item><title>スムーズ素数</title><link>https://freshrimpsushi.github.io/jp/posts/927/</link><pubDate>Thu, 21 Mar 2019 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/927/</guid><description>定義 素数$p$が多くの約数を持っている場合、$(p-1)$であれば$p$をスムースな素数と言う。 $B$以下の素数の積で表される数を**$B$</description></item><item><title>ショアのアルゴリズムの証明</title><link>https://freshrimpsushi.github.io/jp/posts/917/</link><pubDate>Tue, 19 Mar 2019 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/917/</guid><description>アルゴリズム 1 単位元が$e$であるグループ$G$の元$g$が、オーダー$N$とする。それならば、離散対数問題$g^{x} = h$は次のアルゴリ</description></item><item><title>エルガマル公開鍵暗号方式の証明</title><link>https://freshrimpsushi.github.io/jp/posts/915/</link><pubDate>Sun, 17 Mar 2019 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/915/</guid><description>ビルドアップ 左から順に、アリス、ボブ、イブとしよう。アリスとボブはメッセージを交換する当事者で、イブはメッセージに興味を持つ消極的な攻撃者だ</description></item><item><title>ディフィー・ヘルマン鍵交換アルゴリズムの証明</title><link>https://freshrimpsushi.github.io/jp/posts/912/</link><pubDate>Fri, 15 Mar 2019 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/912/</guid><description>ビルドアップ 左から順に、アリス、ボブ、イヴと呼ぼう。アリスとボブはメッセージを送受信する当事者で、イヴはメッセージに関心がある受動的攻撃者だ</description></item><item><title>離散対数</title><link>https://freshrimpsushi.github.io/jp/posts/911/</link><pubDate>Wed, 13 Mar 2019 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/911/</guid><description>定義 1 素数 $p$ について、ガロア体 $\mathbb{F}_{p} := \mathbb{Z} / p \mathbb{Z}$ の恒等元が $0$ だとしよう。 $\mathbb{F}_{p}$ の原始根 $g \ne 0$ に関して、巡回群 $\mathbb{F}_{p} ^{ \ast } := \mathbb{F}_{p} \setminus \left\{ 0 \right\} = \left&amp;lt; g \right&amp;gt;$ 上で定義された</description></item><item><title>暗号理論における暗号化と復号화</title><link>https://freshrimpsushi.github.io/jp/posts/908/</link><pubDate>Mon, 11 Mar 2019 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/908/</guid><description>ビルドアップ アリスがボブに伝えたいメッセージがあるとしよう。この世に二人しかいなければ、このメッセージは二人だけのもので、隠す必要はない。[</description></item><item><title>ペル方程式</title><link>https://freshrimpsushi.github.io/jp/posts/885/</link><pubDate>Mon, 25 Feb 2019 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/885/</guid><description>ビルドアップ $a_{n} : = n^2$を正方形の数square numberと言う。 $\displaystyle b_{m} : = {{ m ( m + 1 ) } \over {2}}$を三角数triangular num</description></item><item><title>3で割ったときの余りが1になる素数の必要十分条件</title><link>https://freshrimpsushi.github.io/jp/posts/824/</link><pubDate>Sun, 27 Jan 2019 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/824/</guid><description>定理 $p \ne 3$ が素数だとしよう。 $p \equiv 1 \pmod{3}$ $\iff$ ある$a,b \in \mathbb{Z}$に対して $p = a^2 - ab + b^2$ 説明 $p=3$は除外されているけど、実際には</description></item><item><title>4で割ったときに余りが1になる素数の必要十分条件</title><link>https://freshrimpsushi.github.io/jp/posts/822/</link><pubDate>Fri, 25 Jan 2019 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/822/</guid><description>定理 $p \ne 2$ を 素数 だとしよう。 ある $a,b \in \mathbb{Z}$ について $p \equiv 1 \pmod{4}$ $\iff$ $p = a^2 + b^2$ 説明 $p=2$ は省いたが、実際には $ 2= 1^2 + 1^2$ だから、定理に含まれても問題ない。 例え</description></item><item><title>ガウスの二次互逆法則の証明</title><link>https://freshrimpsushi.github.io/jp/posts/395/</link><pubDate>Wed, 16 Jan 2019 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/395/</guid><description>統括 1 異なる２つの奇数素数 $p , q$ に対し、次が成り立つ。 (1): $$ \left( {{ q } \over { p }} \right) = \begin{cases} \left( {{ p } \over { q }} \right) &amp;amp; p \equiv 1 \pmod{4} \lor q \equiv 1 \pmod{4} \\ - \left( {{ p } \over { q }} \right)</description></item><item><title>オイラーの基準</title><link>https://freshrimpsushi.github.io/jp/posts/188/</link><pubDate>Tue, 15 Jan 2019 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/188/</guid><description>定理 1 素数について $p \ne 2$ $$ a^{{p-1} \over {2}} \equiv \left( {a \over p} \right) \pmod{p} $$ 説明 これによると、$a$ が二次剰余か非二次剰余かを見たい場合は、ただ計算すればいい。もちろん</description></item><item><title>ルジャンドル記号の乗法的性質の証明</title><link>https://freshrimpsushi.github.io/jp/posts/136/</link><pubDate>Mon, 14 Jan 2019 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/136/</guid><description>定義 QRとNRはそれぞれ二次剰余と二次非剰余を意味する。ルジャンドル記号legendre Symbolは、$p$より小さい自然数$a$に対し、</description></item><item><title>二次剰余と非二次剰余</title><link>https://freshrimpsushi.github.io/jp/posts/137/</link><pubDate>Sun, 13 Jan 2019 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/137/</guid><description>定義 1 素数$p \ne 2$ および $a &amp;lt; p$ に関して、合同方程式 $x^{2} \equiv a \pmod{p}$ の解が存在すれば、$a$ を $p$ の二次剰余 QRと呼ぶ。$a$ が二次剰余でない場合は、非</description></item><item><title>ミラー-ラビン素数判定法</title><link>https://freshrimpsushi.github.io/jp/posts/804/</link><pubDate>Sat, 12 Jan 2019 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/804/</guid><description>定理 1 奇数 $n,q$ を $n-1 = 2^{k} q$ のように表しよう。 $$ a \nmid n \\ a^{q} \not\equiv 1 \pmod{n} $$ そして全ての $i = 0, 1, \cdots , (k-1)$ に対して、 $$ a^{2^{i} q} \not\equiv -1 \pmod{n} $$ $ a$ が存在して上記を満たすなら</description></item><item><title>コセット判定法</title><link>https://freshrimpsushi.github.io/jp/posts/802/</link><pubDate>Thu, 10 Jan 2019 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/802/</guid><description>概要 カーマイケル数であるかを判断する方法として、必要十分条件である点がまた役立つ定理だ。 定理 1 奇数の合成数を$n$とする。 $n$は、全ての素</description></item><item><title>原始元定理の証明</title><link>https://freshrimpsushi.github.io/jp/posts/800/</link><pubDate>Tue, 08 Jan 2019 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/800/</guid><description>定義 1 $1 \le a \le p$が$\text{ord}_{p} (a) = p-1$を満たす場合、法$p$の原始根と定義される。 位数$\text{ord}_{p}</description></item><item><title>数論における位数</title><link>https://freshrimpsushi.github.io/jp/posts/798/</link><pubDate>Sun, 06 Jan 2019 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/798/</guid><description>定義 1 定理 $a^{n} \equiv 1 \pmod{p}$ とすると、$\text{ord}_{p} (a) \mid n$ である。 説明 例えば、$p=7$ を考える。 $$ \begin{align*} 1^{1} \equiv &amp;amp; 1 \pmod{ 7 } \\ 2^{3} \equiv &amp;amp; 1 \pmod{ 7 } \\</description></item><item><title>カーマイケル数</title><link>https://freshrimpsushi.github.io/jp/posts/794/</link><pubDate>Wed, 02 Jan 2019 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/794/</guid><description>定義 1 整数 $n$ が全ての $1 \le a \le n$ に対して $a^{n} \equiv a \pmod{n}$ を満たす場合、カーマイケル数と呼ばれる。 定理 全てのカーマイケル数は$2$ を除く異なる素数の積で</description></item><item><title>合同方程式の根</title><link>https://freshrimpsushi.github.io/jp/posts/792/</link><pubDate>Mon, 31 Dec 2018 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/792/</guid><description>アルゴリズム 1 自然数$b,k,m$が$\gcd (b , m) = \gcd ( k , \phi (m) ) = 1$を満たす場合、合同方程式$x^{k} \equiv b \pmod{ m }$の解$x$は以下の</description></item><item><title>連続二乗法の証明</title><link>https://freshrimpsushi.github.io/jp/posts/621/</link><pubDate>Mon, 23 Jul 2018 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/621/</guid><description>アルゴリズム 自然数 $a,k,m$ に対して $b \equiv a^{k} \pmod{m}$ を次のように計算できる。 ステップ 1. $k$ の2進展開 $u_{i} = 0$ 又は $u_{i} = 1$ に対して次のように表す。 $$ k = \sum_{i=0}^{r} u_{i} 2^{i} = u_{0} +</description></item><item><title>オイラーの完全数定理の証明</title><link>https://freshrimpsushi.github.io/jp/posts/600/</link><pubDate>Tue, 03 Jul 2018 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/600/</guid><description>定理 1 偶数 $n = 2^{p-1} (2^p - 1)$ が完全数ならば、$2^{p}-1$ はメルセンヌ素数だ。 説明 一見すると、ユークリッドの完全数公式の逆のように思えるが、偶</description></item><item><title>ユークリッドの完全数公式の導出</title><link>https://freshrimpsushi.github.io/jp/posts/593/</link><pubDate>Tue, 26 Jun 2018 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/593/</guid><description>公式 1 $2^{p}-1$が素数ならば、$2^{p-1}(2^{p} - 1)$は完全数だ。 説明 全ての完全数がその形をしているかは確かではないが、</description></item><item><title>整数論におけるシグマ関数</title><link>https://freshrimpsushi.github.io/jp/posts/567/</link><pubDate>Thu, 24 May 2018 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/567/</guid><description>定理 $\displaystyle \sigma (n) : = \sum_{d \mid n} d$ について、次のことが成り立つ。 [1]: 素数 $p$ に対して、 $$\sigma ( p^k ) = {{p^{k+1} - 1} \over {p-1}}$$ [2]: $\gcd (n , m ) = 1$ ならば、 $$\sigma (nm) = \sigma (n) \sigma (m)$$ 説明 シグマ関</description></item><item><title>メルセンヌ素数</title><link>https://freshrimpsushi.github.io/jp/posts/552/</link><pubDate>Tue, 15 May 2018 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/552/</guid><description>定義 1 $M_{n} = 2^{n} - 1$が素数なら、$M_{n}$をメルセンヌ素数mersenne Primeと呼ぶ。 説明 メルセンヌ素数の発見は、$p=x^{n}-</description></item><item><title>中国人の剰余定理の証明</title><link>https://freshrimpsushi.github.io/jp/posts/493/</link><pubDate>Wed, 28 Mar 2018 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/493/</guid><description>要約 $\gcd(n,m) = 1$と$\begin{cases} x \equiv b \pmod{n} \\ x \equiv c \pmod{m} \end{cases}$が$1 \le x \le nm$でぴったり一つの解を持つ。 説明 紀元3世</description></item><item><title>オイラーのトーシェント合計式の導出</title><link>https://freshrimpsushi.github.io/jp/posts/492/</link><pubDate>Tue, 27 Mar 2018 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/492/</guid><description>公式 $n$ の 約数を $d_{1}, d_{2} , \cdots , d_{r}$ とすると、 $$ n = \sum_{ i = 1 }^{r} \phi (d_{i}) = \phi (d_{1}) + \phi (d_{2}) + \cdots + \phi (d_{r}) $$ 説明 トーシェント関数は定義されてから少し不自然に感じられるか</description></item><item><title>オイラーのトーシェント定理の証明</title><link>https://freshrimpsushi.github.io/jp/posts/491/</link><pubDate>Mon, 26 Mar 2018 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/491/</guid><description>定理 1 $$ \gcd(a,m) = 1 \implies a^{ \phi (m) } \equiv 1 \pmod{m} $$ 説明 この定理がフェルマーの小定理を一般化したものであることがすぐにわかり、実際、証明法もほぼ同じである。 証明</description></item><item><title>トーシェント関数の乗法性質の証明</title><link>https://freshrimpsushi.github.io/jp/posts/452/</link><pubDate>Mon, 26 Feb 2018 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/452/</guid><description>定理 1 $$ \gcd (n , m) =1 \implies \phi ( n m ) = \phi (n) \phi (m) $$ 説明 トーション関数から導かれるいくつかの重要な結果を得るためには、絶対に必要な性質である。明らかに</description></item><item><title>ねじれ関数</title><link>https://freshrimpsushi.github.io/jp/posts/445/</link><pubDate>Tue, 20 Feb 2018 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/445/</guid><description>同じく見る 解析整数論ではのトーティエント関数 定義 1 以下のように定義された$\phi$ を オイラーのトーティエント関数という。 $$ \phi ( m ) := \left| \left\{ a</description></item><item><title>ウィルソンの定理の証明</title><link>https://freshrimpsushi.github.io/jp/posts/122/</link><pubDate>Tue, 13 Feb 2018 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/122/</guid><description>定理 1 2より大きい素数$p$について、$(p-1)! \equiv -1 \pmod{p}$が成り立つ。 説明 フェルマーの小定理ほどではないけれども、ウィルソン</description></item><item><title>フェルマーの小定理の証明</title><link>https://freshrimpsushi.github.io/jp/posts/121/</link><pubDate>Mon, 12 Feb 2018 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/121/</guid><description>定理 1 素数 $p$ とそれと互いに素な整数 $a$ について、$a^{p-1} \equiv 1 \pmod{p}$ 説明 フェルマーの小定理は、シンプルでありながら非常に多くの場所で利用され</description></item><item><title>原始ピタゴラス数は互いに素である。</title><link>https://freshrimpsushi.github.io/jp/posts/429/</link><pubDate>Sun, 11 Feb 2018 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/429/</guid><description>定理 $a^2 + b^2 = c^2$を満たす三つの自然数について、$a,b,c$のとき $$ \gcd (a,b) = 1 \\ \gcd (b,c) = 1 \\ \gcd (c,a) = 1 $$ 解説 一見、ピタゴラス数でも何でも明らか</description></item><item><title>原始ピタゴラスの三つ組は二つの奇数のみで表すことができる</title><link>https://freshrimpsushi.github.io/jp/posts/428/</link><pubDate>Sat, 10 Feb 2018 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/428/</guid><description>定理 1 $a^2 + b^2 = c^2$を満たす自然数の組$a,b,c$に対して、 $$ \begin{align*} a =&amp;amp; st \\ b =&amp;amp; {{s^2 - t^2 } \over {2}} \\ c =&amp;amp; {{s^2 + t^2 } \over {2}} \end{align*} $$ を満たす互いに素な二つの奇</description></item><item><title>ピタゴラスの三つ組の一つは必ず3の倍数でなければならない。</title><link>https://freshrimpsushi.github.io/jp/posts/96/</link><pubDate>Thu, 08 Feb 2018 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/96/</guid><description>定義 1 自然数 $a,b,c$ が $a^2 + b^2 = c^2$ を満たすとき、$a$ や $b$ は$3$ の倍数だ。 説明 ピタゴラスの数 において、一つは必ず偶数だけではなく、少なくとも一つは</description></item><item><title>ピタゴラスの三つ組</title><link>https://freshrimpsushi.github.io/jp/posts/415/</link><pubDate>Wed, 07 Feb 2018 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/415/</guid><description>定義 1 $a^2 + b^2 = c^2$を満たす3つの自然数の組$(a,b,c)$をピタゴラスの三つ組と言う。もし3つの自然数が公約数を持たなければ、それは原</description></item><item><title>ピタゴラス数のうち一つは偶数でなければならない</title><link>https://freshrimpsushi.github.io/jp/posts/416/</link><pubDate>Wed, 07 Feb 2018 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/416/</guid><description>定理 1 自然数 $a,b,c$が$a^2 + b^2 = c^2$を満たす時、$a$または$b$は偶数だ。 説明 興味深いことに、ピタゴラスの数の一つは必ず偶数</description></item><item><title>オイラーの証明：素数は無限に存在する</title><link>https://freshrimpsushi.github.io/jp/posts/420/</link><pubDate>Mon, 05 Feb 2018 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/420/</guid><description>証明 戦略: どんな方法を使っても同じ結論に達するなら問題はないが、本当にユニークな方法で解決された場合は、それ自体が学ぶ価値がある。ユークリッ</description></item><item><title>算術の基本定理の証明</title><link>https://freshrimpsushi.github.io/jp/posts/419/</link><pubDate>Mon, 05 Feb 2018 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/419/</guid><description>概要 1 natural number $n &amp;gt;2$ はユニークな素因数分解 $n = p_{1} p_{2} \cdots p_{r}$ を持つ。この時、素数 $p_{1} , p_{2} , \cdots , p_{r}$ の順序は無視される。 説明 小学校から自然に使ってきた性質が証</description></item><item><title>拡張ユークリッドの定理の証明</title><link>https://freshrimpsushi.github.io/jp/posts/417/</link><pubDate>Sun, 04 Feb 2018 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/417/</guid><description>定理 1 二つの整数 $a,b$ に対して、$ax + by = \gcd (a,b)$ は必ず整数解を持つ。 説明 この定理は、$\gcd (a,b)$ が $a$ と $b$ を含む線形式で表現できることを意味してい</description></item><item><title>素数分解の定理</title><link>https://freshrimpsushi.github.io/jp/posts/418/</link><pubDate>Sun, 04 Feb 2018 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/418/</guid><description>定理 1 素数 $p$ が自然数 $ n : = d_{1} d_{2} \cdots d_{r}$ を $p \mid n$ に割る場合、$p$ は少なくとも $d_{1} , d_{2} , \cdots , d_{r}$ のいずれか一つを割るべきである。 説明 $p \mid n$ は$n$ が</description></item><item><title>整数論における合同</title><link>https://freshrimpsushi.github.io/jp/posts/106/</link><pubDate>Thu, 11 May 2017 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/106/</guid><description>定義 1 整数 $a \equiv b \pmod{m}$, $\iff$, $a$, $b$, $m$ に対して、$a = b + mk$ を満たす整数 $k$ が存在する。 定理 $a_{1} \equiv b_{1} \pmod{m}$ と $a_{2} \equiv b_{2} \pmod{m}$ が成り立つとしよう。 [1] 加算: $a_{1} + a_{2} \equiv b_{1} + b_{2} \pmod{m}$</description></item><item><title>ユークリッドの互除法の証明</title><link>https://freshrimpsushi.github.io/jp/posts/65/</link><pubDate>Thu, 20 Apr 2017 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/65/</guid><description>アルゴリズム 二つの整数$a \ge b$に対して、$\text{gcd}(a,b)$は以下のように求めることができる。 疑似コード アルゴリズム：ユーク</description></item><item><title>合同方程式に対する代数学の基本定理の証明</title><link>https://freshrimpsushi.github.io/jp/posts/66/</link><pubDate>Thu, 20 Apr 2017 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/66/</guid><description>定理 1 ある素数$p$について$p\nmid a_{ 0 }$とすると、全ての係数が整数の多項式 $$ f(x)=a_{ 0 }x^{ d }+a_{ 1 }x^{ d-1 }+ \cdots +a_{ d-1 }x+a_{ d } $$ に対して方程式 $f(x)\equiv 0 \p</description></item><item><title>ユークリッドの証明：素数は無限に存在する</title><link>https://freshrimpsushi.github.io/jp/posts/64/</link><pubDate>Sat, 15 Apr 2017 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/64/</guid><description>定理 1 素数は無限に存在する。 説明 素数が無限であることを証明する方法はいくつかある。その中でも最もシンプルなのが、ユークリッドの方法だ。この証</description></item><item><title>11の倍数判定法のより簡単な証明</title><link>https://freshrimpsushi.github.io/jp/posts/23/</link><pubDate>Tue, 21 Mar 2017 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/23/</guid><description>ビルドアップ このポストでは基数に関する便宜のために次のような表記を使用する。 $$ [a_{n} a_{n-1} &amp;hellip; a_{1} a_{0}] := a_{n} \cdot 10^{n} + a_{n-1} \cdot 10^{n-1} +&amp;hellip;+ a_{1} \cdot 10^{1} + a_{0} \cdot 10^{0} $$ 例えば、$5714</description></item><item><title>3の倍数判定法と9の倍数判定法の証明</title><link>https://freshrimpsushi.github.io/jp/posts/21/</link><pubDate>Tue, 21 Mar 2017 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/21/</guid><description>定理 各桁の数字を全部足して $3$ の倍数なら $3$ の倍数で、$9$ の倍数なら $9$ の倍数だ。 説明 例として $8142$ は $8142=3 \cdot 2714$ で $3$ の倍数で、実際に $8+1+4+2=15$ は $3$ の倍数だ。 $1945125$ は</description></item><item><title>7と13の倍数判定法の証明</title><link>https://freshrimpsushi.github.io/jp/posts/22/</link><pubDate>Tue, 21 Mar 2017 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/22/</guid><description>ビルドアップ このポストでは、基数に関する便宜のために、次のような表記を使っている。 $$ [a_{n} a_{n-1} &amp;hellip; a_{1} a_{0}] := a_{n} \cdot 10^{n} + a_{n-1} \cdot 10^{n-1} +&amp;hellip;+ a_{1} \cdot 10^{1} + a_{0} \cdot 10^{0} $$ 例として、$</description></item></channel></rss>