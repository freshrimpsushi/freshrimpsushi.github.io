<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>J_s on 生エビ寿司屋</title>
    <link>https://freshrimpsushi.github.io/jp/j_/</link>
    <description>Recent content in J_s on 生エビ寿司屋</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>jp</language>
    <lastBuildDate>Wed, 24 Jan 2024 00:00:00 +0000</lastBuildDate>
    <atom:link href="https://freshrimpsushi.github.io/jp/j_/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>絶対連続実関数</title>
      <link>https://freshrimpsushi.github.io/jp/posts/3542/</link>
      <pubDate>Wed, 24 Jan 2024 00:00:00 +0000</pubDate>
      <guid>https://freshrimpsushi.github.io/jp/posts/3542/</guid>
      <description>定義1 関数 $f : \mathbb{R} \to \mathbb{R} (\text{または } \mathbb{C})$ が与えられたとする。$f$が任意の有限個の互いに素な区間 $(a_{i}, b_{i}) \subset [a,b]$に対しても以下の条件を</description>
    </item>
    <item>
      <title>適応的な学習率: AdaGrad, RMSProp, Adam</title>
      <link>https://freshrimpsushi.github.io/jp/posts/3529/</link>
      <pubDate>Fri, 29 Dec 2023 00:00:00 +0000</pubDate>
      <guid>https://freshrimpsushi.github.io/jp/posts/3529/</guid>
      <description>概要1 2 勾配降下法で使用されるアダプティブラーニングレートと、これを適用したモデルであるAdaGrad、RMSProp、Adamについて説明</description>
    </item>
    <item>
      <title>勾配降下における運動量法</title>
      <link>https://freshrimpsushi.github.io/jp/posts/3528/</link>
      <pubDate>Wed, 27 Dec 2023 00:00:00 +0000</pubDate>
      <guid>https://freshrimpsushi.github.io/jp/posts/3528/</guid>
      <description>概要1 2 勾配降下法におけるモーメンタム技術は、パラメーターを更新する際に以前の勾配もすべて使用することである。これが本質であり、これに尽きる</description>
    </item>
    <item>
      <title>モンテカルロ積分</title>
      <link>https://freshrimpsushi.github.io/jp/posts/3515/</link>
      <pubDate>Fri, 01 Dec 2023 00:00:00 +0000</pubDate>
      <guid>https://freshrimpsushi.github.io/jp/posts/3515/</guid>
      <description>概要 モンテカルロ積分は、与えられた関数の積分を計算するのが困難な場合に使用される数値的近似方法の一つである。次のような状況を想定しよう。与え</description>
    </item>
    <item>
      <title>고속 푸리에 변환</title>
      <link>https://freshrimpsushi.github.io/jp/posts/3492/</link>
      <pubDate>Mon, 16 Oct 2023 00:00:00 +0000</pubDate>
      <guid>https://freshrimpsushi.github.io/jp/posts/3492/</guid>
      <description>概要1 離散フーリエ変換DFTは、数式的な定義に従って計算すると、$\mathcal{O}(N^{2})$の時間計算量を持ちますが、以下で説明</description>
    </item>
    <item>
      <title>측도론과 확률론 요약 정리</title>
      <link>https://freshrimpsushi.github.io/jp/posts/3473/</link>
      <pubDate>Fri, 08 Sep 2023 00:00:00 +0000</pubDate>
      <guid>https://freshrimpsushi.github.io/jp/posts/3473/</guid>
      <description>概要 測度論と確率論を学んだ人向けの定義と概念の要約資料です。迅速な復習と定義の参照のために作成されました。 測度論 代数 $X \ne \varnothin</description>
    </item>
    <item>
      <title>CSSカラー名札</title>
      <link>https://freshrimpsushi.github.io/jp/posts/3459/</link>
      <pubDate>Wed, 09 Aug 2023 00:00:00 +0000</pubDate>
      <guid>https://freshrimpsushi.github.io/jp/posts/3459/</guid>
      <description>개요1 名前のある140以上のCSSカラーパレットです。 코드</description>
    </item>
    <item>
      <title>一般リニア群</title>
      <link>https://freshrimpsushi.github.io/jp/posts/3450/</link>
      <pubDate>Sat, 22 Jul 2023 00:00:00 +0000</pubDate>
      <guid>https://freshrimpsushi.github.io/jp/posts/3450/</guid>
      <description>定義 $n \times n$ 実数の可逆な行列の集合を $\mathrm{GL}(n, \mathbb{R})$ または $\mathrm{GL}_{n}(\mathbb{R})$ と表記し、$n$次の一般線型群general linear group of degree $n$と呼ぶ。 $$ \mathrm{GL}(n, \mathbb{R}) := \left\{ n \times n \text{ invertible matrix} \right\} = M_{n</description>
    </item>
    <item>
      <title>MNIST Database</title>
      <link>https://freshrimpsushi.github.io/jp/posts/3444/</link>
      <pubDate>Mon, 10 Jul 2023 00:00:00 +0000</pubDate>
      <guid>https://freshrimpsushi.github.io/jp/posts/3444/</guid>
      <description>概要1 $$ \includegraphics[height=20em]{https://upload.wikimedia.org/wikipedia/commons/2/27/MnistExamples.png} $$ MNISTmodified national institute of standards and technology データベースとは、アメリカの高校生と人口調査局の職員の数字の手書き文字に関するデータセットを指す。一般に[エムニス</description>
    </item>
    <item>
      <title>ビット: 古典的なコンピュータにおける情報の基本単位</title>
      <link>https://freshrimpsushi.github.io/jp/posts/3422/</link>
      <pubDate>Sat, 27 May 2023 00:00:00 +0000</pubDate>
      <guid>https://freshrimpsushi.github.io/jp/posts/3422/</guid>
      <description>양자정보이론 [ 펼치기 · 접기 ] 양자계산 논리게이트 비트 · 부울함수(AND · OR · NOT · XOR · NAND · NOR · CNOT · CCNOT · CSWAP) · 범용 게이트 · 복제 함수 · 사영 · 주입 양자게</description>
    </item>
    <item>
      <title>물리정보기반 신경망(PINN) 논문 리뷰</title>
      <link>https://freshrimpsushi.github.io/jp/posts/3313/</link>
      <pubDate>Wed, 19 Oct 2022 00:00:00 +0000</pubDate>
      <guid>https://freshrimpsushi.github.io/jp/posts/3313/</guid>
      <description>概要 レファレンスと数式の番号や表記法は、論文をそのまま踏襲する。 Physics-informed neural networks (PINN[ピン]と読む)は、数値的に解くために設計された微分方程式の</description>
    </item>
    <item>
      <title>微分幾何学におけるプルバック</title>
      <link>https://freshrimpsushi.github.io/jp/posts/3262/</link>
      <pubDate>Sat, 09 Jul 2022 00:00:00 +0000</pubDate>
      <guid>https://freshrimpsushi.github.io/jp/posts/3262/</guid>
      <description>概要 微分多様体上のプルバックを定義する。微分多様体が難しい場合は、$M = \mathbb{R}^{m}$、$N = \mathbb{R}^{n}$</description>
    </item>
    <item>
      <title>逆伝播アルゴリズム</title>
      <link>https://freshrimpsushi.github.io/jp/posts/3077/</link>
      <pubDate>Fri, 02 Jul 2021 00:00:00 +0000</pubDate>
      <guid>https://freshrimpsushi.github.io/jp/posts/3077/</guid>
      <description>この文は逆転派アルゴリズムの原理を数学専攻者が理解しやすいように作成された。 表記法 上図のような 人工ニューラルネットワーク が与えられたとする。</description>
    </item>
    <item>
      <title>머신러닝에서 강화학습이란</title>
      <link>https://freshrimpsushi.github.io/jp/posts/3029/</link>
      <pubDate>Thu, 04 Feb 2021 00:00:00 +0000</pubDate>
      <guid>https://freshrimpsushi.github.io/jp/posts/3029/</guid>
      <description>定義 強化学習とは、エージェントが環境と相互作用して累積報酬を最大化するポリシーを見つけることができるようにすることである。 説明1 強化学習を構</description>
    </item>
    <item>
      <title>3次元デカルト座標系におけるスカラー関数の勾配</title>
      <link>https://freshrimpsushi.github.io/jp/posts/1778/</link>
      <pubDate>Sat, 12 Sep 2020 00:00:00 +0000</pubDate>
      <guid>https://freshrimpsushi.github.io/jp/posts/1778/</guid>
      <description>定義 スカラー関数 $f=f(x,y,z)$に対して、以下のようなベクトル関数を $f$のグラディエントgradient, 勾配と定義し、$\nab</description>
    </item>
    <item>
      <title>3次元デカルト座標系におけるベクトル関数のカール(回転)</title>
      <link>https://freshrimpsushi.github.io/jp/posts/1752/</link>
      <pubDate>Thu, 03 Sep 2020 00:00:00 +0000</pubDate>
      <guid>https://freshrimpsushi.github.io/jp/posts/1752/</guid>
      <description>定義 ベクトル関数 $\mathbf{F}(x,y,z)=(F_{x},F_{y},F_{z})=F_{x}\hat{\mathbf{x}} + F_{y}\hat{\mathbf{y}} + F_{z}\hat{\mathbf{z}}$に対して、以下のようなベクトルを$\mathbf{F}$のカールcurl</description>
    </item>
    <item>
      <title>すべてのk-cellはコンパクトである：ユークリッド空間でコンパクトである同値条件。</title>
      <link>https://freshrimpsushi.github.io/jp/posts/1711/</link>
      <pubDate>Tue, 18 Aug 2020 00:00:00 +0000</pubDate>
      <guid>https://freshrimpsushi.github.io/jp/posts/1711/</guid>
      <description>定義 $a_i, b_i \in \mathbb{R} (1 \le i \le k)$に対して、集合$I=[a_{1}, b_{1}] \times [a_{2}, b_{2}] \times \cdots \times [a_{k}, b_{k}]$を**$k$-セル**と言う。ここで$\times</description>
    </item>
    <item>
      <title>量子力学でベクトル、内積、波動関数, ヒルベルト空間</title>
      <link>https://freshrimpsushi.github.io/jp/posts/1509/</link>
      <pubDate>Fri, 07 Feb 2020 00:00:00 +0000</pubDate>
      <guid>https://freshrimpsushi.github.io/jp/posts/1509/</guid>
      <description>ベクトルの一般化 線形代数学を学んでいない理科生にとって、ベクトルは大きさと方向を持つ物理量であり、3次元空間の点を意味し、一般に $\vec{x} = (x_{1}, x_{2}, x_{3})$ の</description>
    </item>
    <item>
      <title>ハーン分解定理</title>
      <link>https://freshrimpsushi.github.io/jp/posts/1308/</link>
      <pubDate>Sun, 15 Sep 2019 00:00:00 +0000</pubDate>
      <guid>https://freshrimpsushi.github.io/jp/posts/1308/</guid>
      <description>定理1 (a) $\nu$を可測空間 $(X, \mathcal{E})$上で定義された符号測度とする。すると、以下を満たす $\nu$の正集合 $P$と負集合 $</description>
    </item>
    <item>
      <title>特性方程式を利用した非線形1系偏微分方程式の解法。</title>
      <link>https://freshrimpsushi.github.io/jp/posts/1074/</link>
      <pubDate>Wed, 08 May 2019 00:00:00 +0000</pubDate>
      <guid>https://freshrimpsushi.github.io/jp/posts/1074/</guid>
      <description>説明1 $x$と$p$について、偏微分方程式の変数であることを強調する場合、通常のフォントで $x,p \in \mathbb{R}^{n}$ と表示し、$s$に関する関数であることを強調</description>
    </item>
    <item>
      <title>フーリエ級数の導出</title>
      <link>https://freshrimpsushi.github.io/jp/posts/929/</link>
      <pubDate>Fri, 01 Mar 2019 00:00:00 +0000</pubDate>
      <guid>https://freshrimpsushi.github.io/jp/posts/929/</guid>
      <description>定義 $2L$-周期関数 $f$に対して次のような級数を $f$のフーリエ級数Fourier series of $f$と定義する。 $$ \begin{align*} \lim \limits_{N \rightarrow \infty} S^{f}_{N}(t) &amp;amp;= \lim \limits_{N \to \infty}\left[ \dfrac{a_0}{2}+\sum \limits_{n=1}^{N} \left( a_{n}</description>
    </item>
    <item>
      <title>르장드르 다항함수의 로드리게스 공식</title>
      <link>https://freshrimpsushi.github.io/jp/posts/895/</link>
      <pubDate>Wed, 13 Feb 2019 00:00:00 +0000</pubDate>
      <guid>https://freshrimpsushi.github.io/jp/posts/895/</guid>
      <description>公式 ルジャンドル 多項式の明示的explicit公式は次のようである。 $$ P_{l}(x)=\dfrac{1}{2^{l} l!} \dfrac{d^{l}}{dx^{l}}(x^{2}-1)^{l} \tag{1} $$ 説明 $l$番目のルジャンドル多項式を得る公式であり、これをロ</description>
    </item>
    <item>
      <title>二つのレビ-チビタ記号の積</title>
      <link>https://freshrimpsushi.github.io/jp/posts/88/</link>
      <pubDate>Sat, 29 Apr 2017 00:00:00 +0000</pubDate>
      <guid>https://freshrimpsushi.github.io/jp/posts/88/</guid>
      <description>まとめ 次のように定義される $\epsilon_{ijk}$ を レビ-チビタ記号 と呼ぶ。 $$ \epsilon_{ijk} = \begin{cases} +1 &amp;amp; \text{if} \ \epsilon_{123}, \epsilon_{231}, \epsilon_{312} \\ -1 &amp;amp; \text{if} \ \epsilon_{132}, \epsilon_{213}, \epsilon_{321} \\ 0 &amp;amp; \text{if} \ i=j \ \text{or} \ j=k \ \text{or} \ k=i \end{cases} $$ 次のように定義さ</description>
    </item>
    <item>
      <title>텐서플로-케라스에서 시퀄션 모델, 함수형 API로 MLP 정의하고 훈련하는 법</title>
      <link>https://freshrimpsushi.github.io/jp/posts/3562/</link>
      <pubDate>Tue, 04 Mar 2014 00:00:00 +0000</pubDate>
      <guid>https://freshrimpsushi.github.io/jp/posts/3562/</guid>
      <description>概要 TensorFlowでは、Kerasを使用して簡単にニューラルネットワークを定義することができます。以下では、Sequential()と</description>
    </item>
  </channel>
</rss>
