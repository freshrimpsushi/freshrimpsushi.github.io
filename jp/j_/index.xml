<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>J_s on 生エビ寿司屋</title><link>https://freshrimpsushi.github.io/jp/j_/</link><description>Recent content in J_s on 生エビ寿司屋</description><generator>Hugo -- gohugo.io</generator><language>jp</language><lastBuildDate>Tue, 23 Sep 2025 00:00:00 +0000</lastBuildDate><atom:link href="https://freshrimpsushi.github.io/jp/j_/index.xml" rel="self" type="application/rss+xml"/><item><title>JuliaでJSONファイルを読み書きする方法 (JSON.jl)</title><link>https://freshrimpsushi.github.io/jp/posts/3708/</link><pubDate>Tue, 23 Sep 2025 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/3708/</guid><description>概要 Juliaでjsonファイルを扱うパッケージには、JSON.jl、JSON3.jl、Serde.jlなどがある。本ドキュメントではJSO</description></item><item><title>Pythonの内包構文</title><link>https://freshrimpsushi.github.io/jp/posts/3706/</link><pubDate>Fri, 19 Sep 2025 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/3706/</guid><description>説明 forループであるオブジェクトを作成する際、ループ自体をオブジェクト内部に記載する形式の文法をコンプリヘンションcomprehensio</description></item><item><title>結晶構造</title><link>https://freshrimpsushi.github.io/jp/posts/3705/</link><pubDate>Wed, 17 Sep 2025 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/3705/</guid><description>定義 原子、分子、イオンなどの配列が3次元空間で周期的に繰り返される構造を結晶crystalと呼ぶ。 説明1 結晶構造は固体物質の基本的な構造単位</description></item><item><title>Juliaでフォルダのツリー構造を表示する方法</title><link>https://freshrimpsushi.github.io/jp/posts/3704/</link><pubDate>Mon, 15 Sep 2025 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/3704/</guid><description>コード フォルダーツリーの構造を出力する関数は基本的に提供されていない。FileTrees.jlパッケージで提供されるFileTree(pat</description></item><item><title>Juliaでファイルやパスを調べる方法</title><link>https://freshrimpsushi.github.io/jp/posts/3703/</link><pubDate>Sat, 13 Sep 2025 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/3703/</guid><description>コード フォルダを巡回し、サブフォルダとファイルのリストを取得するための関数は walkdir(path) だ。フォルダ構造が以下のようだとする。 A/ ├─ B/ │ ├─ BB/ │ │ └─</description></item><item><title>メートル</title><link>https://freshrimpsushi.github.io/jp/posts/3702/</link><pubDate>Thu, 11 Sep 2025 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/3702/</guid><description>定義1 真空中で光が $\dfrac{1}{299\ 792\ 458}$秒間移動する距離を $1$メートルmeterと定義し、記号では $\text{m}$を使用する。 説明 逆に言えば、</description></item><item><title>オングストローム</title><link>https://freshrimpsushi.github.io/jp/posts/3701/</link><pubDate>Tue, 09 Sep 2025 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/3701/</guid><description>定義 オングストロームÅngströmは長さの単位の一つで、$10^{-10}$ メートルを表す。記号としては$\text{\AA}$を使用する</description></item><item><title>PBSジョブコマンドの概要</title><link>https://freshrimpsushi.github.io/jp/posts/3699/</link><pubDate>Fri, 05 Sep 2025 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/3699/</guid><description>概要 PBSはPortable Batch Systemの略で、大規模なコンピュータクラスタで作業を管理するために使用されるソフトウェアである。PBSは作</description></item><item><title>平行六面体の体積公式</title><link>https://freshrimpsushi.github.io/jp/posts/3698/</link><pubDate>Wed, 03 Sep 2025 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/3698/</guid><description>公式 平行六面体の体積 $V$は次のように求めることができる。 [1]: 底面の面積 $A$と高さ $h$を知っているときは次の通り: $$ V = A \times h $$ [2]: 座標空間</description></item><item><title>台形（だいけい）</title><link>https://freshrimpsushi.github.io/jp/posts/3697/</link><pubDate>Mon, 01 Sep 2025 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/3697/</guid><description>定義 一対の対辺がそれぞれ平行である四角形を台形trapezoidという。 説明 定義により平行四辺形であれば、台形である。 正方形 $\implies$ 長方形 $\implies$ $\implies$ ひし</description></item><item><title>平行六面体 (へいこうろくめんたい)</title><link>https://freshrimpsushi.github.io/jp/posts/3696/</link><pubDate>Sat, 30 Aug 2025 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/3696/</guid><description>定義 簡単な定義 すべての面が 平行四辺形である六面体を 平行六面体parallelepipedという。 線形代数的定義 3次元 座標空間上の相異なる3つ</description></item><item><title>菱形 (りょうけい)</title><link>https://freshrimpsushi.github.io/jp/posts/3695/</link><pubDate>Thu, 28 Aug 2025 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/3695/</guid><description>定義 簡単な定義 四辺の長さがすべて同じ四角形を菱形rhombusという。 線形代数的定義 2次元座標平面上で、大きさが同じである異なる2つのベクト</description></item><item><title>平行四辺形</title><link>https://freshrimpsushi.github.io/jp/posts/3694/</link><pubDate>Tue, 26 Aug 2025 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/3694/</guid><description>定義 簡単な定義 二組の対辺がそれぞれ互いに平行な四角形を平行四辺形parallelogramという。 線形代数的定義 2次元の座標平面上の互いに異</description></item><item><title>正方形</title><link>https://freshrimpsushi.github.io/jp/posts/3693/</link><pubDate>Sun, 24 Aug 2025 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/3693/</guid><description>定義 簡単な定義 四辺の長さがすべて同じで、四つの角の大きさがすべて同じである四角形を正方形squareと呼ぶ。 線形代数的定義 2次元座標平面上で</description></item><item><title>長方形</title><link>https://freshrimpsushi.github.io/jp/posts/3692/</link><pubDate>Fri, 22 Aug 2025 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/3692/</guid><description>定義 簡単な定義 四つの角の大きさがすべて同じ四辺形を長方形rectangleと呼ぶ。 線形代数的定義 2次元座標平面上の垂直な二つのベクトル$\m</description></item><item><title>juliaの文字列に関する文法と関数のまとめ</title><link>https://freshrimpsushi.github.io/jp/posts/3691/</link><pubDate>Wed, 20 Aug 2025 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/3691/</guid><description>概要 ジュリアで用いる文字/文字列に関する構文および関数を簡潔に整理する。基準はジュリアバージョンv1.11.5である。 公式ドキュメント Manual&amp;gt;Strings: https://docs.julialang.org/en/v1/manual/strings/ Base&amp;gt;Strings:</description></item><item><title>行列の直交相似と直交対角化</title><link>https://freshrimpsushi.github.io/jp/posts/3690/</link><pubDate>Mon, 18 Aug 2025 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/3690/</guid><description>定義1 直交類似 二つの正方行列 $A$ と $B$ に対して、次を満たす直交行列 $P$ が存在するならば、$A$ と $B$ は 直交類似orthogonally similar と呼ぶ。 $$ A</description></item><item><title>行列の対角化</title><link>https://freshrimpsushi.github.io/jp/posts/3689/</link><pubDate>Sat, 16 Aug 2025 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/3689/</guid><description>定義1 正方行列 $A$が任意の対角行列 $D$と相似であれば、 $A$を対角化可能diagonalizableである、あるいは $P$が $A$を対角</description></item><item><title>位相群 (いそうぐん)</title><link>https://freshrimpsushi.github.io/jp/posts/3687/</link><pubDate>Tue, 12 Aug 2025 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/3687/</guid><description>定義1 群 $\braket{G, \cdot}$が 位相空間 であり、次を満たすとき 位相群topological group と呼ぶ。 群の乗法 $\cdot : G \times G \to G$、 $\quad (g, h) \mapsto g \cdot h$ が 連続</description></item><item><title>多項式関数の微分法</title><link>https://freshrimpsushi.github.io/jp/posts/3686/</link><pubDate>Sun, 10 Aug 2025 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/3686/</guid><description>公式 多項式関数の導関数は次のとおりである。 $$ \dfrac{d x^{n}}{dx} = n x^{n-1} $$ $n \in \mathbb{N}$であれば、$x \in \mathbb{R}$で成立する。 $n \in \m</description></item><item><title>群の表現</title><link>https://freshrimpsushi.github.io/jp/posts/3684/</link><pubDate>Wed, 06 Aug 2025 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/3684/</guid><description>定義1 2 群 $G$と有限次元 ベクトル空間 $V$が与えられているとしよう。$\operatorname{GL}(V)$を一般線形群とする。以下の</description></item><item><title>群作用の同型写像</title><link>https://freshrimpsushi.github.io/jp/posts/3683/</link><pubDate>Mon, 04 Aug 2025 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/3683/</guid><description>定義1 2 群 $G$と2つの作用 $\ast_{1} : G \times X \to X$, $\ast_{2} : G \times Y \to Y$が与えられているとする。2つの$G$-集合間の関数 $f : X \to Y$が次を満たすとき、$</description></item><item><title>行列によるクロネッカー・デルタ</title><link>https://freshrimpsushi.github.io/jp/posts/3682/</link><pubDate>Sat, 02 Aug 2025 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/3682/</guid><description>定義 次のように定義される$\delta_{ij}$をクロネッカーのデルタという。 $$ \delta_{ij} = \begin{cases} 1 &amp;amp; \text{if } i = j \\ 0 &amp;amp; \text{if } i \ne j \end{cases} $$ 説明 クロネッカーの</description></item><item><title>二つの正規分布間の相対エントロピー（カルバック・ライブラー発散）</title><link>https://freshrimpsushi.github.io/jp/posts/3681/</link><pubDate>Thu, 31 Jul 2025 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/3681/</guid><description>公式 二つの正規分布 $N(\mu, \sigma^{2})$と$N(\mu_{1}, \sigma_{1}^{2})$間の相対エントロピー(KLD) は次の通り</description></item><item><title>LaTeXで物理単位を入力する方法</title><link>https://freshrimpsushi.github.io/jp/posts/3680/</link><pubDate>Tue, 29 Jul 2025 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/3680/</guid><description>コード 単位 一般テキスト 数式の中で siunitx 使用時 オングストローム Å \AA \mathrm{\AA} \si{\angstrom}</description></item><item><title>逆関数 (ぎゃくかんすう)</title><link>https://freshrimpsushi.github.io/jp/posts/3679/</link><pubDate>Sun, 27 Jul 2025 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/3679/</guid><description>定義 与えられた全単射関数$f: X \to Y$に対して、$f$の逆関数inverse functionは次のように定義される。 $$ f^{-1} : Y \to X, \quad f^{-1}(y) = x \iff f(x)</description></item><item><title>ラジアン</title><link>https://freshrimpsushi.github.io/jp/posts/3678/</link><pubDate>Fri, 25 Jul 2025 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/3678/</guid><description>定義 半径が$r$、弧の長さが$\ell$である扇形の角を$\theta$ $\text{rad}$という。このとき、$\text{rad}$は</description></item><item><title>幾何平均</title><link>https://freshrimpsushi.github.io/jp/posts/3677/</link><pubDate>Wed, 23 Jul 2025 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/3677/</guid><description>定義 二つの正の数 $a, b$に対して、次の値を $a$と $b$の幾何平均geometric meanという。 $$ \sqrt{ab} $$ 一般化 $n$個の正の数 $a_{1}, \dots, a_{n}</description></item><item><title>論文レビュー: スコアマッチング</title><link>https://freshrimpsushi.github.io/jp/posts/3676/</link><pubDate>Mon, 21 Jul 2025 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/3676/</guid><description>概要 スコアマッチングscore matchingは2005年に発表されたAapo Hyvarinenの論文 [Estimation of Non-Normalized Statistical Models by Score Matching](ht</description></item><item><title>スカラー関数の行列微分表</title><link>https://freshrimpsushi.github.io/jp/posts/3675/</link><pubDate>Sat, 19 Jul 2025 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/3675/</guid><description>説明 行列微分に関する公式を以下の表にまとめた。文書全体で使用される表記法は次の通り。 $\mathbf{a}, \mathbf{b} \in \mathbb{R}^{n}$: $\mathbf{x}$や$\mathbf{X}</description></item><item><title>トレーストリック</title><link>https://freshrimpsushi.github.io/jp/posts/3674/</link><pubDate>Thu, 17 Jul 2025 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/3674/</guid><description>公式 行列空間$M(\mathbb{R}^{n \times n})$上で定義されたスカラー関数$f: \mathbb{R}^{n \times n} \to \mathbb{R}$が与えられたとしよう。$</description></item><item><title>行列微分解剖</title><link>https://freshrimpsushi.github.io/jp/posts/3673/</link><pubDate>Tue, 15 Jul 2025 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/3673/</guid><description>定義 $n \times n$ 行列 $\mathbf{X} = [x_{ij}] a$の微分素 $\mathrm{d}\mathbf{X}$は次のように定義される。 $$ \mathrm{d} \mathbf{X} = \begin{bmatrix} \mathrm{d} x_{11} &amp;amp; \mathrm{d} x_{12} &amp;amp; \cdots &amp;amp; \mathrm{d} x_{1n} \\ \mathrm{d} x_{21} &amp;amp; \mathrm{d}</description></item><item><title>行列変数関数の全微分</title><link>https://freshrimpsushi.github.io/jp/posts/3672/</link><pubDate>Sun, 13 Jul 2025 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/3672/</guid><description>背景 スカラー微分 スカラー関数 $f : \mathbb{R} \to \mathbb{R}$と通常の微分を考えてみよう。 $$ \dfrac{d f}{d x} \tag{1} $$ この表記は分数のように見えて、実際に計算す</description></item><item><title>行列の内積（フロベニウス内積）</title><link>https://freshrimpsushi.github.io/jp/posts/3671/</link><pubDate>Fri, 11 Jul 2025 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/3671/</guid><description>定義 2つの$m \times n$行列$X = [x_{ij}]$、$Y=[Y]_{ij}$の内積inner productまたはドット積dot productは</description></item><item><title>トレースの行列微分</title><link>https://freshrimpsushi.github.io/jp/posts/3670/</link><pubDate>Wed, 09 Jul 2025 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/3670/</guid><description>公式 $\mathbf{X}$を$n \times n$行列としよう。$\dfrac{\partial }{\partial \mathbf{X}} = \nabla_{\mathbf{X}}$を行列勾</description></item><item><title>2つのベクトルの外積</title><link>https://freshrimpsushi.github.io/jp/posts/3669/</link><pubDate>Mon, 07 Jul 2025 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/3669/</guid><description>定義 二つの列ベクトル$\mathbf{u} = \begin{bmatrix} u_{1} \\ \vdots \\ u_{n} \end{bmatrix}$と$\mathbf{v} = \begin{bmatrix} v_{1} \\ \vdots \\ v_{n} \end{bmat</description></item><item><title>行列の累乗形の公式</title><link>https://freshrimpsushi.github.io/jp/posts/3668/</link><pubDate>Sat, 05 Jul 2025 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/3668/</guid><description>公式 行列 $X = [x_{ij}] \in \mathbb{R}^{n \times n}$に対して次のことが成り立つ。 $$ [XX]_{ij} = \sum_{k=1}^{n} x_{ik} x_{kj} $$ $$ XX = X^{2} = \begin{bmatrix} \sum\limits_{k=1}^{n} x_{1k} x_{k1} &amp;amp; \cdots &amp;amp; \sum\limits_{k=1}^{n} x_{1k} x_{kn} \\ \vdots &amp;amp; \ddots &amp;amp; \vdots \\ \sum\limits_{k=1}^{n} x_{nk} x_{k1} &amp;amp; \cdots &amp;amp; \sum\limits_{k=1}^{n} x_{nk} x_{kn} \end{bmatrix} $$ $X$</description></item><item><title>二次形式と双線形形式の行列微分</title><link>https://freshrimpsushi.github.io/jp/posts/3667/</link><pubDate>Thu, 03 Jul 2025 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/3667/</guid><description>公式 2つのベクトル $\mathbf{a} \in \mathbb{R}^{m}$, $\mathbf{b} \in \mathbb{R}^{n}$と行列 $\mathbf{X} \in \mathbb{R}^{m \times n}$について、双線形形式 $\mathbf{a}^{\mathsf{T}} \mathbf{X} \mathbf{b}$に対する勾配行列</description></item><item><title>確率ベクトル</title><link>https://freshrimpsushi.github.io/jp/posts/3665/</link><pubDate>Tue, 01 Jul 2025 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/3665/</guid><description>定義 次の条件を満たすベクトル$\mathbf{p} = \begin{bmatrix}p_{1} &amp;amp; \cdots &amp;amp; p_{n} \end{bmatrix}^{\mathsf{T}}$を確率ベクトルproba</description></item><item><title>エネルギーに基づくモデル</title><link>https://freshrimpsushi.github.io/jp/posts/3664/</link><pubDate>Sun, 29 Jun 2025 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/3664/</guid><description>概要1 2 3 エネルギーベースモデルとは、データのエネルギーenergyという関数を定義し、エネルギーが低いデータほどもっともらしいデータ（=確</description></item><item><title>LaTeXでサイコロの画像を使用する方法</title><link>https://freshrimpsushi.github.io/jp/posts/3663/</link><pubDate>Fri, 27 Jun 2025 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/3663/</guid><description>\usepackage{epsdice} このパッケージは1から6までの白黒のサイコロ絵を提供する。 \documentclass{article} \usepackage{epsdice} \begin{document} \epsdice{1} \epsdice{2} \epsdice{3} \epsdice[white]{4} \epsdice[white]{5} \epsdice[white]{6} \epsdice[black]{1} \epsdice[black]{2} \epsdice[black]{3} \epsdice{[black]4} \epsdice[black]{5} \epsdice[black]{6} \end{document} \usepackage{customdice} このパッケージはユーザー定義のサイコロ絵を描く</description></item><item><title>LaTeXで色を定義し使用する方法</title><link>https://freshrimpsushi.github.io/jp/posts/3662/</link><pubDate>Wed, 25 Jun 2025 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/3662/</guid><description>説明 xcolor パッケージでは、既に定義されている色を呼び出して使用できるが、ユーザー自身が色を定義して使用することも可能だ。プリアンブルに \defi</description></item><item><title>LaTeXでの色の使い方: xcolorパッケージ</title><link>https://freshrimpsushi.github.io/jp/posts/3661/</link><pubDate>Mon, 23 Jun 2025 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/3661/</guid><description>説明 \usepackage{color} $\LaTeX$で色を使用できる最も基本的なパッケージはcolorだ。プレアミブルに\usepackage{color}を追加し、{\</description></item><item><title>LaTeX Beamerで図に自動的に番号を振る方法</title><link>https://freshrimpsushi.github.io/jp/posts/3660/</link><pubDate>Sat, 21 Jun 2025 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/3660/</guid><description>コード $\LaTeX$の文書形式の一つであるarticleの場合、写真を挿入して\caption{}を作成すると、次のように自動でナンバリン</description></item><item><title>崔炳宣教授の無料配布された数学、統計学、経済学の教材</title><link>https://freshrimpsushi.github.io/jp/posts/3659/</link><pubDate>Thu, 19 Jun 2025 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/3659/</guid><description>説明 元延世大学応用統計学科の教授であり、現在ソウル大学校経済学科の教授であるチェ・ビョンソン教授の数学、統計学、経済学教科書12冊がインター</description></item><item><title>無料でオンライン公開されたR教科書（原書）</title><link>https://freshrimpsushi.github.io/jp/posts/3658/</link><pubDate>Tue, 17 Jun 2025 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/3658/</guid><description>説明 ハドリー・ウィッカムはニュージーランドのオークランド大学出身で、視覚化パッケージggplot2、データ前処理パッケージdplyr、文字列</description></item><item><title>LaTeXで使用可能なフォント一覧</title><link>https://freshrimpsushi.github.io/jp/posts/3657/</link><pubDate>Sun, 15 Jun 2025 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/3657/</guid><description>基本フォント 特にパッケージをインストールしなくても使用できる基本フォントである。 ローマン体 Roman \mathrm{words}または\rm{wor</description></item><item><title>LaTeXでハイパーリンクを使用する方法</title><link>https://freshrimpsushi.github.io/jp/posts/3656/</link><pubDate>Fri, 13 Jun 2025 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/3656/</guid><description>コード hyperrefパッケージを呼び出し、\href{アドレス}{内容}コマンドを使えばいい。テキストや数式を囲んでも良く、ディスプレイモ</description></item><item><title>絶対値関数の微分</title><link>https://freshrimpsushi.github.io/jp/posts/3655/</link><pubDate>Wed, 11 Jun 2025 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/3655/</guid><description>定理 絶対値関数の微分は以下のように示される。 $$ \frac{ d |x| } {d x} = \dfrac{1}{|x|}x = \begin{cases} 1 &amp;amp; x &amp;gt; 0 \\ -1 &amp;amp; x &amp;lt; 0 \end{cases}, \qquad x \neq 0 $$ 説明 実際には絶対値関数は$x = 0$の地点</description></item><item><title>ベルヌーイ分布の平均と分散</title><link>https://freshrimpsushi.github.io/jp/posts/3654/</link><pubDate>Mon, 09 Jun 2025 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/3654/</guid><description>公式 $X \sim$ $\operatorname{Bin}(1, p)$の場合、$X$の平均と分散はそれぞれ以下の通りである。 $$ E(X) = p $$ $$ \Var(X) = p(1-p) = pq, \qquad q = 1 - p $$ 証明 $p \in [0, 1]$に対して、次のよう</description></item><item><title>ベルヌーイ分布の母関数</title><link>https://freshrimpsushi.github.io/jp/posts/3653/</link><pubDate>Sat, 07 Jun 2025 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/3653/</guid><description>公式 $X \sim$ $\operatorname{Bin}(1, p)$であるとき、$X$の積率母関数は以下のようになる。 $$ m(t) = 1 - p + pe^{t} = q + pe^{t}, \qquad q = 1 - p $$ 証明 $p \in [0, 1]$に対して、次のような</description></item><item><title>カテゴリ分布</title><link>https://freshrimpsushi.github.io/jp/posts/3652/</link><pubDate>Thu, 05 Jun 2025 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/3652/</guid><description>定義1 $k (\ge 2)$個のカテゴリーがあるサンプル空間$\Omega = \left\{ 1, 2, \dots, k \right\}$と確率ベクトル$\mathbf{p} = (p_{1}, \dots, p_{</description></item><item><title>ベルヌーイ分布</title><link>https://freshrimpsushi.github.io/jp/posts/3651/</link><pubDate>Sun, 01 Jun 2025 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/3651/</guid><description>定義1 $p \in [0, 1]$に対して、次のような確率質量関数を持つ離散確率分布をベルヌーイ分布Bernoulli distributionと呼ぶ。 $$ f(x) =</description></item><item><title>微分の一般化：勾配行列と行列微分</title><link>https://freshrimpsushi.github.io/jp/posts/3666/</link><pubDate>Fri, 30 May 2025 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/3666/</guid><description>定義 スカラー関数 $f : \mathbb{R}^{n \times n} \to \mathbb{R}$と行列 $\mathbf{X} = [x_{ij}] \in \mathbb{R}^{n \times n}$に対して、勾配行列 $\nabla_{\mathbf{X}} f$は次のように定義される。 $$ [\nabla_{\mathbf{X}} f]_{ij} = \dfrac{\partial f}{\partial x_{ij}} \quad (i,j=1,\dots,n)</description></item><item><title>Pythonの特殊メソッド__str__と__repr__の違い</title><link>https://freshrimpsushi.github.io/jp/posts/3650/</link><pubDate>Wed, 28 May 2025 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/3650/</guid><description>説明 __str__と__repr__はPythonでオブジェクトの文字列表現を定義する二つの特殊メソッドだ。この二つのメソッドは似た役割を持</description></item><item><title>VSCodeをミュートにする方法（音声通知ではない）</title><link>https://freshrimpsushi.github.io/jp/posts/3649/</link><pubDate>Mon, 26 May 2025 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/3649/</guid><description>解決方法 VSCodeを使用している時に、ぷるっ、ぷっく、ぷっくーなどの音が鳴る場合は、以下のように設定(Ctrl + ,)でeditor.acc</description></item><item><title>Pythonの特殊メソッドのまとめ</title><link>https://freshrimpsushi.github.io/jp/posts/3648/</link><pubDate>Sat, 24 May 2025 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/3648/</guid><description>概要 Pythonでは、特定の名前を持つメソッドを定義してクラスのインスタンスに対する演算を定義できる。このようなメソッドを特殊メソッドspe</description></item><item><title>ラプラス分布の最尤推定量</title><link>https://freshrimpsushi.github.io/jp/posts/3647/</link><pubDate>Thu, 22 May 2025 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/3647/</guid><description>定理 ラプラス分布に従うランダムサンプル $\mathbf{X} := \left( X_{1} , \cdots , X_{n} \right) \sim \operatorname{Laplace}(\mu, b)$が与えられているとする。 $(\mu, b)$に対する最尤推定量 $(\hat{\mu}, \hat{b})$は次</description></item><item><title>ラプラス分布のモーメント母関数</title><link>https://freshrimpsushi.github.io/jp/posts/3646/</link><pubDate>Tue, 20 May 2025 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/3646/</guid><description>公式 $X \sim$ $\operatorname{Laplace}(\mu, b)$のとき、$X$のモーメント母関数は以下のようになる。 $$ m(t) = \dfrac{1}{1 - b^{2}t^{2}} e^{\mu t} \qquad \text{for } |t| &amp;lt; \dfrac{1}{b} $$ 証明 モーメント母関数の定義により、 $$ \begin{align*} E(e^{tX}) &amp;amp;=</description></item><item><title>ラプラス分布の平均と分散</title><link>https://freshrimpsushi.github.io/jp/posts/3645/</link><pubDate>Sun, 18 May 2025 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/3645/</guid><description>公式 $X \sim$ $\operatorname{Laplace}(\mu, b)$のとき、$X$の平均と分散はそれぞれ次のようになる。 $$ E(X) = \mu $$ $$ \Var(X) = 2b^{2} $$ 証明 直接計算 期待値の定義と部分積分法によって、 $$ \begin{align*} E(X)</description></item><item><title>ラプラス分布</title><link>https://freshrimpsushi.github.io/jp/posts/3644/</link><pubDate>Fri, 16 May 2025 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/3644/</guid><description>定義1 $\mu \in \mathbb{R}$と$b &amp;gt; 0$について, 次のような確率密度関数を持つ連続確率分布$\operatorname{Laplace}</description></item><item><title>機械学習における線形回帰モデルの最尤推定推定</title><link>https://freshrimpsushi.github.io/jp/posts/3643/</link><pubDate>Wed, 14 May 2025 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/3643/</guid><description>定理 データ$\mathbf{x}_{i} \in \mathbb{R}^{n}$とそのラベル$y_{i} \in \mathbb{R}$間の関係が、次のよう</description></item><item><title>機械学習におけるベイズ推論</title><link>https://freshrimpsushi.github.io/jp/posts/3642/</link><pubDate>Mon, 12 May 2025 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/3642/</guid><description>概要 ベイズ推論Bayesian inferenceとは、ベイズの定理に基づいて事前の知識と観測されたデータを通じて母数の分布を推定する統計的方</description></item><item><title>機械学習における線形回帰モデルの最大事後確率推定</title><link>https://freshrimpsushi.github.io/jp/posts/3641/</link><pubDate>Sat, 10 May 2025 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/3641/</guid><description>定理 データ$\mathbf{x}_{i} \in \mathbb{R}^{n}$とそのラベル$y_{i} \in \mathbb{R}$の関係が以下の線形モ</description></item><item><title>混合分布</title><link>https://freshrimpsushi.github.io/jp/posts/3639/</link><pubDate>Tue, 06 May 2025 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/3639/</guid><description>ビルドアップ1 下の図のような確率密度関数を持つ確率分布を近似したいとしよう。 確率分布を近似する基本的な方法の一つは、近似したい分布と最も似た</description></item><item><title>論文レビュー：デノイジング拡散確率モデル (DDPM)</title><link>https://freshrimpsushi.github.io/jp/posts/3638/</link><pubDate>Sun, 04 May 2025 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/3638/</guid><description>概要と要約 生成モデルとは、与えられたランダムサンプル $\left\{ y_{i} \right\}$が従う確率分布 $Y$またはそれを見つける方法を指す。何もないところ</description></item><item><title>生成モデル</title><link>https://freshrimpsushi.github.io/jp/posts/3637/</link><pubDate>Fri, 02 May 2025 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/3637/</guid><description>概要 我々が持っているデータが従う確率分布を正確に把握することは、多くの応用分野で重要な問題であるが、非常に難しい問題でもある。例えば、人の顔</description></item><item><title>数学と科学用語の総まとめ (韓国語、英語、日本語)</title><link>https://freshrimpsushi.github.io/jp/posts/3636/</link><pubDate>Wed, 30 Apr 2025 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/3636/</guid><description>概要 韓国語については大韓数学会(KMS, Korean Mathematical Society)に準拠した。ただし，「compact」に対する「옹골찬」のようにあまり用いられな</description></item><item><title>重力加速度</title><link>https://freshrimpsushi.github.io/jp/posts/3633/</link><pubDate>Sat, 26 Apr 2025 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/3633/</guid><description>定義 重力によって運動する物体の加速度を重力加速度gravitational accelerationという。 物体が（摩擦や空気抵抗などの他の外</description></item><item><title>グラフラプラシアン</title><link>https://freshrimpsushi.github.io/jp/posts/925/</link><pubDate>Wed, 16 Apr 2025 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/925/</guid><description>定義 グラフ $G$の次数行列を$D$、[隣接行列](../1499）を$A$とする。このとき、$G$のグラフラプラシアンgraph Laplacian $L$は次</description></item><item><title>グラフ埋め込み、ノード埋め込み、エッジ埋め込み</title><link>https://freshrimpsushi.github.io/jp/posts/975/</link><pubDate>Mon, 14 Apr 2025 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/975/</guid><description>定義1 グラフ $G(V, E)$が与えられたとする。関数 $f: V \to \mathbb{R}^{n}$をノード埋め込みnode embedding、関数 $g: E \to \ma</description></item><item><title>誕生日のパラドックス: 同じ誕生日である確率</title><link>https://freshrimpsushi.github.io/jp/posts/998/</link><pubDate>Sat, 12 Apr 2025 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/998/</guid><description>公式 うるう年を無視して、$1$年を$365$日とする。$n$名の人が集まったとき、誕生日が重なる人がいる確率は次のようになる。 $$ p(n) = 1 - \dfrac{365!}{365^n(365-n)!} $$</description></item><item><title>最適化器</title><link>https://freshrimpsushi.github.io/jp/posts/1019/</link><pubDate>Thu, 10 Apr 2025 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/1019/</guid><description>定義 最適化問題とは、関数$f : \mathbb{R}^{n} \to \mathbb{R}$の関数値が最小になるような$x_{\ast}$を見つけることを指す。 $$ x_{\ast} = \argmin\limits_{x} f(x) $$ 最適</description></item><item><title>パリティプロット</title><link>https://freshrimpsushi.github.io/jp/posts/1053/</link><pubDate>Sun, 06 Apr 2025 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/1053/</guid><description>定義 真値trueと予測値predictionの順序対を散布図として描いたものをパリティプロットparity plotと呼ぶ。 説明 実際の発音に近</description></item><item><title>双対空間の内積</title><link>https://freshrimpsushi.github.io/jp/posts/1064/</link><pubDate>Mon, 31 Mar 2025 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/1064/</guid><description>導入 ベクトル空間 $V$に対して、$(V, \braket{\cdot, \cdot}_{V})$をヒルベルト空間とする。$V^{\ast}$を$V$の双対空間とする。リー</description></item><item><title>Pythonで文字列を補間する方法</title><link>https://freshrimpsushi.github.io/jp/posts/1068/</link><pubDate>Sat, 29 Mar 2025 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/1068/</guid><description>f-string f-stringは、Python 3.6から使用可能で、文字列補間の中で最も簡単で便利な方法だ。文字列の前にfをつけ、文字列の中で変数を{変</description></item><item><title>PythonでPC名を確認する方法</title><link>https://freshrimpsushi.github.io/jp/posts/1069/</link><pubDate>Thu, 27 Mar 2025 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/1069/</guid><description>コード socket.gethostname()を使用する。 &amp;gt;&amp;gt;&amp;gt; import socket &amp;gt;&amp;gt;&amp;gt; socket.gethostname() &amp;#39;lab1&amp;#39; 関連情報 オペレーティングシステム確認 platform.system() PCユーザー名確認 os.getlogin PC名確認 socket.gethostname()</description></item><item><title>英語の論文を書く時、And、But、Soで文章を始めない</title><link>https://freshrimpsushi.github.io/jp/posts/1543/</link><pubDate>Tue, 25 Mar 2025 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/1543/</guid><description>説明 論文の作成時に and, but, so で文を始めることは望ましくない。まず、この三つの単語はすべて「接続詞」であり、文法的に正しくないからである。接続詞は</description></item><item><title>外力を持つ常微分方程式の数値解法 (ジュリア・微分方程式パッケージ - DifferentialEquations)</title><link>https://freshrimpsushi.github.io/jp/posts/1083/</link><pubDate>Sun, 23 Mar 2025 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/1083/</guid><description>説明 DifferentialEquations.jlは微分方程式の数値的解法のためのジュリアパッケージだ。この文章では、Differenti</description></item><item><title>微分方程式ソルバーとは何ですか？</title><link>https://freshrimpsushi.github.io/jp/posts/1093/</link><pubDate>Fri, 21 Mar 2025 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/1093/</guid><description>定義 微分方程式を数値的に解くためのアルゴリズムをソルバーsolverという。 説明 例えば、4次のルンゲ-クッタ法 (RK4)で微分方程式を解いた</description></item><item><title>ネット、ムーア-スミス列</title><link>https://freshrimpsushi.github.io/jp/posts/1133/</link><pubDate>Mon, 17 Mar 2025 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/1133/</guid><description>定義1 集合 $X$と有向集合 $A$に対して、$A$から$X$への関数 $f : A \to X$をネットnetと呼ぶ。 表記法 それぞれの $a \in A$に対して、$x_</description></item><item><title>方向性集合</title><link>https://freshrimpsushi.github.io/jp/posts/1134/</link><pubDate>Sat, 15 Mar 2025 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/1134/</guid><description>定義 1 $(A, \le)$を部分順序集合とする。任意の$a, b \in A$に対して$a \le c$, $b \le c$を満たす$c \in A$が存在すれば、$(A, \le)$を有向</description></item><item><title>近似、最適近似</title><link>https://freshrimpsushi.github.io/jp/posts/1152/</link><pubDate>Sun, 09 Mar 2025 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/1152/</guid><description>定義1 $(X, d)$を距離空間とする。部分集合$U \subset X$に対して、写像$X \to U$を近似(法)approximation (method)と呼ぶ。 $f \in</description></item><item><title>ゼロ機能, 零機能</title><link>https://freshrimpsushi.github.io/jp/posts/1155/</link><pubDate>Fri, 07 Mar 2025 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/1155/</guid><description>定義 実数空間で 次のように定義される$0 : \mathbb{R} \to \mathbb{R}$を 零関数zero functionと呼ぶ。 $$ 0(x) = 0 \quad \text{for all } x \in \mathbb{R} $$ ベクトル空</description></item><item><title>定数関数の微分法</title><link>https://freshrimpsushi.github.io/jp/posts/1175/</link><pubDate>Wed, 05 Mar 2025 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/1175/</guid><description>公式 定数関数 $C$の導関数は$0$である。 $$ \dfrac{d C}{dx} = 0 $$ 説明 正確に言うと、導関数は関数であるため、「定数関数の導関数は零関数である」となる。零</description></item><item><title>原始関数と不定積分</title><link>https://freshrimpsushi.github.io/jp/posts/1177/</link><pubDate>Mon, 03 Mar 2025 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/1177/</guid><description>定義 関数 $F$ が他の関数 $f$ に対して、$F^{\prime} = f$ を満たす場合、$F$ を $f$ の 原始関数antiderivative と呼ぶ。 説明 antiderivative は原始</description></item><item><title>部分群の判定方法</title><link>https://freshrimpsushi.github.io/jp/posts/3474/</link><pubDate>Sat, 01 Mar 2025 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/3474/</guid><description>定理 ワンステップ判定法 群 $G$の空集合でない部分集合 $H$について $a$、 $b$が $H$の元のとき $ab^{-1}$も $H$の元であれば $H</description></item><item><title>オートエンコーダー</title><link>https://freshrimpsushi.github.io/jp/posts/1181/</link><pubDate>Thu, 27 Feb 2025 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/1181/</guid><description>定義 2つの自然数 $m \ll n$に対して、関数 $f : \mathbb{R}^{n} \to \mathbb{R}^{m}$を符号器encoderとする。関数 $g : \mathbb{R}^{m} \to \mathbb{R}^</description></item><item><title>LaTeXのenumerateで番号を任意に付ける方法</title><link>https://freshrimpsushi.github.io/jp/posts/1188/</link><pubDate>Tue, 25 Feb 2025 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/1188/</guid><description>コードを \setcounter{enumi}{n}を使用すると、次のリストは$n+1$から始まる。 \documentclass{article} \begin{document} \begin{enumerate} \setcounter{enumi}{2} \item IVE \item LE SSERAFIM \setcounter{enumi}{7} \item IZ*ONE \setcounter{enumi}{10} \item LOVELYZ \end{enumerate} \end{document}</description></item><item><title>画像（信号、データ）におけるノイズとアーティファクトの違い</title><link>https://freshrimpsushi.github.io/jp/posts/1192/</link><pubDate>Sun, 23 Feb 2025 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/1192/</guid><description>概要 ノイズとアーティファクトは共通して元の信号（データ）を損なう要素であり、除去すべき対象である。本書ではこの二つの特徴と、互いにどのような</description></item><item><title>LaTeXのenumerateで角括弧を使用する方法</title><link>https://freshrimpsushi.github.io/jp/posts/1193/</link><pubDate>Fri, 21 Feb 2025 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/1193/</guid><description>コード enumerate環境で番号を振ると、基本的に丸括弧(, )が使用される。もし角括弧[, ]を使用したい場合は、\usepackage{e</description></item><item><title>LaTeX表を簡単に作成するサイト</title><link>https://freshrimpsushi.github.io/jp/posts/1194/</link><pubDate>Wed, 19 Feb 2025 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/1194/</guid><description>説明 texドキュメントで表を作成するのは、とても面倒な作業だ。一般的な文書編集プログラムのように簡単に作成することができない。特に、行や列が</description></item><item><title>LaTeXで\cite{}を使用する際に参考文献を番号順に表示する方法</title><link>https://freshrimpsushi.github.io/jp/posts/1215/</link><pubDate>Mon, 17 Feb 2025 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/1215/</guid><description>コード TeXドキュメントを作成するとき、参考文献を&amp;rsquo;引用された順&amp;rsquo;に整列した場合、\cite{}を使用すると自動的に</description></item><item><title>LaTeXで参考文献番号にハイパーリンクを設定する方法</title><link>https://freshrimpsushi.github.io/jp/posts/1232/</link><pubDate>Sat, 15 Feb 2025 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/1232/</guid><description>コード ドキュメントのプリアンブルに\usepackage{hyperref}を追加すればいい。このパッケージは文書内のリンクを自動的に生成し</description></item><item><title>ヤコビの公式</title><link>https://freshrimpsushi.github.io/jp/posts/1234/</link><pubDate>Thu, 13 Feb 2025 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/1234/</guid><description>公式 $A = A(t)$を微分可能な行列関数とする。行列式$\det A(t)$の導関数は次の通りである。 $$ \dfrac{\mathrm{d}}{\mathrm{d} t} \det A(t) = \Tr \Big( (\operatorname{adj}A(t)) \dfrac{\mathrm{d}A(t)}{\mathrm{d}t} \Big) = \det A(t) \cdot \Tr\left( A^{-1}(t) \dfrac{\mathrm{d}A(t)}{\mathrm{d}t} \right) $$ こ</description></item><item><title>Juliaでの離散フーリエ変換行列の実装</title><link>https://freshrimpsushi.github.io/jp/posts/1249/</link><pubDate>Tue, 11 Feb 2025 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/1249/</guid><description>説明 $N$次元ベクトル$\mathbf{x}$の離散フーリエ変換は以下のような行列積として表される。 $$ \widehat{\mathbf{x}} = F \mathbf{x} $$ このとき$F$は、$\ome</description></item><item><title>離散フーリエ変換行列</title><link>https://freshrimpsushi.github.io/jp/posts/1250/</link><pubDate>Sun, 09 Feb 2025 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/1250/</guid><description>説明 離散フーリエ変換discrete Fourier transform, DFTはフーリエ変換を有限次元ベクトル、つまりデジタル信号に適用できるように変形したものである。離散</description></item><item><title>インターネットで無料公開された人工知能、機械学習、ディープラーニングの教材</title><link>https://freshrimpsushi.github.io/jp/posts/1253/</link><pubDate>Fri, 07 Feb 2025 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/1253/</guid><description>説明 人工知能、機械学習、ディープラーニングの分野の教材は、インターネットで無料で公開されている場合が多い。特に有名な教材でも無料公開されてい</description></item><item><title>Biblatexで特定のフィールドを非表示にする方法</title><link>https://freshrimpsushi.github.io/jp/posts/1275/</link><pubDate>Wed, 05 Feb 2025 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/1275/</guid><description>コード biblatexで出力される参考文献の情報から特定のフィールドを表示しないようにするには、\AtEveryBibitemコマンドで設定</description></item><item><title>BibLaTeXで参考文献の並べ替え順序をカスタマイズする方法</title><link>https://freshrimpsushi.github.io/jp/posts/1276/</link><pubDate>Mon, 03 Feb 2025 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/1276/</guid><description>コード 文書の本文preamble(\begin{document} 前）に \DeclareSortingScheme 命令を追加して参考文献の並び順を任意に設定できる。最初の並び替え基</description></item><item><title>LaTeXドキュメントを横向きに設定する方法</title><link>https://freshrimpsushi.github.io/jp/posts/1345/</link><pubDate>Sat, 01 Feb 2025 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/1345/</guid><description>コード ドキュメントを横方向に設定したい場合は、\usepackage[landscape]{geometry}を追加すれば良い。プレゼンテー</description></item><item><title>IguanaTeX: PowerPointでTeXを入力する方法</title><link>https://freshrimpsushi.github.io/jp/posts/1366/</link><pubDate>Thu, 30 Jan 2025 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/1366/</guid><description>説明 パワーポイントの純正数式入力機能は非常に粗悪だ。TeXの文法を一部は取り入れているが、まともに使うには到底及ばないレベルであり、最も重要</description></item><item><title>LaTeXで空白スペースを自動的に埋める方法</title><link>https://freshrimpsushi.github.io/jp/posts/1372/</link><pubDate>Tue, 28 Jan 2025 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/1372/</guid><description>コード ある数式や図などをドキュメントの一番下に配置したい場合は、\vfillを使用すれば良い。そうすると、垂直方向に空白を埋めてくれる。水平</description></item><item><title>ユークリッド空間における二つのベクトルの間の角度</title><link>https://freshrimpsushi.github.io/jp/posts/1408/</link><pubDate>Sun, 26 Jan 2025 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/1408/</guid><description>定義1 $n$次元ベクトル空間の二つのベクトル$\mathbf{v}, \mathbf{u} \in \mathbb{R}^{n}$に対して、二つのベクトル間の角度は次を</description></item><item><title>大きさが一定のベクトル値関数は導関数と直交する</title><link>https://freshrimpsushi.github.io/jp/posts/1411/</link><pubDate>Fri, 24 Jan 2025 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/1411/</guid><description>定理1 ベクトル関数 $\mathbf{r} : \mathbb{R} \to \mathbb{R}^{n}$に対して、$|\mathbf{r}(t)| = c$であれば次が成り立つ。($c$は定数</description></item><item><title>ベクトル値関数の極限と連続性</title><link>https://freshrimpsushi.github.io/jp/posts/1418/</link><pubDate>Wed, 22 Jan 2025 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/1418/</guid><description>定義1 三つのスカラー関数 $f, g, h: \mathbb{R} \to \mathbb{R}$に対して、ベクトル関数 $\mathbf{r} : \mathbb{R} \to \mathbb{R}^{3}$は次のようになるとする。</description></item><item><title>ベクトル値関数の導関数</title><link>https://freshrimpsushi.github.io/jp/posts/1419/</link><pubDate>Mon, 20 Jan 2025 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/1419/</guid><description>定義1 ベクトル関数 $\mathbf{r} : I \subset \mathbb{R} \to \mathbb{R}^{3}$について、以下の極限が存在すれば、$\mathbf{r}$は**$t$で微分可能</description></item><item><title>二つのベクトルの内積とその間の角度の関係</title><link>https://freshrimpsushi.github.io/jp/posts/1435/</link><pubDate>Sat, 18 Jan 2025 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/1435/</guid><description>定理 二つのベクトル $\mathbf{a} = (a_{1}, a_{2}, a_{3})$ と $\mathbf{b} = (b_{1}, b_{2}, b_{3})$ の間の角度を $\theta$ としよう。すると次が成り立つ。 $$ \mathbf{a} \cdot \mathbf{b} = |\mathbf{a}| |\mathbf{b}| \cos \theta $$ このとき、$\mathbf{a} \cdot \mathbf{b}$</description></item><item><title>LaTeXでテキスト、数式にハイライト（蛍光ペン）する方法</title><link>https://freshrimpsushi.github.io/jp/posts/1438/</link><pubDate>Thu, 16 Jan 2025 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/1438/</guid><description>soulパッケージと\hlコマンドを使用すると、テキストや数式にハイライトを追加することができる。このとき、xcolorパッケージも一緒に読</description></item><item><title>複数のTeXファイルを一つに統合する方法</title><link>https://freshrimpsushi.github.io/jp/posts/1440/</link><pubDate>Tue, 14 Jan 2025 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/1440/</guid><description>コード \include \include コマンドを使用すればいい。2つのファイル file1.tex、file2.tex と同じフォルダで新しい tex ファイルを作成し、次のように</description></item><item><title>方位角と方向余弦</title><link>https://freshrimpsushi.github.io/jp/posts/1468/</link><pubDate>Sun, 12 Jan 2025 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/1468/</guid><description>定義1 3次元ベクトル $\mathbf{a} = (a_{1}, a_{2}, a_{3})$が与えられたとしよう。$\mathbf{a}$が$x$軸、$y$軸および$z$軸と成す角度をそれぞ</description></item><item><title>Juliaで双対数を使用して自動微分フォワードモードを実装する</title><link>https://freshrimpsushi.github.io/jp/posts/1498/</link><pubDate>Wed, 08 Jan 2025 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/1498/</guid><description>概要 自動微分の前進モードは二元数を利用すれば簡単に実装できる。ジュリアで前進モードを実装する方法を説明する。二元数と自動微分に関する背景知識</description></item><item><title>二元巡回群上で定義される微分可能な実関数</title><link>https://freshrimpsushi.github.io/jp/posts/1500/</link><pubDate>Mon, 06 Jan 2025 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/1500/</guid><description>ビルドアップ1 滑らかな 関数 $f : \mathbb{R} \to \mathbb{R}$が与えられたとしよう。$f$の$a$でのテイラー級数は次の通りである。 $$ \begin{align*} f(x) &amp;amp;= f(a) + f^{\prime}(a)(x</description></item><item><title>自動微分と二重数</title><link>https://freshrimpsushi.github.io/jp/posts/1501/</link><pubDate>Sat, 04 Jan 2025 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/1501/</guid><description>概要 二元数とは、二つの実数 $a, b \in \mathbb{R}$ に対して次のような形で表現される数を指す。 $$ a + b\epsilon, \quad (\epsilon^{2} = 0,\ \epsilon \neq 0) $$ 二元数の加算と乗算の体系は、自動微分の前</description></item><item><title>二重数</title><link>https://freshrimpsushi.github.io/jp/posts/1502/</link><pubDate>Thu, 02 Jan 2025 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/1502/</guid><description>定義 $\epsilon^{2} = 0 (\epsilon \neq 0)$を満たす$\epsilon$に対して、次のような形を二重数dual numbersと言う。 $$ a + b\epsilon,\qquad a, b \in \mathbb{R} $$ 説明 定義を見れ</description></item><item><title>BibTeXで作者名を省略しない方法</title><link>https://freshrimpsushi.github.io/jp/posts/1519/</link><pubDate>Sun, 29 Dec 2024 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/1519/</guid><description>コード biblatexでは基本的に著者が4人以上の場合、et al.で省略される。 \documentclass[10pt]{article} \usepackage{biblatex} \begin{document} \begin{refsection}[ref.bib] \nocite{*} \printbibliography \end{refsection} \end{document} オプション maxbibnamesに適当な大き</description></item><item><title>BibTeXで参考文献を年代順/逆順に並べ替える方法</title><link>https://freshrimpsushi.github.io/jp/posts/1535/</link><pubDate>Fri, 27 Dec 2024 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/1535/</guid><description>コード 何も設定しない場合、次のようにファーストネームの昇順で出力される。 \documentclass[10pt]{article} \usepackage{kotex} \usepackage{biblatex} \begin{document} \begin{refsection}[ref.bib] \nocite{*} \printbibliography \end{refsection} \end{document} パッケージを読み込む際にオプションで sorting=ynt を追加すると</description></item><item><title>ルンゲ-クッタ法で係数を決定する方法</title><link>https://freshrimpsushi.github.io/jp/posts/1536/</link><pubDate>Wed, 25 Dec 2024 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/1536/</guid><description>概要1 次のように与えられた常微分方程式について考える。$y$は$t$に対する関数であり、プライム$(^{\prime})$は$t$に対する微</description></item><item><title>Juliaフラックスで関数型APIを使用してニューラルネットワークを定義する方法</title><link>https://freshrimpsushi.github.io/jp/posts/1539/</link><pubDate>Mon, 23 Dec 2024 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/1539/</guid><description>説明 簡単な構造のニューラルネットワークは Flux.Chain を使用して定義できるが、複雑な構造のニューラルネットワークは Chain で定義するのが難しい。この場合、@f</description></item><item><title>剰余類(nを法とした整数)</title><link>https://freshrimpsushi.github.io/jp/posts/1088/</link><pubDate>Sat, 21 Dec 2024 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/1088/</guid><description>定義 任意の自然数 $n$ に対して、集合 $\mathbb{Z}_{n}$ と 二項演算 $+$ が次のように定められているとする。 $$ \mathbb{Z}_{n} = \{ 0, 1, 2, \cdots, n-1 \} \\ a + b = (a + b) \mod n $$ このとき $\operatorname{mod}$ は モジュ</description></item><item><title>英語の論文でFigure, Table, Appendixには冠詞を付けない</title><link>https://freshrimpsushi.github.io/jp/posts/1597/</link><pubDate>Sun, 15 Dec 2024 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/1597/</guid><description>説明 英語論文では、Figure, Table, Appendix, Diagramなどの図表・付録を示す単語の頭文字は常に大文字で表記する。また、a/an/theなどの冠詞</description></item><item><title>省略語と頭字語の違い</title><link>https://freshrimpsushi.github.io/jp/posts/1602/</link><pubDate>Fri, 13 Dec 2024 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/1602/</guid><description>説明 長い英語の単語や文章を短く表現することをabbreviation[アブリビエーション]あるいはacronym[アクロニム]という。abb</description></item><item><title>波動方程式の数値解: k-space Method</title><link>https://freshrimpsushi.github.io/jp/posts/1627/</link><pubDate>Wed, 11 Dec 2024 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/1627/</guid><description>メソッド 以下のような波動方程式が与えられたとする。 $$ \partial_{t}^{2} u(\mathbf{x}, t) = \Delta_{\mathbf{x}} u (\mathbf{x}, t), \qquad (\mathbf{x}, t) \in \mathbb{R}^{n} \times \mathbb{R} $$ 両辺に変数$\mathbf{x}$に対するフーリエ変換を</description></item><item><title>物理学における期待値の表記法</title><link>https://freshrimpsushi.github.io/jp/posts/1992/</link><pubDate>Mon, 09 Dec 2024 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/1992/</guid><description>定義 確率変数$X$の確率密度関数が$f(x)$であるとき、次の値を期待値expectationと呼ぶ。 $$ \braket{X} = \braket{x} = \int_{-\infty}^{\infty} x f(x) dx \tag{1} $$ 説明 通常、統計学</description></item><item><title>波動方程式の数値解: 差分法(FDM)</title><link>https://freshrimpsushi.github.io/jp/posts/1628/</link><pubDate>Sat, 07 Dec 2024 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/1628/</guid><description>メソッド 下記のような一次元波動方程式が与えられたとする。 $$ \dfrac{\partial^{2} u}{\partial t^{2}} = c^{2} \dfrac{\partial^{2} u}{\partial x^{2}}, \qquad 0 \le x \le 1, \quad t \ge 0 \tag{1} $$ 我々の目的は有限な点で上記のソリューション</description></item><item><title>吸収境界条件</title><link>https://freshrimpsushi.github.io/jp/posts/1631/</link><pubDate>Thu, 05 Dec 2024 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/1631/</guid><description>概要 波動の伝播を数値的に計算する方法には有限要素法(FDM)、$k$-space methodなどがある。これらの方法は波動が無限に伝播するこ</description></item><item><title>累乗級数の積分</title><link>https://freshrimpsushi.github.io/jp/posts/1647/</link><pubDate>Tue, 03 Dec 2024 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/1647/</guid><description>定理 冪級数 $\sum\limits_{n = 0}^{\infty} c_{n}x^{n}$が$\left| x \right| \lt R$で収束するとする。そして関数$f$を次のように定義する。 $$ f(x) = \sum\limits_{n = 0}^{\infty} c_{n}x^{n} \qquad \left| x</description></item><item><title>n^(1/n) の極限</title><link>https://freshrimpsushi.github.io/jp/posts/1649/</link><pubDate>Sun, 01 Dec 2024 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/1649/</guid><description>公式 $$ \lim \limits_{n \to \infty} \sqrt[n]{n} = 1 $$ $$ \lim \limits_{n \to \infty} \sqrt[n]{\dfrac{1}{n}} = 1 $$ 証明 $\sqrt[n]{n}$ 代わりに $\ln \sqrt[n]{n}$ の極限を求めるのが簡単だ。 $$ \lim\limits_{n \to \infty} \ln \sqrt[n]{n} = \lim\limits_{n \to \infty} \dfrac{\ln n}{n} $$ $\dfrac{\infty}{\infty}$ 形だから、ロピタルの定理 によ</description></item><item><title>累乗級数の収束</title><link>https://freshrimpsushi.github.io/jp/posts/1665/</link><pubDate>Fri, 29 Nov 2024 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/1665/</guid><description>定理1 べキ級数$\sum\limits_{n = 0}^{\infty} c_{n} (x - a)^{n}$の収束半径を$R$とする。すると、 級数は$x \in (a - R, a + R)$で絶対収束</description></item><item><title>累乗級数の微分</title><link>https://freshrimpsushi.github.io/jp/posts/1704/</link><pubDate>Wed, 27 Nov 2024 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/1704/</guid><description>定理1 べき級数 $\sum\limits_{n = 0}^{\infty} c_{n}x^{n}$が$\left| x \right| \lt R$で収束するとする。そして関数 $f$を次のように定義する。 $$ f(x) = \sum\limits_{n = 0}^{\infty} c_{n}x^{n} \qquad</description></item><item><title>級数の収束性質</title><link>https://freshrimpsushi.github.io/jp/posts/1737/</link><pubDate>Mon, 25 Nov 2024 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/1737/</guid><description>定理 二つの級数 $\sum a_{n}$と$\sum b_{n}$が収束したら、級数$\sum c a_{n}$（$c$は定数)と$\sum (a_{n} \pm b_{n})$</description></item><item><title>p-級数とp-級数判定法</title><link>https://freshrimpsushi.github.io/jp/posts/1754/</link><pubDate>Sat, 23 Nov 2024 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/1754/</guid><description>定義1 次のような 級数を $p$-級数p-seriesという。 $$ \sum\limits_{n=1}^{\infty} \dfrac{1}{n^{p}} $$ 説明 累乗数の無限和に対する一般化だ。下で紹介する判定法は$p$-級数に対し</description></item><item><title>極限比較判定法</title><link>https://freshrimpsushi.github.io/jp/posts/1756/</link><pubDate>Thu, 21 Nov 2024 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/1756/</guid><description>定理1 二つの級数 $\sum a_{n}$と$\sum b_{n}$について、$a_{n}, b_{n} \gt 0$とする。もし正の数$c \gt 0$が存在して $$ \lim\limits_{n \to \infty} \dfrac{a_{n}}{b_{n}} = c $$</description></item><item><title>比較判定法</title><link>https://freshrimpsushi.github.io/jp/posts/1759/</link><pubDate>Tue, 19 Nov 2024 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/1759/</guid><description>定理1 二つの級数 $\sum a_{n}$と$\sum b_{n}$について$a_{n}, b_{n} \gt 0$とする。すると次が成立する。 もし$\forall n \ a_{n} \le</description></item><item><title>級数の絶対収束と条件収束</title><link>https://freshrimpsushi.github.io/jp/posts/1760/</link><pubDate>Sun, 17 Nov 2024 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/1760/</guid><description>定義1 級数 $\sum\limits_{n=0}^{\infty} a_{n}$に対して、 $\sum\limits_{n=0}^{\infty} |a_{n}|$が収束すれば、 $\sum\limits_{n=0}^{\infty} a_{n}$が 絶対収束absolute convergenceすると言う。</description></item><item><title>ダランベールの収束判定法</title><link>https://freshrimpsushi.github.io/jp/posts/1771/</link><pubDate>Fri, 15 Nov 2024 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/1771/</guid><description>定理1 級数$\sum\limits_{n=0}^{\infty} a_{n}$に対して、$\lim\limits_{n \to \infty} \left| \dfrac{a_{n+1}}{a_{n}} \right| = L$としよ。</description></item><item><title>コーシーの冪根判定法</title><link>https://freshrimpsushi.github.io/jp/posts/1779/</link><pubDate>Wed, 13 Nov 2024 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/1779/</guid><description>まとめ1 級数級数 $\sum\limits_{n=0}^{\infty} a_{n}$について、$\lim\limits_{n \to \infty} \sqrt[n]{\left| a_{n} \right|} = L$としよう。 (a) もし$L &amp;lt; 1$ならば、級数は絶対収束する。</description></item><item><title>べき級数の収束半径</title><link>https://freshrimpsushi.github.io/jp/posts/1791/</link><pubDate>Mon, 11 Nov 2024 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/1791/</guid><description>まとめ1 与えられたべき級数$\sum\limits_{n=0}^{\infty} c_{n}(x - a)^{n}$について、$\alpha$と$R$は次のよ</description></item><item><title>双曲関数の表記法と命名の由来</title><link>https://freshrimpsushi.github.io/jp/posts/1825/</link><pubDate>Sat, 09 Nov 2024 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/1825/</guid><description>定義 二つの 指数関数 の 線形結合 $\frac{1}{2}e^{x} - \frac{1}{2}e^{-x}$ を 双曲線正弦関数hyperbolic sine function として、次のように表記する。 $$ \sinh x := \dfrac{e^{x} - e^{-x}}{2} $$ 同様に $\frac{1}{2}e^{x} + \frac{1}{2}e^{-x}$ を 双曲線余</description></item><item><title>関数列の一様収束と可積分性</title><link>https://freshrimpsushi.github.io/jp/posts/1829/</link><pubDate>Thu, 07 Nov 2024 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/1829/</guid><description>定理1 区間$[a, b]$で積分可能な関数の列$\left\{ f_{n} : f_{n} \text{ is integrable on } [a, b] \right\}$が、区間$[a, b]$で$f$に一様収束す</description></item><item><title>関数列の一様収束性と微分可能性</title><link>https://freshrimpsushi.github.io/jp/posts/1836/</link><pubDate>Tue, 05 Nov 2024 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/1836/</guid><description>定理1 区間 $[a, b]$で微分可能な関数の数列 $\left\{ f_{n} : f_{n} \text{ is differentiable on } [a, b] \right\}$が点 $x_{0} \in [a, b]$で点ごとに収束するとしよう。もし $\left\{ f_{n}^{\prime} \rig</description></item><item><title>三角関数の特別な角</title><link>https://freshrimpsushi.github.io/jp/posts/1849/</link><pubDate>Sun, 03 Nov 2024 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/1849/</guid><description>公式 いくつかの特定の角度に対する三角関数の関数値は次の通りだ。 ラジアン（角度） $0$ $\frac{\pi}{12} (15^{\circ})$ $\frac{\pi}{6} (30^{\circ})$ $\frac{\pi}{4} (45^{\circ})$ $\frac{\pi}{3} (60^{\circ})$ $\frac{\pi}{2} (90^{\circ})$ $\sin$ $0$ $\dfrac{\sqrt{6} - \sqrt{2}}{4}$ $\dfrac{1}{2}$ $\dfrac{\sqrt{2}}{2}$ $\dfrac{\sqrt{3}}{2}$ $1$ $\cos$ $1$ $ \dfrac{\sqrt{6} + \sqrt{2}}{4}$ $\dfrac{\sqrt{3}}{2}$ $\dfrac{\sqrt{2}}{2}$ $\dfrac{1}{2}$ $0$ $\tan$</description></item><item><title>Juliaでテキスト(txt)ファイルを編集して保存する方法</title><link>https://freshrimpsushi.github.io/jp/posts/3728/</link><pubDate>Sat, 02 Nov 2024 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/3728/</guid><description>write() write(path, string) 기본 함수인write()는 입력된 문자열을 내용으로 갖는txt 파일을 저장한다. julia&amp;gt; fm = &amp;#34;프로미스나인\n송하영\n박지원\n이채영\</description></item><item><title>テイラー級数とマクローリン級数</title><link>https://freshrimpsushi.github.io/jp/posts/1854/</link><pubDate>Fri, 01 Nov 2024 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/1854/</guid><description>ビルドアップ1 与えられた関数 $f$を冪級数で表現するとする。 $$ f(x) = c_{0} + c_{1}(x - a) + c_{2}(x - a)^{2} + c_{3}(x - a)^{3} + \cdots \qquad |x - a| \lt R \tag{1} $$ ここで、関数 $f$の冪級数表</description></item><item><title>Juliaでテキスト（txt）ファイルを文字列として読み込む方法</title><link>https://freshrimpsushi.github.io/jp/posts/3727/</link><pubDate>Thu, 31 Oct 2024 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/3727/</guid><description>説明 テキストファイルを読み込む方法はいくつかある。簡単な方法としては関数 read(), readline(), readlines() を使う。これらのうち read() はファイル全体を読み取り文字列として返し</description></item><item><title>テイラー級数の応用</title><link>https://freshrimpsushi.github.io/jp/posts/1861/</link><pubDate>Wed, 30 Oct 2024 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/1861/</guid><description>説明 テイラー級数（マクローリン級数）とは、与えられた関数を冪級数で近似したもので、関数$f$のテイラー級数は次のようになる。 $$ \sum\limits_{n=0}^{\infty} \dfrac{f^{(n)}(a)}{n!} (x-a)^{n} = f(a) + f^{\prime}(a)(x-a)</description></item><item><title>漸化式(ぜんかしき)</title><link>https://freshrimpsushi.github.io/jp/posts/1865/</link><pubDate>Mon, 28 Oct 2024 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/1865/</guid><description>定義 数列$\left\{ a_{n} \right\}$が与えられているとしよう。この時、$a_{n}$を$a_{n-1}$、$a_{n-2}$、$\c</description></item><item><title>連分数</title><link>https://freshrimpsushi.github.io/jp/posts/1876/</link><pubDate>Sat, 26 Oct 2024 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/1876/</guid><description>定義 以下のような形の分数を連分数continued fractionという。 $$ a_{0} + \dfrac{1}{a_{1} + \dfrac{1}{a_{2} + \dfrac{1}{a_{3} + \dfrac{1}{\ddots + \dfrac{1}{a_{n}}}}}} \tag{1} $$ 説明1 2 $(1)$を$[a_{1}, a_{2},</description></item><item><title>積分判定法</title><link>https://freshrimpsushi.github.io/jp/posts/1900/</link><pubDate>Thu, 24 Oct 2024 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/1900/</guid><description>ビルドアップ1 $$ \sum\limits_{n=1}^{\infty} \dfrac{1}{n^{2}} = 1 + \dfrac{1}{2^{2}} + \dfrac{1}{3^{2}} + \dfrac{1}{4^{2}} + \cdots $$ このような級数が収束するか発散するかを知りたい状況だとしよう。そのために$\dfrac{1}{n^</description></item><item><title>部分列</title><link>https://freshrimpsushi.github.io/jp/posts/1905/</link><pubDate>Tue, 22 Oct 2024 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/1905/</guid><description>定義 数列 $\left\{ a_{n} \right\}$が与えられているとする。自然数の数列 $\left\{ n_{k} : n_{i} \lt n_{i+1} \right\}_{ k \in \mathbb{N}}$ に対して$\left\{ a_{n_{k}} \right\}_{ k \in \mathbb{N}}</description></item><item><title>部分数列の極限と数列の収束性</title><link>https://freshrimpsushi.github.io/jp/posts/1911/</link><pubDate>Sun, 20 Oct 2024 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/1911/</guid><description>定理 数列 $\left\{ a_{n} \right\}$が与えられたとする。二つの部分数列 $\left\{ a_{2n} \right\}$と$\left\{ a_{2n+1} \right\}$について、$\l</description></item><item><title>交代級数</title><link>https://freshrimpsushi.github.io/jp/posts/1925/</link><pubDate>Fri, 18 Oct 2024 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/1925/</guid><description>定義 級数で各項の符号が交互に現れる級数を交代級数alternating seriesと言う。つまり、$b_{n} \gt 0$に対して、一般項が次のよ</description></item><item><title>交代級数の判定法</title><link>https://freshrimpsushi.github.io/jp/posts/1927/</link><pubDate>Wed, 16 Oct 2024 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/1927/</guid><description>定理1 次の条件を満たす交代級数$\sum\limits_{n = 1}^{\infty} (-1)^{n-1}b_{n}$$(b_{n} \gt 0)$は収束する。 $b_{n+1} \le b_{n} \quad \forall n$。 $\lim\limits_{n \to \infty} b_{n} = 0$。 証明 まず、偶数番目の項</description></item><item><title>交代調和級数</title><link>https://freshrimpsushi.github.io/jp/posts/1928/</link><pubDate>Mon, 14 Oct 2024 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/1928/</guid><description>定義 次の級数を交代調和級数alternating harmonic seriesという。 $$ \sum\limits_{n = 1}^{\infty} (-1)^{n-1}\dfrac{1}{n} = 1 - \dfrac{1}{2} + \dfrac{1}{3} - \dfrac{1}{4} + \cdots $$ 収束性 交代調和級数は収束する。 $$ \sum\limits_{n = 1}^{\infty}</description></item><item><title>調和級数</title><link>https://freshrimpsushi.github.io/jp/posts/1938/</link><pubDate>Sat, 12 Oct 2024 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/1938/</guid><description>定義 次の級数を調和級数harmonic seriesという。 $$ \sum\limits_{n = 1}^{\infty} \dfrac{1}{n} = 1 + \dfrac{1}{2} + \dfrac{1}{3} + \dfrac{1}{4} + \cdots $$ 説明 発散判定法の代表的な反例である。つまり、調和数</description></item><item><title>発散判定法</title><link>https://freshrimpsushi.github.io/jp/posts/1940/</link><pubDate>Thu, 10 Oct 2024 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/1940/</guid><description>定理 もし級数$\sum\limits_{n = 1}^{\infty} a_{n}$が収束すれば、数列$\{a_{n}\}$は$0$に収束する。 $$ \sum\limits_{n = 1}^{\infty} a_{n} \text{ is convergent } \implies \lim\limits_{n</description></item><item><title>等比数列の極限</title><link>https://freshrimpsushi.github.io/jp/posts/1949/</link><pubDate>Tue, 08 Oct 2024 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/1949/</guid><description>정리 等比数列 $\left\{ r^{n} \right\}$は $-1 \lt r \le 1$のとき収束し、その値は次の通りである。 $$ \lim\limits_{n \to \infty} r^{n} = \begin{cases} 0 &amp;amp; \text{if } -1 \lt r \lt 1 \\ 1 &amp;amp; \text{if } r = 1 \end{cases} $$ 証</description></item><item><title>幾何級数</title><link>https://freshrimpsushi.github.io/jp/posts/1951/</link><pubDate>Sun, 06 Oct 2024 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/1951/</guid><description>定義1 $a \ne 0$に対して次のような級数を幾何級数という。 $$ a + ar + ar^{2} + ar^{3} + \cdots = \sum_{n=0}^{\infty} ar^{n} $$ 説明 初項が$a$で、公比が$r$の等比数列の無限和である。</description></item><item><title>LaTeXでドキュメント全体のインデントを削除する方法</title><link>https://freshrimpsushi.github.io/jp/posts/1953/</link><pubDate>Fri, 04 Oct 2024 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/1953/</guid><description>コード \setlength{\parindent}{0pt}を追加する。 \documentclass{article} \begin{document} Me and my girlies. We gon party til its early. Got me feeling otherworldly tonight. Caught in some traffic. But the radio is blasting. Drop a red light and we&amp;#39;ll sing it</description></item><item><title>LaTeXの下線に関するパッケージulem</title><link>https://freshrimpsushi.github.io/jp/posts/1959/</link><pubDate>Wed, 02 Oct 2024 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/1959/</guid><description>説明1 ulemは下線に関連する機能を提供する$\LaTeX$パッケージだ。下線、二重下線、波線、取り消し線、斜め取り消し線、ダッシュ下線、点</description></item><item><title>LaTeXで取り消し線を適用する方法</title><link>https://freshrimpsushi.github.io/jp/posts/1960/</link><pubDate>Mon, 30 Sep 2024 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/1960/</guid><description>説明1 ulemパッケージの\soutまたはsoulパッケージのstを使用すると取り消し線を適用できる。 コード \sout 数式にもよく動作するが、ディス</description></item><item><title>LaTeXでenumerateを使ってアルファベット順に並べる方法</title><link>https://freshrimpsushi.github.io/jp/posts/1961/</link><pubDate>Sat, 28 Sep 2024 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/1961/</guid><description>コード \usepackage{enumitem}を追加する必要がある。 \begin{enumerate}[label=(\alph*)] \item Lorem Ipsum \item Lorem Ipsum is simply dummy text of the printing and typesetting industry. \item Lorem Ipsum has been the industry&amp;#39;s standard dummy text ever since the 1500s, \item when an unknown</description></item><item><title>Juliaでディクショナリを使って複数のキーワード引数を一度に渡す方法</title><link>https://freshrimpsushi.github.io/jp/posts/1962/</link><pubDate>Thu, 26 Sep 2024 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/1962/</guid><description>説明 ディクショナリとスプラットオペレーターを使うと、複数のキーワード引数を一度に関数に渡すことができる。 このテクニックは、複数のグラフに同じ</description></item><item><title>パラメトリック方程式</title><link>https://freshrimpsushi.github.io/jp/posts/1963/</link><pubDate>Tue, 24 Sep 2024 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/1963/</guid><description>ビルドアップ 2次元平面上の粒子の位置を数式で表現しようとする状況を考えてみよう。粒子が動く経路は次の図の通りだ。 上の図の経路を $x$に対する</description></item><item><title>DeepONet論文の実装を無計画に追いかける (PyTorch)</title><link>https://freshrimpsushi.github.io/jp/posts/1153/</link><pubDate>Sun, 22 Sep 2024 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/1153/</guid><description>概要 DeepONetは非線形演算子を学習するためのニューラルネットワーク構造として論文が公開された後、偏微分方程式の解法など多くの分野で応用</description></item><item><title>Juliaのファイル入出力 (I/O) 総まとめ</title><link>https://freshrimpsushi.github.io/jp/posts/3707/</link><pubDate>Sat, 21 Sep 2024 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/3707/</guid><description>概要 Juliaのファイル入出力に関するパッケージと関数を整理する。 要約 CSV: CSV.jl 読み取り CSV.read(&amp;quot;file_name.csv&amp;quot;, DataFrame) CSV.File(&amp;quot;file_name.csv&amp;quot;) 書き込み: CSV.write(&amp;quot;file_name.csv&amp;quot;, df_data) JSON: JSON3.jl, JSON.jl 読み取り 文字列: read(&amp;quot;file_name.json&amp;quot;, String) JSON3.Object: JSON3.read(cd*&amp;quot;/wonnyo.json&amp;quot;) 辞書: JSON3.read(cd*&amp;quot;/wonnyo.json&amp;quot;)</description></item><item><title>PyTorch で自動微分を使う方法</title><link>https://freshrimpsushi.github.io/jp/posts/1966/</link><pubDate>Wed, 18 Sep 2024 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/1966/</guid><description>説明 パイトーチで自動微分する方法を紹介する。パイトーチでの自動微分はtorch.autograd.grad関数で実装されている。 torch.autograd.grad(outputs, inputs, grad_outputs=None, retain_graph=None, create_graph=False, only_inputs=True,</description></item><item><title>파이토치로 PINN 논문 구현하기</title><link>https://freshrimpsushi.github.io/jp/posts/1967/</link><pubDate>Mon, 16 Sep 2024 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/1967/</guid><description>説明 PINNはPhysics-Informed Neural Networksの略称であり、自動微分と人工ニューラルネットワークを用いて微分方程式の解を数</description></item><item><title>JuliaのNamedArrays.jlパッケージ</title><link>https://freshrimpsushi.github.io/jp/posts/1968/</link><pubDate>Sat, 14 Sep 2024 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/1968/</guid><description>説明 JuliaのNamedArrays.jlは、2次元配列を使用する際に行と列に名前を付けて使用できるパッケージです。もちろん、3次元以上で</description></item><item><title>Juliaで配列の型を指定して定義する方法</title><link>https://freshrimpsushi.github.io/jp/posts/1969/</link><pubDate>Thu, 12 Sep 2024 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/1969/</guid><description>コード 角括弧の前に型名を記入するだけです。 julia&amp;gt; [1, 2, 3] 3-element Vector{Int64}: 1 2 3 julia&amp;gt; Float64[1, 2, 3] 3-element Vector{Float64}: 1.0 2.0 3.0 julia&amp;gt; Complex{Float64}[1, 2, 3] 3-element Vector{ComplexF64}: 1.0 + 0.0im 2.0 + 0.0im 3.0 + 0.0im julia&amp;gt; Char[1, 2, 3] 3-element Vector{Char}: &amp;#39;\x01&amp;#39;: ASCII/Unicode U+0001 (category Cc: Other, control) &amp;#39;\x02&amp;#39;: ASCII/Unicode U+0002</description></item><item><title>Juliaでコンプリヘンションを理解する方法</title><link>https://freshrimpsushi.github.io/jp/posts/1970/</link><pubDate>Tue, 10 Sep 2024 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/1970/</guid><description>コード JuliaでもPythonのようにコンプリヘンションcomprehensionが可能です。コンプリヘンションは、配列を生成する方法の一</description></item><item><title>Juliaで配列を列ごとに計算する方法</title><link>https://freshrimpsushi.github.io/jp/posts/1971/</link><pubDate>Sun, 08 Sep 2024 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/1971/</guid><description>コード 配列を列ごと、または行ごとに計算する方法には、map、ブロードキャスト、コンプリヘンションがあります。 julia&amp;gt; using Statistics julia&amp;gt; X = stack([i*ones(8) for i ∈ 1:9], dims=2) 8×9 Matrix{Float64}:</description></item><item><title>Juliaにおけるベクトルとタプルの違い</title><link>https://freshrimpsushi.github.io/jp/posts/1972/</link><pubDate>Fri, 06 Sep 2024 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/1972/</guid><description>説明 ベクトルとタプルは一見似ているように見えますが、実際にはいくつかの重要な違いがあります。 この記事では、実際にコードを書いて使用する視点か</description></item><item><title>JuliaでのNaNの比較</title><link>https://freshrimpsushi.github.io/jp/posts/1973/</link><pubDate>Wed, 04 Sep 2024 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/1973/</guid><description>説明 Juliaでは、浮動小数点数に関連してIEEE 754標準に従っています。このルールではNaNNot a Numberは他のすべての値との比較</description></item><item><title>2024秋オマカセ: 二重数と自動微分</title><link>https://freshrimpsushi.github.io/jp/posts/1484/</link><pubDate>Mon, 02 Sep 2024 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/1484/</guid><description>紹介 みなさんこんにちは。処暑の魔法が来なくてがっかりしているあなたに、特別なオマカセメニューを用意しました。今回のコースでは「二元数と自動微</description></item><item><title>Julia Fluxでニューラルネットワークトレーニングモード、テストモードの設定方法</title><link>https://freshrimpsushi.github.io/jp/posts/1975/</link><pubDate>Sat, 31 Aug 2024 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/1975/</guid><description>説明 ニューラルネットワークの構造では、トレーニングプロセスとテストプロセスで異なる動作が必要な部分があります。例えば、ドロップアウトはトレー</description></item><item><title>逆双曲線関数の導関数</title><link>https://freshrimpsushi.github.io/jp/posts/1976/</link><pubDate>Thu, 29 Aug 2024 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/1976/</guid><description>式1 逆双曲線関数の導関数は以下の通りです。 $$ \begin{align*} \dfrac{d}{dx} (\sinh^{-1} x) &amp;amp;= \dfrac{1}{\sqrt{x^{2} + 1}} \qquad &amp;amp; \dfrac{d}{dx} (\csch^{-1} x) &amp;amp;= - \dfrac{1}{|x|\sqrt{x^{2} + 1}} \\ \dfrac{d}{dx} (\cosh^{-1} x) &amp;amp;= \dfrac{1}{\sqrt{x^{2} - 1}} \qquad &amp;amp; \dfrac{d}{dx} (\sech^{-1} x) &amp;amp;= - \dfrac{1}{x\sqrt{1 - x^{2}}} \\ \dfrac{d}{dx} (\tanh^{-1} x) &amp;amp;= \dfrac{1}{1 - x^{2}} \qquad &amp;amp; \dfrac{d}{dx} (\coth^{-1}</description></item><item><title>逆双曲線関数</title><link>https://freshrimpsushi.github.io/jp/posts/1977/</link><pubDate>Tue, 27 Aug 2024 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/1977/</guid><description>定義1 双曲線関数の逆関数を逆双曲線関数と言います。 $$ \begin{align*} y = \sinh^{-1} x &amp;amp;\iff \sinh y = x \\ y = \cosh^{-1} x &amp;amp;\iff \cosh y = x \\ y = \tanh^{-1} x &amp;amp;\iff \tanh y = x \\ \end{align*} $$ クローズド形式 逆双曲線</description></item><item><title>双曲線関数の導関数</title><link>https://freshrimpsushi.github.io/jp/posts/1978/</link><pubDate>Sun, 25 Aug 2024 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/1978/</guid><description>式1 双曲線関数の導関数は以下の通りです。 $$ \begin{align*} \dfrac{d}{dx} (\sinh x) &amp;amp;= \cosh x \qquad &amp;amp; \dfrac{d}{dx} (\csch x) &amp;amp;= - \csch x \coth x \\ \dfrac{d}{dx} (\cosh x) &amp;amp;= \sinh x \qquad &amp;amp; \dfrac{d}{dx} (\sech x) &amp;amp;= - \sech x \tanh x \\ \dfrac{d}{dx} (\tanh x) &amp;amp;= \sech^{2} x \qquad &amp;amp; \dfrac{d}{dx} (\coth x) &amp;amp;=</description></item><item><title>三角関数の恒等式</title><link>https://freshrimpsushi.github.io/jp/posts/1979/</link><pubDate>Fri, 23 Aug 2024 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/1979/</guid><description>公式 三角関数について、次の恒等式が成立します。 $$ \begin{align} \cos^{2} x + \sin^{2} x &amp;amp;= 1 \\ 1 + \tan^{2} x &amp;amp;= \sec^{2} x \\ 1 + \cot^{2} x &amp;amp;= \csc^{2} x \end{align} $$ 証明 $(1)$ 三角関数の加法定理から、 $$ \cos (x - y)</description></item><item><title>逆三角関数の微分法</title><link>https://freshrimpsushi.github.io/jp/posts/1980/</link><pubDate>Wed, 21 Aug 2024 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/1980/</guid><description>公式 逆三角関数の導関数は以下の通りである。 $$ \begin{align*} \dfrac{d}{dx} \sin ^{-1} x &amp;amp;= \dfrac{1}{\sqrt{1-x^2}} \qquad &amp;amp; \dfrac{d}{dx} \csc ^{-1} x &amp;amp;= -\dfrac{1}{x\sqrt{x^2-1}} \\ \dfrac{d}{dx} \cos ^{-1} x &amp;amp;= -\dfrac{1}{\sqrt{1-x^2}} \qquad &amp;amp; \dfrac{d}{dx} \sec ^{-1} x &amp;amp;= \dfrac{1}{x\sqrt{x^2-1}} \\ \dfrac{d}{dx} \tan ^{-1} x &amp;amp;= \dfrac{1}{1+x^2} \qquad &amp;amp; \dfrac{d}{dx} \cot ^{-1} x &amp;amp;= -\dfrac{1}{1+x^2} \end{align*} $$ 証</description></item><item><title>줄리아 미분방정식 패키지 DiffetentialEquations 튜토리얼</title><link>https://freshrimpsushi.github.io/jp/posts/1098/</link><pubDate>Sun, 18 Aug 2024 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/1098/</guid><description>説明 DifferentialEquations.jlは、SciMLグループに属するパッケージの一つで、微分方程式の数値的解法のために開発され</description></item><item><title>LaTeXでクォーテーションマークを使う方法</title><link>https://freshrimpsushi.github.io/jp/posts/1982/</link><pubDate>Sat, 17 Aug 2024 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/1982/</guid><description>コード $\LaTeX$では、開く引用符と閉じる引用符が別々に存在します。開く引用符は ` で、位置は数字キー 1 の左で、tab の上です。閉じる引用</description></item><item><title>LaTeXでテキスト、数式、画像を透明にレンダリングする方法</title><link>https://freshrimpsushi.github.io/jp/posts/1983/</link><pubDate>Thu, 15 Aug 2024 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/1983/</guid><description>コード \phantom{}で囲まれた部分は透明にレンダリングされます。元の位置はそのまま保持しつつ、透明になるだけです。原文が次のようである</description></item><item><title>양자 조화 진동자의 사다리 연산자</title><link>https://freshrimpsushi.github.io/jp/posts/1984/</link><pubDate>Tue, 13 Aug 2024 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/1984/</guid><description>定義 2つの演算子$a_{+}$と$a_{-}$を次のように定義しよう。すると、$a_{\pm}$は量子調和振動子におけるハミルトニアンのはし</description></item><item><title>論文レビュー: DeepONet</title><link>https://freshrimpsushi.github.io/jp/posts/1180/</link><pubDate>Sun, 11 Aug 2024 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/1180/</guid><description>概要及び要約 リファレンス、数式の番号、表記法などはできるだけ論文に従う。 アクセシビリティのためにジャーナルに掲載されたバージョンではなく、ア</description></item><item><title>変数分離可能な関数</title><link>https://freshrimpsushi.github.io/jp/posts/1985/</link><pubDate>Fri, 09 Aug 2024 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/1985/</guid><description>定義 多変数関数に対して、以下の式を満たす$g_{i}$が存在する場合、$f$を変数分離可能と言う。 $$ f(x_{1}, x_{2}, \dots, x_{n}) = g_{1}(x_{1}) g_{2}(x_{2}) \cdots g_{n}(x_{n}) $$ 説明 簡単に言うと、変</description></item><item><title>円柱座標系</title><link>https://freshrimpsushi.github.io/jp/posts/1986/</link><pubDate>Wed, 07 Aug 2024 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/1986/</guid><description>定義 座標空間のある点$p$の座標を「原点と$p$との間の線を$xy-$平面に射影した線分の長さ$\rho$」と「原点$O$と射影$p^{\p</description></item><item><title>エクセル、パワーポイント、ワードの既定の保存場所を変更する方法</title><link>https://freshrimpsushi.github.io/jp/posts/1987/</link><pubDate>Mon, 05 Aug 2024 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/1987/</guid><description>説明 [ファイル] タブをクリックします。 [オプション] タブをクリックします。 [保存] タブをクリックします。 「基本ローカルファイル位置(I)」を</description></item><item><title>円柱座標系におけるデル演算子</title><link>https://freshrimpsushi.github.io/jp/posts/1988/</link><pubDate>Sat, 03 Aug 2024 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/1988/</guid><description>公式 円柱座標系でのデル演算子は以下の通りだ。 $$ \nabla = \dfrac{\partial}{\partial \rho} \widehat{\boldsymbol{\rho}} + \dfrac{1}{\rho}\dfrac{\partial}{\partial \phi} \widehat{\boldsymbol{\phi}} + \dfrac{\partial}{\partial z} \widehat{\mathbf{z}} $$ 説明 デル演算子はベクトルではないが、便宜上上記のように表記された。</description></item><item><title>曲線座標系とデル演算子</title><link>https://freshrimpsushi.github.io/jp/posts/1989/</link><pubDate>Thu, 01 Aug 2024 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/1989/</guid><description>定義 座標が$(q_{1}, q_{2}, q_{3})$の任意の曲線座標系でのデル演算子は以下の通りだ。 $$ \begin{align*} \nabla &amp;amp;= \dfrac{1}{h_{1}}\dfrac{\partial}{\partial q_{1}} \widehat{\mathbf{q}}_{1} + \dfrac{1}{h_{2}}\dfrac{\partial}{\partial q_{2}} \widehat{\mathbf{q}}_{2} + \dfrac{1}{h_{3}}\dfrac{\partial}{\partial q_{3}} \widehat{\mathbf{q}}_{3} \\ &amp;amp;= \sum\limits_{1}^{3} \dfrac{1}{h_{i}}\dfrac{\partial}{\partial q_{i}} \widehat{\mathbf{q}}_{i} \end{align*} $$ この</description></item><item><title>曲線座標系における勾配、発散、および回転</title><link>https://freshrimpsushi.github.io/jp/posts/1990/</link><pubDate>Tue, 30 Jul 2024 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/1990/</guid><description>公式 球座標系でのデル演算子は以下の通りだ。 $$ \nabla = \dfrac{\partial}{\partial r} \widehat{\mathbf{r}} + \dfrac{1}{r}\dfrac{\partial}{\partial \theta} \widehat{\boldsymbol{\theta}} + \dfrac{1}{r\sin\theta}\dfrac{\partial}{\partial \phi} \widehat{\boldsymbol{\phi}} $$ 説明 デル演算子はベクトルではないが、便宜上上記のように表記された。 グ</description></item><item><title>物理学におけるフラックスとは？</title><link>https://freshrimpsushi.github.io/jp/posts/1991/</link><pubDate>Sun, 28 Jul 2024 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/1991/</guid><description>定義1 物理学では、フラックスfluxとは、単位時間あたりの単位面積を通過する（衝突する）粒子の数（またはエネルギー、運動量などの物理量）を意</description></item><item><title>ハミルトニアン演算子</title><link>https://freshrimpsushi.github.io/jp/posts/1993/</link><pubDate>Fri, 26 Jul 2024 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/1993/</guid><description>定義 量子力学で ハミルトニアン 演算子Hamiltonian Operator $H$とは次の通りだ。 $$ H = \dfrac{P^{2}}{2m} + V $$ ここで、$P$は運動量演算子、$m$は粒子の質</description></item><item><title>量子力学におけるはしご演算子とは？</title><link>https://freshrimpsushi.github.io/jp/posts/1994/</link><pubDate>Wed, 24 Jul 2024 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/1994/</guid><description>定義 任意の演算子$N$に対して、$n$をその固有値、$\ket{n}$を対応する固有関数とする。 $$ N \ket{n} = n \ket{n} $$ 次の条件を満たす演算子$A$を</description></item><item><title>量子力学における位置演算子</title><link>https://freshrimpsushi.github.io/jp/posts/1995/</link><pubDate>Mon, 22 Jul 2024 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/1995/</guid><description>定義 量子力学では 位置 演算子position operator $X$を次のように定義する。波動関数 $\psi(x, t)$に対して、 $$ X \psi(x, t) = x \psi(x, t) $$ 説明 位置演算子に波動関数</description></item><item><title>エルミート多項式のロドリゲスの公式</title><link>https://freshrimpsushi.github.io/jp/posts/1996/</link><pubDate>Sat, 20 Jul 2024 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/1996/</guid><description>公式 エルミート多項式の明示的explicit 公式は次の通り。 物理学者のエルミート多項式 $$ H_{n} = (-1)^{n} e^{x^2} {{d^{n}} \over {dx^{n}}} e^{-x^2} \tag{1} $$ 確率論者のエルミート多項式 $$ H_{e_{n}} =</description></item><item><title>ラゲール多項式</title><link>https://freshrimpsushi.github.io/jp/posts/3630/</link><pubDate>Thu, 18 Jul 2024 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/3630/</guid><description>定義 ラゲール多項式Laguerre polynomialは次のような方法で定義される。 微分方程式の解として 次のようなラゲール微分方程式の解をラ</description></item><item><title>LaTeX에서 챕터/섹션 번호 임의로 설정하는 방법</title><link>https://freshrimpsushi.github.io/jp/posts/3629/</link><pubDate>Tue, 16 Jul 2024 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/3629/</guid><description>コード LaTeX コード \setcounter{section}{n}は現在のセクション番号を $n$ に設定する。セクションを追加するたびに、該当カウンター</description></item><item><title>프레드홀 적분 방정식</title><link>https://freshrimpsushi.github.io/jp/posts/3628/</link><pubDate>Sun, 14 Jul 2024 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/3628/</guid><description>定義1 次の積分方程式を第一種フレドホルム積分方程式Fredholm Integral Equation of the first kindと呼ぶ。 $$ g(s) = \int K(s, t) f(t) dt \tag{1} $$ この時、$K$を核kerne</description></item><item><title>LaTeXでbegin...end構造を関数のように機能する新しいコマンドを作成する方法</title><link>https://freshrimpsushi.github.io/jp/posts/3627/</link><pubDate>Fri, 12 Jul 2024 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/3627/</guid><description>コード TeXコードを書く時、\begin{}...\end{}コマンドを開いたり閉じたりするのは、かなり面倒だ。 \documentclass{article} \usepackage{amsthm} \newtheorem*{theorem*}{Theorem} \begin{document} \begin{theorem*} Let $f$ and $g$ be continuous functions on a</description></item><item><title>PyTorchでtorch.nnとtorch.nn.functionalの違い</title><link>https://freshrimpsushi.github.io/jp/posts/3626/</link><pubDate>Wed, 10 Jul 2024 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/3626/</guid><description>説明 PyTorchには、多くのニューラルネットワーク関連の関数がtorch.nnとtorch.nn.functionalに同じ名前で含まれて</description></item><item><title>機械学習における重みとは？</title><link>https://freshrimpsushi.github.io/jp/posts/3625/</link><pubDate>Mon, 08 Jul 2024 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/3625/</guid><description>定義 機械学習では、最適化しなければならないパラメーターを重みweightと呼ぶ。</description></item><item><title>人工ニューラルネットワークにおけるスキップ接続とは？</title><link>https://freshrimpsushi.github.io/jp/posts/3624/</link><pubDate>Sat, 06 Jul 2024 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/3624/</guid><description>定義 $\mathbf{W}$を重みとし、$\mathbf{x}$を入力、$\sigma$を非線形の活性化関数としよう。レイヤー $L_{\ma</description></item><item><title>初期条件が0の波動方程式の解。</title><link>https://freshrimpsushi.github.io/jp/posts/3623/</link><pubDate>Thu, 04 Jul 2024 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/3623/</guid><description>整理 次のような波動方程式が与えられたとする。 この時、$\Delta_{\mathbf{x}}$は変数$\mathbf{x}$に対するラプラシ</description></item><item><title>複数の多項式のロドリゲスの公式</title><link>https://freshrimpsushi.github.io/jp/posts/3622/</link><pubDate>Tue, 02 Jul 2024 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/3622/</guid><description>説明 ロドリゲスの公式Rodrigues&amp;rsquo; formulaは元々、ルジャンドル多項式の明示的な形を表すために使われた言葉だったが、そ</description></item><item><title>特殊関数とは?</title><link>https://freshrimpsushi.github.io/jp/posts/3621/</link><pubDate>Sun, 30 Jun 2024 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/3621/</guid><description>説明 数学で特殊関数special functionと呼ばれるものは、通常、特定の微分方程式の解であったり、複雑な積分で定義されたり、初等関数で</description></item><item><title>PyTorchでAdaBeliefオプティマイザを使う</title><link>https://freshrimpsushi.github.io/jp/posts/3620/</link><pubDate>Fri, 28 Jun 2024 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/3620/</guid><description>説明 AdaBeliefは2020年にJ. Zhuangらによって紹介されたオプティマイザで、Adamの変形の一つです1。PyTorchではこの</description></item><item><title>距離空間における一様連続</title><link>https://freshrimpsushi.github.io/jp/posts/3618/</link><pubDate>Mon, 24 Jun 2024 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/3618/</guid><description>定義1 二つの距離空間$(X, d_{X})$、$(Y, d_{Y})$と関数列$\left\{ f_{n} : X \to Y \right\}$が与えられたとしよう。</description></item><item><title>コンパクト積分作用素</title><link>https://freshrimpsushi.github.io/jp/posts/3617/</link><pubDate>Sat, 22 Jun 2024 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/3617/</guid><description>定理1 与えられたコンパクト区間$J = [a, b]$に対して、$K$が$J \times J$上で連続な関数であるとする。$X = C[a, b]$を連続関数空間とする。する</description></item><item><title>積分作用素</title><link>https://freshrimpsushi.github.io/jp/posts/3616/</link><pubDate>Thu, 20 Jun 2024 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/3616/</guid><description>定義1 連続関数空間 $C[0 ,1]$に対して、次のように定義される作用素 $T : C[0, 1] \to C[0, 1]$を積分作用素という。 $$ y = Tx \qquad \text{where} \qquad y(s) = \int_{0}^{1} K(s, t) x(t) dt $$ この時、</description></item><item><title>コンパクト作用素の同値条件</title><link>https://freshrimpsushi.github.io/jp/posts/3615/</link><pubDate>Tue, 18 Jun 2024 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/3615/</guid><description>要旨1 $X$と$Y$をノルム空間とする。$T : X \to Y$を線形作用素とする。すると、以下の二つの命題は等価である。 $T$はコンパクト作用素であ</description></item><item><title>行列のスペクトラムと分解集合</title><link>https://freshrimpsushi.github.io/jp/posts/3614/</link><pubDate>Sun, 16 Jun 2024 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/3614/</guid><description>定義1 正方行列$A$のすべての固有値の集合$\sigma (A)$を$A$のスペクトラムspectrumと呼ぶ。 スペクトラムの補集合$\rho</description></item><item><title>距離空間において、コンパクトであれば閉じており有界である</title><link>https://freshrimpsushi.github.io/jp/posts/3613/</link><pubDate>Fri, 14 Jun 2024 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/3613/</guid><description>概要 距離空間 $(X, d)$のコンパクト部分集合 $K$は、有界であり、閉集合である。 説明 逆は一般に成り立たない。ユークリッド空間では、逆が成り立つ。</description></item><item><title>距離空間におけるさまざまなコンパクト性の同値性</title><link>https://freshrimpsushi.github.io/jp/posts/3612/</link><pubDate>Wed, 12 Jun 2024 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/3612/</guid><description>統括1 $X$を距離空間とする。以下の命題は等価である。 $X$はコンパクトである。 $X$は可算コンパクトである。 $X$は集積点コンパクトである</description></item><item><title>位相空間における数列のコンパクト性とは？</title><link>https://freshrimpsushi.github.io/jp/posts/3611/</link><pubDate>Mon, 10 Jun 2024 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/3611/</guid><description>定義1 位相空間 $X$が 数列コンパクトsequentially compactとは、$X$の全ての数列 $\left\{ x_{n} \right\}$が $X$の点に収束す</description></item><item><title>ノルム空間の部分集合が有界集合であるための必要十分条件</title><link>https://freshrimpsushi.github.io/jp/posts/3610/</link><pubDate>Sat, 08 Jun 2024 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/3610/</guid><description>定義 直径 ノルム空間 $(X, \left\| \cdot \right\|)$が与えられたとする。非空集合 $M \subset X$の直径diameter $\diam M$は、以下のように定義される。 $$ \diam</description></item><item><title>コンパクト作用空間</title><link>https://freshrimpsushi.github.io/jp/posts/3609/</link><pubDate>Thu, 06 Jun 2024 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/3609/</guid><description>定義1 $X$と$Y$をノルム空間として、$T : X \to Y$をこれらの空間間の作用素とする。すべての有界な部分集合$M \subset X$に対して、作用素$T$</description></item><item><title>Juliaプロットでカラーグラデーションを使用する方法</title><link>https://freshrimpsushi.github.io/jp/posts/3608/</link><pubDate>Tue, 04 Jun 2024 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/3608/</guid><description>説明 カラーグラディエントは、Juliaの視覚化パッケージ Plots.jlがサポートする2つのカラースキームのうちの1つ（もう1つはパレット）</description></item><item><title>Juliaプロットでパレットを使用する方法</title><link>https://freshrimpsushi.github.io/jp/posts/3607/</link><pubDate>Sun, 02 Jun 2024 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/3607/</guid><description>説明 パレットとは、予め絞り出された絵の具がおかれている板のことを指します。数学的に説明すると、「色の集合」や「色の数列」と言えるでしょう。1</description></item><item><title>Juliaプロットで異なるスケールの2つのデータ軸を共有して描く方法</title><link>https://freshrimpsushi.github.io/jp/posts/3606/</link><pubDate>Fri, 31 May 2024 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/3606/</guid><description>コード 大きくスケールの異なる2つのデータを同じプロットに描いた場合、下の図のようにスケールが小さい方が完全に無視されてしまう。 using Plots x = 0:0</description></item><item><title>Juliaプロッツでのプロットのプロパティリスト</title><link>https://freshrimpsushi.github.io/jp/posts/3605/</link><pubDate>Wed, 29 May 2024 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/3605/</guid><description>説明 JuliaのPlots.jlでは、プロットも一つのオブジェクトだ。空のプロットを描いてタイプを確認すると、以下のようになる。 julia&amp;gt; using Plots julia&amp;gt; p =</description></item><item><title>Juliaプロットで背景のグリッドを飾る方法</title><link>https://freshrimpsushi.github.io/jp/posts/3604/</link><pubDate>Mon, 27 May 2024 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/3604/</guid><description>概要 Plots.jlでの図の背景の格子に関連するキーワードは次の通りだ。 キーワード名 機能 grid 格子表示 gridalpha, ga, gα 格子の透明度指定 foreground_color_grid, fgcolor_grid 格子の色指定 gridlinewidth,</description></item><item><title>Julia・プロットで背景色を指定する方法</title><link>https://freshrimpsushi.github.io/jp/posts/3603/</link><pubDate>Sat, 25 May 2024 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/3603/</guid><description>概要 Plots.jlで図の背景色に関連するキーワードは次の通りです。 キーワード名 機能 background_color, bg_color 全体の背景の色を指定 background_color_outside, bg_color_outside グラフが描かれた外側の領域の</description></item><item><title>Julia Plotsで各サブプロットごとにグラフの色を指定する方法</title><link>https://freshrimpsushi.github.io/jp/posts/3602/</link><pubDate>Thu, 23 May 2024 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/3602/</guid><description>概要 サブプロットごとにグラフの色を指定する3つの方法を紹介する。グラフ要素に色を指定する方法はここを参照してください。 方法 1 サブプロットのグ</description></item><item><title>Juliaプロットでグラフ要素の色を指定する方法</title><link>https://freshrimpsushi.github.io/jp/posts/3601/</link><pubDate>Tue, 21 May 2024 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/3601/</guid><description>定理 Plots.jlでは、グラフの各構成要素の色を指定するキーワードは以下の通りだ。 キーワード 機能 markercolor, mc マーカー内部の色を指定 markerstrokecolor, msc マーカーの縁</description></item><item><title>JuliaでRGBカラーコードを使用する方法</title><link>https://freshrimpsushi.github.io/jp/posts/3600/</link><pubDate>Sun, 19 May 2024 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/3600/</guid><description>コード Juliaで色を扱うために提供されるパッケージはColors.jlだ。視覚化パッケージのPlots.jlを読み込むと、Colors.j</description></item><item><title>Juliaのカラー処理のためのパッケージ</title><link>https://freshrimpsushi.github.io/jp/posts/3599/</link><pubDate>Fri, 17 May 2024 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/3599/</guid><description>概要1 Juliaで色処理のためのパッケージであるColors.jlの機能について紹介する。視覚化パッケージであるPlots.jlを使う場合は</description></item><item><title>Juliaプロットでの色の使用方法</title><link>https://freshrimpsushi.github.io/jp/posts/3598/</link><pubDate>Wed, 15 May 2024 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/3598/</guid><description>概要 Juliaで色を便利に使うためのパッケージにはColors.jlがある。「Plots.jl」という視覚化パッケージを読み込めば一緒に使う</description></item><item><title>Juliaでテキスト出力を装飾する組み込み関数</title><link>https://freshrimpsushi.github.io/jp/posts/3597/</link><pubDate>Mon, 13 May 2024 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/3597/</guid><description>コード 関数 printstyled(文字列; color = 色)を使用すると、出力される関数を装飾できる。キーワード引数 colorの入力としては、シンボル</description></item><item><title>近接交互線形化最小化アルゴリズム (PALM)</title><link>https://freshrimpsushi.github.io/jp/posts/3596/</link><pubDate>Sat, 11 May 2024 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/3596/</guid><description>概要 Jérôme Bolte、Shoham Sabach、Marc Teboulleの論文Proximal Alternating Linearized Minimization for nonconvex and nonsmooth problemsで紹介され</description></item><item><title>近接勾配法</title><link>https://freshrimpsushi.github.io/jp/posts/3595/</link><pubDate>Thu, 09 May 2024 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/3595/</guid><description>定義 1 微分不可能な目的関数$H(\mathbf{x}) : \mathbb{R}^{n} \to \mathbb{R}$が微分可能な関数$f$と微分不可能な関数$g$に分解される</description></item><item><title>サブグラディエント法</title><link>https://freshrimpsushi.github.io/jp/posts/3594/</link><pubDate>Tue, 07 May 2024 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/3594/</guid><description>定義1 目的関数 $f : \mathbb{R}^{n} \to \mathbb{R}$が凸関数だとしよう。点$\mathbf{x}^{(k)}$での$f$のサブグラディエントを$\m</description></item><item><title>サブグラディエント</title><link>https://freshrimpsushi.github.io/jp/posts/3593/</link><pubDate>Sun, 05 May 2024 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/3593/</guid><description>定義 1 2 関数$f : \mathbb{R}^{n} \to \mathbb{R}$に対して、以下を満たす$\mathbf{g} \in \mathbb{R}^{n}$を点$\mathbf</description></item><item><title>交代最適化</title><link>https://freshrimpsushi.github.io/jp/posts/3592/</link><pubDate>Fri, 03 May 2024 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/3592/</guid><description>定義 多変数の目的関数を最適化するとき、一つの変数だけを最適化し、変数ごとに交互に実行することを交互最適化alternating optimiz</description></item><item><title>近接最小化アルゴリズム</title><link>https://freshrimpsushi.github.io/jp/posts/3591/</link><pubDate>Wed, 01 May 2024 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/3591/</guid><description>定義1 目的関数 $f : \mathbb{R}^{n} \to \mathbb{R}^{n}$に対する最適化問題を解く時、プロキシマルオペレータを繰り返し適用して最適解 $\mathb</description></item><item><title>近接作用素</title><link>https://freshrimpsushi.github.io/jp/posts/3590/</link><pubDate>Mon, 29 Apr 2024 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/3590/</guid><description>定義1 ベクトル空間 $X$のノルムを$\left\| \cdot \right\|_{X}$とする。関数$f : X \to \mathbb{R}$に対する プロキシマ</description></item><item><title>潜在変数と潜在空間</title><link>https://freshrimpsushi.github.io/jp/posts/3589/</link><pubDate>Sat, 27 Apr 2024 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/3589/</guid><description>定義 データ集合$X \subset \mathbb{R}^{n}$が与えられているとする。このデータ集合を定義域とする関数をエンコーダーという。 $$ \begin{align*} f : X &amp;amp;\to</description></item><item><title>物理学における一般化座標とは何ですか？</title><link>https://freshrimpsushi.github.io/jp/posts/3588/</link><pubDate>Thu, 25 Apr 2024 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/3588/</guid><description>定義1 自由度が$n$の粒子系の座標を、(1)束縛条件と関係ない(2)互いに独立である$n$個の変数で表したものを一般化座標generaliz</description></item><item><title>物理学における制約条件とは？</title><link>https://freshrimpsushi.github.io/jp/posts/3587/</link><pubDate>Tue, 23 Apr 2024 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/3587/</guid><description>定義 粒子や、粒子系が幾何学的に限られた領域（特定の曲線や曲面など）の中だけで動く時、それを拘束運動constrained motionと言い、</description></item><item><title>物理学における自由度とは?</title><link>https://freshrimpsushi.github.io/jp/posts/3586/</link><pubDate>Sun, 21 Apr 2024 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/3586/</guid><description>定義 粒子系全体の座標の中でお互いに独立している座標の数を自由度degree of freedomという。 説明 簡単に言うと、自由度とは粒子系を表現す</description></item><item><title>微分演算子とシンボル</title><link>https://freshrimpsushi.github.io/jp/posts/3585/</link><pubDate>Fri, 19 Apr 2024 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/3585/</guid><description>定義1 自然数 $m \in \mathbb{N}$に対して、微分演算子differential operatorとは、次のような写像 $P$を意味する。 $$ \begin{equation}</description></item><item><title>ポリハーモニック関数</title><link>https://freshrimpsushi.github.io/jp/posts/3584/</link><pubDate>Wed, 17 Apr 2024 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/3584/</guid><description>定義 $\Delta = \nabla^{2}$をラプラシアンと呼ぼう。自然数$k \in \mathbb{N}$に対して、$\Delta ^{k}$をポリハーモニック</description></item><item><title>バイハーモニック関数</title><link>https://freshrimpsushi.github.io/jp/posts/3583/</link><pubDate>Mon, 15 Apr 2024 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/3583/</guid><description>定義1 $\Delta = \nabla^{2}$をラプラシアンと呼ぼう。$\Delta ^{2}$をバイハーモニックオペレーター又はバイラプラシアンという。以</description></item><item><title>파이썬에서 운영체제 확인하는 방법</title><link>https://freshrimpsushi.github.io/jp/posts/3582/</link><pubDate>Sat, 13 Apr 2024 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/3582/</guid><description>コード platform.system()で確認できる。 &amp;gt;&amp;gt;&amp;gt; import platform &amp;gt;&amp;gt;&amp;gt; platform.system() &amp;#39;Windows&amp;#39; # Windows의 경우 &amp;gt;&amp;gt;&amp;gt; platform.system() &amp;#39;Linux&amp;#39; # Ubuntu의 경우 関連リンク オペレーティング</description></item><item><title>파이썬에서 PC 이름 얻는 방법</title><link>https://freshrimpsushi.github.io/jp/posts/3581/</link><pubDate>Thu, 11 Apr 2024 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/3581/</guid><description>コード os.getloginで取得できる。 &amp;gt;&amp;gt;&amp;gt; import os &amp;gt;&amp;gt;&amp;gt; os.getlogin() &amp;#39;rydbr&amp;#39; 関連情報 オペレーティングシステムを確認 platform.system() PCユーザー名を確認 os.getlogin PC名を確認 socket.gethostname() 環境 OS: Windows11 Version:</description></item><item><title>球面座標系</title><link>https://freshrimpsushi.github.io/jp/posts/3580/</link><pubDate>Tue, 09 Apr 2024 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/3580/</guid><description>定義 1 座標空間のある点$p$の座標を「原点と$p$との間の距離$r$」と「原点と$p$を結んだ線が$z-$軸の正の方向と作る角度$\thet</description></item><item><title>3次元空間のメビウスの帯の座標写像</title><link>https://freshrimpsushi.github.io/jp/posts/3579/</link><pubDate>Sun, 07 Apr 2024 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/3579/</guid><description>定義1 座標チャートマッピング $\mathbf{x}$で表される面は、メビウスの帯と呼ばれる。 $$ \mathbf{x}(\theta, v) = (\cos \theta, \sin \theta, 0) + v(\textstyle \sin\frac{\theta}{2}\cos\theta, \sin\frac{\theta}{2}\sin\theta, \cos\frac{\theta}{2}) $$ $$ \textstyle -\pi \lt \theta \lt \pi, \quad -\frac{1}{2}</description></item><item><title>座標空間、デカルト座標系</title><link>https://freshrimpsushi.github.io/jp/posts/3578/</link><pubDate>Fri, 05 Apr 2024 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/3578/</guid><description>定義 座標平面と数直線を座標平面の原点で会って直交するように描かれたものを座標空間coordinate spaceと言う。この時、座標平面と直交</description></item><item><title>極座標系</title><link>https://freshrimpsushi.github.io/jp/posts/3577/</link><pubDate>Wed, 03 Apr 2024 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/3577/</guid><description>定義 座標平面上の点の座標を、「点が原点から離れた距離$r$」と「点と原点を結んだ線が$x$軸と作る角度$\theta$」で表現することを極座</description></item><item><title>座標平面の定義</title><link>https://freshrimpsushi.github.io/jp/posts/3576/</link><pubDate>Mon, 01 Apr 2024 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/3576/</guid><description>定義 二つの垂直線を$0$で交わるように直交する形で描いたものを座標平面coordinate planeと呼ぶ。これらの線は軸axisと言われる</description></item><item><title>直線の定義</title><link>https://freshrimpsushi.github.io/jp/posts/3575/</link><pubDate>Sat, 30 Mar 2024 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/3575/</guid><description>定義 直線上の各点を実数に対応させたものを数直線という。 説明 名前が数直線なのに常に水平に描く理由は、垂直な線ではなく、数の直線だからだ。 通常、</description></item><item><title>測地線座標写像のガウス曲率</title><link>https://freshrimpsushi.github.io/jp/posts/3574/</link><pubDate>Thu, 28 Mar 2024 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/3574/</guid><description>定理1 測地線座標写像の$\mathbf{x} : U \to \mathbb{R}^{3}$のメトリック行列は以下のとおりだ。 $$ \left[ g_{ij} \right] = \begin{bmatrix} 1 &amp;amp; 0 \\ 0 &amp;amp; h^{2}</description></item><item><title>測地線座標パッチマッピングとクリストッフェル記号</title><link>https://freshrimpsushi.github.io/jp/posts/3573/</link><pubDate>Tue, 26 Mar 2024 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/3573/</guid><description>定理1 $$ \left[ g_{ij} \right] = \begin{bmatrix} 1 &amp;amp; 0 \\ 0 &amp;amp; h^{2} \end{bmatrix} \quad (h \gt 0) $$ つまり、$\mathbf{x}$のクリストッフェル記号は以下の通りで、下記のもの以外はすべて$0</description></item><item><title>Juliaでk-平均群集化する方法</title><link>https://freshrimpsushi.github.io/jp/posts/3572/</link><pubDate>Sun, 24 Mar 2024 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/3572/</guid><description>説明 k-平均クラスタリングは、与えられた$n$個のデータを$k$個のグループに分けるクラスタリングアルゴリズムです。Juliaでは、Clus</description></item><item><title>1/(1+x^2)の積分</title><link>https://freshrimpsushi.github.io/jp/posts/3570/</link><pubDate>Wed, 20 Mar 2024 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/3570/</guid><description>公式 定積分 $$ \int_{-\infty}^{\infty} \dfrac{1}{1+x^{2}}dx = \pi $$ 不定積分 $$ \int \dfrac{1}{1+x^{2}}dx = \tan^{-1} x + C $$ $C$は積分定数だ。 証明 定積分 $x = \tan \theta$で置換しよう。すると、積分範囲は$\dis</description></item><item><title>三角関数の微分法</title><link>https://freshrimpsushi.github.io/jp/posts/3569/</link><pubDate>Mon, 18 Mar 2024 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/3569/</guid><description>公式1 三角関数の導関数は次の通り。 $$ \begin{align*} \dfrac{d}{dx} \sin x &amp;amp;= \cos x \qquad &amp;amp; \dfrac{d}{dx} \csc x &amp;amp;= -\csc x \cot x \\[1em] \dfrac{d}{dx} \cos x &amp;amp;= - \sin x \qquad &amp;amp; \dfrac{d}{dx} \sec x &amp;amp;= \sec x \tan x \\[1em] \dfrac{d}{dx} \tan x &amp;amp;= \sec^{2} x \qquad &amp;amp; \dfrac{d}{dx} \cot x &amp;amp;= -\csc^{2} x \end{align*} $$</description></item><item><title>1-cos(x)/xの極限</title><link>https://freshrimpsushi.github.io/jp/posts/3568/</link><pubDate>Sat, 16 Mar 2024 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/3568/</guid><description>式 $$ \lim \limits_{x \to 0} \dfrac{1 - \cos x}{x} = 0 $$ 証明 $$ \begin{align*} \lim \limits_{x \to 0} \dfrac{1 - \cos x}{x} &amp;amp;= \lim \limits_{x \to 0} \dfrac{1 - \cos x}{x} \dfrac{1 + \cos x}{1 + \cos x} \\ &amp;amp;= \lim \limits_{x \to 0} \dfrac{1 - \cos^{2} x}{x(1+\cos x)} \\ &amp;amp;= \lim \limits_{x \to 0} \dfrac{\sin^{2}x}{x(1+\cos x)} \\ &amp;amp;= \lim \limits_{x \to 0} \dfrac{\sin x}{x} \dfrac{\sin x}{1+\cos</description></item><item><title>sin(x)/xの極限</title><link>https://freshrimpsushi.github.io/jp/posts/3567/</link><pubDate>Thu, 14 Mar 2024 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/3567/</guid><description>公式 $$ \lim \limits_{x \to 0} \dfrac{\sin x}{x} = 1 $$ 証明 半径が $1$ の扇形 $OAB$ が与えられたとする。点 $B$ から線分 $\overline{OA}$ に下ろした垂線の足を $H$ とする。そして、線分 $\overline{OB}$ と $\overline{OA}$ を延長して交わ</description></item><item><title>周波数と振動数とは？</title><link>https://freshrimpsushi.github.io/jp/posts/3566/</link><pubDate>Tue, 12 Mar 2024 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/3566/</guid><description>定義 単位時間当たりの振動回数を振動数frequencyと呼ぶ。 説明 周波数は振動数と同じ言葉だ。単位は$\mathrm{Hz}$[ヘルツ]であ</description></item><item><title>Pythonにおける復元抽出と非復元抽出の方法</title><link>https://freshrimpsushi.github.io/jp/posts/3565/</link><pubDate>Sun, 10 Mar 2024 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/3565/</guid><description>コード Pythonで復元・非復元抽出をする方法はnumpyの関数np.random.choice()を使えばいい。 random.choice(a, size=None, replace=True, p=None) a: 一次元配列か整数</description></item><item><title>1/x^pの積分可能性</title><link>https://freshrimpsushi.github.io/jp/posts/3564/</link><pubDate>Fri, 08 Mar 2024 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/3564/</guid><description>定理 関数$f(x) = \dfrac{1}{x^{p}}$の積分可能性は次の通りである。 $x \in (0,1]$の場合、$p \lt 1$ならば、$f$は積分可</description></item><item><title>データサイエンスにおける次元削減</title><link>https://freshrimpsushi.github.io/jp/posts/3563/</link><pubDate>Wed, 06 Mar 2024 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/3563/</guid><description>定義 データセット$X \subset \mathbb{R}^{n}$が与えられたとする。$m \lt n$に対して、次のようなマッピングを次元削減dimension</description></item><item><title>TensorFlow-Kerasでシーケンスモデル、関数型APIでMLPを定義してトレーニングする方法</title><link>https://freshrimpsushi.github.io/jp/posts/3562/</link><pubDate>Mon, 04 Mar 2024 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/3562/</guid><description>概要 TensorFlowでは、Kerasを使用して簡単にニューラルネットワークを定義することができます。以下では、Sequential()と</description></item><item><title>Pythonのコマンドライン解析モジュールargparse</title><link>https://freshrimpsushi.github.io/jp/posts/3561/</link><pubDate>Sat, 02 Mar 2024 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/3561/</guid><description>説明 argparseはPythonの標準ライブラリの一つで、コマンドラインから渡された引数を扱うのに役立つ。sys.argvを使って入力引数</description></item><item><title>Pythonファイル実行時に引数を渡す方法</title><link>https://freshrimpsushi.github.io/jp/posts/3560/</link><pubDate>Thu, 29 Feb 2024 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/3560/</guid><description>コード Pythonファイルを実行する時に、入力引数を渡したいなら、Pythonファイルのパスを入力して、その後ろにスペースで区切って入力すれ</description></item><item><title>Juliaで画像のサイズと解像度を調整する方法</title><link>https://freshrimpsushi.github.io/jp/posts/3559/</link><pubDate>Tue, 27 Feb 2024 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/3559/</guid><description>コード サイズ plot(x, y, size=(600,400)) Juliaでは、図のサイズは size オプションで設定する。Tuple{Integer, Integer} 型で入力する必要があり、各整数はそれぞれ</description></item><item><title>Juliaでグラフィックスに矢印を描く方法</title><link>https://freshrimpsushi.github.io/jp/posts/3558/</link><pubDate>Sun, 25 Feb 2024 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/3558/</guid><description>コード plot!([x1, x2], [y1, y2], arrow=:true) このコードは、プロット上に点$(x1, y1)$から点$(x2, y2)$までの矢印を描く。当然ながら、矢印の先端は終点$(x2</description></item><item><title>箱ひげ図とは何か？</title><link>https://freshrimpsushi.github.io/jp/posts/3557/</link><pubDate>Fri, 23 Feb 2024 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/3557/</guid><description>定義1 データの中央値median、第1四分位数first quartile、第3四分位数third quartile、最大値maximum、最小</description></item><item><title>Juliaで3Dプロットのカメラ位置を調整する方法</title><link>https://freshrimpsushi.github.io/jp/posts/3556/</link><pubDate>Wed, 21 Feb 2024 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/3556/</guid><description>説明 線グラフやヒートマップのような2次元の図とは異なり、3次元の空間に描いた図はどの方向から見るかによって姿が異なるよ。3D図の視点はcam</description></item><item><title>Juliaでランダムシードを固定する方法</title><link>https://freshrimpsushi.github.io/jp/posts/3555/</link><pubDate>Mon, 19 Feb 2024 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/3555/</guid><description>説明1 Juliaでは、ランダムシードは以下のように固定する。 seed!([rng=default_rng()], seed) -&amp;gt; rng seed!([rng=default_rng()]) -&amp;gt; rng 入力変数rngはランダムナンバージェネレータの略で、乱数を抽出する</description></item><item><title>Python matplotlibでボックスプロットを描く方法</title><link>https://freshrimpsushi.github.io/jp/posts/3554/</link><pubDate>Sat, 17 Feb 2024 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/3554/</guid><description>説明 plt.boxplot()でボックスプロットを描くことができる。デフォルト設定で描くと、何の色もない白いボックスに黒い線だけ表示されるか</description></item><item><title>Juliaでボックスプロットを描く方法</title><link>https://freshrimpsushi.github.io/jp/posts/3553/</link><pubDate>Thu, 15 Feb 2024 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/3553/</guid><description>日本語訳 説明 ボックスプロットを描くには、統計的可視化パッケージであるStatsPlots.jlを使用する必要がある。 boxplot([data], labels=[label]) コード using StatsPlots x = rand(0:100, 100) y</description></item><item><title>ブラウン運動の超函数的導関数は白色雑音である</title><link>https://freshrimpsushi.github.io/jp/posts/3552/</link><pubDate>Tue, 13 Feb 2024 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/3552/</guid><description>要約 ブラウン運動の超関数的導関数は白色雑音である。 説明 ブラウン運動$B_{t}$は、伝統的な意味での導関数が存在しない。したがって、次のよう</description></item><item><title>Python matplotlibで望む任意の位置にサブプロットを描画するか、重ねて描画する方法</title><link>https://freshrimpsushi.github.io/jp/posts/3551/</link><pubDate>Sun, 11 Feb 2024 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/3551/</guid><description>概要 plt.subplotやgridspecを使えば、グリッドを基にした簡単または複雑なレイアウトでサブプロットを描くことができる。本文では</description></item><item><title>Python matplotlibで複雑なレイアウトのサブプロットを描く方法</title><link>https://freshrimpsushi.github.io/jp/posts/3550/</link><pubDate>Fri, 09 Feb 2024 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/3550/</guid><description>概要 基本的にplt.subplot(nrows, ncols, index)やplt.subplots(nrows, ncols)でグリッド形式のサブプロッ</description></item><item><title>Python matplotlibでサブプロットを描く方法</title><link>https://freshrimpsushi.github.io/jp/posts/3549/</link><pubDate>Wed, 07 Feb 2024 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/3549/</guid><description>概要 一つのfigureに複数の図を描く方法をいくつか紹介する。以下の方法はシンプルなレイアウトを描く方法で、より複雑なレイアウトを描く方法は</description></item><item><title>신호의 교차상관함수</title><link>https://freshrimpsushi.github.io/jp/posts/3548/</link><pubDate>Mon, 05 Feb 2024 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/3548/</guid><description>定義1 アナログ信号 エネルギー信号 $f \in L^{2}(\mathbb{R})$に関して、次のように定義された$f \star g$を$f$と$g$の相互相関関</description></item><item><title>EasyDict: 辞書の便利な使用のためのPythonパッケージ</title><link>https://freshrimpsushi.github.io/jp/posts/3547/</link><pubDate>Sat, 03 Feb 2024 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/3547/</guid><description>概要1 辞書を便利に使用できるようにするeasydictパッケージを紹介する。パッケージ内のEasyDictを使用すると、辞書の値valueを</description></item><item><title>L²空間</title><link>https://freshrimpsushi.github.io/jp/posts/3546/</link><pubDate>Thu, 01 Feb 2024 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/3546/</guid><description>定義1 二乗収束する数列の集合を$\ell^{2}(\mathbb{N})$と表記する。 $$ \ell^{2}(\mathbb{N}) := \left\{ \left\{ x_{k} \right\}_{k \in \mathbb{N}} : x \in \mathbb{C}(\text{or } \mathbb{R}),\quad \sum\limits_{k \in \mathbb{N}} \left| x_{k} \right|^{2} \lt \infty \right\} $$ 簡単</description></item><item><title>신호의 자기상관함수</title><link>https://freshrimpsushi.github.io/jp/posts/3545/</link><pubDate>Tue, 30 Jan 2024 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/3545/</guid><description>定義1 アナログ信号 エネルギー信号 $f \in L^{2}(\mathbb{R})$に関して、次のように定義された$R_{f}$を自己相関関数auto-</description></item><item><title>신호의 에너지와 평균 전력</title><link>https://freshrimpsushi.github.io/jp/posts/3544/</link><pubDate>Sun, 28 Jan 2024 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/3544/</guid><description>定義1 アナログ信号 アナログ信号 $f \in L^{p}$のエネルギーenergy $E_{f}$を次のように定義する。 $$ E_{f} := \int_{-\infty}^{\infty} \left| f(t) \right|^{2} dt = \left\| f \right\|_{2}^{2} $$ $E_{f} \lt \i</description></item><item><title>아날로그신호와 디지털신호의 정의</title><link>https://freshrimpsushi.github.io/jp/posts/3543/</link><pubDate>Fri, 26 Jan 2024 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/3543/</guid><description>定義1 $L^{p}$ 空間の元をアナログ信号analog signalまたは連続時間信号continuous-time signalと呼ぶ。 $$ f \in L^{p}(\mathbb{R}) $$ $\ell^{p}$ 空間の</description></item><item><title>絶対連続実関数</title><link>https://freshrimpsushi.github.io/jp/posts/3542/</link><pubDate>Wed, 24 Jan 2024 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/3542/</guid><description>定義1 関数 $f : \mathbb{R} \to \mathbb{R} (\text{または } \mathbb{C})$ が与えられたとする。$f$が任意の有限個の互いに素な区間 $(a_{i}, b_{i}) \subset [a,b]$に対しても以下の条件を</description></item><item><title>リプシッツ連続</title><link>https://freshrimpsushi.github.io/jp/posts/3541/</link><pubDate>Mon, 22 Jan 2024 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/3541/</guid><description>定義1 ２つの距離空間 $(X, d_{X})$、$(Y, d_{Y})$について、関数 $f : X \to Y$が与えられているとする。全ての $x_{1}, x_{2} \in X$に対して次が成</description></item><item><title>同次関数</title><link>https://freshrimpsushi.github.io/jp/posts/3540/</link><pubDate>Sat, 20 Jan 2024 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/3540/</guid><description>定義 定数$a$と関数$f$に対して、次を満たす$k \in \mathbb{N}$が存在する場合、$f$を$k$次の同次関数$k$次の同次関数と言う</description></item><item><title>三角関数の語源 (さんかくかんすうのごげん)</title><link>https://freshrimpsushi.github.io/jp/posts/3538/</link><pubDate>Tue, 16 Jan 2024 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/3538/</guid><description>説明 数学では、三角関数trigonometric functionと呼ばれるものがある。$\sin, \cos, \tan, \sinh, \sec, \dots$などがそれにあたる。こ</description></item><item><title>逆三角関数のarc表記法の由来</title><link>https://freshrimpsushi.github.io/jp/posts/3537/</link><pubDate>Sun, 14 Jan 2024 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/3537/</guid><description>定義 三角関数の逆関数を逆三角関数inverse trigonometric functionと呼ぶ。 説明 逆三角関数は基本的に使われる逆関数の表記方法として$\sin^{</description></item><item><title>平面に入る／平面から出るベクトルの表記法</title><link>https://freshrimpsushi.github.io/jp/posts/3536/</link><pubDate>Fri, 12 Jan 2024 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/3536/</guid><description>定義 上の図のように、観察者の立場からすると、平面を抜けて入るinto the plane方向を$\otimes$と表す。逆に、平面を抜けて出るout</description></item><item><title>曲線座標系におけるベクトル関数のカール</title><link>https://freshrimpsushi.github.io/jp/posts/3535/</link><pubDate>Wed, 10 Jan 2024 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/3535/</guid><description>定理 曲線座標系でのベクトル関数$\mathbf{F}=\mathbf{F}(q_{1},q_{2},q_{3})=F_{1}\hat{\ma</description></item><item><title>多変数関数の極値に対する一階必要条件</title><link>https://freshrimpsushi.github.io/jp/posts/3534/</link><pubDate>Mon, 08 Jan 2024 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/3534/</guid><description>定理1 関数 $f : \mathbb{R}^{n} \to \mathbb{R}$が与えられたとしよう。もし $x^{\ast}$がローカルオプティマイザーlocal optimizer</description></item><item><title>多変数関数の極値に対する2階の必要/十分条件</title><link>https://freshrimpsushi.github.io/jp/posts/3533/</link><pubDate>Sat, 06 Jan 2024 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/3533/</guid><description>要旨1 関数 $f : \mathbb{R}^{n} \to \mathbb{R}$ が与えられたとしよう。$\nabla f$, $\nabla^{2}f$ をそれぞれ $f$の勾配とヘシアンとする。 2次必要条件 $x^{\ast}$ が 局所最適解であり、$x^</description></item><item><title>テイラーの定理の剰余項</title><link>https://freshrimpsushi.github.io/jp/posts/3532/</link><pubDate>Thu, 04 Jan 2024 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/3532/</guid><description>定義1 2 $k$番の微分可能な関数$f$について、下のように定義される$P_{k}$を点$a$での$f$のテイラー多項式と言う。 $$ P_{k} (x) := f(a) + f^{\prime}(a)</description></item><item><title>割線法: ニュートン法</title><link>https://freshrimpsushi.github.io/jp/posts/3530/</link><pubDate>Sun, 31 Dec 2023 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/3530/</guid><description>定義1 2 目的関数 $J : \mathbb{R}^{n} \to \mathbb{R}$を最適化する問題で、次の繰り返しアルゴリズムをニュートン法Newton&amp;rsquo;s meth</description></item><item><title>適応的な学習率: AdaGrad, RMSProp, Adam</title><link>https://freshrimpsushi.github.io/jp/posts/3529/</link><pubDate>Fri, 29 Dec 2023 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/3529/</guid><description>概要1 2 勾配降下法で使用されるアダプティブラーニングレートと、これを適用したモデルであるAdaGrad、RMSProp、Adamについて説明</description></item><item><title>勾配降下における運動量法</title><link>https://freshrimpsushi.github.io/jp/posts/3528/</link><pubDate>Wed, 27 Dec 2023 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/3528/</guid><description>概要1 2 勾配降下法におけるモーメンタム技術は、パラメーターを更新する際に以前の勾配もすべて使用することである。これが本質であり、これに尽きる</description></item><item><title>PyTorchでモジュラー演算</title><link>https://freshrimpsushi.github.io/jp/posts/3527/</link><pubDate>Mon, 25 Dec 2023 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/3527/</guid><description>説明 モジュラー演算とは、剰余演算とも呼ばれ、$a$を$b$で割った時の余りを返す関数のことを言う。PyTorchには二つの関数がある。 torch.remainder(a,b) torch.fmod(a,b) ど</description></item><item><title>マシンラーニングにおけるオンライン学習とバッチ学習とは？</title><link>https://freshrimpsushi.github.io/jp/posts/3526/</link><pubDate>Sat, 23 Dec 2023 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/3526/</guid><description>概要 オンライン学習、バッチ学習、ミニバッチ学習について説明する。これらの名前や違いが実際に重要なわけではなく、大したことではないと言いたい。</description></item><item><title>LaTeXでmaketitleを使用してタイトルを作成する際、日付を表示しない方法</title><link>https://freshrimpsushi.github.io/jp/posts/3525/</link><pubDate>Thu, 21 Dec 2023 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/3525/</guid><description>説明 $\LaTeX$の\maketitleでタイトルを作る時、日付を表示させないにはどうしたらいいか？多くの人が直感的に\date{2023</description></item><item><title>LaTeXドキュメントにコードブロックを挿入する方法</title><link>https://freshrimpsushi.github.io/jp/posts/3524/</link><pubDate>Tue, 19 Dec 2023 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/3524/</guid><description>説明 $\TeX$ 文書にコードブロックを追加したい時に使える二つの方法がある。 $\text{\textbackslash begin}\{\text{verbatim}\} &amp;hellip; \text{\textbackslash end}\{\text{verbatim}\}$ $\text{\textbackslash begin}\{\text{lstlisting}\} &amp;hellip; \text{\textbackslash end}\{\text{lstlisting}\}$ この中で、verbatimは基本機能でパッケージの使用</description></item><item><title>磁場の記号にBを使う理由</title><link>https://freshrimpsushi.github.io/jp/posts/3523/</link><pubDate>Sun, 17 Dec 2023 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/3523/</guid><description>질문 電磁気学は文字通り電場 $\mathbf{E}$と磁場 $\mathbf{B}$について学ぶ学問です。電磁気学を学ぶ中で一度は次のような疑問</description></item><item><title>データ拡張とは何か？</title><link>https://freshrimpsushi.github.io/jp/posts/3522/</link><pubDate>Fri, 15 Dec 2023 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/3522/</guid><description>定義 データセット $X = \left\{ x \in \mathbb{R}^{n} \right\}$が与えられたとしよう。適当な変換 $f_{i} : \mathbb{R}^{n} \to \mathbb{R}^{n}$を使って $X$から $X^</description></item><item><title>モンテカルロ法</title><link>https://freshrimpsushi.github.io/jp/posts/3521/</link><pubDate>Wed, 13 Dec 2023 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/3521/</guid><description>定義 簡単に言うと、モンテカルロ法Monte-Carlo methodは、ランダムにたくさん試すことだ。 説明 シンプルな方法だが、たくさん試すこと</description></item><item><title>二重根号展開公式</title><link>https://freshrimpsushi.github.io/jp/posts/3519/</link><pubDate>Sat, 09 Dec 2023 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/3519/</guid><description>公式 $a \gt b$の時、 $$ \sqrt{a + b \pm 2\sqrt{a b}} = \sqrt{a} \pm \sqrt{b} $$ 説明 ルートが二つあるから解くのがめっちゃ難しそうだけど、完全平方形で直接解けるんだ。 例 $$ \begin{align*} \sqrt{13 - 2\sqrt{12}} &amp;amp;=</description></item><item><title>棄却サンプリング</title><link>https://freshrimpsushi.github.io/jp/posts/3518/</link><pubDate>Thu, 07 Dec 2023 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/3518/</guid><description>概要 1 棄却サンプリングは、与えられた分布 $p$からサンプリングするのが難しいときに、サンプリングしやすい提案分布 $q$を利用して $p$に従う</description></item><item><title>有界関数</title><link>https://freshrimpsushi.github.io/jp/posts/3517/</link><pubDate>Tue, 05 Dec 2023 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/3517/</guid><description>定義1 関数$f : X \to \mathbb{R}^{n}$について、次を満たす定数$M \in \mathbb{R}$が存在する場合、$f$を有界bound</description></item><item><title>중요도 샘플링</title><link>https://freshrimpsushi.github.io/jp/posts/3516/</link><pubDate>Sun, 03 Dec 2023 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/3516/</guid><description>概要1 重要度サンプリングはモンテカルロ法の一つで、有限和で積分（期待値）を近似するときに使える一種のサンプリングトリックだ。 ビルドアップ 標準</description></item><item><title>モンテカルロ積分</title><link>https://freshrimpsushi.github.io/jp/posts/3515/</link><pubDate>Fri, 01 Dec 2023 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/3515/</guid><description>概要 モンテカルロ積分は、与えられた関数の積分を計算するのが困難な場合に使用される数値的近似方法の一つである。次のような状況を想定しよう。与え</description></item><item><title>条件付き期待値は偏差の二乗和を最小化する</title><link>https://freshrimpsushi.github.io/jp/posts/3514/</link><pubDate>Wed, 29 Nov 2023 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/3514/</guid><description>要約 次のことが成り立つ。 $$ \begin{equation} E\left[ Y | X \right] = \argmin_{f(X)} E\left[ (Y - f(X))^{2} | X \right] \end{equation} $$ $$ \begin{equation} E\left[ Y | X \right] = \argmin_{f(X)} E\left[ (Y - f(X))^{2} \right] \end{equation} $$ 証明 (1) $$ \begin{align*} &amp;amp; \argmin_{f(X)} E\left[ (Y - f(X))^{2} | X \right] \\ &amp;amp;= \argmin_{f(X)} E\left[ Y^{2} - 2Yf(X) + f(X)^{2} |</description></item><item><title>双線形形式とエルミート形式</title><link>https://freshrimpsushi.github.io/jp/posts/3513/</link><pubDate>Mon, 27 Nov 2023 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/3513/</guid><description>定義1 二つのベクトル$\mathbf{x}, \mathbf{u} \in \mathbb{R}^{n}$が次のようであるとする。 $$ \mathbf{x}=\begin{bmatrix} x_{1} \\ x_{2} \\ \vdots \\ x_{n} \end{bmatrix},\quad \mathbf{u}^{T} = \begin{bmatrix} u_{1} &amp;amp; u_{2} &amp;amp; \cdots &amp;amp;</description></item><item><title>二次形式</title><link>https://freshrimpsushi.github.io/jp/posts/3512/</link><pubDate>Sat, 25 Nov 2023 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/3512/</guid><description>定義 $V$を$n$次元のベクトル空間と呼ぶ。与えられた定数$a_{ij} \in \mathbb{R}(\text{or } \mathbb{C})$について、以下の2次斉次関数$A : V \to</description></item><item><title>双曲型偏微分方程式</title><link>https://freshrimpsushi.github.io/jp/posts/3511/</link><pubDate>Thu, 23 Nov 2023 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/3511/</guid><description>定義1 2 $u(t,x)$に関する以下の2階線型偏微分方程式を考える。 $$ Au_{tt} + Bu_{tx} + Cu_{xx} + Du_{t} + Eu_{x} + Fu + G = 0\qquad (ABC \ne 0) \tag{1} $$ ここで、係数$A, \dots, G$は$(</description></item><item><title>正規分布のエントロピー</title><link>https://freshrimpsushi.github.io/jp/posts/3510/</link><pubDate>Tue, 21 Nov 2023 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/3510/</guid><description>定理 正規分布 $N(\mu, \sigma^{2})$のエントロピーは（自然対数を選んだ場合）以下の通りです。 $$ H = \dfrac{1}{2} \ln (2\pi e \sigma^{2}) = \ln \sqrt{2\pi e \sigma^{2}} $$ 多変量正規分布 $N_{p}(\boldsymbol{\mu}, \</description></item><item><title>LaTeXでサブプロットを描く方法</title><link>https://freshrimpsushi.github.io/jp/posts/3509/</link><pubDate>Sun, 19 Nov 2023 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/3509/</guid><description>説明 \includegraphics[width=0.5\textwidth]{WJSN_Luda.jpg} \includegraphics[width=0.5\textwidth]{WJSN_Yeoreum.jpg} \\ \includegraphics[width=\textwidth]{IVE_Rei.jpg} 写真を一行に複数配置するのは、実際には上のようにサイズを調整するだけでもできる。 各サブプロットにキャプションを付け、それらを一つ</description></item><item><title>LaTeXを使用してPDFファイルにGIFアニメーションを挿入する方法</title><link>https://freshrimpsushi.github.io/jp/posts/3508/</link><pubDate>Fri, 17 Nov 2023 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/3508/</guid><description>説明 animate パッケージの \animategraphicsを使うと、GIFのようなアニメーションを挿入してPDFファイルをコンパイルすることができま</description></item><item><title>Pythonで既存の出力を新しい出力で置き換えて進行状況を表示する方法</title><link>https://freshrimpsushi.github.io/jp/posts/3507/</link><pubDate>Wed, 15 Nov 2023 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/3507/</guid><description>日本語訳 コードが実行される時、進行状況を知りたいなら、print()関数を使うと以下のように表示される。 for i in range(1,6): print(f&amp;#34;진행</description></item><item><title>可測関数に収束する単純関数列の存在性</title><link>https://freshrimpsushi.github.io/jp/posts/3506/</link><pubDate>Mon, 13 Nov 2023 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/3506/</guid><description>定理1 $(X, \mathcal{E})$を可測空間とする。 $f : X \to [0, \infty]$が可測関数であれば、以下を満たす単関数の列$\left\{ \phi_{n} \</description></item><item><title>Pythonで'False'、'True'などの文字列をBool型に変換する方法</title><link>https://freshrimpsushi.github.io/jp/posts/3505/</link><pubDate>Sat, 11 Nov 2023 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/3505/</guid><description>コード Pythonで文字列&amp;quot;False&amp;quot;をbool型のFalseに変えたい場合、最初に試すべきコードは下のようである。 &amp;gt;&amp;gt;&amp;gt;</description></item><item><title>3次元空間での内積とは?</title><link>https://freshrimpsushi.github.io/jp/posts/3504/</link><pubDate>Thu, 09 Nov 2023 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/3504/</guid><description>定義 二つの3次元ベクトル$\mathbf{A} = (A_{x}, A_{y}, A_{z})$と$\mathbf{B} = (B_{x}, B_{y}, B_{z})$の内積を以下のように定義する。</description></item><item><title>Python Matplotlib 基礎＆カスタムラインスタイル</title><link>https://freshrimpsushi.github.io/jp/posts/3503/</link><pubDate>Tue, 07 Nov 2023 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/3503/</guid><description>基本設定1 &amp;lsquo;-&amp;rsquo; もしくは &amp;lsquo;solid&amp;rsquo;: 実線 &amp;lsquo;&amp;ndash;&amp;rsquo; もしくは &amp;lsquo;dashed&amp;rsquo;: 破線 &amp;lsquo;-.&amp;rsquo; もしくは &amp;lsquo;dashdot&amp;rsquo;: 一点鎖線 &amp;lsquo;:&amp;rsquo; もしくは &amp;lsquo;dotted&amp;rsquo;: 点線 &amp;rsquo;none&amp;rsquo;, &amp;lsquo;None&amp;rsquo;, &amp;rsquo; &amp;lsquo;, もしくは &amp;lsquo;&amp;rsquo;: 線なし linestyle または lsで線のスタイルを設定できる</description></item><item><title>PyTorchでモデルを保存する際の「RuntimeError: Parent directory does not exists」エラーの解決法</title><link>https://freshrimpsushi.github.io/jp/posts/3502/</link><pubDate>Sun, 05 Nov 2023 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/3502/</guid><description>エラー PyTorchでモデルや重みを保存する時、確かに存在するパスであるにも関わらず、次のようなエラーに遭遇することがある。 &amp;gt;&amp;gt;&amp;gt; print(&amp;#34;Is exists path?: &amp;#34;, os.path.exists(directory)) Is exists</description></item><item><title>Juliaで軸、目盛りなどをすべて無くしてきれいに出力する方法</title><link>https://freshrimpsushi.github.io/jp/posts/3501/</link><pubDate>Fri, 03 Nov 2023 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/3501/</guid><description>コード Plots.jlは基本的にグリッド、目盛り、軸、カラーバーなどを全て出力するけど、これらをなくしてすっきりと描きたい場合は、次のオプシ</description></item><item><title>Juliaでメッシュグリッドを作成する方法</title><link>https://freshrimpsushi.github.io/jp/posts/3500/</link><pubDate>Wed, 01 Nov 2023 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/3500/</guid><description>概要 PythonやMATLABで使うmeshgrid()のような直接的な関数はない。グリッド上での関数値だけを求めたいなら、格子を作らないも</description></item><item><title>Juliaにおける多変数関数のブロードキャス팅</title><link>https://freshrimpsushi.github.io/jp/posts/3499/</link><pubDate>Mon, 30 Oct 2023 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/3499/</guid><description>概要 Juliaで多変数関数をブロードキャストする方法を紹介する。Pythonなどで行うように、meshgridを作成する方法もあるし、各次元</description></item><item><title>ルジンの定理</title><link>https://freshrimpsushi.github.io/jp/posts/3498/</link><pubDate>Sat, 28 Oct 2023 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/3498/</guid><description>定理 1 $f : E \to \mathbb{R}$を測度集合上に定義されたルベーグ可測関数としよう。そうすると、与えられた正の数$\epsilon \gt 0$に</description></item><item><title>エゴロフの定理</title><link>https://freshrimpsushi.github.io/jp/posts/3497/</link><pubDate>Thu, 26 Oct 2023 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/3497/</guid><description>定理1 2 測度空間 $( X , \mathcal{E} , \mu)$ が与えられ、$\mu$ は有限測度とする。 可測関数のシーケンス $\left\{ f_{n} : X \to \mathbb{R} \right\}_{n \in \mathbb{N}}$ が$X$ においてある可測関数 $f$ にほ</description></item><item><title>熱方程式の数値解：有限差分法</title><link>https://freshrimpsushi.github.io/jp/posts/3495/</link><pubDate>Sun, 22 Oct 2023 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/3495/</guid><description>数値的な熱方程式の解1 以下のような一次元の熱方程式が与えられたとしよう。 $$ \dfrac{\partial u}{\partial t} = \dfrac{\partial^{2} u}{\partial x^{2}},\qquad 0\le x \le 1,\quad t \ge 0 \tag{1} $$ 目標は、有限の点でこのソリューショ</description></item><item><title>有限差分法</title><link>https://freshrimpsushi.github.io/jp/posts/3494/</link><pubDate>Fri, 20 Oct 2023 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/3494/</guid><description>定義1 2 有限差分法finite difference method, FDMは、微分係数を計算する数値的方法で、短い間隔での平均変化率で微分係数を近似するものである。 説明 公式導</description></item><item><title>放射状関数</title><link>https://freshrimpsushi.github.io/jp/posts/3493/</link><pubDate>Wed, 18 Oct 2023 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/3493/</guid><description>定義1 $\mathbb{R}^{n}$で定義された関数が以下を満たす場合、レイディアルと呼ばれる。 $$ f(R\mathbf{x}) = f(\mathbf{x}) \text{ for all rotations } R $$ 説明 直訳すると放射型</description></item><item><title>高速フーリエ変換アルゴリズム</title><link>https://freshrimpsushi.github.io/jp/posts/3492/</link><pubDate>Mon, 16 Oct 2023 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/3492/</guid><description>概要1 離散フーリエ変換DFTは、数式的な定義に従って計算すると、$\mathcal{O}(N^{2})$の時間計算量を持ちますが、以下で説明</description></item><item><title>数学における弱いと強いの意味</title><link>https://freshrimpsushi.github.io/jp/posts/3491/</link><pubDate>Sat, 14 Oct 2023 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/3491/</guid><description>説明 数学では、weakとは「（論理的に）緩い、あまり厳密ではない、あまり厳格ではない」という意味を持っている。もっともっと少ないということは</description></item><item><title>Julia Plotsで軸、軸名、目盛り、目盛り値の色を指定する方法</title><link>https://freshrimpsushi.github.io/jp/posts/3490/</link><pubDate>Thu, 12 Oct 2023 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/3490/</guid><description>定理 Plots.jlで軸と目盛りの色を指定する関連キーワードは以下の通りである。 キーワード名 機能 guidefontcolor 軸名の色を指定 foreground_color_border, fgcolor_border 軸の色を指定 foreground_color_axis, fgcolor_axis 目盛りの</description></item><item><title>Flux-PyTorch-TensorFlowチートシート</title><link>https://freshrimpsushi.github.io/jp/posts/3489/</link><pubDate>Tue, 10 Oct 2023 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/3489/</guid><description>概要 Flux、PyTorch、TensorFlowで同じ機能をするコードを整理します。 Julia-MATLAB-Python-R チートシート Fluxについて次のような環境とします。</description></item><item><title>PyTorchでのテンソルソートに関する関数</title><link>https://freshrimpsushi.github.io/jp/posts/3487/</link><pubDate>Fri, 06 Oct 2023 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/3487/</guid><description>torch.sort() torch.sort()にテンソルを入力すると、ソートされた値とインデックスが返される。 1次元テンソル &amp;gt;&amp;gt;&amp;gt; x = torch.tensor([1, 3, -2, 5, -1, 7, 0]) &amp;gt;&amp;gt;&amp;gt; values, indices = torch.sort(x) &amp;gt;&amp;gt;&amp;gt; values tensor([-2,</description></item><item><title>PyTorchで「RuntimeError: Boolean value of Tensor with more than one value is ambiguous」エラーの解決方法</title><link>https://freshrimpsushi.github.io/jp/posts/3486/</link><pubDate>Wed, 04 Oct 2023 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/3486/</guid><description>エラー 損失関数nn.MESLoss()を使用したとき、次のようなエラーが発生した。 RuntimeError Traceback (most recent call last) &amp;lt;ipython-input-75-8c6e9ea829d4&amp;gt; in &amp;lt;module&amp;gt; ----&amp;gt; 1 nn.MSELoss(y_pred, y) 2 frames /usr/local/lib/python3.8/dist-packages/torch/nn/_reduction.py in legacy_get_string(size_average, reduce, emit_warning) 33 reduce = True 34 ---&amp;gt; 35 if size_average</description></item><item><title>PyTorchで与えられた分布からランダムサンプリングする方法</title><link>https://freshrimpsushi.github.io/jp/posts/3485/</link><pubDate>Mon, 02 Oct 2023 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/3485/</guid><description>概要 PyTorchで与えられた分布からランダムサンプリングする方法を紹介する。ベータ、ベルヌーイ、コーシー、ガンマ、パレート、ポアソンなど多</description></item><item><title>딥러닝에서 레이어란?</title><link>https://freshrimpsushi.github.io/jp/posts/3484/</link><pubDate>Sat, 30 Sep 2023 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/3484/</guid><description>定義 ディープラーニングにおいて、線形変換 $L^{mn} : \mathbb{R}^{n} \to \mathbb{R}^{m}$はレイヤーlayer, 層と呼ばれる。 一般化 ディープラーニングに</description></item><item><title>二次曲線</title><link>https://freshrimpsushi.github.io/jp/posts/3480/</link><pubDate>Fri, 22 Sep 2023 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/3480/</guid><description>定義 変数が二つある二次方程式で表される下記のような平面曲線を二次曲線という。 放物線 楕円 双曲線 説明 円は楕円の特別な場合と見なせるため、一般的に</description></item><item><title>円の定義</title><link>https://freshrimpsushi.github.io/jp/posts/3479/</link><pubDate>Wed, 20 Sep 2023 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/3479/</guid><description>定義 平面上のある点 $O$からの距離が一定の点の集合を円circleという。 点 $O$を円の中心centerという。 中心からの距離 $r$を半径r</description></item><item><title>双曲線</title><link>https://freshrimpsushi.github.io/jp/posts/3478/</link><pubDate>Mon, 18 Sep 2023 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/3478/</guid><description>定義 1 平面上の異なる二点$F$、$F^{\prime}$までの距離の差が一定の点の集合を双曲線hyperbolaという。 $\\ $ 二点$F$、$F</description></item><item><title>放物線</title><link>https://freshrimpsushi.github.io/jp/posts/3477/</link><pubDate>Sat, 16 Sep 2023 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/3477/</guid><description>定義 1 平面上の一点$F$と、それを通らない一直線$l$に対して、$F$までの距離と$l$までの距離が同じ点の集合を放物線parabolaとい</description></item><item><title>측도론과 확률론 요약 정리</title><link>https://freshrimpsushi.github.io/jp/posts/3473/</link><pubDate>Fri, 08 Sep 2023 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/3473/</guid><description>概要 測度論と確率論を学んだ人向けの定義と概念の要約資料です。迅速な復習と定義の参照のために作成されました。 測度論 代数 $X \ne \varnothin</description></item><item><title>物理学における座標変換</title><link>https://freshrimpsushi.github.io/jp/posts/3472/</link><pubDate>Wed, 06 Sep 2023 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/3472/</guid><description>定義 二つの$n$次元座標系$(x_{1}, \dots, x_{n})$と$(x_{1}^{\prime}, \dots, x_{n}^{\prime})$の間の以下の</description></item><item><title>物理学における座標系と座標</title><link>https://freshrimpsushi.github.io/jp/posts/3471/</link><pubDate>Mon, 04 Sep 2023 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/3471/</guid><description>定義 それぞれの$n$次元の組$(a_{1}, a_{2}, \dots, a_{n})$が$n$次元空間の一点を一意に定めるとき、これらの$n$次元の組の集合を($n</description></item><item><title>放物線型偏微分方程式</title><link>https://freshrimpsushi.github.io/jp/posts/3470/</link><pubDate>Sat, 02 Sep 2023 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/3470/</guid><description>定義1 2 以下の$u(t,x)$についての2階線形偏微分方程式について考えよう。 $$ Au_{tt} + Bu_{tx} + Cu_{xx} + Du_{t} + Eu_{x} + Fu + G = 0\qquad (ABC \ne 0) \tag{1} $$ ここで、係数$A, \dots,</description></item><item><title>楕円形の偏微分方程式</title><link>https://freshrimpsushi.github.io/jp/posts/3469/</link><pubDate>Thu, 31 Aug 2023 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/3469/</guid><description>定義1 2 下記の2次線形偏微分方程式について考えよう $u(x,y)$． $$ Au_{xx} + Bu_{xy} + Cu_{yy} + Du_{x} + Eu_{y} + Fu + G = 0\qquad (ABC \ne 0) \tag{1} $$ ここで、係数$A, \dots, G$は$(</description></item><item><title>対数関数に関する不等式 1-1/x &lt; log x &lt; x-1</title><link>https://freshrimpsushi.github.io/jp/posts/3468/</link><pubDate>Tue, 29 Aug 2023 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/3468/</guid><description>定理 底が$e$の対数関数について、次の不等式が成立する。 $$ 1 - \dfrac{1}{x} \le \ln x \le x - 1\qquad \text{ for } x \gt 0 $$ 証明1 Part 1. $\ln x \le x - 1$ $f(x) = x - 1 - \ln x$と置く。</description></item><item><title>相互情報</title><link>https://freshrimpsushi.github.io/jp/posts/3467/</link><pubDate>Sun, 27 Aug 2023 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/3467/</guid><description>양자정보이론 [ 펼치기 · 접기 ] 양자계산 논리게이트 비트 · 부울함수(AND · OR · NOT · XOR · NAND · NOR · CNOT · CCNOT · CSWAP) · 범용 게이트 · 복제 함수 · 사영 · 주입 양자게</description></item><item><title>古典情報理論における相対エントロピー（クルバック・ライブラー発散）とは？</title><link>https://freshrimpsushi.github.io/jp/posts/3466/</link><pubDate>Fri, 25 Aug 2023 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/3466/</guid><description>양자정보이론 [ 펼치기 · 접기 ] 양자계산 논리게이트 비트 · 부울함수(AND · OR · NOT · XOR · NAND · NOR · CNOT · CCNOT · CSWAP) · 범용 게이트 · 복제 함수 · 사영 · 주입 양자게</description></item><item><title>古典情報理論における条件付きエントロピーとは？</title><link>https://freshrimpsushi.github.io/jp/posts/3465/</link><pubDate>Wed, 23 Aug 2023 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/3465/</guid><description>양자정보이론 [ 펼치기 · 접기 ] 양자계산 논리게이트 비트 · 부울함수(AND · OR · NOT · XOR · NAND · NOR · CNOT · CCNOT · CSWAP) · 범용 게이트 · 복제 함수 · 사영 · 주입 양자게</description></item><item><title>古典情報理論における結合エントロピーとは？</title><link>https://freshrimpsushi.github.io/jp/posts/3464/</link><pubDate>Mon, 21 Aug 2023 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/3464/</guid><description>양자정보이론 [ 펼치기 · 접기 ] 양자계산 논리게이트 비트 · 부울함수(AND · OR · NOT · XOR · NAND · NOR · CNOT · CCNOT · CSWAP) · 범용 게이트 · 복제 함수 · 사영 · 주입 양자게</description></item><item><title>Juliaで与えられた分布からランダムにサンプリングする方法</title><link>https://freshrimpsushi.github.io/jp/posts/3463/</link><pubDate>Sat, 19 Aug 2023 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/3463/</guid><description>正規分布 julia&amp;gt; using Distributions julia&amp;gt; d = Normal() Normal{Float64}(μ=0.0, σ=1.0) julia&amp;gt; rand(d, 2,2) 2×2 Matrix{Float64}: -0.618228 -0.729552 -1.46898 -0.636276 一様分布 julia&amp;gt; rand(Uniform(), 2,2) 2×2 Matrix{Float64}: 0.0952175 0.348995 0.845515 0.768308 julia&amp;gt; rand(Uniform(1,10), 2,2) 2×</description></item><item><title>Juliaでランダムに抽出する方法</title><link>https://freshrimpsushi.github.io/jp/posts/3462/</link><pubDate>Thu, 17 Aug 2023 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/3462/</guid><description>説明1 Juliaでランダム抽出する関数は以下の通りです。 rand([rng=default_rng()], [S], [dims...]) rngはRandom Number Generatorの略で、乱数抽出アルゴリズムを指定しま</description></item><item><title>Gmail（イーメール）でTeXコードを書く方法</title><link>https://freshrimpsushi.github.io/jp/posts/3461/</link><pubDate>Tue, 15 Aug 2023 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/3461/</guid><description>説明 Chrome拡張プログラムである TeX for Gmail をインストールすると、GmailでTeXコードを使うことができるよ。もちろん、ネイバーのウェールブ</description></item><item><title>CSSカラー名札</title><link>https://freshrimpsushi.github.io/jp/posts/3459/</link><pubDate>Wed, 09 Aug 2023 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/3459/</guid><description>개요1 名前のある140以上のCSSカラーパレットです。 코드</description></item><item><title>TikZを用いた普遍性質図の描画方法</title><link>https://freshrimpsushi.github.io/jp/posts/3458/</link><pubDate>Mon, 07 Aug 2023 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/3458/</guid><description>コード \documentclass[12pt]{article} \usepackage{tikz} \begin{document} $$ \begin{tikzpicture}[node distance=3.5cm, auto] \node (Vtimes) {$V_{1} \times V_{2}$}; \node (Votimes) [right of = Vtimes] {$V_{1} \otimes V_{2}$}; \node (W) [node distance=2.0cm, below of = Votimes] {$W$}; \draw[-&amp;gt;] (Vtimes) to node [swap] {$\phi$} (W); \draw[-&amp;gt;] (Vtimes) to node {$f$} (Votimes); \draw[-&amp;gt;, dashed] (Votimes) to node {$\psi$} (W); \end{tikzpicture} $$ \end{document} 설명 $\KaTeX$はまだ図</description></item><item><title>線形変換の和とスカラー倍の行列表現</title><link>https://freshrimpsushi.github.io/jp/posts/3457/</link><pubDate>Sat, 05 Aug 2023 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/3457/</guid><description>定理 $V, W$を与えられた順序基底 $\beta, \gamma$がある有限次元 ベクトル空間だとしよう。そして、$T, U : V \to W$だとしよう。すると、次が成り立</description></item><item><title>特殊ユニタリ群</title><link>https://freshrimpsushi.github.io/jp/posts/3454/</link><pubDate>Sun, 30 Jul 2023 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/3454/</guid><description>定義 行列式が$1$の$n \times n$ユニタリ行列の集合を$\operatorname{SU}(n)$と記し、$n$次の特殊ユニタリ群special</description></item><item><title>直交群</title><link>https://freshrimpsushi.github.io/jp/posts/3453/</link><pubDate>Fri, 28 Jul 2023 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/3453/</guid><description>定義 $n \times n$ 直交行列の集合を$\operatorname{O}(n)$と表記し、$n$次元直交群orthogonal group in dimension $n$という。 $$ \operatorname{O}(n) :=</description></item><item><title>特殊線型群</title><link>https://freshrimpsushi.github.io/jp/posts/3452/</link><pubDate>Wed, 26 Jul 2023 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/3452/</guid><description>定義 行列式が$1$の$n \times n$行列の集合を$\mathrm{SL}(n, \mathbb{R})$と表記し、$n$次特殊線形群special linear</description></item><item><title>ユニタリ群</title><link>https://freshrimpsushi.github.io/jp/posts/3451/</link><pubDate>Mon, 24 Jul 2023 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/3451/</guid><description>定義 $n \times n$ ユニタリ行列の集合を$\mathrm{U}(n)$と表記し、$n$次のユニタリ群unitary group of degree $n$という。 $$ \mathrm{U}(n) := \left\{ n \times n \text{</description></item><item><title>一般線型群</title><link>https://freshrimpsushi.github.io/jp/posts/3450/</link><pubDate>Sat, 22 Jul 2023 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/3450/</guid><description>定義 実数の可逆な $n \times n$ 行列の集合を $\mathrm{GL}(n, \mathbb{R})$ または $\mathrm{GL}_{n}(\mathbb{R})$ と表記し、$n$次の一般線型群general linear group of degree $n$と呼ぶ。 $$ \mathrm{GL}(n, \mathbb{R}) := \left\{ n \times n \text{ invertible matrix} \right\} = M_{n</description></item><item><title>畳み込みニューラルネットワーク</title><link>https://freshrimpsushi.github.io/jp/posts/3449/</link><pubDate>Thu, 20 Jul 2023 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/3449/</guid><description>定義 畳み込み層、プーリング層、活性化関数などを適切に合成した合成関数を畳み込みニューラルネットワークconvolutional neural network, CNNと言</description></item><item><title>딥러닝에서 풀링층이란?</title><link>https://freshrimpsushi.github.io/jp/posts/3448/</link><pubDate>Tue, 18 Jul 2023 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/3448/</guid><description>概要 人工ニューラルネットワークにおけるプーリング層とは、入力データの次元を局所的な単位で減らす関数を指す。指定された領域で最大値のみを残すも</description></item><item><title>多層パーセプトロン(MLP), 全結合ニューラルネットワーク(FCNN)</title><link>https://freshrimpsushi.github.io/jp/posts/3447/</link><pubDate>Sun, 16 Jul 2023 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/3447/</guid><description>定義 $L_{i} : \mathbb{R}^{n_{i}} \to \mathbb{R}^{n_{i+1}}$を完全連結層とする。$\sigma : \mathbb{R} \to \mathbb{R}$を活性化関数とする。これ</description></item><item><title>微分幾何学における全角変動</title><link>https://freshrimpsushi.github.io/jp/posts/3232/</link><pubDate>Fri, 14 Jul 2023 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/3232/</guid><description>定義1 正則曲線$\gamma$を一部が単純曲線で、周期が$L$の閉曲線とする。$\mathbf{Z}(t)$を$\gamma$に沿う連続ベク</description></item><item><title>アイリスデータセット</title><link>https://freshrimpsushi.github.io/jp/posts/3445/</link><pubDate>Wed, 12 Jul 2023 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/3445/</guid><description>概要1 Irisデータセットは、アメリカの植物学者、エドガーアンダーソンEdgar Andersonによって作成され、イギリスの統計学者、ロナル</description></item><item><title>MNIST Database</title><link>https://freshrimpsushi.github.io/jp/posts/3444/</link><pubDate>Mon, 10 Jul 2023 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/3444/</guid><description>概要1 $$ \includegraphics[height=20em]{https://upload.wikimedia.org/wikipedia/commons/2/27/MnistExamples.png} $$ MNISTmodified national institute of standards and technology データベースとは、アメリカの高校生と人口調査局の職員の数字の手書き文字に関するデータセットを指す。一般に[エムニス</description></item><item><title>Juliaのさまざまなディープラーニングフレームワーク</title><link>https://freshrimpsushi.github.io/jp/posts/3443/</link><pubDate>Sat, 08 Jul 2023 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/3443/</guid><description>概要 最終更新日: 2022年11月22日 Juliaの代表的なディープラーニングフレームワークには、Flux.jlがある。これと一緒に、他のフレ</description></item><item><title>自動微分</title><link>https://freshrimpsushi.github.io/jp/posts/3442/</link><pubDate>Thu, 06 Jul 2023 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/3442/</guid><description>정의1 2 自動微分automatic differentiationとは、コンピュータプログラムのコードで定義された関数の導関数を求める方法のこ</description></item><item><title>Juliaで高速フーリエ変換（FFT）を使用する方法</title><link>https://freshrimpsushi.github.io/jp/posts/3440/</link><pubDate>Sun, 02 Jul 2023 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/3440/</guid><description>概要 1 2 The Fastest Fourier Transform in the West(FFTW)は、マサチューセッツ工科大学(MIT)のMatteo FrigoとSteven G. Johnsonによって</description></item><item><title>Juliaで基本データ型を変更する方法</title><link>https://freshrimpsushi.github.io/jp/posts/3439/</link><pubDate>Fri, 30 Jun 2023 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/3439/</guid><description>概要 機械学習のような分野では、計算速度の向上やメモリの節約などのために、64ビットの実数ではなく32ビットの実数が配列のデータ型として使われ</description></item><item><title>マシンラーニングにおけるワンホットエンコーディングとは？</title><link>https://freshrimpsushi.github.io/jp/posts/3438/</link><pubDate>Wed, 28 Jun 2023 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/3438/</guid><description>定義 集合$X \subset \mathbb{R}^{n}$の部分集合$X_{i}$が次を満たすとしよう。 $$ X = X_{1} \cup \cdots \cup X_{N} \quad \text{and} \quad X_{i} \cap X_{j} = \varnothing \enspace (i \ne j) $$ $\beta = \left\{ e_{1},</description></item><item><title>情報理論における符号化と復号化</title><link>https://freshrimpsushi.github.io/jp/posts/3437/</link><pubDate>Mon, 26 Jun 2023 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/3437/</guid><description>양자정보이론 [ 펼치기 · 접기 ] 양자계산 논리게이트 비트 · 부울함수(AND · OR · NOT · XOR · NAND · NOR · CNOT · CCNOT · CSWAP) · 범용 게이트 · 복제 함수 · 사영 · 주입 양자게</description></item><item><title>行列のアダマール積</title><link>https://freshrimpsushi.github.io/jp/posts/3436/</link><pubDate>Sat, 24 Jun 2023 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/3436/</guid><description>定義 二つの行列 $A, B \in M_{m \times n}$のアダマール積Hadamard product $A \odot B$を以下のように定義する。 $$ A \odot B = \begin{bmatrix} a_{11} &amp;amp; \cdots &amp;amp; a_{1n} \\ \vdots &amp;amp; \ddots &amp;amp; \vdots \\ a_{m1} &amp;amp; \cdots &amp;amp; a_{mn}</description></item><item><title>줄리아에서 U-net 구현하기</title><link>https://freshrimpsushi.github.io/jp/posts/3434/</link><pubDate>Tue, 20 Jun 2023 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/3434/</guid><description>概要 論文「U-Net: Convolutional networks for Biomedical Image Segmentation」で紹介されたU-Netをジュリアで実装する方法を紹介する。 コード U-Netの構造は</description></item><item><title>クローン不可能定理</title><link>https://freshrimpsushi.github.io/jp/posts/3433/</link><pubDate>Sun, 18 Jun 2023 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/3433/</guid><description>양자정보이론 [ 펼치기 · 접기 ] 양자계산 논리게이트 비트 · 부울함수(AND · OR · NOT · XOR · NAND · NOR · CNOT · CCNOT · CSWAP) · 범용 게이트 · 복제 함수 · 사영 · 주입 양자게</description></item><item><title>ソルベイ-キタエフの定理</title><link>https://freshrimpsushi.github.io/jp/posts/3432/</link><pubDate>Fri, 16 Jun 2023 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/3432/</guid><description>定理1 $\mathcal{G}$を特殊ユニタリ群 $\operatorname{SU}(2)$の（逆元について閉じている）有限部分集合だとしよ</description></item><item><title>量子フレドキン/CSWAPゲート</title><link>https://freshrimpsushi.github.io/jp/posts/3431/</link><pubDate>Wed, 14 Jun 2023 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/3431/</guid><description>양자정보이론 [ 펼치기 · 접기 ] 양자계산 논리게이트 비트 · 부울함수(AND · OR · NOT · XOR · NAND · NOR · CNOT · CCNOT · CSWAP) · 범용 게이트 · 복제 함수 · 사영 · 주입 양자게</description></item><item><title>量子トポロジー/CCNOTゲート</title><link>https://freshrimpsushi.github.io/jp/posts/3430/</link><pubDate>Mon, 12 Jun 2023 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/3430/</guid><description>양자정보이론 [ 펼치기 · 접기 ] 양자계산 논리게이트 비트 · 부울함수(AND · OR · NOT · XOR · NAND · NOR · CNOT · CCNOT · CSWAP) · 범용 게이트 · 복제 함수 · 사영 · 주입 양자게</description></item><item><title>交換ゲート</title><link>https://freshrimpsushi.github.io/jp/posts/3429/</link><pubDate>Sat, 10 Jun 2023 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/3429/</guid><description>양자정보이론 [ 펼치기 · 접기 ] 양자계산 논리게이트 비트 · 부울함수(AND · OR · NOT · XOR · NAND · NOR · CNOT · CCNOT · CSWAP) · 범용 게이트 · 복제 함수 · 사영 · 주입 양자게</description></item><item><title>量子CNOTゲート</title><link>https://freshrimpsushi.github.io/jp/posts/3428/</link><pubDate>Thu, 08 Jun 2023 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/3428/</guid><description>양자정보이론 [ 펼치기 · 접기 ] 양자계산 논리게이트 비트 · 부울함수(AND · OR · NOT · XOR · NAND · NOR · CNOT · CCNOT · CSWAP) · 범용 게이트 · 복제 함수 · 사영 · 주입 양자게</description></item><item><title>パウリ・ゲート</title><link>https://freshrimpsushi.github.io/jp/posts/3427/</link><pubDate>Tue, 06 Jun 2023 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/3427/</guid><description>양자정보이론 [ 펼치기 · 접기 ] 양자계산 논리게이트 비트 · 부울함수(AND · OR · NOT · XOR · NAND · NOR · CNOT · CCNOT · CSWAP) · 범용 게이트 · 복제 함수 · 사영 · 주입 양자게</description></item><item><title>位相ゲート</title><link>https://freshrimpsushi.github.io/jp/posts/3426/</link><pubDate>Sun, 04 Jun 2023 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/3426/</guid><description>양자정보이론 [ 펼치기 · 접기 ] 양자계산 논리게이트 비트 · 부울함수(AND · OR · NOT · XOR · NAND · NOR · CNOT · CCNOT · CSWAP) · 범용 게이트 · 복제 함수 · 사영 · 주입 양자게</description></item><item><title>アダマールゲート</title><link>https://freshrimpsushi.github.io/jp/posts/3425/</link><pubDate>Fri, 02 Jun 2023 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/3425/</guid><description>日本語訳 양자정보이론 [ 펼치기 · 접기 ] 양자계산 논리게이트 비트 · 부울함수(AND · OR · NOT · XOR · NAND · NOR · CNOT · CCNOT · CSWAP) · 범용 게이트 · 복제 함수 · 사영 · 주</description></item><item><title>量子ゲートと量子回路</title><link>https://freshrimpsushi.github.io/jp/posts/3424/</link><pubDate>Wed, 31 May 2023 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/3424/</guid><description>양자정보이론 [ 펼치기 · 접기 ] 양자계산 논리게이트 비트 · 부울함수(AND · OR · NOT · XOR · NAND · NOR · CNOT · CCNOT · CSWAP) · 범용 게이트 · 복제 함수 · 사영 · 주입 양자게</description></item><item><title>キュービット：量子コンピュータにおける情報の基本単位</title><link>https://freshrimpsushi.github.io/jp/posts/3423/</link><pubDate>Mon, 29 May 2023 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/3423/</guid><description>양자정보이론 [ 펼치기 · 접기 ] 양자계산 논리게이트 비트 · 부울함수(AND · OR · NOT · XOR · NAND · NOR · CNOT · CCNOT · CSWAP) · 범용 게이트 · 복제 함수 · 사영 · 주입 양자게</description></item><item><title>ビット: 古典的なコンピュータにおける情報の基本単位</title><link>https://freshrimpsushi.github.io/jp/posts/3422/</link><pubDate>Sat, 27 May 2023 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/3422/</guid><description>양자정보이론 [ 펼치기 · 접기 ] 양자계산 논리게이트 비트 · 부울함수(AND · OR · NOT · XOR · NAND · NOR · CNOT · CCNOT · CSWAP) · 범용 게이트 · 복제 함수 · 사영 · 주입 양자게</description></item><item><title>テンソル積の行列表現</title><link>https://freshrimpsushi.github.io/jp/posts/3419/</link><pubDate>Sun, 21 May 2023 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/3419/</guid><description>ビルドアップ1 有限次元 ベクトル空間 $V, V^{\prime}$に対してそれぞれ基底 $\mathcal{V}, {\mathcal{V}}^{\prime}$を選ぼう。すれ</description></item><item><title>行列のクロネッカー積</title><link>https://freshrimpsushi.github.io/jp/posts/3418/</link><pubDate>Fri, 19 May 2023 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/3418/</guid><description>定義1 二つの行列 $A = [a_{ij}] \in M_{m \times n}$, $B \in M_{p \times q}$のクロネッカー積Kronecker productを次のように定義する。 $$ A \otimes B := \begin{bmatrix} a_{11} B &amp;amp; \cdots &amp;amp; a_{1n} B</description></item><item><title>線形変換のテンソル積</title><link>https://freshrimpsushi.github.io/jp/posts/3417/</link><pubDate>Wed, 17 May 2023 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/3417/</guid><description>ビルドアップ1 有限次元のベクトル空間$V_{1}, V_{2}, W_{1}, W_{2}$と線形変換$\phi_{1} : V_{1} \to W_{1}$、$\phi_{2} : V_{2} \to W</description></item><item><title>テンソル積の普遍的性質</title><link>https://freshrimpsushi.github.io/jp/posts/3416/</link><pubDate>Mon, 15 May 2023 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/3416/</guid><description>ビルドアップ1 有限次元のベクトル空間 $V_{1}, \dots, V_{r}$が与えられたとしよう。$n_{i} = \dim V_{i}$で、各ベクトル空間の基底を選ぶと、以下</description></item><item><title>テンソル積の積ベクトル</title><link>https://freshrimpsushi.github.io/jp/posts/3415/</link><pubDate>Sat, 13 May 2023 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/3415/</guid><description>ビルドアップ 便宜上、複素数空間$\mathbb{C}$について展開するが、$\mathbb{R}$や任意のベクトル空間でも構わない。 有限集合</description></item><item><title>ベクトル空間のテンソル積</title><link>https://freshrimpsushi.github.io/jp/posts/3414/</link><pubDate>Thu, 11 May 2023 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/3414/</guid><description>ビルドアップ1 便宜上、複素数空間$\mathbb{C}$について展開するが、$\mathbb{R}$や任意のベクトル空間でも関係ない。 有限集</description></item><item><title>影と注入</title><link>https://freshrimpsushi.github.io/jp/posts/3413/</link><pubDate>Tue, 09 May 2023 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/3413/</guid><description>定義1 $n \in \mathbb{N}$と$0 \le i \le n$に対して、次の関数 $p_{i}$ $$ \begin{align*} p_{i} : &amp;amp;\left\{ 0, 1 \right\}^{n+1} \to \left\{ 0, 1 \right\}^{n} \\ &amp;amp; (a_{0}, \dots, a_{n}) \mapsto (a_{0}, \dots, a_{i-1}, a_{i+1}, \dots, a_{n}) \end{align*} $$ を射影projec</description></item><item><title>フレドキン・CSWAPゲート</title><link>https://freshrimpsushi.github.io/jp/posts/3412/</link><pubDate>Sun, 07 May 2023 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/3412/</guid><description>定義1 以下のようなベクトル値ブール関数をフレドキンゲートFredkin gateと呼ぶ。 $$ F : \left\{ 0, 1 \right\}^{3} \to \left\{ 0, 1 \right\}^{3} $$ $$ F (a, b, c) = \Big(a, (\lnot a \land b) \lor (a \land</description></item><item><title>トッフォリ/CCNOTゲート</title><link>https://freshrimpsushi.github.io/jp/posts/3411/</link><pubDate>Fri, 05 May 2023 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/3411/</guid><description>定義1 以下のようなベクトル値ブール関数をトフォリゲートToffoli gateと呼ぶ。 $$ T : \left\{ 0, 1 \right\}^{3} \to \left\{ 0, 1 \right\}^{3} $$ $$ T (a, b, c) = (a, b, (a \land b) \oplus c) $$ $\text{CCNOT}$</description></item><item><title>制御NOT(CNOT)ゲート</title><link>https://freshrimpsushi.github.io/jp/posts/3410/</link><pubDate>Wed, 03 May 2023 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/3410/</guid><description>양자정보이론 [ 펼치기 · 접기 ] 양자계산 논리게이트 비트 · 부울함수(AND · OR · NOT · XOR · NAND · NOR · CNOT · CCNOT · CSWAP) · 범용 게이트 · 복제 함수 · 사영 · 주입 양자게</description></item><item><title>複製関数</title><link>https://freshrimpsushi.github.io/jp/posts/3409/</link><pubDate>Mon, 01 May 2023 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/3409/</guid><description>양자정보이론 [ 펼치기 · 접기 ] 양자계산 논리게이트 비트 · 부울함수(AND · OR · NOT · XOR · NAND · NOR · CNOT · CCNOT · CSWAP) · 범용 게이트 · 복제 함수 · 사영 · 주입 양자게</description></item><item><title>関数的に完全な集合とは何か？</title><link>https://freshrimpsushi.github.io/jp/posts/3408/</link><pubDate>Sat, 29 Apr 2023 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/3408/</guid><description>定義1 ブール関数の集合$\left\{ f_{k} \right\} = \left\{ f_{k} : \left\{ 0, 1 \right\}^{n_{k}} \to \left\{ 0, 1 \right\} \right\}_{k\in \Gamma}$が与えられたとしよう。$\Gamma$は有限集合だ。任</description></item><item><title>否定論理和、NORゲート</title><link>https://freshrimpsushi.github.io/jp/posts/3407/</link><pubDate>Thu, 27 Apr 2023 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/3407/</guid><description>양자정보이론 [ 펼치기 · 접기 ] 양자계산 논리게이트 비트 · 부울함수(AND · OR · NOT · XOR · NAND · NOR · CNOT · CCNOT · CSWAP) · 범용 게이트 · 복제 함수 · 사영 · 주입 양자게</description></item><item><title>負論理積、NANDゲート</title><link>https://freshrimpsushi.github.io/jp/posts/3406/</link><pubDate>Tue, 25 Apr 2023 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/3406/</guid><description>양자정보이론 [ 펼치기 · 접기 ] 양자계산 논리게이트 비트 · 부울함수(AND · OR · NOT · XOR · NAND · NOR · CNOT · CCNOT · CSWAP) · 범용 게이트 · 복제 함수 · 사영 · 주입 양자게</description></item><item><title>排他的論理和、XORゲート</title><link>https://freshrimpsushi.github.io/jp/posts/3405/</link><pubDate>Sun, 23 Apr 2023 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/3405/</guid><description>양자정보이론 [ 펼치기 · 접기 ] 양자계산 논리게이트 비트 · 부울함수(AND · OR · NOT · XOR · NAND · NOR · CNOT · CCNOT · CSWAP) · 범용 게이트 · 복제 함수 · 사영 · 주입 양자게</description></item><item><title>論理否定、NOTゲート</title><link>https://freshrimpsushi.github.io/jp/posts/3404/</link><pubDate>Fri, 21 Apr 2023 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/3404/</guid><description>양자정보이론 [ 펼치기 · 접기 ] 양자계산 논리게이트 비트 · 부울함수(AND · OR · NOT · XOR · NAND · NOR · CNOT · CCNOT · CSWAP) · 범용 게이트 · 복제 함수 · 사영 · 주입 양자게</description></item><item><title>論理和、ORゲート</title><link>https://freshrimpsushi.github.io/jp/posts/3403/</link><pubDate>Wed, 19 Apr 2023 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/3403/</guid><description>양자정보이론 [ 펼치기 · 접기 ] 양자계산 논리게이트 비트 · 부울함수(AND · OR · NOT · XOR · NAND · NOR · CNOT · CCNOT · CSWAP) · 범용 게이트 · 복제 함수 · 사영 · 주입 양자게</description></item><item><title>論理積、ANDゲート</title><link>https://freshrimpsushi.github.io/jp/posts/3402/</link><pubDate>Mon, 17 Apr 2023 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/3402/</guid><description>양자정보이론 [ 펼치기 · 접기 ] 양자계산 논리게이트 비트 · 부울함수(AND · OR · NOT · XOR · NAND · NOR · CNOT · CCNOT · CSWAP) · 범용 게이트 · 복제 함수 · 사영 · 주입 양자게</description></item><item><title>ブール関数</title><link>https://freshrimpsushi.github.io/jp/posts/3401/</link><pubDate>Sat, 15 Apr 2023 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/3401/</guid><description>양자정보이론 [ 펼치기 · 접기 ] 양자계산 논리게이트 비트 · 부울함수(AND · OR · NOT · XOR · NAND · NOR · CNOT · CCNOT · CSWAP) · 범용 게이트 · 복제 함수 · 사영 · 주입 양자게</description></item><item><title>PyTorchでモデル/テンソルがロードされたデバイスを確認する方法</title><link>https://freshrimpsushi.github.io/jp/posts/3364/</link><pubDate>Thu, 13 Apr 2023 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/3364/</guid><description>コード1 2 get_device()で確認できる。 &amp;gt;&amp;gt;&amp;gt; import torch &amp;gt;&amp;gt;&amp;gt; import torch.nn as nn &amp;gt;&amp;gt;&amp;gt; torch.cuda.is_available() True &amp;gt;&amp;gt;&amp;gt; Device = torch.device(&amp;#34;cuda:0&amp;#34; if torch.cuda.is_available() else &amp;#34;cpu&amp;#34;) # Model &amp;gt;&amp;gt;&amp;gt; model = nn.Sequential(nn.Linear(5,10), nn.ReLU(), nn.Linear(10,10), nn.ReLU(), nn.Linear(10,1)) &amp;gt;&amp;gt;&amp;gt; next(model.parameters()).get_device() -1 &amp;gt;&amp;gt;&amp;gt; model.to(Device) Sequential( (0): Linear(in_features=5, out_features=10, bias=True) (1): ReLU() (2): Linear(in_features=10, out_features=10, bias=True) (3):</description></item><item><title>고전정보이론에서 정보량이란?</title><link>https://freshrimpsushi.github.io/jp/posts/3398/</link><pubDate>Sun, 09 Apr 2023 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/3398/</guid><description>양자정보이론 [ 펼치기 · 접기 ] 양자계산 논리게이트 비트 · 부울함수(AND · OR · NOT · XOR · NAND · NOR · CNOT · CCNOT · CSWAP) · 범용 게이트 · 복제 함수 · 사영 · 주입 양자게</description></item><item><title>線形代数学におけるフラグとは？</title><link>https://freshrimpsushi.github.io/jp/posts/3397/</link><pubDate>Fri, 07 Apr 2023 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/3397/</guid><description>定義1 2 $n$次元 ベクトル空間 $V$の部分空間の列$\left\{ W_{i} \right\}$が以下の式を満たすとき、これをフラッグflagと呼ぶ。</description></item><item><title>ソフトプラス関数とは?</title><link>https://freshrimpsushi.github.io/jp/posts/3396/</link><pubDate>Wed, 05 Apr 2023 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/3396/</guid><description>説明 2001年にDugasらによる論文『Incorporating Second-Order Functional Knowledge for Better Option Pricing』で紹介された。 $x^{+} = \max (0, x)$のなめらかなバージ</description></item><item><title>行列の直和</title><link>https://freshrimpsushi.github.io/jp/posts/3395/</link><pubDate>Mon, 03 Apr 2023 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/3395/</guid><description>定義1 二つの行列 $B \in M_{m\times n}$, $C \in M_{p\times q}$の直和direct sumを次の $(m+p) \times (n+q)$行列 $A$として定義し、$B \oplus C$と表記する。 $$ A = B \oplus C</description></item><item><title>ゼロ行列</title><link>https://freshrimpsushi.github.io/jp/posts/3394/</link><pubDate>Sat, 01 Apr 2023 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/3394/</guid><description>定義 サイズが$m\times n$で、全ての要素が$0$である行列を零行列zero matrixと言い、$O_{m\times n}$または簡単に</description></item><item><title>不変部分空間の直和とその特性多項式</title><link>https://freshrimpsushi.github.io/jp/posts/3393/</link><pubDate>Thu, 30 Mar 2023 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/3393/</guid><description>定理1 $T : V \to V$を有限次元のベクトル空間$V$上の線形変換としよう。$V$が$T$-不変部分空間$W_{i}$たちの直和であると仮定しよう</description></item><item><title>医療画像の断面の種類</title><link>https://freshrimpsushi.github.io/jp/posts/3392/</link><pubDate>Tue, 28 Mar 2023 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/3392/</guid><description>概要 体を分ける平面は、向きによって三つに分けることができる。これらをそれぞれ冠状面、矢状面、横断面という。医療画像を見る時、画像がどの平面に</description></item><item><title>ケイリー・ハミルトンの定理</title><link>https://freshrimpsushi.github.io/jp/posts/3391/</link><pubDate>Sun, 26 Mar 2023 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/3391/</guid><description>定義1 $T : V \to V$を有限次元のベクトル空間上の線形変換$V$とする。$f(t)$を$T$の特性多項式とする。それならば、以下が成り立つ。 $$ f(T)</description></item><item><title>構造的医療画像と機能的医療画像</title><link>https://freshrimpsushi.github.io/jp/posts/3390/</link><pubDate>Fri, 24 Mar 2023 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/3390/</guid><description>構造的画像 人体内部の構造/解剖学的情報を得るために撮影する写真を構造的画像structural imagingと言う。骨折や腫瘍などの病変を確</description></item><item><title>ベクトル空間の巡回部分空間</title><link>https://freshrimpsushi.github.io/jp/posts/3389/</link><pubDate>Wed, 22 Mar 2023 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/3389/</guid><description>定義1 $T : V \to V$をベクトル空間 $V$ 上の線形変換としよう。$\mathbf{v} \ne \mathbf{0} \in V$とする。次の部分空間 $$ W = \span\left( \left\{ \mathbf{v}, T\mathbf{v}, T^{2}\mathbf{v}, \dots \right\} \right) $$ を$\m</description></item><item><title>行列</title><link>https://freshrimpsushi.github.io/jp/posts/3388/</link><pubDate>Mon, 20 Mar 2023 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/3388/</guid><description>定義1 全ての要素が$1$の行列を**$1$行列**matrix of ones, all-ones matrixという。 説明 寿司屋の店主は物理を専攻したのか、work mat</description></item><item><title>べき乗写像の零空間</title><link>https://freshrimpsushi.github.io/jp/posts/3387/</link><pubDate>Sat, 18 Mar 2023 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/3387/</guid><description>定理1 $n$次元 ベクトル空間 上の線形変換 $T : V \to V$が冪零だとする。 $$ T^{p} = T_{0} $$ ここで、$T_{0}$はゼロ変換だ。$N(T)$を $T$の零空</description></item><item><title>直交三角行列は冪零である</title><link>https://freshrimpsushi.github.io/jp/posts/3385/</link><pubDate>Tue, 14 Mar 2023 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/3385/</guid><description>定理1 $n \times n$ 上三角行列 $A$は冪零行列である。 説明 逆は成り立たない。簡単な反例として$A = \begin{bmatrix} 1 &amp;amp; 1 \\ -1 &amp;amp; -1 \end{bmatrix}$の時、</description></item><item><title>全結合層(線形層, 密接続層)</title><link>https://freshrimpsushi.github.io/jp/posts/3384/</link><pubDate>Sun, 12 Mar 2023 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/3384/</guid><description>定義 $L: \mathbb{R}^{n} \to \mathbb{R}^{m}$をレイヤーとする。$\mathbf{W}$を$L$の行列表現とする。$\mathbf{W}$が$0$</description></item><item><title>機械学習における訓練/検証/テストセット</title><link>https://freshrimpsushi.github.io/jp/posts/3382/</link><pubDate>Wed, 08 Mar 2023 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/3382/</guid><description>定義 訓練中に使われるデータセット： モデルのパラメータを最適化するために使われるデータセットをトレーニングセットと言う。 モデルのハイパーパラメ</description></item><item><title>零行列の固有値はゼロのみである</title><link>https://freshrimpsushi.github.io/jp/posts/3381/</link><pubDate>Mon, 06 Mar 2023 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/3381/</guid><description>Proof English Translation: Assume that $T$ is a nilpotent such that $T^{k} = T_{0}$. $T_{0}$ is a zero transformation. Moreover, let&amp;rsquo;s denote $\lambda$ as the eigenvalue of $T$, and the corresponding eigenvector as $\mathbf{v} \in V$. $$ T\mathbf{v} = \lambda \mathbf{v} $$ Taking $T^{k-1}$ on both sides gives us $T^{k-1}(T\mathbf{v}) = T^{k-1}(\lambda \mathbf{v})$. Starting with the left side, we can arrange it as follows. $$ T^{k-1}(T\mathbf{v}) = T^{k}(\mathbf{v}) = T_{0}\mathbf{v}</description></item><item><title>機械学習におけるエンコーダとデコーダ</title><link>https://freshrimpsushi.github.io/jp/posts/3380/</link><pubDate>Sat, 04 Mar 2023 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/3380/</guid><description>定義 データ集合$X \subset \mathbb{R}^{n}$が与えられたとする。機械学習の文脈でエンコーダencoder, 符号化器とは、適当な集合$Z</description></item><item><title>累乗級数の線形変換</title><link>https://freshrimpsushi.github.io/jp/posts/3379/</link><pubDate>Thu, 02 Mar 2023 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/3379/</guid><description>同じく見る 零冪行列</description></item><item><title>2025年春のオマカセ: 君の名は</title><link>https://freshrimpsushi.github.io/jp/posts/3378/</link><pubDate>Tue, 28 Feb 2023 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/3378/</guid><description>紹介 韓国では3月に新しい学期が始まるため、この時期は新しい人々の名前を覚えることが多い。そこで今回は名前に関連したメニューを用意した。 メニュ</description></item><item><title>線形変換の対角化可能性と固有値の重複度、固有空間との関係</title><link>https://freshrimpsushi.github.io/jp/posts/3377/</link><pubDate>Sun, 26 Feb 2023 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/3377/</guid><description>定理1 $T : V \to V$を有限次元ベクトル空間$V$上の線形変換とする。$T$の特性多項式が分解され、$\lambda_{1}, \lambda_{2}, \dots, \lambda</description></item><item><title>Juliaプロットにおける軸のスタイルの変更方法 `framestyle`e`</title><link>https://freshrimpsushi.github.io/jp/posts/3376/</link><pubDate>Fri, 24 Feb 2023 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/3376/</guid><description>##概要1 framestyle 属性を使って図の軸や枠線のスタイルを変更できる。可能なオプションは次の通りだ。 :box :semi :axes :origin :zerolines :grid :none コード デフォルト設定は :axes だ。 using Plots x =</description></item><item><title>合併の生成は生成の和と等しい</title><link>https://freshrimpsushi.github.io/jp/posts/3375/</link><pubDate>Wed, 22 Feb 2023 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/3375/</guid><description>定理1 $S_{1}, S_{2}$をベクトル空間$V$の部分集合としよう。すると、次が成り立つ。 $$ \span(S_{1} \cup S_{2}) = \span(S_{1}) + \span(S_{2}) $$ ここで、$\span$は生成を意味し、$</description></item><item><title>三次元空間におけるトーラスの座標パッチ写像</title><link>https://freshrimpsushi.github.io/jp/posts/3374/</link><pubDate>Mon, 20 Feb 2023 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/3374/</guid><description>公式1 中心からチューブまでの距離が$R$、チューブの直径が$r$のトーラスの座標チャート写像は次のようになる。 $$ \mathbf{x}(u_{1}, u_{2}) = \left( (R + r\cos u_{2})\cos u_{1}, (R + r\cos u_{2})\sin u_{1},</description></item><item><title>직합의 성질</title><link>https://freshrimpsushi.github.io/jp/posts/3373/</link><pubDate>Sat, 18 Feb 2023 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/3373/</guid><description>定理1 $W_{1}, W_{2}, \dots, W_{k}$を有限次元 ベクトル空間 $V$の部分空間とする。次の命題はすべて同値である。 $V = W_{1} \oplus W_{2} \oplus \cdots \oplus W_{k}$ $V = \sum\limit</description></item><item><title>双曲線関数の合成公式</title><link>https://freshrimpsushi.github.io/jp/posts/3372/</link><pubDate>Thu, 16 Feb 2023 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/3372/</guid><description>公式 以下が成り立つ。 $$ c_{1} \cosh x + c_{2} \sinh x = \begin{cases} A\cosh(x + y_{1}) &amp;amp; \text{if } c_{1} \gt c_{2} \\ B e^{x} &amp;amp; \text{if } c_{1} = c_{2} = B \\ C\sinh(x + y_{2}) &amp;amp; \text{if } c_{1} \lt c_{2} \end{cases} $$ $A = \sqrt{c_{2}^{2} - c_{1}^{2}}$ $C = \sqrt{c_{2}^{2} - c_{1}^{2}}$ $y_{1} = \cosh^{-1}\left( \dfrac{c_{1}}{\sqrt{c_{1}^{2} - c_{2}^{2}}} \right) =</description></item><item><title>ベクトル空間における部分空間の和</title><link>https://freshrimpsushi.github.io/jp/posts/3371/</link><pubDate>Tue, 14 Feb 2023 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/3371/</guid><description>定義1 $W_{1}, W_{2}$をベクトル空間$V$の部分空間としよう。$W_{1}$と$W_{2}$の和sumを$W_{1} + W_{2}$と表して、以</description></item><item><title>三角関数の合成公式</title><link>https://freshrimpsushi.github.io/jp/posts/3370/</link><pubDate>Sun, 12 Feb 2023 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/3370/</guid><description>公式 サインへの合成 $$ A \cos \theta + B \sin \theta = C\sin(\theta + \phi) $$ ここに、$C = \sqrt{A^{2} + B^{2}}$、$\phi = \sin^{-1} \left( \dfrac{A}{\sqrt{A^{2} + B^{2}}} \right) = \cos^{-1} \left( \dfrac{B}{\sqrt{A^{2} + B^{2}}} \right)$がある。 コ</description></item><item><title>対角化可能な線形変換の商空間上の変換も対角化可能である</title><link>https://freshrimpsushi.github.io/jp/posts/3369/</link><pubDate>Fri, 10 Feb 2023 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/3369/</guid><description>定理1 $V$を次元 ベクトル空間、$T : V \to V$を線型変換とする。そして$W$を$T$-不変部分空間とする。もし$T$が対角化可能なら、$\o</description></item><item><title>ガウス曲率が負の回転面</title><link>https://freshrimpsushi.github.io/jp/posts/3368/</link><pubDate>Wed, 08 Feb 2023 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/3368/</guid><description>概要1 ガウス曲率が負の回転面について説明する。 説明 回転面の曲率は$K = - \dfrac{r^{\prime \prime}}{r}$なので、$r^{\prime \prime} - a^{2}r = 0$だ</description></item><item><title>線形変換と商空間への写像の特性多項式間の関係</title><link>https://freshrimpsushi.github.io/jp/posts/3367/</link><pubDate>Mon, 06 Feb 2023 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/3367/</guid><description>定理1 $V$を$n$次元 ベクトル空間としよう。$T : V \to V$を線形変換、$W \le V$を$T$-不変部分空間、$T|_{W}$を縮小写像、$\o</description></item><item><title>凸関数の様々な性質</title><link>https://freshrimpsushi.github.io/jp/posts/3366/</link><pubDate>Sat, 04 Feb 2023 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/3366/</guid><description>定理1 全ての凸関数は連続である。 $f$が増加する凸関数であり、$g$が凸関数であるならば、$f \circ g$も凸関数である。 $f$が$(a, b)$で</description></item><item><title>商空間上の線形変換</title><link>https://freshrimpsushi.github.io/jp/posts/3365/</link><pubDate>Thu, 02 Feb 2023 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/3365/</guid><description>定義 1 $V$をベクトル空間、$T : V \to V$を線形変換としよう。$W \le V$を$T$-不変 部分空間としよう。商空間上の線形変換 $\overlin</description></item><item><title>古典情報理論におけるシャノン・エントロピー</title><link>https://freshrimpsushi.github.io/jp/posts/3400/</link><pubDate>Tue, 31 Jan 2023 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/3400/</guid><description>양자정보이론 [ 펼치기 · 접기 ] 양자계산 논리게이트 비트 · 부울함수(AND · OR · NOT · XOR · NAND · NOR · CNOT · CCNOT · CSWAP) · 범용 게이트 · 복제 함수 · 사영 · 주입 양자게</description></item><item><title>商空間への写像</title><link>https://freshrimpsushi.github.io/jp/posts/3363/</link><pubDate>Sun, 29 Jan 2023 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/3363/</guid><description>定理1 $V$をベクトル空間、$W \le V$を部分空間とする。関数$\eta$を次のように定義する。 $$ \begin{align*} \eta : V &amp;amp;\to V/W \\ v &amp;amp;\mapsto v + W \end{align*} $$ この場合、$V/</description></item><item><title>機械学習におけるReLUとは？</title><link>https://freshrimpsushi.github.io/jp/posts/3362/</link><pubDate>Fri, 27 Jan 2023 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/3362/</guid><description>定義 機械学習において、次の関数を整流線形ユニットRectified Linear Unit(ReLU), レルという。 $$ f(x) = x^{+} := \max \left\{ 0, x \right\} $$ 説明 電気電子工学では、これをランプ関</description></item><item><title>몫공간의 기저와 차원</title><link>https://freshrimpsushi.github.io/jp/posts/3361/</link><pubDate>Wed, 25 Jan 2023 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/3361/</guid><description>定理1 $V$を$n$次元ベクトル空間、$W \le V$を$k (\lt n)$次元部分空間とする。$W$の基底を$\left\{ u_{1}, \dots, u_{k} \right\}$とす</description></item><item><title>ランプ関数</title><link>https://freshrimpsushi.github.io/jp/posts/3360/</link><pubDate>Mon, 23 Jan 2023 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/3360/</guid><description>定義 以下の関数をランプ関数ramp functionと呼ぶ。 $$ R(x) := \begin{cases} x &amp;amp; x \gt 0 \\ 0 &amp;amp; x \le 0 \end{cases} $$ 複数の定義方法1 次のように、複数の方法で定義され</description></item><item><title>線形代数学における剰余類と商空間</title><link>https://freshrimpsushi.github.io/jp/posts/3359/</link><pubDate>Sat, 21 Jan 2023 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/3359/</guid><description>定義1 $V$を $F$-ベクトル空間、$W \le V$を 部分空間とする。$v \in V$に対して、次の集合 $$ \left\{ v \right\} + W := \left\{ v + w : w \in W \right\} $$ を $v$を含む</description></item><item><title>自由落下運動</title><link>https://freshrimpsushi.github.io/jp/posts/3358/</link><pubDate>Thu, 19 Jan 2023 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/3358/</guid><description>説明 つまり、自由落下運動では、空気抵抗などは全部無視される。地表面の近くでは、重力加速度はほぼ一定であるため、等加速度運動の典型的な例である</description></item><item><title>대각화가능한 선형변환의 불변부분공간으로의 축소사상도 대각화가능하다</title><link>https://freshrimpsushi.github.io/jp/posts/3357/</link><pubDate>Tue, 17 Jan 2023 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/3357/</guid><description>定理1 $V$をベクトル空間、$T : V \to V$を対角化可能な線形変換とする。$\left\{ \mathbf{0} \right\} \ne W \le V$である$W$を自明ではない$T$-不変</description></item><item><title>位置、速度、加速度</title><link>https://freshrimpsushi.github.io/jp/posts/3356/</link><pubDate>Sun, 15 Jan 2023 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/3356/</guid><description>位置 定義 物体の位置を表す関数を位置関数、簡単に位置positionという。 説明 物理では、時間による位置の変化（これを運動という）を考えるので</description></item><item><title>不変部分空間と固有ベクトルの関係</title><link>https://freshrimpsushi.github.io/jp/posts/3355/</link><pubDate>Fri, 13 Jan 2023 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/3355/</guid><description>定理1 $V$を $n$次元 の ベクトル空間、$T : V \to V$を 線形変換、$W \le V$を $T$-不変部分空間 とする。$v_{1}, \dots, v_{k}$を互い</description></item><item><title>位置に依存する質量：チェーンで繋がれたボールの運動</title><link>https://freshrimpsushi.github.io/jp/posts/3354/</link><pubDate>Wed, 11 Jan 2023 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/3354/</guid><description>概要1 チェーンがついた球が垂直方向に動く場合を考えてみよう。チェーンが十分に長く球が上下に動いて空中に浮かんでいるチェーンの長さが絶えず変わ</description></item><item><title>ベクトル空間の不変部分空間</title><link>https://freshrimpsushi.github.io/jp/posts/3353/</link><pubDate>Mon, 09 Jan 2023 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/3353/</guid><description>概要 $\beta = v_{1}, \dots, v_{k}$を線形変換 $T : V \to V$の固有ベクトルの集合としよう。ならば、$T$が$\span{\beta}$を$\span{\b</description></item><item><title>NetworkXでのGEXFファイルの読み書き</title><link>https://freshrimpsushi.github.io/jp/posts/3352/</link><pubDate>Sat, 07 Jan 2023 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/3352/</guid><description>説明1 2 GEXFはGraph Exchange XML Formatの略で、グラフ構造を説明するための言語だ。Gephiプロジェクトと一緒に始まったという説明を見る</description></item><item><title>異なる固有空間からの線形独立な集合の和集合は線形独立である</title><link>https://freshrimpsushi.github.io/jp/posts/3351/</link><pubDate>Thu, 05 Jan 2023 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/3351/</guid><description>定理1 $V$をベクター空間、$T : V \to V$を線形変換としよう。そして、$\lambda_{1}, \lambda_{2}, \dots, \lambda_{k}$と$T$を$T$</description></item><item><title>Juliaのグラフ分析パッケージ Graphs.jl</title><link>https://freshrimpsushi.github.io/jp/posts/3350/</link><pubDate>Tue, 03 Jan 2023 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/3350/</guid><description>紹介 Graphs.jlは、PythonのNetworkXと同じようにグラフ(ネットワーク)分析のためのパッケージだ。LightGraphs.</description></item><item><title>線形変換の固有空間と幾何的重複度</title><link>https://freshrimpsushi.github.io/jp/posts/3349/</link><pubDate>Sun, 01 Jan 2023 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/3349/</guid><description>定義1 $V$と$n$を次元ベクトル空間、$T : V \to V$を線形変換としよう。$\lambda$を$T$の固有値とする。以下のように定義された集</description></item><item><title>Pythonのグラフ（ネットワーク）分析パッケージNetworkX</title><link>https://freshrimpsushi.github.io/jp/posts/3348/</link><pubDate>Fri, 30 Dec 2022 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/3348/</guid><description>紹介 NetworkXはグラフ(ネットワーク)分析のためのPythonパッケージだ。 コード インストール ターミナルで次のように入力する。 #설치 &amp;gt;</description></item><item><title>線形変換の固有値の重複度</title><link>https://freshrimpsushi.github.io/jp/posts/3347/</link><pubDate>Wed, 28 Dec 2022 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/3347/</guid><description>定義1 $V$を有限次元ベクトル空間、$T : V \to V$を線形変換としよう。$f(t)$を$T$の特性多項式、$\lambda$を$T$の固有値と</description></item><item><title>グラフ（ネットワーク）の可視化及び分析プログラムGephi</title><link>https://freshrimpsushi.github.io/jp/posts/3346/</link><pubDate>Mon, 26 Dec 2022 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/3346/</guid><description>はじめに Gephiは、グラフ(ネットワーク)分析のためのオープンソースで、無料のプログラムで、特に視覚化の面で大きな強みを持っている。ウィン</description></item><item><title>対角化可能な線形変換の特性多項式は因数分解される</title><link>https://freshrimpsushi.github.io/jp/posts/3345/</link><pubDate>Sat, 24 Dec 2022 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/3345/</guid><description>定義1 $P(F)$の多項式が**$F$ 上で分解される**split over Fとは、次を満たす定数$c, a_{1}, \dots, a_{n} \in F$が存在することを意味する。 $$ f(t) =</description></item><item><title>ツィオルコフスキーのロケット方程式</title><link>https://freshrimpsushi.github.io/jp/posts/3344/</link><pubDate>Thu, 22 Dec 2022 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/3344/</guid><description>方程式1 外力がない一次元の空間で燃料が噴射されるロケットの速度を示す方程式は、チオルコフスキーロケット方程式Tsiolkovsky&amp;rsqu</description></item><item><title>多項式ベクトル空間</title><link>https://freshrimpsushi.github.io/jp/posts/3343/</link><pubDate>Tue, 20 Dec 2022 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/3343/</guid><description>定義1 多項式 体$F$から係数を持つ多項式polynomialは、非負の整数$n$に対して次の形を意味する。 $$ \begin{equation} f(x) = a_{n}x^{n} + a_{n-1}x^{n-1} + \cdots + a_{1}x + a_{0} \end{equation} $$ ここ</description></item><item><title>可変質量系の運動方程式</title><link>https://freshrimpsushi.github.io/jp/posts/3342/</link><pubDate>Sun, 18 Dec 2022 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/3342/</guid><description>概要1 物理では、多くの状況で質量を固定された定数として扱うことが多い。しかし、そうでない場合も多い。例えば、落ちる雨粒は、大気中の小さな水滴</description></item><item><title>異なる固有値に対応する固有ベクトルは線形独立である</title><link>https://freshrimpsushi.github.io/jp/posts/3341/</link><pubDate>Fri, 16 Dec 2022 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/3341/</guid><description>定理1 $V$をベクトル空間とし、$T : V \to V$を線形変換とし、$\lambda_{1}, \dots, \lambda_{k}$を$T$の異なる固有値とす</description></item><item><title>対角化可能な線型変換</title><link>https://freshrimpsushi.github.io/jp/posts/3335/</link><pubDate>Wed, 14 Dec 2022 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/3335/</guid><description>定義 1 $V$を有限次元のベクトル空間とする。$T : V \to V$を線形変換とする。$T$の行列表示$\begin{bmatrix} T \end{bm</description></item><item><title>線形変換の特性多項式</title><link>https://freshrimpsushi.github.io/jp/posts/3339/</link><pubDate>Mon, 12 Dec 2022 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/3339/</guid><description>概要 線形変換の特性多項式を定義する。以下の定理から、式$\det(A - \lambda I) = 0$を解くことが固有値を見つけることと同じであることが分かる。し</description></item><item><title>딥러닝에서 인공신경망(ANN), 심층신경망(DNN), 순방향신경망(FNN)의 뜻과 차이점</title><link>https://freshrimpsushi.github.io/jp/posts/3446/</link><pubDate>Sat, 10 Dec 2022 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/3446/</guid><description>概要 人工ニューラルネットワーク、深層ニューラルネットワーク、順方向ニューロネットワークなど、ディープラーニングで使われる用語について整理する</description></item><item><title>微分可能マニホールド上の微分可能な実数値関数の集合</title><link>https://freshrimpsushi.github.io/jp/posts/3340/</link><pubDate>Thu, 08 Dec 2022 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/3340/</guid><description>定義1 $M$を微分多様体とする。点$p \in M$での微分可能な関数$f : M \to \mathbb{R}$の集合を$\mathcal{D}$と表記する。</description></item><item><title>有限次元の線形変換の固有値と固有ベクトル</title><link>https://freshrimpsushi.github.io/jp/posts/3337/</link><pubDate>Thu, 08 Dec 2022 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/3337/</guid><description>定義1 $V$を有限次元$F$-ベクトル空間としよう。$T : V \to V$を線形変換とする。$\lambda \in F$について、 $$ Tx = \lambda x $$ これを満たす</description></item><item><title>微分可能多様体上の微分可能なベクトル場の集合</title><link>https://freshrimpsushi.github.io/jp/posts/3338/</link><pubDate>Tue, 06 Dec 2022 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/3338/</guid><description>定義1 $M$を微分可能多様体と呼ぼう。$M$上の全ての微分可能なベクトル場の集まりを$\frak{X}(M)$と記号で表す。 $$ \frak{X}(M) := \left\{ \text{all vector fileds of</description></item><item><title>微分多様体上で定義されるテンソル</title><link>https://freshrimpsushi.github.io/jp/posts/3334/</link><pubDate>Fri, 02 Dec 2022 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/3334/</guid><description>定義1 $M$を$n$次元の微分可能多様体、$\mathcal{D}(M)$を$M$上の微分可能な関数の集合、$\mathfrak{X}(M)</description></item><item><title>線形変換の基底変換（座標変換）</title><link>https://freshrimpsushi.github.io/jp/posts/3333/</link><pubDate>Wed, 30 Nov 2022 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/3333/</guid><description>概要1 $V$を$n$次元のベクトル空間、$\mathbf{v} \in V$とする。$\beta, \beta^{\prime}$を$V$の順序基底と</description></item><item><title>共変微分とリーマン曲率テンソルの関係</title><link>https://freshrimpsushi.github.io/jp/posts/3332/</link><pubDate>Mon, 28 Nov 2022 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/3332/</guid><description>定理1 $f : A \subset \mathbb{R}^{2} \to M$をパラメータ付き曲面としよう。$(s, t)$を$\mathbb{R}^{2}$の標準座標としよう。$V = V(s,t)$</description></item><item><title>ベクトルの座標変換</title><link>https://freshrimpsushi.github.io/jp/posts/3331/</link><pubDate>Sat, 26 Nov 2022 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/3331/</guid><description>概要1 2 $V$を$n$次元 ベクトル空間としよう。$\mathbf{v} \in V$とする。$\beta$を$V$のある順序基底とすると、$\mat</description></item><item><title>畳み込み層</title><link>https://freshrimpsushi.github.io/jp/posts/3386/</link><pubDate>Thu, 24 Nov 2022 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/3386/</guid><description>定義 $\mathbf{W}$を$k \times k$行列としよう。$M^{n\times n} = M^{n\times n}(\mathbb{R})$をサイズが$n \times n$の実数行</description></item><item><title>リー群 (Lie group)</title><link>https://freshrimpsushi.github.io/jp/posts/3330/</link><pubDate>Tue, 22 Nov 2022 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/3330/</guid><description>定義1 群 $G$が以下の条件を満たす時、これをリー群Lie groupと呼ぶ。 微分可能な構造を持っている。 $G$で定義された二項操作 $\cdot : G \times G \to</description></item><item><title>左乗算変換（行列変換）</title><link>https://freshrimpsushi.github.io/jp/posts/3329/</link><pubDate>Sun, 20 Nov 2022 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/3329/</guid><description>定義1 体 $F$について、$A \in M_{m \times n}(F)$としよう。以下のように定義される$L_{A}$を左側乗算変換left-multiplicati</description></item><item><title>行列空間</title><link>https://freshrimpsushi.github.io/jp/posts/3327/</link><pubDate>Fri, 18 Nov 2022 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/3327/</guid><description>定義 体 $F$に対して、要素が$F$の元である$m \times n$行列の集合を$M_{m \times n}(F)$としよう。 $$ M_{m \times n}(F) := \left\{ \begin{bmatrix} a_{11} &amp;amp; \cdots &amp;amp; a_{1n} \\ \vdots &amp;amp; \ddots &amp;amp; \vdots \\ a_{m1}</description></item><item><title>微分多様体のスカラー曲率</title><link>https://freshrimpsushi.github.io/jp/posts/3328/</link><pubDate>Wed, 16 Nov 2022 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/3328/</guid><description>定義1 リース表現定理 $\left( H, \left\langle \cdot,\cdot \right\rangle \right)$が内積空間だとしよう。$H$上の線形汎関数 $f \in H^{ \ast }$と$\mathbf{x} \in H$に対して、</description></item><item><title>部分空間の基底から拡張された基底への線形変換の行列表現</title><link>https://freshrimpsushi.github.io/jp/posts/3325/</link><pubDate>Mon, 14 Nov 2022 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/3325/</guid><description>定理 $W \le V$を$n$次元 ベクトル空間の$V$の部分空間とする。$\gamma = \left\{ \mathbf{v}_{1}, \dots ,\mathbf{v}_{k} \right\}$を$W$の順序基底とする。$\bet</description></item><item><title>微分可能多様体のリッチ曲率</title><link>https://freshrimpsushi.github.io/jp/posts/3326/</link><pubDate>Sat, 12 Nov 2022 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/3326/</guid><description>定義1 1 微分可能多様体 $M$と点$p \in M$における接空間 $T_{p}M$が与えられたとする。関数$f$を以下のようにする。与えられた$X, Y</description></item><item><title>ブロック行列</title><link>https://freshrimpsushi.github.io/jp/posts/3323/</link><pubDate>Thu, 10 Nov 2022 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/3323/</guid><description>定義 $A$を行列$m \times n$とする。 $$ A = \begin{bmatrix} a_{11} &amp;amp; a_{12} &amp;amp; \cdots &amp;amp; a_{1n} \\ a_{21} &amp;amp; a_{22} &amp;amp; \cdots &amp;amp; a_{2n} \\ \vdots &amp;amp; \vdots &amp;amp; \ddots &amp;amp; \vdots \\ a_{m1} &amp;amp; a_{m2} &amp;amp; \cdots &amp;amp; a_{mn} \\ \end{bmatrix} $$ この時、行列を切る任意の垂直線</description></item><item><title>断面曲率が同じであれば、リーマン曲率も同じである。</title><link>https://freshrimpsushi.github.io/jp/posts/3324/</link><pubDate>Tue, 08 Nov 2022 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/3324/</guid><description>定理1 $V$を$2$次元以上のベクトル空間で定義されているものとし、$\left\langle \cdot, \cdot \right\rangle$を$V$に定義</description></item><item><title>基底の拡張と縮小</title><link>https://freshrimpsushi.github.io/jp/posts/3321/</link><pubDate>Sun, 06 Nov 2022 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/3321/</guid><description>定理1 $S$を有限次元ベクター空間$V$の有限部分集合とする。 (a) $S$が$V$を生成しつつ$V$の基底ではない場合、$S$の要素を適切に削除</description></item><item><title>リーマン曲率テンソルの座標系表現</title><link>https://freshrimpsushi.github.io/jp/posts/3320/</link><pubDate>Fri, 04 Nov 2022 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/3320/</guid><description>説明1 リーマン多様体 $(M, g)$が与えられたとしよう。$p$での座標系を$(U, \mathbf{x})$としよう。そして接ベクトルを次のように表</description></item><item><title>暗示的ルンゲ＝クッタ法</title><link>https://freshrimpsushi.github.io/jp/posts/3319/</link><pubDate>Wed, 02 Nov 2022 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/3319/</guid><description>概要 常微分方程式ソルバーのルンゲ＝クッタ法を紹介する。よく使われる4次ルンゲ＝クッタ法 RK4は、明示的ルンゲ＝クッタ法の一種だ。この文書では</description></item><item><title>リーマン曲率テンソルの対称性</title><link>https://freshrimpsushi.github.io/jp/posts/3318/</link><pubDate>Mon, 31 Oct 2022 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/3318/</guid><description>定義1 リーマン曲率テンソル $R$を$R: \frak{X}(M) \times \frak{X}(M) \times \frak{X}(M) \times \frak{X}(M) \to \mathcal{D}(M)$に対して以下のように定義しよう。 $$ R(X, Y, Z, W) := g(R(X, Y)Z, W) = \left\langle</description></item><item><title>明示的なルンゲ＝クッタ法</title><link>https://freshrimpsushi.github.io/jp/posts/3317/</link><pubDate>Sat, 29 Oct 2022 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/3317/</guid><description>概要 微分方程式ソルバー、ルンゲ＝クッタ法を紹介する。よく使われる 4次ルンゲ＝クッタ法 RK4についての詳しい説明は、別記事にて発表されている。</description></item><item><title>ビアンキ恒等式</title><link>https://freshrimpsushi.github.io/jp/posts/3316/</link><pubDate>Thu, 27 Oct 2022 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/3316/</guid><description>定理1 $R$をリーマン曲率としよう。すると、次が成立する。 $$ R(X, Y) Z + R(Y, Z) X + R(Z, X) Y = 0 $$ 証明 特別な技術なしに、複雑だが難しくない計算で証明さ</description></item><item><title>Julia、Python（NumPy、PyTorch）の配列の次元の違い</title><link>https://freshrimpsushi.github.io/jp/posts/3315/</link><pubDate>Tue, 25 Oct 2022 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/3315/</guid><description>概要 JuliaとNumPy、PyTorch（以降、便宜上Pythonと呼ぶ）の高次元配列を扱う際、各次元が意味するものが異なるため注意が必要</description></item><item><title>微分多様体の断面曲率</title><link>https://freshrimpsushi.github.io/jp/posts/3322/</link><pubDate>Sun, 23 Oct 2022 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/3322/</guid><description>整理1 $\sigma \subset T_{p}M$を接空間$T_{p}M$の2次元部分空間としよう。$x, y \in \sigma$が線形独立であるとする。すると、次の$K$</description></item><item><title>微分多様体の曲率</title><link>https://freshrimpsushi.github.io/jp/posts/3314/</link><pubDate>Fri, 21 Oct 2022 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/3314/</guid><description>定義1 $M$をリーマン多様体、$\frak{X}(M)$を$M$の上のすべてのベクトル場の集合としよう。 $$ \frak{X}(M) = \text{the set of all vector fileds of calss } C^{\infty} \text{ on } M $$</description></item><item><title>論文レビュー: 物理情報基盤ニューラルネットワーク(PINN)</title><link>https://freshrimpsushi.github.io/jp/posts/3313/</link><pubDate>Wed, 19 Oct 2022 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/3313/</guid><description>概要 レファレンスと数式の番号や表記法は、論文をそのまま踏襲する。 Physics-informed neural networks (PINN[ピン]と読む)は、数値的に解くために設計された微分方程式の</description></item><item><title>ポアンカレ計量</title><link>https://freshrimpsushi.github.io/jp/posts/3312/</link><pubDate>Mon, 17 Oct 2022 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/3312/</guid><description>1 Manfredo P. Do Carmo, Riemannian Geometry（英語版、1992年）、73-74ページ&amp;#160;&amp;#x21a9;&amp;#xfe0e;</description></item><item><title>Juliaでのシンボリック演算の方法</title><link>https://freshrimpsushi.github.io/jp/posts/3311/</link><pubDate>Sat, 15 Oct 2022 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/3311/</guid><description>概要 Juliaでの記号演算は、SymEngine.jl1パッケージを通じて使うことができる。 コード シンボルの定義 シンボルは、以下の方法で定義</description></item><item><title>指数写像と正規近傍</title><link>https://freshrimpsushi.github.io/jp/posts/3310/</link><pubDate>Thu, 13 Oct 2022 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/3310/</guid><description>1 Manfredo P. Do Carmo, Riemannian Geometry (Eng Edition, 1992), p71-73&amp;#160;&amp;#x21a9;&amp;#xfe0e;</description></item><item><title>二項演算のヤコビ恒等式</title><link>https://freshrimpsushi.github.io/jp/posts/3309/</link><pubDate>Tue, 11 Oct 2022 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/3309/</guid><description>定義 集合 $S$と二項演算 $\ast : S \times S \to S$、可換な二項演算 $+ : S \times S \to S$に対して、次の形の式をヤコビ恒等式Jacobi identityという</description></item><item><title>最小化する測地線</title><link>https://freshrimpsushi.github.io/jp/posts/3308/</link><pubDate>Sun, 09 Oct 2022 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/3308/</guid><description>日本語訳 1 Manfredo P. Do Carmo, リーマン幾何学 (英語版, 1992), p70-71&amp;#160;&amp;#x21a9;&amp;#xfe0e;</description></item><item><title>冪零行列</title><link>https://freshrimpsushi.github.io/jp/posts/3307/</link><pubDate>Fri, 07 Oct 2022 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/3307/</guid><description>定義1 $n \times n$ 行列 $A$に対して、$A^{k} = O$を満足する正の数$k$が存在すれば、$A$を冪零nilpotentという。このとき、$O$</description></item><item><title>リーマン幾何学におけるガウスの補題</title><link>https://freshrimpsushi.github.io/jp/posts/3306/</link><pubDate>Wed, 05 Oct 2022 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/3306/</guid><description>1 Manfredo P. Do Carmo, Riemannian Geometry (Eng Edition, 1992), p68-70&amp;#160;&amp;#x21a9;&amp;#xfe0e;</description></item><item><title>三角行列</title><link>https://freshrimpsushi.github.io/jp/posts/3305/</link><pubDate>Mon, 03 Oct 2022 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/3305/</guid><description>定義1 主対角線より上の要素がすべて$0$である行列$A = [a_{ij}]$を下三角行列lower triangular matrixという。 $$ A \text{ is lower triangluar matrix if } a_{ij} =</description></item><item><title>パラメータ化された曲面</title><link>https://freshrimpsushi.github.io/jp/posts/3304/</link><pubDate>Sat, 01 Oct 2022 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/3304/</guid><description>定義1 開集合$U \subset \mathbb{R}^{2}$に対して、連結集合$A\subset \mathbb{R}^{2}$が以下を満たすとする。 $$ U</description></item><item><title>場の理論における交換子とは？</title><link>https://freshrimpsushi.github.io/jp/posts/3303/</link><pubDate>Thu, 29 Sep 2022 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/3303/</guid><description>定義 環 $(R, +, \cdot)$において、二つの元$a, b \in R$の交換子commutatorを次のように定義する。 $$ [a, b] := a \cdot b - b \cdot a = ab - ba $$ $[a,</description></item><item><title>微分可能な曲線と最小化</title><link>https://freshrimpsushi.github.io/jp/posts/3302/</link><pubDate>Tue, 27 Sep 2022 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/3302/</guid><description>본 문서의 내용이 없어 번역 진행이 불가능합니다. 구체적인 내용을 제공해주세요.</description></item><item><title>群論での交換子とは？</title><link>https://freshrimpsushi.github.io/jp/posts/3301/</link><pubDate>Sun, 25 Sep 2022 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/3301/</guid><description>定義 群 $G$の二つの元$g, h \in G$に対して、$g, h$の交換子commutatorを次のように定義する。 $$ [g,h] := ghg^{-1}h^{-1} $$ 説明 定義に従い、全ての元</description></item><item><title>Pythonでのタプルによるインデクシング方法</title><link>https://freshrimpsushi.github.io/jp/posts/3299/</link><pubDate>Wed, 21 Sep 2022 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/3299/</guid><description>2次元配列 $A$を2次元配列としよう。すると$A[(y,x)]$と$A[y,x]$は同じ機能をする。 &amp;gt;&amp;gt;&amp;gt; import numpy as np &amp;gt;&amp;gt;&amp;gt; A = np.arange(16).reshape(4,4) &amp;gt;&amp;gt;&amp;gt; A array([[ 0, 1, 2, 3], [ 4, 5, 6,</description></item><item><title>測地線の均質性</title><link>https://freshrimpsushi.github.io/jp/posts/3298/</link><pubDate>Mon, 19 Sep 2022 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/3298/</guid><description>I&amp;rsquo;m sorry for any confusion, but it seems like the provided prompt does not contain any specific Korean document for translation into English and Japanese. Can you please provide the content you wish to have translated?</description></item><item><title>測地線流れ</title><link>https://freshrimpsushi.github.io/jp/posts/3296/</link><pubDate>Sat, 17 Sep 2022 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/3296/</guid><description>죄송하지만, 제공된 한국어 문서의 내용이 보이지 않습니다. 정확한 내용을 제공해 주시면, 해당 내용을 영어와 일본어로 번역하는데 도움을 줄 수 있겠습니다.</description></item><item><title>エクセルでヒストグラムを描く方法</title><link>https://freshrimpsushi.github.io/jp/posts/3297/</link><pubDate>Thu, 15 Sep 2022 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/3297/</guid><description>概要 Excelを使ってヒストグラムを描く方法を紹介する。 説明 [ファイル]タブをクリックして下に[オプション]をクリックし、[Excelのオプ</description></item><item><title>線形変換の値域が核よりも小さい場合の同値条件</title><link>https://freshrimpsushi.github.io/jp/posts/3295/</link><pubDate>Tue, 13 Sep 2022 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/3295/</guid><description>定理1 $V$がベクトル空間で、$T : V \to V$が線形変換だとする。すると、以下が成り立つ。 $$ T^{2} = T_{0} \iff R(T) \subset N(T) $$ この時、$T_{0}$は零変換で、</description></item><item><title>微分可能多様体上の測地線</title><link>https://freshrimpsushi.github.io/jp/posts/3294/</link><pubDate>Sun, 11 Sep 2022 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/3294/</guid><description>定義1 微分多様体 $M$ 上の曲線 $\gamma : I \to M$に対して、点 $t_{0} \in I$で $\dfrac{D}{dt}\left( \dfrac{d \gamma}{d t} \right) = 0$ならば、$\gamma$が $t_{0}$で測地線と言う。もし全て</description></item><item><title>二重対双対空間</title><link>https://freshrimpsushi.github.io/jp/posts/3293/</link><pubDate>Fri, 09 Sep 2022 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/3293/</guid><description>定義1 $X$をベクトル空間としよう。$X^{\ast\ast}$を$X$の双対空間、$X^{\ast}$の双対空間としよう。 $$ X^{\ast\ast} = (X^{\ast})^{\ast} $$ これを</description></item><item><title>レヴィチビタ接続、リーマン接続、接続の係数、クリストッフェル記号</title><link>https://freshrimpsushi.github.io/jp/posts/3292/</link><pubDate>Wed, 07 Sep 2022 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/3292/</guid><description>定理1 $(M,g)$をリーマン多様体とする。すると、次を満たす$M$上のアフィン接続$\nabla$が唯一に存在する。 $\nabla$が対称</description></item><item><title>双対空間によって定義される線形変換の転置</title><link>https://freshrimpsushi.github.io/jp/posts/3291/</link><pubDate>Mon, 05 Sep 2022 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/3291/</guid><description>定理1 二つの有限次元 ベクター空間 $V, W$の順序基底をそれぞれ$\beta, \gamma$としよう。任意の線形変換 $T : V \to W$に対して、次のよう</description></item><item><title>接続の対称性</title><link>https://freshrimpsushi.github.io/jp/posts/3290/</link><pubDate>Sat, 03 Sep 2022 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/3290/</guid><description>定義1 微分多様体 $M$ 上の アフィン接続 $\nabla$が次を満たすとき、対称symmetricという。 $$ \nabla_{X}Y - \nabla_{Y} X = \left[ X, Y \right] \quad \forall X,Y \in \mathfrak{X}(M) $$ ここで、$</description></item><item><title>線形変換空間とその行列表現空間は同型である</title><link>https://freshrimpsushi.github.io/jp/posts/3289/</link><pubDate>Thu, 01 Sep 2022 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/3289/</guid><description>定理1 2つのベクトル空間 $V, W$がそれぞれ次元 $n, m$であるとする。そして$\beta, \gamma$をそれぞれの順序基底とする。すると、以下の</description></item><item><title>共存可能な接続</title><link>https://freshrimpsushi.github.io/jp/posts/3288/</link><pubDate>Tue, 30 Aug 2022 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/3288/</guid><description>定義1 $M$をアファイン接続、$\nabla$をリーマン計量が与えられた微分多様体としよう。全ての可微分な曲線 $g$に対して、任意の二つの$</description></item><item><title>同型写像</title><link>https://freshrimpsushi.github.io/jp/posts/3287/</link><pubDate>Sun, 28 Aug 2022 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/3287/</guid><description>定義1 二つのベクトル空間$V, W$に対して、可逆な線形変換$T : V \to W$が存在する場合、$V$が$W$と同型$V$ is isomorphic to $W$であると言い、</description></item><item><title>微分多様体上の平行なベクトル場</title><link>https://freshrimpsushi.github.io/jp/posts/3286/</link><pubDate>Fri, 26 Aug 2022 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/3286/</guid><description>定義1 $M$を与えられたアフィン接続とする微分多様体$\nabla$としよう。曲線$c : I \to M$に沿ったベクトル場$V$が次の条件を満たすな</description></item><item><title>線形変換の逆</title><link>https://freshrimpsushi.github.io/jp/posts/3285/</link><pubDate>Wed, 24 Aug 2022 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/3285/</guid><description>定義1 $V, W$をベクトル空間、$T : V \to W$を線形変換とする。線形変換$U : W \to V$が次を満たすなら、$U$を$T$の逆inverse of $T$</description></item><item><title>ベクトル場の共変微分</title><link>https://freshrimpsushi.github.io/jp/posts/3284/</link><pubDate>Mon, 22 Aug 2022 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/3284/</guid><description>定理1 $M$を微分可能多様体とし、$\nabla$を$M$上のアフィン接続とする。この時、微分可能な曲線$c : I \to M(t\in I)$に沿うベクターフィ</description></item><item><title>線形変換空間</title><link>https://freshrimpsushi.github.io/jp/posts/3283/</link><pubDate>Sat, 20 Aug 2022 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/3283/</guid><description>定義1 ベクトル空間 $V$から $W$への全ての線形変換の集合を $L(V,W)$と表示する。 $$ L(V, W) = \mathcal{L}(V, W) := \left\{ T : V \to W\enspace |\enspace T \text{ is linear } \right\} $$ これを以下</description></item><item><title>アフィン接続</title><link>https://freshrimpsushi.github.io/jp/posts/3282/</link><pubDate>Thu, 18 Aug 2022 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/3282/</guid><description>ビルドアップ 微分多様体上のベクトル場$\mathbf{V}$が与えられたとしよう。多様体上で定義された関数は、ベクトル場を通して微分できる。</description></item><item><title>線形汎関数</title><link>https://freshrimpsushi.github.io/jp/posts/3281/</link><pubDate>Tue, 16 Aug 2022 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/3281/</guid><description>定義1 $V$をベクトル空間としよう。$V$から$\mathbb{C}$（または$\mathbb{R}$）への写像$f$を汎関数functio</description></item><item><title>微分多様体上の曲線に沿うベクトル場</title><link>https://freshrimpsushi.github.io/jp/posts/3280/</link><pubDate>Sun, 14 Aug 2022 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/3280/</guid><description>定義1 $M$を微分多様体とする。微分可能な関数 $c : I\subset \mathbb{R} \to M$を**（パラメータ化された）曲線**(parameterized curve)とい</description></item><item><title>順序基底と座標ベクトル</title><link>https://freshrimpsushi.github.io/jp/posts/3279/</link><pubDate>Fri, 12 Aug 2022 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/3279/</guid><description>定義1 $V$を有限次元ベクトル空間としよう。$V$の基底に特定の順序が与えられた場合、これを順序基底という。 $\beta = \left\{ \mathbf{v}_{1}, \dots, \mathbf{v}_{n} \right\}$を</description></item><item><title>リーマン多様体上の等距離写像と局所等距離写像</title><link>https://freshrimpsushi.github.io/jp/posts/3278/</link><pubDate>Wed, 10 Aug 2022 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/3278/</guid><description>等距離写像1 $(M, g), (N, h)$をリーマン多様体としよう。微分同相写像$f : M \to N$について、以下が成り立つ場合、$f$を等距離写像isometry</description></item><item><title>有限次元ベクトル空間間の線形変換</title><link>https://freshrimpsushi.github.io/jp/posts/3277/</link><pubDate>Mon, 08 Aug 2022 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/3277/</guid><description>定理1 $V, W$をベクトル空間とする。$\left\{ \mathbf{v}_{1}, \mathbf{v}_{2}, \dots, \mathbf{v}_{n} \right\}$と$\left\{ \mathbf{w}_{1}, \mathbf{w}_{2}, \dots, \mathbf{w}_{n} \right\}$をそれぞれ$V, W$</description></item><item><title>リーマン計量とリーマン多様体</title><link>https://freshrimpsushi.github.io/jp/posts/3276/</link><pubDate>Sat, 06 Aug 2022 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/3276/</guid><description>定義1 $n$次元の微分可能多様体 $M$に対するリーマン計量Riemannian metric, リーマン計量 $g$とは、各点$p \in M$を$g_{p}$に対応</description></item><item><title>線形変換のトレース</title><link>https://freshrimpsushi.github.io/jp/posts/3275/</link><pubDate>Thu, 04 Aug 2022 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/3275/</guid><description>定義 $V$を$n$次元のベクトル空間だとする。$f : V \to V$を線形変換だとする。$B = \left\{ e_{i} \right\}$を$V$の基底だとする。$n \times n</description></item><item><title>Juliaでデータフレームに新しい列を追加する方法</title><link>https://freshrimpsushi.github.io/jp/posts/3273/</link><pubDate>Sun, 31 Jul 2022 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/3273/</guid><description>コード 宇宙少女のデータフレームが以下のように与えられたとしよう。 WJSN = DataFrame( member = [&amp;#34;다영&amp;#34;,&amp;#34;다원&amp;#34;,&amp;#34;루</description></item><item><title>ベクトル場のリー括弧</title><link>https://freshrimpsushi.github.io/jp/posts/3272/</link><pubDate>Fri, 29 Jul 2022 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/3272/</guid><description>定義1 微分多様体 $M$ における二つの微分可能なベクトル場 $X, Y$に対して、$[X, Y]$を以下のように定義し、(リー-)ブラケット(Lie-)br</description></item><item><title>フルランク行列の性質</title><link>https://freshrimpsushi.github.io/jp/posts/3271/</link><pubDate>Wed, 27 Jul 2022 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/3271/</guid><description>統括1 $A$を$m \times n$行列としよう。すると、$A$がフルランクを持つための必要十分条件は$A^{T}A$が可逆行列であることだ。 証明 $(\Longrightarrow)$ $A</description></item><item><title>微分可能多様体上のベクトル場</title><link>https://freshrimpsushi.github.io/jp/posts/3270/</link><pubDate>Mon, 25 Jul 2022 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/3270/</guid><description>ビルドアップ1 ベクトル場の簡単な定義を考えてみよう。3次元空間でのベクトル場ベクトル関数、ベクトル場とは、3次元ベクトルを3次元ベクトルにマ</description></item><item><title>行列の基本空間</title><link>https://freshrimpsushi.github.io/jp/posts/3269/</link><pubDate>Sat, 23 Jul 2022 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/3269/</guid><description>説明1 行列$A$が与えられたとしよう。すると、我々は$A$に対して次の6つの空間を考えることができる。 $A$の行空間, $A^{T}$の行空間</description></item><item><title>微分可能多様体上の接空間バンドル</title><link>https://freshrimpsushi.github.io/jp/posts/3268/</link><pubDate>Thu, 21 Jul 2022 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/3268/</guid><description>定義1 $M$を$n$次元の微分多様体とする。点$p \in M$での接空間を$T_{p}M$とする。$M$の接束tangent bundle, 接バンドル $TM$を</description></item><item><title>ラグランジュの乗数法</title><link>https://freshrimpsushi.github.io/jp/posts/3267/</link><pubDate>Tue, 19 Jul 2022 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/3267/</guid><description>定義1 多変数関数$f(x_{1}, \dots, x_{n})$の最適値最小値または最大値 説明 上の図のように$y = 2 - x^{2}$のグラフが与えられている</description></item><item><title>エマルションは局所的に埋め込まれます。</title><link>https://freshrimpsushi.github.io/jp/posts/3266/</link><pubDate>Sun, 17 Jul 2022 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/3266/</guid><description>3173) イマージョンは局所的に埋め込まれる。 定理1 証明 $\phi$をイマージョンと仮定すると、$d\phi{p}$は単射である。埋め込みを示すには</description></item><item><title>過飽和系と未飽和系</title><link>https://freshrimpsushi.github.io/jp/posts/3265/</link><pubDate>Fri, 15 Jul 2022 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/3265/</guid><description>定義1 $m \times n$行列$A$について、以下の線形システムを考えよう。 $$ A \mathbf{x} = \mathbf{b} $$ もし$m \gt n$ならば、未知数より制約条件が多い場合であり、このよ</description></item><item><title>k形式の外微分</title><link>https://freshrimpsushi.github.io/jp/posts/3264/</link><pubDate>Wed, 13 Jul 2022 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/3264/</guid><description>定義1 $\omega = \sum\limits_{I} a_{I} dx_{I}$を$n$次元の微分多様体$M$上の$k$-形式とする。$\omega$の外微分$d\omega$を次のように定義</description></item><item><title>머신러닝에서 선형회귀모델의 최소제곱법 학습</title><link>https://freshrimpsushi.github.io/jp/posts/3263/</link><pubDate>Mon, 11 Jul 2022 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/3263/</guid><description>概要1 線形回帰モデルの学習方法の一つである最小二乗法least squaresを用いた方法を紹介する。 説明 データ集合を$X = \left\{ \mathbf{x}_{i} \right\</description></item><item><title>微分幾何学におけるプルバック</title><link>https://freshrimpsushi.github.io/jp/posts/3262/</link><pubDate>Sat, 09 Jul 2022 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/3262/</guid><description>概要 微分多様体上のプルバックを定義する。微分多様体が難しい場合は、$M = \mathbb{R}^{m}$、$N = \mathbb{R}^{n}$</description></item><item><title>機械学習における線形回帰モデルの勾配降下法学習</title><link>https://freshrimpsushi.github.io/jp/posts/3261/</link><pubDate>Thu, 07 Jul 2022 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/3261/</guid><description>概要1 線形回帰モデルの学習方法の一つである勾配降下法gradient descentを使った方法を紹介する。 説明 データセットを$X = \left\{ \mathbf{x}_{i} \ri</description></item><item><title>微分形式の演算：和とウェッジ積</title><link>https://freshrimpsushi.github.io/jp/posts/3260/</link><pubDate>Tue, 05 Jul 2022 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/3260/</guid><description>定義1 和 $+$ $\omega = \sum\limits_{I} a_{I} dx_{I}, \varphi = \sum\limits_{I} b_{I} dx_{I}$が$k$形式だとする。これら二つの和は以下のように定義される。 $$ \omega + \varphi := \sum\limits_{I}\left( a_{I} + b_{I} \right)dx_{I} $$ ウェッジ積 $\wedge$ $\omega</description></item><item><title>Juliaで階層的クラスタリングを行う方法</title><link>https://freshrimpsushi.github.io/jp/posts/3259/</link><pubDate>Sun, 03 Jul 2022 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/3259/</guid><description>説明 Clustering.jl パッケージの hclust() 関数を使えばいい。 hclust(d::AbstractMatrix; [linkage], [uplo], [branchorder]) 距離行列 を入力として受け取り、階層的クラスタリング の結果を返す。クラスタ間の距離のデフォルトは</description></item><item><title>k次の微分形式</title><link>https://freshrimpsushi.github.io/jp/posts/3258/</link><pubDate>Fri, 01 Jul 2022 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/3258/</guid><description>概要 2階微分形式を定義した方法と同様に、微分多様体 $M$に対する $k$階形式 を定義する。 微分多様体が難しいなら、$M = \mathbb{R}^</description></item><item><title>Juliaでデンドログラムを描く方法</title><link>https://freshrimpsushi.github.io/jp/posts/3257/</link><pubDate>Wed, 29 Jun 2022 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/3257/</guid><description>説明 与えられたデータをhclust()で階層的クラスタリングした後、plot()関数を使ってデンドログラムを描こうとすると、以下のようなエラ</description></item><item><title>二階微分形式</title><link>https://freshrimpsushi.github.io/jp/posts/3256/</link><pubDate>Mon, 27 Jun 2022 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/3256/</guid><description>概要 二項演算 $\wedge$を定義し、1次微分形式を定義した感覚で、微分多様体 $M$に対する2次形式を定義する。 微分多様体が難しいと感じるな</description></item><item><title>デンドログラムとは?</title><link>https://freshrimpsushi.github.io/jp/posts/3255/</link><pubDate>Sat, 25 Jun 2022 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/3255/</guid><description>併せて見る ジュリアでデンドログラムを描く方法</description></item><item><title>余接空間と一階微分形式</title><link>https://freshrimpsushi.github.io/jp/posts/3254/</link><pubDate>Thu, 23 Jun 2022 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/3254/</guid><description>概要 余接空間と微分1形式を定義する。微分多様体が難しいなら、$M = \mathbb{R}^{n}$だと思ってもいい。 アインシュタイン表記を使う</description></item><item><title>階層的クラスタリング</title><link>https://freshrimpsushi.github.io/jp/posts/3253/</link><pubDate>Tue, 21 Jun 2022 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/3253/</guid><description>アルゴリズム 入力 $p$ 次元のデータ $N$個と距離 $d$が与えられているとする。 ステップ 1. それぞれの点を一つのクラスタと考える。最も近い二つのクラ</description></item><item><title>量子力学における角運動量演算子</title><link>https://freshrimpsushi.github.io/jp/posts/3251/</link><pubDate>Fri, 17 Jun 2022 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/3251/</guid><description>ビルドアップ 角運動量演算子は角運動量の古典的定義から自然に誘導される。 $$ \mathbf{l} = \mathbf{r} \times \mathbf{p} \tag{1} $$ ここで$\mathbf{r} = (x, y, z)$、$\math</description></item><item><title>コンボリューションのサポート</title><link>https://freshrimpsushi.github.io/jp/posts/3249/</link><pubDate>Mon, 13 Jun 2022 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/3249/</guid><description>定理 実数の二つの集合 $A, B$に対して、$A + B$を次のように定義しよう。 $$A + B := \left\{ a + b : \forall a \in A, \forall b \in \supp B \right\}$$ 二つの関数 $f, g$に対して以下が成</description></item><item><title>ラドン変換と積分積分、畳み込み</title><link>https://freshrimpsushi.github.io/jp/posts/3245/</link><pubDate>Sun, 05 Jun 2022 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/3245/</guid><description>要約1 $\mathcal{R}$をラドン変換と呼ぼう。 $$ \mathcal{R} f (s, \boldsymbol{\theta}) = \int\limits_{\mathbf{x} \cdot \boldsymbol{\theta} = s} f(\mathbf{x}) d \mathbf{x} $$ $\mathcal{R}_{\boldsymbol{\theta}}f(s) = \mathcal{R} f (s, \boldsymbol{\theta})$とし</description></item><item><title>LaTeXで韓国語を書く方法</title><link>https://freshrimpsushi.github.io/jp/posts/3243/</link><pubDate>Wed, 01 Jun 2022 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/3243/</guid><description>説明 kotex パッケージを使えば、韓国語が使える。 kotexを使った場合 \documentclass{article} \usepackage[utf8]{inputenc} \usepackage{kotex} \title{TeX에서 한글 쓰는 방법} \author{전기현} \dat</description></item><item><title>幾何学におけるオイラー指数</title><link>https://freshrimpsushi.github.io/jp/posts/3242/</link><pubDate>Mon, 30 May 2022 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/3242/</guid><description>定義 簡単な定義 任意の図形が一つ与えられたとしよう。点の数を$V$vertex、辺の数を$E$edge、面の数を$F$faceとする。この図形</description></item><item><title>TeXのインストールとVS Codeでの使用方法</title><link>https://freshrimpsushi.github.io/jp/posts/3241/</link><pubDate>Sat, 28 May 2022 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/3241/</guid><description>インストール ここからTeX Liveをダウンロードしてください。Windowsユーザーは、上のスクリーンショットで指されているリンクをクリック</description></item><item><title>光音響断層撮影の原理</title><link>https://freshrimpsushi.github.io/jp/posts/3239/</link><pubDate>Tue, 24 May 2022 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/3239/</guid><description>光音響効果 光音響効果photoacoustic/optoacoustic effectは、1880年に電話の最初の発明者と誤って知られている1</description></item><item><title>ガウス・ボーネの定理</title><link>https://freshrimpsushi.github.io/jp/posts/3238/</link><pubDate>Sun, 22 May 2022 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/3238/</guid><description>ガウス・ボンネの定理 $\mathbf{x} : U \to \mathbb{R}^{3}$を単連結な測地線座標切片写像、$\boldsymbol{\gamma}(I) \subset \m</description></item><item><title>断層撮影におけるサイノグラムとは？</title><link>https://freshrimpsushi.github.io/jp/posts/3237/</link><pubDate>Fri, 20 May 2022 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/3237/</guid><description>定義 ラドン変換のヒートマップをサイノグラムsinogramと言う。 説明 小さいファントムに対して、下の図から分かるように、サイングラフのように</description></item><item><title>単純連結領域</title><link>https://freshrimpsushi.github.io/jp/posts/3236/</link><pubDate>Wed, 18 May 2022 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/3236/</guid><description>定義 $\mathscr{R}$を曲面 $M$のリージョンとする。$\mathscr{R}$内の全ての閉曲線がヌル・ホモトピックであれば、$\m</description></item><item><title>断層撮影におけるファントムとは？</title><link>https://freshrimpsushi.github.io/jp/posts/3235/</link><pubDate>Mon, 16 May 2022 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/3235/</guid><description>定義 断層撮影の数値的シミュレーションに使われる架空の画像をファントムphantomという。 説明 断層撮影で扱われる問題は、ある関数$f$とある</description></item><item><title>微分幾何学における零ホモトピー</title><link>https://freshrimpsushi.github.io/jp/posts/3234/</link><pubDate>Sat, 14 May 2022 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/3234/</guid><description>定義1 閉曲線 $\gamma$が曲面 $M$上の領域 $\mathscr{R}$を囲むとしよう。$\sigma$を$\mathscr{R}$上に置</description></item><item><title>ヒートマップとは？</title><link>https://freshrimpsushi.github.io/jp/posts/3233/</link><pubDate>Tue, 10 May 2022 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/3233/</guid><description>定義 関数$f : \mathbb{R}^{2} \to \mathbb{R}$のグラフを$xy-$平面に投影して、関数値を色で示したものをヒートマップheatmapという。 解説 上</description></item><item><title>n次元ラドン変換</title><link>https://freshrimpsushi.github.io/jp/posts/3231/</link><pubDate>Sun, 08 May 2022 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/3231/</guid><description>定義1 $s \in \mathbb{R}^{1}$、$\boldsymbol{\theta} \in S^{n-1}$に対して、ラドン変換 $\mathcal{R} : L^{2}(\mathbb{R}^{n}) \to L^{2}(</description></item><item><title>微分幾何学における曲面と領域の境界</title><link>https://freshrimpsushi.github.io/jp/posts/3230/</link><pubDate>Fri, 06 May 2022 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/3230/</guid><description>リージョン1 曲面 $M$ の部分集合 $\mathscr{R}$ を考えよう。$\mathscr{R}$ が開集合であり、$\mathscr{R}$ の任意の二点に対して、それらを</description></item><item><title>n次元極座標</title><link>https://freshrimpsushi.github.io/jp/posts/3229/</link><pubDate>Wed, 04 May 2022 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/3229/</guid><description>定義1 点$x \in \mathbb{R}^{n}$のデカルト座標を$x_{1}, \dots, x_{n}$とする。すると、この点の極座標$r, \varphi_{1}, \dots, \varph</description></item><item><title>ガウス曲率</title><link>https://freshrimpsushi.github.io/jp/posts/3228/</link><pubDate>Mon, 02 May 2022 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/3228/</guid><description>定義1 曲面の点$M$を$p$の法線ベクトルにマッピングする関数 $$ \nu : M \to S^{2} \text{ with } \nu (p) \text{ normal to } M \text{ at } p $$ すべての点で連続であれば、$M$を向</description></item><item><title>Julia FluxでMLPを実装して非線形関数を近似する方法</title><link>https://freshrimpsushi.github.io/jp/posts/3227/</link><pubDate>Sat, 30 Apr 2022 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/3227/</guid><description>スタート 必要なパッケージをインポートし、近似したい非線形関数を定義しよう。 学習セットの生成 関数の定義域である$[-5, 5]$から無作為に10</description></item><item><title>PyTorchでリストのタイプエラー「TypeError: can't convert cuda:0 device type tensor to numpy. Use Tensor.cpu() to copy the tensor to host memory first.」の解決方法</title><link>https://freshrimpsushi.github.io/jp/posts/3225/</link><pubDate>Tue, 26 Apr 2022 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/3225/</guid><description>エラー TypeError: can&amp;#39;t convert cuda:0 device type tensor to numpy. Use Tensor.cpu() to copy the tensor to host memory first. リストを扱っているのに、PyTorchテンソルやNumPy配列ではないにもかかわらず、上記のよう</description></item><item><title>微分可能多様体のコンパクトな表面</title><link>https://freshrimpsushi.github.io/jp/posts/3224/</link><pubDate>Sun, 24 Apr 2022 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/3224/</guid><description>定義1 $\overline{B}_{r} = \left\{ p \in \mathbb{R}^{3} : \left| p \right| \le r \right\}$としよう。曲面$M \subset \mathbb{R}^{3}$について、次を満たす$r$が存在するなら、</description></item><item><title>Juliaにおいて多次元配列を直接定義する方法</title><link>https://freshrimpsushi.github.io/jp/posts/3223/</link><pubDate>Fri, 22 Apr 2022 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/3223/</guid><description>説明 1次元配列（ベクトル）は次のように定義される。 julia&amp;gt; A = [1; 2; 3] 3-element Vector{Int64}: 1 2 3 ここで、;は第一次元を基準に次の要素に移る意味を持つ。これを一般化す</description></item><item><title>曲率が0の回転面</title><link>https://freshrimpsushi.github.io/jp/posts/3222/</link><pubDate>Wed, 20 Apr 2022 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/3222/</guid><description>定理1 $M$を回転面の$\boldsymbol{\alpha}$の単位速度曲線、ガウス曲率が$K=0$とする。すると、$M$は以下のいずれか</description></item><item><title>Julia FluxでMLPを実装し、MNISTで学習する方法</title><link>https://freshrimpsushi.github.io/jp/posts/3221/</link><pubDate>Mon, 18 Apr 2022 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/3221/</guid><description>MNIST データセットをロードする 古い例ではFlux.Dataを使うコードが見られるが、もうフラックスではサポートされていない。 julia&amp;gt; Flux.Data.MNIST.images() ┌ Warning: Flux&amp;#39;s datasets are deprecated, please use</description></item><item><title>正の曲率をもつ2つの回転面は局所的に等距離である</title><link>https://freshrimpsushi.github.io/jp/posts/3220/</link><pubDate>Sat, 16 Apr 2022 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/3220/</guid><description>定理1 $M_{1}$、$M_{2}$をそれぞれ単位速度曲線 $\boldsymbol{\alpha}_{1}$、$\boldsymbol{\a</description></item><item><title>Julia・フラックスでワンホットエンコーディングする方法</title><link>https://freshrimpsushi.github.io/jp/posts/3219/</link><pubDate>Thu, 14 Apr 2022 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/3219/</guid><description>概要 ワンホットエンコーディングとは、データを分類classに応じて標準基底ベクトルにマッピングすることだ。Fluxではこれを実現するための関</description></item><item><title>正のガウス曲率を持つ回転面</title><link>https://freshrimpsushi.github.io/jp/posts/3218/</link><pubDate>Tue, 12 Apr 2022 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/3218/</guid><description>概要1 単位速度曲線 $\boldsymbol{\alpha}(s) = \left( r(s), z(s) \right)$によって作られる回転面を$M$としよう。 $$ M = \left\{ \left( r(s)\cos\theta, r(s)\sin\theta, z(s) \right) : 0 \le \theta \le 2\pi, s \in (s_{0}, s_{1}) \right\} $$ $M$の座標片</description></item><item><title>Juliaパッケージ管理モードで使用可能なコマンドのリスト</title><link>https://freshrimpsushi.github.io/jp/posts/3217/</link><pubDate>Sun, 10 Apr 2022 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/3217/</guid><description>説明 Julia REPLで右の角括弧 ] を入力すると、パッケージ管理モードに切り替えることができる。パッケージ管理モードで利用可能なコマンドは以下の通り</description></item><item><title>曲面の基本定理</title><link>https://freshrimpsushi.github.io/jp/posts/3216/</link><pubDate>Fri, 08 Apr 2022 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/3216/</guid><description>定理1 開集合$U \subset \mathbb{R}^{2}$について、$U$内の任意の二点が$U$内の曲線で繋がるとしよう。そして、関数$L_{ij},</description></item><item><title>Juliaでnpyファイルを読み込む方法</title><link>https://freshrimpsushi.github.io/jp/posts/3215/</link><pubDate>Wed, 06 Apr 2022 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/3215/</guid><description>説明 この写真は、Pythonでファントム$f$のラドン変換$\mathcal{R}f$を計算し、それを*.npyファイルとして保存する過程を</description></item><item><title>微分幾何学における局所等距離写像</title><link>https://freshrimpsushi.github.io/jp/posts/3214/</link><pubDate>Mon, 04 Apr 2022 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/3214/</guid><description>定義1 二つの曲面の間で定義された函数 $f : M \to N$が与えられたとする。すべての点 $p \in M$に対して縮小写像 $f|_{U} : U \to V$が等距離写像になるような開</description></item><item><title>Juliaでヒートマップにプロットを重ねて描く方法</title><link>https://freshrimpsushi.github.io/jp/posts/3213/</link><pubDate>Sat, 02 Apr 2022 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/3213/</guid><description>コード 例えば、$(5,5)$の配列のヒートマップの上に、$0$から$2\pi$までのサイン曲線を描きたいとしよう。こんなコードを書きたくなる</description></item><item><title>微分幾何学における等距離写像</title><link>https://freshrimpsushi.github.io/jp/posts/3212/</link><pubDate>Thu, 31 Mar 2022 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/3212/</guid><description>定義1 ２つの曲面 $M, N$の間の関数$f : M \to N$が与えられたとする。次の条件を満たす$f$を等距離写像isometryと呼ぶ。 $f$が微分可能</description></item><item><title>Julia FluxでMLPを実装し、勾配降下法で最適化する方法</title><link>https://freshrimpsushi.github.io/jp/posts/3211/</link><pubDate>Tue, 29 Mar 2022 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/3211/</guid><description>MLPの実装 まず、Juliaの機械学習パッケージFlux.jlと、オプティマイザーの更新メソッドupdate!を読み込もう。 using Flux using Flux: update! Den</description></item><item><title>二つの曲面の間で微分可能な関数</title><link>https://freshrimpsushi.github.io/jp/posts/3210/</link><pubDate>Sun, 27 Mar 2022 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/3210/</guid><description>定義1 ２つの曲面$M, N$の間の関数$f : M \to N$が与えられたとする。点$p \in M$, $f(p) \in N$を含む座標片マッピングを$\mathbf{x} : U \to</description></item><item><title>Juliaフラックスで隠れ層を扱う方法</title><link>https://freshrimpsushi.github.io/jp/posts/3209/</link><pubDate>Fri, 25 Mar 2022 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/3209/</guid><description>線形1 Fluxで、線形層はDense()で実装できる。 Dense(in, out, σ=identity; bias=true, init=glorot_uniform) Dense(W::AbstractMatrix, [bias, σ] 活性化関数のデフォルト値は恒等関数だ。reluや</description></item><item><title>ガウスの偉大な定理</title><link>https://freshrimpsushi.github.io/jp/posts/3208/</link><pubDate>Wed, 23 Mar 2022 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/3208/</guid><description>定理[^1] ガウス曲率 $K$は固有的であり、以下が成り立つ。 $$ K = \dfrac{\sum\limits_{l} R_{121}^{l}g_{l2}}{g} $$ ここで、$R_{ijk}^{l}$はリーマン曲率テンソルの係数であり</description></item><item><title>Juliaで異なるサイズのベクトル成分ごとに操作する方法</title><link>https://freshrimpsushi.github.io/jp/posts/3207/</link><pubDate>Mon, 21 Mar 2022 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/3207/</guid><description>説明 julia&amp;gt; x = [1 2 3] 1×3 Matrix{Int64}: 1 2 3 julia&amp;gt; y = [1 2 3 4] 1×4 Matrix{Int64}: 1 2 3 4 julia&amp;gt; x .+ y ERROR: DimensionMismatch サイズが異なる二つのベクトルは、基本的に要素ごとの演算を行うことがで</description></item><item><title>微分幾何学におけるリーマン曲率テンソル、ガウスの方程式、コダッチ-マイナルディの方程式</title><link>https://freshrimpsushi.github.io/jp/posts/3206/</link><pubDate>Sat, 19 Mar 2022 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/3206/</guid><description>定義1 リーマン曲率テンソルの係数coefficients of Riemannian curvature tensor $R_{ijk}^{l}$は以下のように定義される。 $$ R_{ijk}^{l} = \dfrac{\partial \Gamma_{ik}^{l}}{\partial u^{j}} - \dfrac{\partial \Gamma_{ij}^{l}}{\partial u^{k}} + \sum_{p}</description></item><item><title>PyTorchでテンソルの次元とサイズの扱い方</title><link>https://freshrimpsushi.github.io/jp/posts/3205/</link><pubDate>Thu, 17 Mar 2022 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/3205/</guid><description>定義 $A$をパイトーチのテンソルとしよう。 次の順序ペア$(a_{0}, a_{1}, \dots, a_{n-1})$を$A$のサイズと呼ぶ。 $$ \text{A.size() = torch.Size}([a_{0}, a_{1}, \dots, a_{n-1} ]) $$ $\prod \limits_{i=0}^{n-1} a_{i}</description></item><item><title>曲線に沿って平行であるベクトル場の必要十分条件</title><link>https://freshrimpsushi.github.io/jp/posts/3204/</link><pubDate>Tue, 15 Mar 2022 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/3204/</guid><description>定理1 $\boldsymbol{\gamma}(t) = \mathbf{x}\left( \gamma^{1}(t), \gamma^{2}(t) \right)$を正則曲線とし、それが$\mathbf{x}$の座標パッチ上にあるとする。$\mathbf{X}(t)$を曲</description></item><item><title>Juliaでの曲線から特定の値まで/二つの曲線の間/閉曲線の内部の塗り方</title><link>https://freshrimpsushi.github.io/jp/posts/3203/</link><pubDate>Sun, 13 Mar 2022 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/3203/</guid><description>特定の値まで塗る1 plot()の属性でfillrange=a、fillalpha=b、fillcolor=:colorを使うと、プロットされ</description></item><item><title>ガウス写像の定義とガウス曲率との関係</title><link>https://freshrimpsushi.github.io/jp/posts/3202/</link><pubDate>Fri, 11 Mar 2022 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/3202/</guid><description>定義1 曲面 $M$ の各点 $p$ を単位法線に写像する関数 $\nu$ を ガウス写像Gauss mapと呼ぶ。 $$ \nu : M \to \mathbb{S}^{2} \quad \text{and} \quad \nu (p) = \mathbf{n}_{p} $$ 説明 ガウス写像は、normal</description></item><item><title>ガウス曲率と平均曲率</title><link>https://freshrimpsushi.github.io/jp/posts/3200/</link><pubDate>Mon, 07 Mar 2022 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/3200/</guid><description>定義1 曲面 $M$ 上の点 $p$ における主曲率を $\kappa_{1}, \kappa_{2}$ としよう。$L$ を ワインガルテンマップ と称する。ガウス曲率Gaussian curvature $K$ を次のように定義する。</description></item><item><title>PyTorchでテンソルをパディングする方法</title><link>https://freshrimpsushi.github.io/jp/posts/3199/</link><pubDate>Sat, 05 Mar 2022 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/3199/</guid><description>コード 1 torch.nn.functional.pad(input, pad, mode='constant', value=0.0) input: パディングするテンソル pad: パディングの位置 mode: パディングの方法 value: パディングの値 説明 pad 次元$n$のテンソルを入力とする時、最大で</description></item><item><title>曲線に沿った平行なベクトル場の性質</title><link>https://freshrimpsushi.github.io/jp/posts/3198/</link><pubDate>Thu, 03 Mar 2022 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/3198/</guid><description>性質 $\mathbf{X}(t)$と$\mathbf{Y}(t)$を曲面$M$上の正則曲線$\alpha (t)$に沿って平行なベクトルフィー</description></item><item><title>Python matplotlibで軸を削除する方法</title><link>https://freshrimpsushi.github.io/jp/posts/3197/</link><pubDate>Tue, 01 Mar 2022 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/3197/</guid><description>コード1 グラフの軸を表示したくない場合は、plt.axis('off') （または &amp;lsquo;off&amp;rsquo;の代わりにFalse）を使</description></item><item><title>微分幾何学におけるオイラーの定理</title><link>https://freshrimpsushi.github.io/jp/posts/3196/</link><pubDate>Sun, 27 Feb 2022 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/3196/</guid><description>定理1 $\mathbf{Y}$を点$p$での曲面$M$の単位タンジェントベクトルとしよう。 $$ \mathbf{Y} \in T_{p}M \quad \text{and} \quad \left\| \mathbf{Y} \right\| = 1 $$ $\kappa_{1} \ge \kappa_{2}</description></item><item><title>Python matplotlibで垂直線と水平線を描く方法</title><link>https://freshrimpsushi.github.io/jp/posts/3195/</link><pubDate>Fri, 25 Feb 2022 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/3195/</guid><description>コード1 2 import numpy as np import matplotlib.pyplot as plt x = np.linspace(0,2*np.pi,num=1000) y = np.sin(x) plt.plot(x,y) plt.show() axhline(y=0, xmin=0, xmax=1, **kwargs) axvline(x=0, ymin=0, ymax=1, **kwargs) 水平線はplt.axhline()で、垂直線はplt.axvline()で追加でき</description></item><item><title>主曲線の曲率</title><link>https://freshrimpsushi.github.io/jp/posts/3194/</link><pubDate>Wed, 23 Feb 2022 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/3194/</guid><description>ビルドアップ1 曲面 $M$がどの方向に、どれだけ曲がっているかを知るためには、各方向の法曲率 $\kappa_{n}$を知ればいい。つまり、点$</description></item><item><title>基本形式と座標変換の関係</title><link>https://freshrimpsushi.github.io/jp/posts/3193/</link><pubDate>Mon, 21 Feb 2022 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/3193/</guid><description>概要1 座標変換 $f : V \to U$が与えられたとき、$U$上のメトリック $g$と$V$上のメトリック$\overline{g}$の関係について説明す</description></item><item><title>第2標準形式とヴィンガルテンマップの関係</title><link>https://freshrimpsushi.github.io/jp/posts/3192/</link><pubDate>Sat, 19 Feb 2022 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/3192/</guid><description>定理1 曲面上の点$p$に対して$\mathbf{X}, \mathbf{Y} \in T_{p}M$を接ベクトルとしよう。すると、以下が成り立つ。 $$ II(\mathbf{X}, \mathbf{Y}) = \left\langle L(\mathbf{X}), \mathbf{Y} \right\rangle = \left\langle \mathbf{X},</description></item><item><title>Juliaで機械学習データセットを使用する方法</title><link>https://freshrimpsushi.github.io/jp/posts/3191/</link><pubDate>Thu, 17 Feb 2022 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/3191/</guid><description>説明 MLDatasets.jl1 2パッケージを使用すると、以下のデータセットを使用できる。リンクがあるデータセットは、それぞれの文書で使用方法を説明している。 ビジョン</description></item><item><title>ビンガルテン方程式</title><link>https://freshrimpsushi.github.io/jp/posts/3190/</link><pubDate>Tue, 15 Feb 2022 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/3190/</guid><description>定理1 曲面$M$上では、次の式が成り立つ。 $$ \mathbf{n}_{j} = - \sum_{k} {L^{k}}_{j}\mathbf{x}_{k} $$ ここで、$\mathbf{x} : U \to M$は座標片写像、$\mathbf{n}$は単位</description></item><item><title>Python Pandasデータフレームの列と行の名前を取得する方法</title><link>https://freshrimpsushi.github.io/jp/posts/3189/</link><pubDate>Sun, 13 Feb 2022 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/3189/</guid><description>コード import pandas as pd data = { &amp;#39;나이&amp;#39; : [26,23,22,22,21,21,20,20,20,20,18,17], &amp;#39;키&amp;#39; : [160, 163, 163, 162, 164, 163, 164, 150, 158, 162, 172, 173], &amp;#39;별명&amp;#39; : [&amp;#39;땡모&amp;</description></item><item><title>バインガルテン・マップ</title><link>https://freshrimpsushi.github.io/jp/posts/3188/</link><pubDate>Fri, 11 Feb 2022 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/3188/</guid><description>定義1 $M$を曲面、$p \in M$を曲面上の点とする。次のように定義される写像$L : T_{p}M \to \mathbb{R}^{3}$をバインガルテン・マップと</description></item><item><title>PyTorchでテンソルを結合またはスタックする方法</title><link>https://freshrimpsushi.github.io/jp/posts/3187/</link><pubDate>Wed, 09 Feb 2022 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/3187/</guid><description>テンソルを連結する cat()1 cat(tensors, dim=0)は、指定された次元を基準に2つ以上のテンソルを連結する。つまり、指定された次元のサイズが増加するようにテン</description></item><item><title>ノーマルセクションの定義とメネラウスの定理</title><link>https://freshrimpsushi.github.io/jp/posts/3186/</link><pubDate>Mon, 07 Feb 2022 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/3186/</guid><description>定義1 曲面$M$上の曲線$\boldsymbol{\gamma}$が与えられたとしよう。$p \in M$での法線$\mathbf{n}(p)$と$</description></item><item><title>Python matplotlibでグラフのスケール範囲を指定する方法</title><link>https://freshrimpsushi.github.io/jp/posts/3185/</link><pubDate>Sat, 05 Feb 2022 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/3185/</guid><description>コード1 plt.clim()を使って、画像のスケールを固定することができる。ただし、plt.imshow()はデフォルトでカラーバーをプリン</description></item><item><title>第2正規形の性質</title><link>https://freshrimpsushi.github.io/jp/posts/3184/</link><pubDate>Thu, 03 Feb 2022 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/3184/</guid><description>定義 第2基本形式とは、接空間 $T_{p}M$の上の双線形形式として定義されるもので、次のように定義される。二つの接ベクトル$\mathbf{</description></item><item><title>PyTorchでモデルの重み値を得る方法</title><link>https://freshrimpsushi.github.io/jp/posts/3183/</link><pubDate>Tue, 01 Feb 2022 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/3183/</guid><description>説明 次のようなモデルを定義しよう。 import torch import torch.nn as nn class Model(nn.Module): def __init__(self): super(Model, self).__init__() self.linear = nn.Linear(3, 3, bias=True) self.conv = nn.Conv2d(3, 5, 2) f = Model() すると、.weightや.biasメソッドで各層の重みや</description></item><item><title>測地線座標変換</title><link>https://freshrimpsushi.github.io/jp/posts/3182/</link><pubDate>Sun, 30 Jan 2022 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/3182/</guid><description>定理1 $M$を曲面とし、$\alpha : [a,b] \to M$を閉じていない単純正則曲線とする。すると、$\alpha$に沿った測地線座標チャート$\ma</description></item><item><title>Python npy ファイルが開かない時の解決方法</title><link>https://freshrimpsushi.github.io/jp/posts/3181/</link><pubDate>Fri, 28 Jan 2022 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/3181/</guid><description>エラー # code1 解決法 npyファイルを開いて上記のようなエラーに遭遇した場合、次のように allow_pickle=True を追加して解決できます。 # code2</description></item><item><title>微分幾何学における方向微分</title><link>https://freshrimpsushi.github.io/jp/posts/3180/</link><pubDate>Wed, 26 Jan 2022 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/3180/</guid><description>定義1 $\mathbf{X} \in T_{p}M$を接ベクトル、$\alpha (t)$を曲面$M$上の曲線としよう。すると、$\alpha : (-\epsilon, \epsilon) \to M$であり$\alp</description></item><item><title>Pythonで複数のforループを1行で書く方法</title><link>https://freshrimpsushi.github.io/jp/posts/3179/</link><pubDate>Mon, 24 Jan 2022 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/3179/</guid><description>コード インデックスiが2まで、jが4まで繰り返されることを望むなら、for文を次のように書けばいい。 &amp;gt;&amp;gt;&amp;gt; for i in range(3): ... for j in range(5): ... if j == 4: ... print((i,j)) ... else :</description></item><item><title>最短距離の曲線であれば、それは測地線である</title><link>https://freshrimpsushi.github.io/jp/posts/3178/</link><pubDate>Sat, 22 Jan 2022 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/3178/</guid><description>サマリー1 $\boldsymbol{\gamma}$を曲面$M$上の二点$P = \boldsymbol{\gamma}(a), Q = \boldsymbol{\gamma}(b)$を結ぶ単位</description></item><item><title>PyTorchでテンソルをディープコピーする方法</title><link>https://freshrimpsushi.github.io/jp/posts/3177/</link><pubDate>Thu, 20 Jan 2022 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/3177/</guid><description>説明 PyTorchのテンソルも他のオブジェクトと同様にcopy.deepcopy()を使って深いコピーができる。 &amp;gt;&amp;gt;&amp;gt; import torch &amp;gt;&amp;gt;&amp;gt; import copy &amp;gt;&amp;gt;&amp;gt; a = torch.ones(2,2) &amp;gt;&amp;gt;&amp;gt; b = a</description></item><item><title>測地線の一意性定理</title><link>https://freshrimpsushi.github.io/jp/posts/3176/</link><pubDate>Tue, 18 Jan 2022 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/3176/</guid><description>定理1 点$p$を曲面$M$上の点としよう。$\mathbf{X} \in T_{p}M$を点$p$での接ベクトルの単位ベクトルとしよう。すると、以下</description></item><item><title>LaTeXにおける\mathrm、\text、\operatornameの違い</title><link>https://freshrimpsushi.github.io/jp/posts/3175/</link><pubDate>Sun, 16 Jan 2022 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/3175/</guid><description>\mathrm, \text code1 $$ \begin{array}{cc} \mathrm{sin}(\mathrm{mathrm}) &amp;amp; \text{sin}(\text{text}) \end{array} \\[1em] \text{basic font: abcdefghijklmnopqrstuvwxyz} $$ デフォルト設定を見ると、\mathrm と \text のレンダリングには違いがないように見える。それは、デフォルトのフォント</description></item><item><title>曲面に沿った平行ベクトル場の定義</title><link>https://freshrimpsushi.github.io/jp/posts/3174/</link><pubDate>Fri, 14 Jan 2022 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/3174/</guid><description>曲線に沿ったベクトル場[^1] 定義 曲面 $M$と曲線 $\alpha : \left[ a, b \right] \to M$が与えられたとする。それぞれの$t \in \left[ a,b \right]$を点$\alph</description></item><item><title>PyTorchでリストとループを使用して人工ニューラルネットワークレイヤーを定義する方法</title><link>https://freshrimpsushi.github.io/jp/posts/3173/</link><pubDate>Wed, 12 Jan 2022 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/3173/</guid><description>説明 階層を多く積み上げる必要がある場合や、頻繁にニューラルネットワークの構造を変える必要があるなど、人工ニューラルネットワークの定義を自動化</description></item><item><title>回転面上の測地線</title><link>https://freshrimpsushi.github.io/jp/posts/3172/</link><pubDate>Mon, 10 Jan 2022 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/3172/</guid><description>定理1 $M$がunit-speed curveで生成された表面の回転だとしよう。そうすると、 (a) すべての経線は測地線である。 (b) 平行線が測地線にな</description></item><item><title>微分多様体上のイマージョンと埋め込み</title><link>https://freshrimpsushi.github.io/jp/posts/3171/</link><pubDate>Sat, 08 Jan 2022 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/3171/</guid><description>定義1 $M^{m}, N^{m}$を$m, n$次元の微分多様体、$\phi : M \to N$を微分可能な関数としよう。 全ての点$p \in M$での微分$d\phi_{p</description></item><item><title>微分幾何学における回転面</title><link>https://freshrimpsushi.github.io/jp/posts/3170/</link><pubDate>Thu, 06 Jan 2022 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/3170/</guid><description>定義1 $z$を与えられた軸の変数とし、$r&amp;gt;0$を$z-$軸からの距離とする。そうすると、下の図のような$rz-$平面上の曲線$\al</description></item><item><title>位相数学における埋め込み</title><link>https://freshrimpsushi.github.io/jp/posts/3169/</link><pubDate>Tue, 04 Jan 2022 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/3169/</guid><description>定義1 $X, Y$を位相空間とする。$f : X \to Y$が次を満たす場合、$f$を埋め込みと言い、$f : X \hookrightarrow Y$と表記する。 $X$が$Y$の部分空間であ</description></item><item><title>微分幾何学における直線（測地線）の定義</title><link>https://freshrimpsushi.github.io/jp/posts/3168/</link><pubDate>Sun, 02 Jan 2022 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/3168/</guid><description>ビルドアップ1 2 曲面$M \subset \mathbb{R}^{3}$の上である曲線に沿って動く対象があるとしよう。全体の空間$\mathbb{R}^{3</description></item><item><title>同一関数</title><link>https://freshrimpsushi.github.io/jp/posts/3167/</link><pubDate>Fri, 31 Dec 2021 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/3167/</guid><description>定義1 集合 $X$に対して、以下の関数 $I_{X} : X \to X$を恒等関数identity functionという。 $$ I_{X}(x) = x,\quad \forall x \in X $$ 説明 主に以下のような記法</description></item><item><title>測地曲率は内在的である</title><link>https://freshrimpsushi.github.io/jp/posts/3166/</link><pubDate>Wed, 29 Dec 2021 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/3166/</guid><description>定理1 曲面上の曲線の測地曲率$\kappa_{g}$は内在的である。 説明 つまり、$\kappa_{g}$は単位法線ベクトル$\mathbf{</description></item><item><title>n次元微分可能多様体上の接空間はn次元ベクトル空間である</title><link>https://freshrimpsushi.github.io/jp/posts/3165/</link><pubDate>Mon, 27 Dec 2021 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/3165/</guid><description>概要 $M$を$n$次元微分多様体、$T_{p}M$を点$p\in M$上の接空間だとしよう。接空間はベクトル空間になり、特に$n$次元ベクトル</description></item><item><title>クリストッフェル記号は内在的である</title><link>https://freshrimpsushi.github.io/jp/posts/3164/</link><pubDate>Sat, 25 Dec 2021 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/3164/</guid><description>要旨1 クリストッフェル記号 $\Gamma_{ij}^{k}$は次の式を満たす。つまり、固有的である。 $$ \Gamma_{ij}^{k} = \dfrac{1}{2} \sum \limits_{l=1}^{2} g^{lk} \left( \dfrac{\partial g_{lj}}{\partial u_{i}} - \dfrac{\partial g_{ij}}{\partial u_{l}} + \dfrac{\partial g_{il}}{\partial u_{j}} \right)</description></item><item><title>多変数関数のテイラーの定理</title><link>https://freshrimpsushi.github.io/jp/posts/3163/</link><pubDate>Thu, 23 Dec 2021 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/3163/</guid><description>定理1 $f : \mathbb{R}^{n} \to \mathbb{R}$を$C^{k}$ 関数、$\mathbf{a} = (a_{1}, \dots, a_{n}) \in \mathbb{R}^{n}$としよう。そしたら、</description></item><item><title>拡散幾何学における本質の定義</title><link>https://freshrimpsushi.github.io/jp/posts/3162/</link><pubDate>Tue, 21 Dec 2021 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/3162/</guid><description>定義1 微分幾何学では、(単位ノーマル $\mathbf{n}$に依存しないで) 第一基本形式の係数 $g_{ij}$のみに依存する関数を内在的in</description></item><item><title>シルバー・ミュラー放射条件</title><link>https://freshrimpsushi.github.io/jp/posts/3161/</link><pubDate>Sun, 19 Dec 2021 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/3161/</guid><description>定義1 $E$を電気場としよう。次の式をシルバー・ミュラー放射条件Silver-Mueller radiation conditionという。$x\in \mathbb{R}^{3}, r = \left| x</description></item><item><title>微分幾何学におけるガウスの定理</title><link>https://freshrimpsushi.github.io/jp/posts/3160/</link><pubDate>Fri, 17 Dec 2021 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/3160/</guid><description>整理1 $\mathbf{x} : U \to \R^{3}$を座標パッチと言おう。$(u_{1}, u_{2})$を$U$の座標としよう。 $\mathbf{n}$を単位ノーマ</description></item><item><title>論文レビュー: Neural Ordinary Differential Equations</title><link>https://freshrimpsushi.github.io/jp/posts/3159/</link><pubDate>Wed, 15 Dec 2021 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/3159/</guid><description>概要および要約 「Neural Ordinary Differential Equations」はRicky T. Q. Chenら3名が2018年に発表した論文であり、2018 NeurIPS Best Papers</description></item><item><title>微分幾何学におけるクリストッフェル記号</title><link>https://freshrimpsushi.github.io/jp/posts/3158/</link><pubDate>Mon, 13 Dec 2021 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/3158/</guid><description>ビルドアップ $\mathbf{x} : U \to \mathbb{R}^{3}$を座標写像とする。微分幾何学では、幾何学的な対象の特徴や性質を微分を通して説明する。したが</description></item><item><title>微分幾何学における第2基本形式</title><link>https://freshrimpsushi.github.io/jp/posts/3156/</link><pubDate>Thu, 09 Dec 2021 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/3156/</guid><description>ビルドアップ $\mathbf{x} : U \to \mathbb{R}^{3}$を座標チャートと呼ぼう。微分幾何学では、幾何学的な対象の特徴や性質を微分を通じて説明する。</description></item><item><title>ロビン境界条件</title><link>https://freshrimpsushi.github.io/jp/posts/3155/</link><pubDate>Tue, 07 Dec 2021 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/3155/</guid><description>定義1 開いた集合$\Omega$で定義された偏微分方程式が与えられたとする。以下の境界条件をロビン境界条件Robin boundary conditionとい</description></item><item><title>ガウス曲率と測地曲率</title><link>https://freshrimpsushi.github.io/jp/posts/3154/</link><pubDate>Sun, 05 Dec 2021 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/3154/</guid><description>ビルドアップ1 $$ \left\{ T(s), N(s), B(s), \kappa (s), \tau (s) \right\} $$ 曲線を分析するとき、フレネ・セレ装置を使ったのを思い出してほしい。曲面について学ぶときも、同様のものを考</description></item><item><title>ノイマン境界条件</title><link>https://freshrimpsushi.github.io/jp/posts/3153/</link><pubDate>Fri, 03 Dec 2021 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/3153/</guid><description>定義1 開集合$\Omega$で定義された偏微分方程式が与えられたとしよう。次のような境界条件をノイマン境界条件Neumann boundary conditi</description></item><item><title>単純曲面上の媒介変数曲線</title><link>https://freshrimpsushi.github.io/jp/posts/3152/</link><pubDate>Wed, 01 Dec 2021 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/3152/</guid><description>定義1 2 $\mathbf{x} : U \to \R^{3}$を単純な表面としよう。$U$の座標を$(u, v)$としよう。ある点$(u_{0}, v_{0})$において、以下</description></item><item><title>偏微分方程式における境界値問題</title><link>https://freshrimpsushi.github.io/jp/posts/3151/</link><pubDate>Mon, 29 Nov 2021 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/3151/</guid><description>定義 開集合$\Omega$で定義された偏微分方程式が与えられたとしよう。$\Omega$の境界である$\partial \Omega$で未知数</description></item><item><title>リーマン計量を用いた計算の具体的な例</title><link>https://freshrimpsushi.github.io/jp/posts/3150/</link><pubDate>Sat, 27 Nov 2021 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/3150/</guid><description>表記法 単純曲面 $\mathbf{x} : U \to \mathbb{R}^{3}$において、$(u,v)$を$U$の座標としよう。 $$ \mathbf{x}_{1} := \dfrac{\partial \mathbf{x}}{\partial u}\quad \text{and} \quad \mathbf{x}_{2} := \dfrac{\partial \mathbf{x}}{\partial v} $$ リーマン計量</description></item><item><title>ポテンシャル、ポテンシャルエネルギーの一般的な定義</title><link>https://freshrimpsushi.github.io/jp/posts/3149/</link><pubDate>Thu, 25 Nov 2021 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/3149/</guid><description>定義1 (スカラー) ポテンシャル ベクトル場 $\mathbf{V}$が保存場であるとしよう。つまり、$\nabla \times \mathbf{V} = \mathbf{0}$と</description></item><item><title>第1 基本形式、リーマン計量</title><link>https://freshrimpsushi.github.io/jp/posts/3148/</link><pubDate>Tue, 23 Nov 2021 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/3148/</guid><description>ビルドアップ リーマン計量は、表面上の曲線の長さを計算する過程から出てくる概念であり、その過程は次の通りです。 $\boldsymbol{\al</description></item><item><title>符号関数</title><link>https://freshrimpsushi.github.io/jp/posts/3147/</link><pubDate>Sun, 21 Nov 2021 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/3147/</guid><description>定義 符号関数sign function $\mathrm{sgn} : \mathbb{R} \to \mathbb{R}$は以下のように定義される。 $$ \mathrm{sgn}(x) :=\begin{cases} 1 &amp;amp; x&amp;gt;0 \\ 0 &amp;amp; x=0 \\ -1 &amp;amp; x&amp;lt;0 \end{cases} $$ 説明 式や定義を簡単に記述するた</description></item><item><title>微分幾何学における曲面の定義</title><link>https://freshrimpsushi.github.io/jp/posts/3146/</link><pubDate>Fri, 19 Nov 2021 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/3146/</guid><description>定義1 $M \subset \R^{3}$という$P \in M$の全ての点に対して、イメージ$\mathbf{x}(U)$が$P$のある$\epsilon-$近傍$</description></item><item><title>ギリシャ文字の読み方・書き方と数学・科学における意味</title><link>https://freshrimpsushi.github.io/jp/posts/3145/</link><pubDate>Wed, 17 Nov 2021 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/3145/</guid><description>アルファ $\Alpha, \alpha$ アルファalphaと読む。TeXコードはそれぞれ\Alpha、\alpha ギリシャ文字の最初の文字で、「アルファでありオメガ」は</description></item><item><title>固有分解</title><link>https://freshrimpsushi.github.io/jp/posts/3144/</link><pubDate>Mon, 15 Nov 2021 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/3144/</guid><description>定義1 $M \subset \mathbb{R}^{3}$と$\epsilon &amp;gt;0$が与えられたとしよう。$d$をユークリッド距離と呼ぶ。以下のように定</description></item><item><title>Pythonでスライシングする際の注意点</title><link>https://freshrimpsushi.github.io/jp/posts/3143/</link><pubDate>Sat, 13 Nov 2021 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/3143/</guid><description>説明 Pythonで文字列やリストなどをインデックスするとき、最後のインデックスを超えるインデックスを入力すると、以下のようなエラーが出る。 &amp;gt;&amp;gt;&amp;gt;</description></item><item><title>単純な曲面上の接ベクトル</title><link>https://freshrimpsushi.github.io/jp/posts/3142/</link><pubDate>Thu, 11 Nov 2021 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/3142/</guid><description>定義1 座標パッチ $\mathbf{x} : U \to \mathbb{R}^{3}$ 上の点 $p = \mathbf{x}(a,b)$ を考えよう。ベクトル $\mathbf{X}$ が $p$ を通るある曲線 $\mathbf{x}(U)$ 上の$p$での速度ベクトルならば、$\mathbf{X}$ を</description></item><item><title>微分同型写像</title><link>https://freshrimpsushi.github.io/jp/posts/3141/</link><pubDate>Tue, 09 Nov 2021 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/3141/</guid><description>定義1 $M_{1}, M_{2}$を微分多様体としよう。関数$\varphi : M_{1} \to M_{2}$が下記の条件を満たす場合、微分同相写像diffeomorph</description></item><item><title>PyTorchでランダム順列を作成し、テンソルの順序をシャッフルする方法</title><link>https://freshrimpsushi.github.io/jp/posts/3140/</link><pubDate>Sun, 07 Nov 2021 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/3140/</guid><description>torch.randperm()1 torch.randperm(n): 0からn-1までのランダムな整数の順列を返す。もちろん、整数型でなければ入力に使えない。 &amp;gt;&amp;gt;&amp;gt; torch.randperm(4) tensor([2, 1, 0, 3]) &amp;gt;&amp;gt;&amp;gt; torch.randperm(8) tensor([4, 0, 1, 3, 2, 5, 6, 7]) &amp;gt;&amp;gt;&amp;gt; torch.randperm(16) tensor([12, 5, 6, 3, 15, 13,</description></item><item><title>解析学における逆関数定理</title><link>https://freshrimpsushi.github.io/jp/posts/3139/</link><pubDate>Fri, 05 Nov 2021 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/3139/</guid><description>定理1 開集合 $E$で定義された関数$\mathbf{f} : E \subset \mathbb{R}^{n} \to \mathbb{R}^{n}$が$C^{1}$関数だとしよう。$\math</description></item><item><title>合成関数のヤコビアン</title><link>https://freshrimpsushi.github.io/jp/posts/3138/</link><pubDate>Wed, 03 Nov 2021 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/3138/</guid><description>概要 関数$f : \mathbb{R}^{n} \to \mathbb{R}^{m}$と$g : \mathbb{R}^{m} \to \mathbb{R}^{k}$が与えられたとする。$f$のヤコビアンを$J(f)</description></item><item><title>交代関数</title><link>https://freshrimpsushi.github.io/jp/posts/3137/</link><pubDate>Mon, 01 Nov 2021 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/3137/</guid><description>定義 集合$X$が与えられたとする。以下を満たす関数を交代関数alternating functionと呼ぶ。 $$ \phi : \overbrace{X \times X \times \cdots \times X}^{n} \to \mathbb{R} \\ \phi (x_{1}, \dots, x_{i},</description></item><item><title>微分多様体上で定義された関数の微分</title><link>https://freshrimpsushi.github.io/jp/posts/3136/</link><pubDate>Sat, 30 Oct 2021 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/3136/</guid><description>定理1 $M_{1}^{n}, M_{2}^{m}$をそれぞれ$m, n$次元の微分多様体としよう。$\varphi : M_{1} \to M_{2}$を微分可能な関数としよう。そして</description></item><item><title>Juliaでの微分の求め方</title><link>https://freshrimpsushi.github.io/jp/posts/3135/</link><pubDate>Thu, 28 Oct 2021 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/3135/</guid><description>概要1 名前はCalculus.jlだけど、積分はサポートしない。 機械学習などで話される自動微分が必要ならZygote.jlパッケージを参照し</description></item><item><title>多変数ベクトル関数の連鎖律</title><link>https://freshrimpsushi.github.io/jp/posts/3134/</link><pubDate>Tue, 26 Oct 2021 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/3134/</guid><description>定理 二つの関数 $\mathbf{g} : D \subset \mathbb{R}^{m} \to \mathbb{R}^{k}$、$\mathbf{f} : \mathbf{g}(\mathbb{R}^{k}) \subset \mathbb{R}^{k} \to \mathbb{R}^{n}$が微分可能だとしよう</description></item><item><title>微分可能多様体上の接線ベクトル</title><link>https://freshrimpsushi.github.io/jp/posts/3132/</link><pubDate>Fri, 22 Oct 2021 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/3132/</guid><description>ビルドアップ1 微分多様体 $M$ の各点で接ベクトルを定義しようとしている。微分可能な曲線 $\alpha : (-\epsilon , \epsilon) \to M$が与えられたとする。これから、微分幾何学で</description></item><item><title>音波の散乱問題</title><link>https://freshrimpsushi.github.io/jp/posts/3131/</link><pubDate>Wed, 20 Oct 2021 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/3131/</guid><description>解説1 散乱理論の正規問題は、$u = u^{i} + u^{s}$のような状況で全体場total fieldが与えられた時、入射場incident field$</description></item><item><title>微分可能多様体から微分可能多様体への微分可能関数</title><link>https://freshrimpsushi.github.io/jp/posts/3130/</link><pubDate>Mon, 18 Oct 2021 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/3130/</guid><description>定義1 $M_{1}, M_{2}$をそれぞれ$n, m$次元の微分多様体とする。マッピング$\varphi : M_{1} \to M_{2}$が以下の条件を満たせば、$p \in M</description></item><item><title>ゾンマーフェルト放射条件</title><link>https://freshrimpsushi.github.io/jp/posts/3129/</link><pubDate>Sat, 16 Oct 2021 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/3129/</guid><description>定義1 $u$を時間-調和波動としよう。以下の式をゾンマーフェルトの放射条件Sommerfeld radiation conditionと呼ぶ。 $$ \lim \limits_{r \to \infty} r \left( \dfrac{\partial u}{\partial</description></item><item><title>ベクトル空間</title><link>https://freshrimpsushi.github.io/jp/posts/3128/</link><pubDate>Thu, 14 Oct 2021 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/3128/</guid><description>定義1 ユークリッド空間 $\mathbb{R}^{n+1}$で原点$\mathbf{0}$を通るすべての直線の集合を$\mathbb{P}^{</description></item><item><title>散乱理論とは？</title><link>https://freshrimpsushi.github.io/jp/posts/3127/</link><pubDate>Tue, 12 Oct 2021 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/3127/</guid><description>説明1 散乱理論とは? 散乱理論とは、不均一な媒質inhomogeneous mediumが入射する粒子particleや波waveにどんな影響を</description></item><item><title>モジュライ空間</title><link>https://freshrimpsushi.github.io/jp/posts/3126/</link><pubDate>Sun, 10 Oct 2021 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/3126/</guid><description>定義 簡単な定義 幾何的な物体の集まりを モジュライ空間moduli spaceと言う。 説明 例えば、原点を通るすべての直線の集合であるプロジェクティ</description></item><item><title>逆問題とは何か？</title><link>https://freshrimpsushi.github.io/jp/posts/3125/</link><pubDate>Fri, 08 Oct 2021 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/3125/</guid><description>定義 式で表される物理現象がある時、原因により式を解き結果に関する情報を探すプロセスを 直接問題または順問題と言う。 逆に、結果に関する情報から原</description></item><item><title>含有関数</title><link>https://freshrimpsushi.github.io/jp/posts/3124/</link><pubDate>Wed, 06 Oct 2021 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/3124/</guid><description>定義 $X \subset Y$としよう。次を満たす関数を包含関数inclusion (function)という。 $$ i : X \to Y, \quad \text{and} \quad i(x) = x,\quad \forall x\in X $$ 説明 簡単に言えば</description></item><item><title>関数の拡張と縮小</title><link>https://freshrimpsushi.github.io/jp/posts/3123/</link><pubDate>Mon, 04 Oct 2021 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/3123/</guid><description>定義1 関数 $f : X \to Y$が与えられたとしよう。$U \subset X \subset V$が成立するとしよう。 縮小写像 次を満たす$f |_{U}$を$f$の縮小写像Uへの$f</description></item><item><title>ヘルムホルツ方程式</title><link>https://freshrimpsushi.github.io/jp/posts/3122/</link><pubDate>Sat, 02 Oct 2021 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/3122/</guid><description>定義 以下の偏微分方程式をヘルムホルツ方程式Helmholtz equationという。 $$ \nabla^{2}u(x) + k^{2} u(x) = \Delta u(x) + k^{2} u(x) = (\Delta + k^{2} )u(x) = 0,\quad x \in \mathbb{R}^{n} $$ ここで、$\</description></item><item><title>微分方程式の基本解、グリーン関数</title><link>https://freshrimpsushi.github.io/jp/posts/3121/</link><pubDate>Thu, 30 Sep 2021 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/3121/</guid><description>定義 非同次項が$f$の非同次微分方程式の解$u$が$\Phi$と$f$に関する関数として表現される場合、$\Phi$を微分方程式の基本解fu</description></item><item><title>三次元単位球の座標分割写像</title><link>https://freshrimpsushi.github.io/jp/posts/3120/</link><pubDate>Tue, 28 Sep 2021 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/3120/</guid><description>公式 3次元空間の単位球は、下記の6つの座標片マッピングによって表される。$(u,v) \in U = \left\{ (u,v) : u^{2} + v^{2} \lt 1 \right\}$について、 $$ \begin{align*} \mathbf{x}</description></item><item><title>有界線形作用素の拡張定理</title><link>https://freshrimpsushi.github.io/jp/posts/3119/</link><pubDate>Sun, 26 Sep 2021 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/3119/</guid><description>定理1 2 $V_{1}, V_{2}$をバナッハ空間としよう。$W \subset V_{1}$を稠密部分空間としよう。そして、$T : W \to V_{2}$を有界線形作用素としよ</description></item><item><title>有界線形作用素の性質</title><link>https://freshrimpsushi.github.io/jp/posts/3118/</link><pubDate>Fri, 24 Sep 2021 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/3118/</guid><description>定理1 $V$をノルム空間とし、$T$を有界線形作用素とし、$W \subset V$とする。そうすると、次が成り立つ。 (a) $$ T\left( \overline{W} \right) \subset \overline{T(W)} $$ さらに、$T$が可逆で</description></item><item><title>濃密な部分集合と閉包</title><link>https://freshrimpsushi.github.io/jp/posts/3117/</link><pubDate>Wed, 22 Sep 2021 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/3117/</guid><description>凝集部分集合 定義1 $W \subset V$をノルム空間$V$の部分集合とする。任意の$\mathbf{v} \in V$と$\epsilon \gt 0$に対して、以下を満</description></item><item><title>微分可能な多様体</title><link>https://freshrimpsushi.github.io/jp/posts/3116/</link><pubDate>Mon, 20 Sep 2021 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/3116/</guid><description>定義1 $M$を任意の集合、$U_{\alpha} \subset \mathbb{R}^{n}$を開集合とする。一対一関数$\mathbf{x}_{\alp</description></item><item><title>LaTeXでの行間隔の広げ方</title><link>https://freshrimpsushi.github.io/jp/posts/3115/</link><pubDate>Sat, 18 Sep 2021 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/3115/</guid><description>コード $$ \begin{vmatrix} \dfrac{ \partial x}{ \partial r} &amp;amp; \dfrac{ \partial x}{ \partial \theta} \\[1em] \dfrac{ \partial y}{ \partial r} &amp;amp; \dfrac{ \partial y}{ \partial \theta} \end{vmatrix} $$ $$ \begin{align*} \begin{vmatrix} \frac{ \partial x}{ \partial r} &amp;amp; \frac{ \partial x}{ \partial \theta} \\ \frac{ \partial y}{ \partial r} &amp;amp; \frac{ \partial y}{ \partial \theta} \end{vmatrix} &amp;amp;&amp;amp; \begin{vmatrix} \dfrac{ \partial x}{ \partial r} &amp;amp; \dfrac{ \partial x}{ \partial \theta}</description></item><item><title>PyTorchでの重み、モデル、オプティマイザの保存と読み込み方法</title><link>https://freshrimpsushi.github.io/jp/posts/3114/</link><pubDate>Thu, 16 Sep 2021 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/3114/</guid><description>再学習しない場合1 2 3 保存する 再学習しないのなら、ウェイトやモデルのみを保存すればいい。ただし、以下で述べるように、再学習をする予定なら、オ</description></item><item><title>ベクトル場の線積分</title><link>https://freshrimpsushi.github.io/jp/posts/3113/</link><pubDate>Tue, 14 Sep 2021 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/3113/</guid><description>定義1 ベクターフィールド $\mathbf{F} : \mathbb{R}^{3} \to \mathbb{R}^{3}$と3次元空間上の曲線 $C$がこんなふうに $\mathbf{r}(t)$として与</description></item><item><title>スカラー場の線積分</title><link>https://freshrimpsushi.github.io/jp/posts/3112/</link><pubDate>Sun, 12 Sep 2021 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/3112/</guid><description>平面曲線上の線積分1 ビルドアップ $y = f(x)$として与えられた関数の定積分は、$x$軸に沿って関数値$f(x)$を全部足すというアイデアで定</description></item><item><title>曲線の長さ</title><link>https://freshrimpsushi.github.io/jp/posts/3111/</link><pubDate>Fri, 10 Sep 2021 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/3111/</guid><description>平面曲線の長さ1 ビルドアップ 図(a)のように滑らかな関数$y=f(x)$が与えられており、その上に$n+1$個の点があるとする。曲線の全長$</description></item><item><title>매끄러운 함수의 정의</title><link>https://freshrimpsushi.github.io/jp/posts/3110/</link><pubDate>Wed, 08 Sep 2021 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/3110/</guid><description>定義 関数 $f$が無限に微分可能であれば、$f$をスムーズsmooth, スムーズな関数という。 関数 $f$が微分可能であり、$f^{\prime</description></item><item><title>方向微分の定義</title><link>https://freshrimpsushi.github.io/jp/posts/3109/</link><pubDate>Mon, 06 Sep 2021 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/3109/</guid><description>ビルドアップ 多変数関数$f = \mathbb{R}^{n} \to \mathbb{R}$が与えられたとしよう。$f$の導関数を求める場合には、一変数関数の時にはしなかった**</description></item><item><title>PyTorchでNumpy配列からカスタムデータセットを作成して使用する方法</title><link>https://freshrimpsushi.github.io/jp/posts/3108/</link><pubDate>Sat, 04 Sep 2021 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/3108/</guid><description>説明 &amp;gt;&amp;gt;&amp;gt; import numpy as np &amp;gt;&amp;gt;&amp;gt; import torch &amp;gt;&amp;gt;&amp;gt; from torch.utils.data import TensorDataset, DataLoader $32\times 32$のサイズの「モノクロ」写真100枚を積み重ねたnumpy配列$X$と、それに対するラベル$Y$が用意</description></item><item><title>三角関数の積分表</title><link>https://freshrimpsushi.github.io/jp/posts/3107/</link><pubDate>Thu, 02 Sep 2021 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/3107/</guid><description>公式 $$ \begin{equation} \int_{0}^{\pi / 2} \sin \theta \cos \theta d \theta = \dfrac{1}{2} \end{equation} $$ $$ \begin{equation} \begin{aligned} \int \cos^{2}\theta d\theta &amp;amp;= \dfrac{1}{2}\theta + \dfrac{1}{4}\sin 2\theta + C \\ \int_{0}^{2\pi} \cos^{2}\theta d\theta &amp;amp;= \pi \\ \int_{0}^{\pi} \cos^{2}\theta d\theta &amp;amp;= \dfrac{\pi}{2} \end{aligned} \end{equation} $$ $$ \begin{equation} \begin{aligned} \int \sin^{2}\theta d\theta &amp;amp;= \dfrac{1}{2}\theta - \dfrac{1}{4}\sin 2\theta + C \\ \int_{0}^{2\pi} \sin^{2}\theta d\theta &amp;amp;= \pi \\ \int_{0}^{\pi} \sin^{2}\theta d\theta &amp;amp;= \dfrac{\pi}{2}</description></item><item><title>階乗に関連する公式들</title><link>https://freshrimpsushi.github.io/jp/posts/3106/</link><pubDate>Tue, 31 Aug 2021 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/3106/</guid><description>連続する奇数の積 整数 $n \ge 0$に対して、次が成り立つ。 $$ (2n-1) \cdot (2n-3) \cdots 5 \cdot 3 \cdot 1 = \dfrac{(2n)!}{2^{n} (n!)} = (2n-1)!! $$ ここで、$n!!$はダブルファクトリアルを意味する。 証明</description></item><item><title>ガウス積分の一般化</title><link>https://freshrimpsushi.github.io/jp/posts/3105/</link><pubDate>Sun, 29 Aug 2021 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/3105/</guid><description>式1 整数$n \ge 0$に対して、次の式が成り立つ。 偶数次の多項式がかけられた場合 $$ \int_{-\infty}^{\infty} x^{2n} e^{-\alpha x^{2}}dx = \dfrac{(2n)!}{n! 2^{2n}}\sqrt{\dfrac{\pi}{\alpha^{2n+1}}} $$ $$ \int_{0}^{\infty} x^{2n} e^{-\alpha x^{2}}dx = \dfrac{(2n)!}{n! 2^{2n+1}}\sqrt{\dfrac{\pi}{\alpha^{2n+1}}} $$ 奇数次の多項式がかけられた場</description></item><item><title>PyTorchでの重みの初期化方法</title><link>https://freshrimpsushi.github.io/jp/posts/3104/</link><pubDate>Fri, 27 Aug 2021 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/3104/</guid><description>コード1 次のようにニューラルネットワークを定義したとする。forward部分は省略されている。 import torch import torch.nn as nn class Custom_Net(nn.Module): def __init__(self): super(Custom_Net, self).__init__() self.linear_1 = nn.Linear(1024, 1024, bias=False) self.linear_2 = nn.Linear(1024, 512, bias=False) self.linear_3</description></item><item><title>PyTorchでMLPを実装する方法</title><link>https://freshrimpsushi.github.io/jp/posts/3103/</link><pubDate>Wed, 25 Aug 2021 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/3103/</guid><description>環境 OS: Windows10 Version: Python 3.9.2, torch 1.8.1+cu111</description></item><item><title>正則写像</title><link>https://freshrimpsushi.github.io/jp/posts/3102/</link><pubDate>Mon, 23 Aug 2021 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/3102/</guid><description>定義1 写像 $\mathbf{f} : \mathbb{R}^{n} \to \mathbb{R}^{m}$が以下のように与えられたとする。 $$ \mathbf{f}(\mathbf{x}) = \left( f_{1}(\mathbf{x}), f_{2}(\mathbf{x}), \dots, f_{m}(\mathbf{x}) \right),\quad \mathbf{x}\in \R^{n} $$ $\mathbf{f}$の全微分、ま</description></item><item><title>3次元スカラー/ベクトル関数の導関数</title><link>https://freshrimpsushi.github.io/jp/posts/3101/</link><pubDate>Sat, 21 Aug 2021 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/3101/</guid><description>定理 3次元のスカラー関数$f : \mathbb{R}^{3} \to \mathbb{R}^{1}$が$f(x(t), y(t), z(t)) = f$のとき、$\dfrac{df}{dt}$は次のよ</description></item><item><title>L^p 空間の埋め込み定理</title><link>https://freshrimpsushi.github.io/jp/posts/3100/</link><pubDate>Thu, 19 Aug 2021 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/3100/</guid><description>定理1 $\Omega \subset \mathbb{R}^{n}$が開集合で、$\text{vol}(\Omega) = \int_{\Omega} 1 dx \lt \infty$とする。 (a) $1 \le p \le q \le \i</description></item><item><title>L∞空間</title><link>https://freshrimpsushi.github.io/jp/posts/3099/</link><pubDate>Tue, 17 Aug 2021 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/3099/</guid><description>定義1 $\Omega \subset \mathbb{R}^{n}$を開集合と呼ぼう。$\Omega$上の可測関数 $u$に対して、以下の条件を満たす定数$K$が存在する</description></item><item><title>ヘルダーの不等式の逆：Lp関数の十分条件</title><link>https://freshrimpsushi.github.io/jp/posts/3098/</link><pubDate>Sun, 15 Aug 2021 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/3098/</guid><description>概要1 $\Omega \subset \mathbb{R}^{n}$を開集合だとしよう。可測関数$u$が$L^{p}$空間に含まれるための必要十分条件は、 $$ \sup \left\{ \int_{\Omega} \left| u(x) \right|</description></item><item><title>ベクトル領域の定義と性質</title><link>https://freshrimpsushi.github.io/jp/posts/3097/</link><pubDate>Fri, 13 Aug 2021 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/3097/</guid><description>定義 与えられた面 $S$に対して、次の積分を$S$のベクトルの面積vector areaと呼ぶ。 $$ \mathbf{a} := \int_{\mathcal{S}} d \mathbf{a} $$ 説明 例えば、半径が$R$の半球のベ</description></item><item><title>デル演算子を含むベクトル積分の様々な公式</title><link>https://freshrimpsushi.github.io/jp/posts/3096/</link><pubDate>Wed, 11 Aug 2021 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/3096/</guid><description>公式1 $T, U$をスカラー関数、$\mathbf{v}$をベクトル関数としよう。それでは、次の式が成り立つ。 $$ \begin{equation} \int_{\mathcal{V}} (\nabla T) d \tau = \oint_{\mathcal{S}} T d \mathbf{a} \end{equation} $$ $$ \begin{equation} \int_{\mathcal{V}} (\nabla</description></item><item><title>PyTorch RuntimeError:「gradはスカラー出力に対してのみ暗黙的に作成できます」の解決法</title><link>https://freshrimpsushi.github.io/jp/posts/3095/</link><pubDate>Mon, 09 Aug 2021 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/3095/</guid><description>事例1 もし損失関数をloss = sum(a,b)と設定していたら、loss.backward()でバックプロパゲーションを行う際にこのエラーが</description></item><item><title>不適切積分の定義</title><link>https://freshrimpsushi.github.io/jp/posts/3094/</link><pubDate>Sat, 07 Aug 2021 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/3094/</guid><description>定義1 関数 $f$が固定された $a$と $b&amp;gt;a$の全ての区間$[a,b]$で積分可能だとする。次の極限が存在するなら、$f$の不適切積分</description></item><item><title>コーシー問題、初期値問題</title><link>https://freshrimpsushi.github.io/jp/posts/3093/</link><pubDate>Thu, 05 Aug 2021 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/3093/</guid><description>定義1 開いた集合 $\Omega=\mathbb{R}^{n}$で定義された偏微分方程式が与えられたとする。時間が $t=0$の時の$\Omeg</description></item><item><title>波動方程式</title><link>https://freshrimpsushi.github.io/jp/posts/3092/</link><pubDate>Tue, 03 Aug 2021 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/3092/</guid><description>定義1 次の偏微分方程式を波動方程式wave equationと呼ぶ。 $$ u_{tt} - \Delta u =0 $$ この式は、波の伝播速度を定数$1$とする場合である。波の伝播</description></item><item><title>Python matplotlibでの「TK_GetPixmap in TKImgPhotoInstanceSetSizeでpixmapを作成できない」エラーの解決方法</title><link>https://freshrimpsushi.github.io/jp/posts/3091/</link><pubDate>Sun, 01 Aug 2021 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/3091/</guid><description>問題 import matplotlib.pyplot as plt import numpy as np for i in range(400): fig = plt.figure(figsize=(12, 12)) plt.plot(np.random.rand(10)) plt.savefig(&amp;#34;./plt_test/no_%d&amp;#34; %i) print(&amp;#34;test_%d&amp;#34; %i) 上のようにPythonでmatplotlib.pyplotを使ってグラフを描いて、それを保存す</description></item><item><title>熱物理学における状態関数とは？</title><link>https://freshrimpsushi.github.io/jp/posts/3090/</link><pubDate>Fri, 30 Jul 2021 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/3090/</guid><description>定義1 経路に依存せず、固定された値を持って、マクロに測定可能な性質を状態関数function of stateまたは状態変数variables of s</description></item><item><title>Julia、MATLAB、PythonでShepp-Loganファントムを使う方法</title><link>https://freshrimpsushi.github.io/jp/posts/3089/</link><pubDate>Wed, 28 Jul 2021 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/3089/</guid><description>ジュリア 1 トモグラフィーパッケージ Tomography.jlで、phantom()関数を使えばいい。 phantom(m,n=1): $m\times m$サイズのShepp-Logan フ</description></item><item><title>Julia、MATLAB、Pythonでのラドン変換の使用方法</title><link>https://freshrimpsushi.github.io/jp/posts/3088/</link><pubDate>Mon, 26 Jul 2021 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/3088/</guid><description>Python1 サイキットイメージパッケージ skimage の transform モジュールでは、MATLABと異なり、 radon, iradon の両変換ともに角度を入力しない場合 0:179 で実行される。 import matplotlib.pyplot as plt from skimage.data</description></item><item><title>ディリクレ境界条件</title><link>https://freshrimpsushi.github.io/jp/posts/3087/</link><pubDate>Sat, 24 Jul 2021 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/3087/</guid><description>定義1 開集合$\Omega$で定義された偏微分方程式が与えられたとする。以下の境界条件をディリクレ境界条件Dirichlet boundary conditi</description></item><item><title>ラプラス方程式の基本解</title><link>https://freshrimpsushi.github.io/jp/posts/3086/</link><pubDate>Thu, 22 Jul 2021 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/3086/</guid><description>ビルドアップ1 ラプラス方程式は回転変換に対して不変なので、$u(x)$の変数を半径に変更して考えます。そうすれば、次のような過程を経て、微分</description></item><item><title>境界の滑らかさ</title><link>https://freshrimpsushi.github.io/jp/posts/3085/</link><pubDate>Tue, 20 Jul 2021 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/3085/</guid><description>定義1 $U \subset \mathbb{R}^{n}$を有界な開集合としよう。$\partial U$を$U$の境界とする。境界の各点$x = (x_{1}, \dots, x_{n}) \in \partial U$に</description></item><item><title>回転変換, 回転行列</title><link>https://freshrimpsushi.github.io/jp/posts/3084/</link><pubDate>Sun, 18 Jul 2021 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/3084/</guid><description>定義 2次元平面 $\mathbb{R}^{2}$で任意の ベクトルを反時計回りに $\theta$だけ回転させる変換は次のとおりである。 $$ \begin{bmatrix} x^{\prime} \\ y^{\prime}</description></item><item><title>絶対値関数</title><link>https://freshrimpsushi.github.io/jp/posts/3083/</link><pubDate>Fri, 16 Jul 2021 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/3083/</guid><description>定義 次のように定義される関数 $f$ を絶対値関数absolute value functionと呼び、関数の値を $|x|$ のように表記する。 $$ |x| := f(x) = \begin{cases} x &amp;amp;\text{if } x&amp;gt;0 \\ 0 &amp;amp;\text{if</description></item><item><title>偏導関数：多変数ベクトル関数の導関数</title><link>https://freshrimpsushi.github.io/jp/posts/3082/</link><pubDate>Wed, 14 Jul 2021 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/3082/</guid><description>ビルドアップ1 一変数関数の導関数の定義を思い出そう。 $$ \lim \limits_{h\to 0} \dfrac{f(x+h) - f(x)}{h} = f^{\prime}(x) $$ 左辺の分子を$h$に対する線形関数で近似すると、次のようになる。 $$ \begin{equation}</description></item><item><title>スカラー場のラプラシアン</title><link>https://freshrimpsushi.github.io/jp/posts/3081/</link><pubDate>Mon, 12 Jul 2021 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/3081/</guid><description>定義 スカラー関数の$u : \mathbb{R}^{n} \to \mathbb{R}$のグラジエントのダイバージェンスをラプラシアンLaplacianと呼んで、次のように表記す</description></item><item><title>輸送方程式</title><link>https://freshrimpsushi.github.io/jp/posts/3080/</link><pubDate>Sat, 10 Jul 2021 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/3080/</guid><description>定義1 以下の偏微分方程式を輸送方程式という。 $$ \begin{equation} u_{t} + b \cdot Du=0\quad \text{in }\mathbb{R}^n \times (0,\ \infty) \end{equation} $$ $b=(b_{1}, b_2, \cdot, b_{n}) \in \mathbb{R}^n$は固定されたベクトル $u=u(x</description></item><item><title>すべてのn次元実ベクトル空間はR^nと同型である</title><link>https://freshrimpsushi.github.io/jp/posts/3079/</link><pubDate>Thu, 08 Jul 2021 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/3079/</guid><description>定義1 $V$と$W$をベクトル空間と言う。可逆（全単射）な線形変換 $T : V \to W$が存在する場合、$V$と$W$は同型と言われる。$T$を同型写</description></item><item><title>線形変換の行列表現</title><link>https://freshrimpsushi.github.io/jp/posts/3078/</link><pubDate>Tue, 06 Jul 2021 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/3078/</guid><description>定義1 $V, W$を有限次元 ベクトル空間としよう。$\beta = \left\{ \mathbf{v}_{1}, \dots, \mathbf{v}_{n} \right\}$と$\gamma = \left\{ \mathbf{w}_{1}, \dots, \mathbf{w}_{m} \right\}$をそれぞれ$</description></item><item><title>関数列の一様収束と連続性</title><link>https://freshrimpsushi.github.io/jp/posts/1893/</link><pubDate>Sun, 04 Jul 2021 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/1893/</guid><description>定理1 距離空間$E$上で、関数列$\left\{ f_{n} \right\}$が$f$に一様収束すると仮定しよう。 $$ f_{n} \rightrightarrows f $$ $E$の集積点$x$に数列</description></item><item><title>逆伝播アルゴリズム</title><link>https://freshrimpsushi.github.io/jp/posts/3077/</link><pubDate>Fri, 02 Jul 2021 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/3077/</guid><description>この文は逆転派アルゴリズムの原理を数学専攻者が理解しやすいように作成された。 表記法 上図のような 人工ニューラルネットワーク が与えられたとする。</description></item><item><title>可逆線型変換の空間の性質</title><link>https://freshrimpsushi.github.io/jp/posts/3076/</link><pubDate>Wed, 30 Jun 2021 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/3076/</guid><description>定理1 $\Omega$のすべての可逆線形変換の集合を考えよう。 $$ \Omega = \left\{ \text{all invertible linear operator on } \mathbb{R}^{n} \right\} $$ (a) $T_{1} \in \Omega$と$T_{2} \in L(\mathb</description></item><item><title>線形変換のノルム</title><link>https://freshrimpsushi.github.io/jp/posts/3075/</link><pubDate>Mon, 28 Jun 2021 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/3075/</guid><description>定義1 線形変換 $T \in L(\mathbb{R}^{n}, \mathbb{R}^{m})$のノルムを次のように定義する。 $$ \begin{equation} \| T \| := \sup \limits_{\| \mathbf{x} \| = 1} \| T(\mathbf{x}) \| \end{equation} $$ 説明 (a) を見ると次の式が成</description></item><item><title>線形変換の合成</title><link>https://freshrimpsushi.github.io/jp/posts/3074/</link><pubDate>Sat, 26 Jun 2021 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/3074/</guid><description>定義1 線形変換$T_{1} : V \to W$と$T_{2} : W \to Z$が与えられたとする。次に定義される変換$T_{2} T_{1}$を$T_{1}$と</description></item><item><title>線形変換が全射および単射であるための必要十分条件</title><link>https://freshrimpsushi.github.io/jp/posts/3073/</link><pubDate>Thu, 24 Jun 2021 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/3073/</guid><description>定理11 線形変換 $T: V \to W$について、以下の二つの命題は同値である。 $T$が一対一である。 $N(T) = \text{ker}(T) = \left\{ \mathbf{0} \right\}$ 説明 これは、$T$の核を理解することが</description></item><item><title>線形変換の階数、零空間の次元、次元定理</title><link>https://freshrimpsushi.github.io/jp/posts/3072/</link><pubDate>Tue, 22 Jun 2021 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/3072/</guid><description>定義1 $T : V \to W$を線形変換とする。 $T$の値域 $R(T)$が有限次元ならば、$R(T)$の次元を**$T$のランク**rankといい、次の</description></item><item><title>線形変換：カーネルと値域</title><link>https://freshrimpsushi.github.io/jp/posts/3071/</link><pubDate>Sun, 20 Jun 2021 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/3071/</guid><description>定義1 $T : V \to W$を線形変換とする。$T$が$\mathbf{0}$にマッピングする$V$の要素の集合をカーネルまたは零空間と言い、以下のよ</description></item><item><title>定義域の基底は線形変換の像を生成する</title><link>https://freshrimpsushi.github.io/jp/posts/3070/</link><pubDate>Fri, 18 Jun 2021 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/3070/</guid><description>定理1 線形変換 $T : V \to W$が与えられたとする。$V$が有限次元で、$S = \left\{ \mathbf{v}_{1}, \mathbf{v}_{2}, \dots, \mathbf{v}_{n} \right\}$を$V$の基底とする。すると、任意の$\</description></item><item><title>超関数の畳み込み収束定理</title><link>https://freshrimpsushi.github.io/jp/posts/1895/</link><pubDate>Wed, 16 Jun 2021 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/1895/</guid><description>定理1 $\phi$が$\int_{\mathbb{R}^{n}}\phi (\mathbf{x})d\mathbf{x}=1$を満たすテスト関</description></item><item><title>離散フーリエ逆変換</title><link>https://freshrimpsushi.github.io/jp/posts/3069/</link><pubDate>Mon, 14 Jun 2021 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/3069/</guid><description>公式1 $\mathbf{a} = (a_{0}, a_{1}, \dots, a_{N-1}) \in \mathbb{C}^{N}$の離散フーリエ変換を$\hat{\mathbf{a}} = (\hat{a}_{0}, \hat{a}_{1}, \dots, \hat{a}_{N-1}) \in \mathbb{C}^{</description></item><item><title>気体の流束</title><link>https://freshrimpsushi.github.io/jp/posts/3063/</link><pubDate>Fri, 04 Jun 2021 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/3063/</guid><description>定義1 物理学で、フラックスとは、単位時間あたりに単位面積を通過(衝突)する粒子の数（またはエネルギーや運動量などの物理量）を意味する。フラッ</description></item><item><title>ダルトンの法則</title><link>https://freshrimpsushi.github.io/jp/posts/3062/</link><pubDate>Wed, 02 Jun 2021 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/3062/</guid><description>法則1 $n$ ▷eq.◁種類の分子が混在する気体の混合物があるとしよう。この気体の全圧力は、各気体の圧力を足したものと同じだ。 $$ p = \sum \limits_{i=1}^{n}N_{i} k_{B} T = \sum \limits_{i=1}^{n}p_{i}</description></item><item><title>球の立体角</title><link>https://freshrimpsushi.github.io/jp/posts/3061/</link><pubDate>Mon, 31 May 2021 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/3061/</guid><description>定義1 半径が$r$、表面積が$A$の3次元セクターの立体角$\Omega$を以下のように定義する。 $$ \Omega := \dfrac{A}{r^{2}} $$ 単位はステラジアンと言い、$\m</description></item><item><title>気体運動論によって導かれる理想気体方程式</title><link>https://freshrimpsushi.github.io/jp/posts/3060/</link><pubDate>Sat, 29 May 2021 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/3060/</guid><description>定義[^1] 面積$M$に作用する液体の圧力$p$は、液体が面積$M$に垂直に作用する力$F$と面積$M$の比率で定義される。 $$ p:=\frac{F}{M} \left[ \mathrm{N/m^{2}} \right] $$ 式 気</description></item><item><title>気体分子の速度と速さの期待値</title><link>https://freshrimpsushi.github.io/jp/posts/3059/</link><pubDate>Thu, 27 May 2021 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/3059/</guid><description>数式1 気体分子の速度を$\mathbf{v} = (v_{x}, v_{y}, v_{z})$、速さを$v = | \mathbf{v} |$とする。気体分子の速度と速さに関する期待値は次のとおり</description></item><item><title>離散フーリエ変換の性質</title><link>https://freshrimpsushi.github.io/jp/posts/3058/</link><pubDate>Tue, 25 May 2021 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/3058/</guid><description>性質1 $\mathbf{a} \in \mathbb{C}^{N}$の離散フーリエ変換を$\mathscr{F}_{N}$あるいは$\hat{\mathbf{a}}$と</description></item><item><title>シュワルツ空間における収束</title><link>https://freshrimpsushi.github.io/jp/posts/1897/</link><pubDate>Sun, 23 May 2021 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/1897/</guid><description>定義 $\left\{ \phi_{n} \right\}$をシュワルツ空間での数列としよう。全てのマルチインデックス $\alpha$, $\beta$に対して数列 $\left\{ \mathbf{x}^{\beta}D^{\alpha}\phi_{n}(\mathbf{x}) \right\}$が $0</description></item><item><title>ピカールの定理</title><link>https://freshrimpsushi.github.io/jp/posts/3057/</link><pubDate>Fri, 21 May 2021 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/3057/</guid><description>ビルドアップ1 以下のようなODEシステムを考えよう。 $$ \begin{equation} \begin{aligned} x_{1}^{\prime}(t) =&amp;amp;\ F_{1}(t,x_{1},x_{2},\cdots,x_{n}) \\ x_{2}^{\prime}(t) =&amp;amp;\ F_{2}(t,x_{1},x_{2},\cdots,x_{n}) \\ \vdots &amp;amp; \\ x_{n}^{\prime}(t) =&amp;amp;\ F_{n}(t,x_{1},x_{2},\cdots,x_{n}) \end{aligned} \end{equation} $$ $t=t_{0}$の時、各$x_{i}$の値を次</description></item><item><title>ハイゼンベルクの不確定性原理の証明</title><link>https://freshrimpsushi.github.io/jp/posts/3056/</link><pubDate>Wed, 19 May 2021 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/3056/</guid><description>定理1 二つの演算子 $A$と$B$について、次が成り立つ。 $$ \sigma_{A}^{2}\sigma_{B}^{2} \ge \left( \dfrac{1}{2\i} \braket{[A, B]} \right)^{2} $$ この時、$\sigma_{A}^{2}$は$A$の分散、$[A, B</description></item><item><title>ハイゼンベルクの不確定性原理</title><link>https://freshrimpsushi.github.io/jp/posts/3055/</link><pubDate>Mon, 17 May 2021 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/3055/</guid><description>ビルドアップ $f$とそのフーリエ変換 $\hat{f}$の間には特別な関係がある。ある定数$\Omega$に対して$\hat{f} (\omega) = 0\ for\ | \omega</description></item><item><title>発散する実数列の性質</title><link>https://freshrimpsushi.github.io/jp/posts/3052/</link><pubDate>Sat, 15 May 2021 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/3052/</guid><description>まとめ1 $\left\{ x_{n} \right\}$, $\left\{ y_{n} \right\}$は実数列であり、$\lim \limits_{n\to\infty} x_{n}=\infty(-\infty)$としよう。それなら次が成り立つ：</description></item><item><title>サンプリング定理</title><link>https://freshrimpsushi.github.io/jp/posts/3054/</link><pubDate>Thu, 13 May 2021 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/3054/</guid><description>ビルドアップ1 物理的なシグナル $f$が時間 $t_{1} &amp;lt; t_{2} &amp;lt; t_{3} &amp;lt; \cdots$に従って測定されているとしよう。$f(t_{1}), f(t_{2}), \dots$を知っ</description></item><item><title>指数関数と対数関数の極限</title><link>https://freshrimpsushi.github.io/jp/posts/3053/</link><pubDate>Tue, 11 May 2021 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/3053/</guid><description>公式 指数関数と対数関数に関して、以下の式が成り立つ。 $$ \begin{equation} \lim \limits_{x \to 0} \dfrac{\log (x + 1) }{x} = 1 \end{equation} $$ $$ \begin{equation} \lim \limits_{x \to 0} \dfrac{ e^{x} - 1}{x} = 1 \end{equation} $$ 証明 $(1)$ $$ \begin{align*} \lim \limits_{x \to 0} \dfrac{\log (x + 1) }{x} &amp;amp;=</description></item><item><title>単調数列と単調数列定理</title><link>https://freshrimpsushi.github.io/jp/posts/3051/</link><pubDate>Sun, 09 May 2021 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/3051/</guid><description>定義1 実数の数列 $\left\{ s_{n} \right\}$について、 $s_{n} \le s_{n+1}$が成り立てば、単調増加という。 $s_{n} \ge s_{n+1}$が成り立てば、単調減少</description></item><item><title>多変数関数の積分</title><link>https://freshrimpsushi.github.io/jp/posts/1902/</link><pubDate>Fri, 07 May 2021 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/1902/</guid><description>定義1 $I^{k}$をk-cell、$\mathbf{x} \in I^{k}$としよう。 $$ \mathbf{x} = (x_{1},\dots,x_{k}),\quad a_{i} \le x_{i} \le b_{i} (i=1,\dots,k) $$ $f: I^{k} \to \mathbb{R}$が連続で</description></item><item><title>多変数関数の畳み込み</title><link>https://freshrimpsushi.github.io/jp/posts/1903/</link><pubDate>Wed, 05 May 2021 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/1903/</guid><description>定義 $f,g:\mathbb{R}^{n}\to \mathbb{C}$と$\mathbf{x},\mathbf{y} \in \mathbb{R}^{n}$とする。そうすると、これら二つの多</description></item><item><title>重み付きLp空間</title><link>https://freshrimpsushi.github.io/jp/posts/1856/</link><pubDate>Mon, 03 May 2021 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/1856/</guid><description>定義1 以下のように定義される関数空間を重み付き$L^{p}$空間あるいは具体的に**$w$-重み付き$L^{p}$空間**という。 $$ L_{w}^{p}(a,b):= \left\{ f :</description></item><item><title>オイラー定数、自然定数eの定義</title><link>https://freshrimpsushi.github.io/jp/posts/3050/</link><pubDate>Sat, 01 May 2021 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/3050/</guid><description>定義1 下の級数の極限を定数$e$と定義する。 $$ e: = \sum \limits_{n=0}^{\infty} \dfrac{1}{n!} $$ 説明 その値がすぐに何であるかわからなくても、上記の級数が収束して何らかの極限が存在</description></item><item><title>直交基底に関する座標</title><link>https://freshrimpsushi.github.io/jp/posts/3040/</link><pubDate>Thu, 29 Apr 2021 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/3040/</guid><description>定義1 内積空間の基底$V$が直交集合である場合、$S$を直交基底orthogonal basisと言う。$S$が正規直交集合である場合、正規直</description></item><item><title>基底の加算／減算定理</title><link>https://freshrimpsushi.github.io/jp/posts/3028/</link><pubDate>Tue, 27 Apr 2021 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/3028/</guid><description>定理1 $S$を ベクトル空間 $V$の空でない部分集合としよう。 (a) もし$S$が線形独立で、$\mathbf{v} \in V$が$\mathbf{v} \notin</description></item><item><title>指数関数の微分法</title><link>https://freshrimpsushi.github.io/jp/posts/3049/</link><pubDate>Sun, 25 Apr 2021 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/3049/</guid><description>式 指数関数の導関数は次の通りである。 $$ \begin{equation} \dfrac{d e^{x}}{dx} = e^{x} \label{fml1} \end{equation} $$ 指数合成関数の導関数は次の通りである。 $$ \begin{equation} \dfrac{d \left( e^{f(x)} \right)}{dx} = f^{\prime}(x)e^{f(x)} \label{fml2} \end{equation} $$ 説明 指数関数は導関数と自分</description></item><item><title>直交性と線形独立の関係</title><link>https://freshrimpsushi.github.io/jp/posts/3045/</link><pubDate>Fri, 23 Apr 2021 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/3045/</guid><description>定義1 内積空間 $V$の二つのベクトル $\mathbf{u}, \mathbf{v}$が $\langle \mathbf{u}, \mathbf{v} \rangle = 0$を満たすならば、互いに直交orthogonalすると言う。 $V$</description></item><item><title>行空間、列空間、零空間の基底</title><link>https://freshrimpsushi.github.io/jp/posts/3027/</link><pubDate>Wed, 21 Apr 2021 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/3027/</guid><description>概要1 行空間、列空間、零空間などの概念は、線形システム$A \mathbf{x} = \mathbf{b}$を解くために作られた。線形システムは基本行操作を通じて解</description></item><item><title>関数の合成</title><link>https://freshrimpsushi.github.io/jp/posts/3048/</link><pubDate>Mon, 19 Apr 2021 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/3048/</guid><description>定義 関数 $f: X \to Y$, $g: f(X) \to Z$について次のように定義される$h: X \to Z$を**$f$と$g$の合成**composition of $g$ with $f$と呼び、</description></item><item><title>実ベクトル空間における内積とは？</title><link>https://freshrimpsushi.github.io/jp/posts/3044/</link><pubDate>Sat, 17 Apr 2021 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/3044/</guid><description>定義1 $V$を実ベクトル空間とする。$V$上の内積inner productとは、以下の条件を満たしつつ、$V$内の二つのベクトルを一つの実数</description></item><item><title>線形変換</title><link>https://freshrimpsushi.github.io/jp/posts/3026/</link><pubDate>Thu, 15 Apr 2021 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/3026/</guid><description>定義1 関数 $T : V \to W$がベクトル空間からベクトル空間への写像である場合、つまり $V$、$W$がベクトル空間である場合、$T$を変換trans</description></item><item><title>対数関数の微分법</title><link>https://freshrimpsushi.github.io/jp/posts/3047/</link><pubDate>Tue, 13 Apr 2021 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/3047/</guid><description>公式 底が$e$の対数関数の導関数は次の通りだ。 $$ \begin{equation} \dfrac{d \log x}{dx}=\dfrac{1}{x} \end{equation} $$ 対数合成関数の導関数は次の通りだ。 $$ \begin{equation} \dfrac{d \left( \log f(x) \right)}{dx} = \dfrac{f^{\prime}(x)}{f(x)} \end{equation} $$ 説明 特に$(2)$は便利</description></item><item><title>有限次元ベクトル空間における基底となるための必要十分条件</title><link>https://freshrimpsushi.github.io/jp/posts/3043/</link><pubDate>Sun, 11 Apr 2021 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/3043/</guid><description>定理1 $V$を$n$次元のベクトル空間とする。部分集合$S\subset V$が$n$個の要素を持つとする。$S$が$V$の基底であるための必</description></item><item><title>逆行列と連立一次方程式</title><link>https://freshrimpsushi.github.io/jp/posts/3024/</link><pubDate>Fri, 09 Apr 2021 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/3024/</guid><description>定理: 可逆行列であるための同値条件1 $A$をサイズが$n\times n$の正方行列だとする。すると以下の命題はすべて等価である。 (a) $A$は可</description></item><item><title>線形代数での射影定理</title><link>https://freshrimpsushi.github.io/jp/posts/3046/</link><pubDate>Wed, 07 Apr 2021 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/3046/</guid><description>定理1 $W$が有限次元 内積空間 $V$の部分空間であれば、全ての$\mathbf{u} \in V$は以下の式で一意に表現される。 $$ \begin{equation} \mathbf{u} = \mathbf{w}_{1} + \mathbf{w}_{2} \end{equation} $$ こ</description></item><item><title>パーセプトロン収束定理</title><link>https://freshrimpsushi.github.io/jp/posts/3023/</link><pubDate>Mon, 05 Apr 2021 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/3023/</guid><description>$X^{+}$, $X^{-}$が線形分離可能なトレーニングセットだとしよう。$y$を以下のラベルとする。 $$ y_{i} = \pm 1\ (\mathbf{x}_{i} \in X^{\pm}) $$ トレーニングセット全体$X = X^{+} \cup</description></item><item><title>基本行列</title><link>https://freshrimpsushi.github.io/jp/posts/3022/</link><pubDate>Sat, 03 Apr 2021 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/3022/</guid><description>定理: 可逆行列の同値条件 $A$ を大きさが $n\times n$ の正方行列とする。すると、以下の命題はすべて同値である。 (a) $A$ は可逆行列である。 (b) 同次線形システム $A\mathbf{x}=\mathbf{0}$ に</description></item><item><title>フーリエ変換の様々な意味</title><link>https://freshrimpsushi.github.io/jp/posts/3039/</link><pubDate>Thu, 01 Apr 2021 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/3039/</guid><description>フーリエ変換は数学、物理学、工学など広範囲にわたって扱われるほど、どのように見るかによって異なる意味を持つようになる。ここでは、数学、量子力</description></item><item><title>物理学における熱の定義</title><link>https://freshrimpsushi.github.io/jp/posts/3038/</link><pubDate>Tue, 30 Mar 2021 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/3038/</guid><description>定義1 相互に作用する二つの系間で移動するエネルギーを熱heatと定義する。 説明 熱の定義を理解するためには、仕事の概念を思い出すといい。ある人</description></item><item><title>同時同次一次方程式</title><link>https://freshrimpsushi.github.io/jp/posts/3020/</link><pubDate>Sun, 28 Mar 2021 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/3020/</guid><description>定義1 線形システムで、定数項が全部$0$だったら、同次homogeneousという。 $$ \begin{align*} a_{11}x_{1} + a_{12}x_{2} + \cdots + a_{1n}x_{n} &amp;amp;= 0 \\ a_{21}x_{1} + a_{22}x_{2} + \cdots + a_{2n}x_{n} &amp;amp;= 0 \\ &amp;amp;\vdots \\ a_{m1}x_{1} + a_{m2}x_{2} +</description></item><item><title>複素関数のWirtinger微分</title><link>https://freshrimpsushi.github.io/jp/posts/3035/</link><pubDate>Fri, 26 Mar 2021 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/3035/</guid><description>ビルドアップ 複素関数$f : \mathbb{C} \to \mathbb{C}$が与えられたとしよう。複素数$z=x+iy$は、２つの実数$x,y \in \mathbb{R}</description></item><item><title>- Japanese: ベクトル場の平行移動</title><link>https://freshrimpsushi.github.io/jp/posts/1632/</link><pubDate>Wed, 24 Mar 2021 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/1632/</guid><description>定理 $\boldsymbol{\alpha} (t)$を$C^{2}$ 曲面上の$M$とする正則曲線としよう。$\tilde{\mathbf{X}} = (\tilde{X}^{1}, \tilde{X}^{2})$</description></item><item><title>ガウス-ジョルダン消去法</title><link>https://freshrimpsushi.github.io/jp/posts/3019/</link><pubDate>Mon, 22 Mar 2021 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/3019/</guid><description>定義1 拡大行列が次の条件を満たす場合、行段階形echelon formと言います。 $0$じゃない要素がある行で、最初に現れる$0$じゃない数が</description></item><item><title>ベクトル空間の基底</title><link>https://freshrimpsushi.github.io/jp/posts/3017/</link><pubDate>Thu, 18 Mar 2021 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/3017/</guid><description>定義1 $S = \left\{ \mathbf{v}_{1}, \mathbf{v}_{2}, \dots, \mathbf{v}_{r} \right\}$をベクトル空間$V$の部分集合としよう。$S$が下記の二条件を満たす時、$S$を$V$の基底basis</description></item><item><title>行列変換</title><link>https://freshrimpsushi.github.io/jp/posts/3025/</link><pubDate>Wed, 17 Mar 2021 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/3025/</guid><description>定義 $\mathbb{R}^{n}$から$\mathbb{R}^{m}$への関数が$m \times n$ 行列 $A$に関して下記のようにマッピングされる時、</description></item><item><title>行列の相似</title><link>https://freshrimpsushi.github.io/jp/posts/3016/</link><pubDate>Sun, 14 Mar 2021 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/3016/</guid><description>定義1 正方行列 $A$、$B$とある可逆行列 $P$について、以下の式が成り立つとき、$B$は$A$に似ていると言う。 $$ B = P^{-1} A P $$ 説明 似ている</description></item><item><title>様々な関数空間</title><link>https://freshrimpsushi.github.io/jp/posts/3032/</link><pubDate>Fri, 12 Mar 2021 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/3032/</guid><description>定義 関数の集合 $X$ がベクトル空間である場合、$X$を関数空間function spaceと呼ぶ。 説明 関数空間 $X$ では、内積は以下のように積分で定義</description></item><item><title>LaTeXで数式を参照する方法（ハイパーリンク）</title><link>https://freshrimpsushi.github.io/jp/posts/3201/</link><pubDate>Tue, 09 Mar 2021 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/3201/</guid><description>コード \label{}と\eqref{}で数式を参照できる。\ref{}でも可能だが、\eqref{}との違いは自動で括弧を付けないことだ。</description></item><item><title>偏微分_functions</title><link>https://freshrimpsushi.github.io/jp/posts/3036/</link><pubDate>Mon, 08 Mar 2021 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/3036/</guid><description>定義1 $E\subset \mathbb{R}^{n}$を開集合とし、$\mathbf{x}\in E$、そして$\mathbf{f} : E \to \mathbb{R}</description></item><item><title>一次形式</title><link>https://freshrimpsushi.github.io/jp/posts/1734/</link><pubDate>Fri, 05 Mar 2021 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/1734/</guid><description>定義 $V$を$n$次元のベクトル空間とする。与えられた定数$a_{i} \in \mathbb{R}(\text{or } \mathbb{C})$に対して、以下の線形変換$A : V \to \mathbb{R}(\text{or } \</description></item><item><title>回転面の性質</title><link>https://freshrimpsushi.github.io/jp/posts/3042/</link><pubDate>Thu, 04 Mar 2021 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/3042/</guid><description>概要 曲線 $\boldsymbol{\alpha}(t) = \left( r(t), z(t) \right)$を$z-$軸に対して回転させて得られた回転面を$\mathbf{x}$としよう。 $$ \mathbf{x}(t, \theta) = \left( r(t)\cos \theta, r(t)\sin \theta, z(t) \right) $$ 回</description></item><item><title>行列式の性質</title><link>https://freshrimpsushi.github.io/jp/posts/3015/</link><pubDate>Tue, 02 Mar 2021 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/3015/</guid><description>性質 $A,B$を$n\times n$行列とし、$k$を定数とする。行列式は次の性質を満たす。 (a) $\det(kA) = k^{n}\det(A)$ (b) $\det(AB) = \det(A)\det(B)$ (c) $\det(AB)=\det(BA)$ (d) $A$が可逆行列ならば、$</description></item><item><title>ガウス曲率による回転面の分類</title><link>https://freshrimpsushi.github.io/jp/posts/3034/</link><pubDate>Sun, 28 Feb 2021 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/3034/</guid><description>説明 $r&amp;gt; 0$を単位速度曲線としよう。そして、$\boldsymbol{\alpha}$から得られる回転面を$M$とする。 $$ M = \left\{ \left( r(s)\cos\theta, r(s)\sin\theta, z(s) \right) : 0</description></item><item><title>拡張行列と基本行操作</title><link>https://freshrimpsushi.github.io/jp/posts/3014/</link><pubDate>Fri, 26 Feb 2021 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/3014/</guid><description>定義1 次のような線形システムが与えられたとしよう。 $$ \begin{equation} \begin{aligned} a_{11}x_{1} + a_{12}x_{2} + \cdots + a_{1n}x_{n} &amp;amp;= b_{1}\\ a_{21}x_{1} + a_{22}x_{2} + \cdots + a_{2n}x_{n} &amp;amp;= b_{2}\\ &amp;amp;\vdots\\ a_{m1}x_{1} + a_{m2}x_{2} + \cdots + a_{mn}x_{n} &amp;amp;= b_{m} \end{aligned} \end{equation} $$ 線形システムの定数を行</description></item><item><title>微分幾何学における曲面の面積</title><link>https://freshrimpsushi.github.io/jp/posts/3033/</link><pubDate>Wed, 24 Feb 2021 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/3033/</guid><description>定義1 $\mathbf{x} : U \to \mathbb{R}^{3}$を曲面の座標片写像としよう。曲面上のある領域$\mathscr{R} \subset \mathbf{x}(U)</description></item><item><title>連立一次方程式</title><link>https://freshrimpsushi.github.io/jp/posts/3013/</link><pubDate>Mon, 22 Feb 2021 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/3013/</guid><description>定義1 定数$a_{1}$、$a_{2}$、$\dots$、$a_{n}$、$b$に対して、変数$x_{1}$、$x_{2}$、$\dots$</description></item><item><title>線形関数</title><link>https://freshrimpsushi.github.io/jp/posts/3037/</link><pubDate>Sat, 20 Feb 2021 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/3037/</guid><description>定義 関数 $f : X \to Y$が以下の二つの条件を満たす場合、線形linearという。$x,x_{1},x_{2}\in X$、$a \in \mathbb{R</description></item><item><title>Julia、MATLAB、Python、Rでの同等のコード</title><link>https://freshrimpsushi.github.io/jp/posts/3031/</link><pubDate>Thu, 18 Feb 2021 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/3031/</guid><description>概要 Julia、Matlab、Python、Rで同じ機能をするコードを整理する。 Flux-PyTorch-TensorFlow チートシート Pythonについて次のような環境だとする。 import</description></item><item><title>ユニタリ行列</title><link>https://freshrimpsushi.github.io/jp/posts/3008/</link><pubDate>Tue, 16 Feb 2021 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/3008/</guid><description>定義 ユニタリ行列 $A$を正方形の複素数行列とする。$A$が以下の式を満たす時、ユニタリ行列unitaryと呼ぶ。 $$ A^{-1}=A^{\ast} $$ この時、$A^{-1}</description></item><item><title>エルミート行列</title><link>https://freshrimpsushi.github.io/jp/posts/3007/</link><pubDate>Fri, 12 Feb 2021 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/3007/</guid><description>定義 $A$を正方の複素数行列とする。$A$が下の式を満たせば、エルミート行列Hermitianまたは自己共役行列self-adjoint ma</description></item><item><title>直交行列の同値条件</title><link>https://freshrimpsushi.github.io/jp/posts/3012/</link><pubDate>Wed, 10 Feb 2021 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/3012/</guid><description>定理 実数行列$A$について、以下の命題は全て同値である。 (a) $A$が直交行列である。 (b) $A$の行ベクトルの集合は$\mathbb{R}^n$の</description></item><item><title>대각합</title><link>https://freshrimpsushi.github.io/jp/posts/1924/</link><pubDate>Mon, 08 Feb 2021 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/1924/</guid><description>定義 $n\times n$ 行列 $A$ が次のように与えられたとしよう。 $$ A= \begin{bmatrix} a_{11} &amp;amp; a_{12} &amp;amp; \cdots &amp;amp; a_{1n} \\ a_{21} &amp;amp; a_{22} &amp;amp; \cdots &amp;amp; a_{2n} \\ \vdots &amp;amp; \vdots &amp;amp; \ddots &amp;amp; \vdots \\ a_{n1} &amp;amp; a_{n2} &amp;amp; \cdots &amp;amp; a_{nn} \end{bmatrix} $$ $A$ の 対角成分 の和を $A$ の</description></item><item><title>直交行列の性質</title><link>https://freshrimpsushi.github.io/jp/posts/3010/</link><pubDate>Sat, 06 Feb 2021 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/3010/</guid><description>性質1 直交行列は、以下の性質を持つ。 (a) 直交行列の転置も直交行列である。 (b) 直交行列の逆行列は直交行列である。 (c) 2つの直交行列の積は直交行列であ</description></item><item><title>機械学習における強化学習とは？</title><link>https://freshrimpsushi.github.io/jp/posts/3029/</link><pubDate>Thu, 04 Feb 2021 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/3029/</guid><description>定義 強化学習とは、エージェントが環境と相互作用して累積報酬を最大化するポリシーを見つけることができるようにすることである。 説明1 強化学習を構</description></item><item><title>直交行列</title><link>https://freshrimpsushi.github.io/jp/posts/3009/</link><pubDate>Tue, 02 Feb 2021 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/3009/</guid><description>定義 $A$を正方実数行列としよう。$A$が下の式を満たす場合、直交行列orthogonal matrixという。 $$ A^{-1} = A^{\mathsf{T}} $$ この条件を別の形で表</description></item><item><title>ベクトルの内積</title><link>https://freshrimpsushi.github.io/jp/posts/3011/</link><pubDate>Sun, 31 Jan 2021 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/3011/</guid><description>定義1 大きさが$n \times 1$の二つの列ベクトル$\mathbf{u}$、$\mathbf{v}$ $\in \mathbb{R}^{n}$の内積inner</description></item><item><title>共役転置行列</title><link>https://freshrimpsushi.github.io/jp/posts/3006/</link><pubDate>Fri, 29 Jan 2021 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/3006/</guid><description>定義 $A$をサイズが$m \times n $の複素数行列とする。$\overline{A}$を次のように定義して、$A$の共役行列conjugate mat</description></item><item><title>対称行列、歪対称行列</title><link>https://freshrimpsushi.github.io/jp/posts/3005/</link><pubDate>Wed, 27 Jan 2021 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/3005/</guid><description>定義1 任意の正方行列$A$が次の式を満たすとき、$A$を対称行列symmetric matrixと呼ぶ。 $$ A=A^{T} $$ このとき、$A^{T}$は$A$</description></item><item><title>正則行列であるための同値条件</title><link>https://freshrimpsushi.github.io/jp/posts/3004/</link><pubDate>Mon, 25 Jan 2021 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/3004/</guid><description>定理1 $A$を大きさ$n\times n$の正方行列とする。すると、下記の命題は全て同値である。 (a) $A$は可逆行列である。 (b) 同次線形システム $</description></item><item><title>逆行列、可逆行列</title><link>https://freshrimpsushi.github.io/jp/posts/3003/</link><pubDate>Sat, 23 Jan 2021 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/3003/</guid><description>定義 $A$をサイズ$n\times n$の任意の正方行列としよう。$A$と行列の積が可能で、以下の式を満たす行列$L$を$A$の左逆行列という</description></item><item><title>転置行列</title><link>https://freshrimpsushi.github.io/jp/posts/3002/</link><pubDate>Thu, 21 Jan 2021 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/3002/</guid><description>定義1 サイズが$m\times n$の行列を$A$としよう。$A$の行と列を入れ替えた行列を$A$の転置行列transpose, 転置と言い、$</description></item><item><title>同一行列、単位行列</title><link>https://freshrimpsushi.github.io/jp/posts/3001/</link><pubDate>Tue, 19 Jan 2021 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/3001/</guid><description>定義 大きさが$n\times n$で、対角成分がすべて$1$の対角行列を 単位行列identity matrixあるいは 単位行列unit matri</description></item><item><title>対角行列</title><link>https://freshrimpsushi.github.io/jp/posts/1958/</link><pubDate>Sun, 17 Jan 2021 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/1958/</guid><description>対角行列1 $A$をサイズが$n\times m$の行列としよう。行と列の番号が同じ要素、つまり$a_{ii} (1 \le i \le \min(n,m))$を主</description></item><item><title>正方行列</title><link>https://freshrimpsushi.github.io/jp/posts/1956/</link><pubDate>Fri, 15 Jan 2021 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/1956/</guid><description>定義 任意の行列 $A$の行と列の数が同じならば、行列 $A$を正方行列という。 説明 正方行列は取り扱いやすく、多くの良い性質がある。 例 単位行列 可逆</description></item><item><title>行列の演算: スカラー乗法、加法、乗法</title><link>https://freshrimpsushi.github.io/jp/posts/1957/</link><pubDate>Wed, 13 Jan 2021 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/1957/</guid><description>スカラー乗算 サイズが$m \times n$の任意の行列 $A$とスカラー $k$の積は、$A$の各成分に$k$を掛けることで定義され、以下のように表記される</description></item><item><title>MATLABで2次元配列をヒートマップ画像として出力および保存する方法</title><link>https://freshrimpsushi.github.io/jp/posts/1948/</link><pubDate>Mon, 11 Jan 2021 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/1948/</guid><description>Imagesc imagesc 함수를 사용하면 2차원 배열을 히트맵으로 출력할 수 있다. colorbar는 스케일을 보여주는 컬러바를 같이 출력하는 설정이다. N=2^8; p=phantom(&amp;#39;Modified Shepp-Logan&amp;#39;,N); figure() imagesc(p) colorbar 保存 方法1</description></item><item><title>code summary</title><link>https://freshrimpsushi.github.io/jp/posts/10/</link><pubDate>Sun, 10 Jan 2021 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/10/</guid><description>matplotlib 画像サイズ 設定したサイズでフィギュアを作成する方法: plt.figure(figsize=(w,h)) デフォルトサイズ: plt.figure(figsize=(6.4,4.8)) デフォルトのプロットサイズを調整する: import matplotlib plt.rcParams[&amp;#39;figure.figsize&amp;#39;] = [width, height] tmux tmux attach -t 0: 0番</description></item><item><title>行列の定義</title><link>https://freshrimpsushi.github.io/jp/posts/1955/</link><pubDate>Sat, 09 Jan 2021 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/1955/</guid><description>定義1 数を次のように長方形の形に並べたものを行列matrixという。 $$ A=\begin{bmatrix} 10 &amp;amp; 0 &amp;amp; 3 \\ 0 &amp;amp; 8 &amp;amp; 22 \end{bmatrix} $$ 並べた各々の数をエントリーentryまたは</description></item><item><title>デル演算子を含む乗法則</title><link>https://freshrimpsushi.github.io/jp/posts/93/</link><pubDate>Thu, 07 Jan 2021 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/93/</guid><description>公式 $f=f(x,y,z)$をスカラー関数とする。$\mathbf{A} = A_{x}\hat{\mathbf{x}} + A_{y}\hat{\mathbf{y}} + A_{z}\hat{\mathbf{z}}, \mathbf{B} = B_{x}\hat{\mathbf{x}} + B_{y}\hat{\mathbf{y}} + B_{z}\hat{\mathbf{z}}$</description></item><item><title>ラドン変換</title><link>https://freshrimpsushi.github.io/jp/posts/1945/</link><pubDate>Tue, 05 Jan 2021 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/1945/</guid><description>定義 ある2次元ドメイン$D\subset \mathbb{R}^{2}$で定義された関数$f :D \to \mathbb{R}$が与えられたとする。$f</description></item><item><title>級数解を用いた微分方程式の解法</title><link>https://freshrimpsushi.github.io/jp/posts/888/</link><pubDate>Sun, 03 Jan 2021 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/888/</guid><description>説明 係数が定数の微分方程式は、変数分離法を使ったり、積分因子法を使ったりするなどして比較的簡単に解くことができる。しかし、以下のように係数に</description></item><item><title>ヒルベルト空間における一般化されたフーリエ係数、フーリエ級数</title><link>https://freshrimpsushi.github.io/jp/posts/1913/</link><pubDate>Wed, 30 Dec 2020 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/1913/</guid><description>説明 $x=f$、$\left\{ u_{\alpha} \right\}=\left\{ e^{-i n x} \right\}$とすると、$\hat{x}(\alpha)$はよく知られている複素フーリエ係数に</description></item><item><title>内積は連続写像であることを証明</title><link>https://freshrimpsushi.github.io/jp/posts/1916/</link><pubDate>Mon, 28 Dec 2020 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/1916/</guid><description>定理1 $\left( X, \left\langle \cdot,\cdot \right\rangle \right)$が内積空間で、$\left\{ \mathbf{x}_{n} \right\}$、$\left\{ \mathbf{y}_{n} \right\}$がそれぞれ$\mat</description></item><item><title>ベクトルと行列の導関数表</title><link>https://freshrimpsushi.github.io/jp/posts/1926/</link><pubDate>Sat, 26 Dec 2020 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/1926/</guid><description>スカラー関数の勾配 スカラー関数 $f : \mathbb{R}^{n} \to \mathbb{R}$の勾配は次のようだ。 $$ \frac{ \partial f(\mathbf{x})}{ \partial \mathbf{x} } := \nabla f(\mathbf{x}) = \begin{bmatrix} \dfrac{ \partial f(\mathbf{x})}{ \partial x_{1} } &amp;amp; \dfrac{ \partial f(\mathbf{x})}{ \partial x_{2} } &amp;amp; \cdots &amp;amp; \dfrac{ \partial</description></item><item><title>随伴作用素の性質</title><link>https://freshrimpsushi.github.io/jp/posts/1919/</link><pubDate>Thu, 24 Dec 2020 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/1919/</guid><description>定理1 $H,K$をヒルベルト空間としよう。有界線形作用素$T : K \to H$に対して、次を満たす$T^{\ast} : H \to K$を$T$の随伴作用素と</description></item><item><title>ベクトル空間における凸集合</title><link>https://freshrimpsushi.github.io/jp/posts/1914/</link><pubDate>Tue, 22 Dec 2020 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/1914/</guid><description>定義 ベクター空間 $V$の部分集合$M$に対して、次の式が成り立つ場合、$M$を凸集合convex setと言う。 $$ \lambda x +(1-\lambda)y \in M,\quad \forall \lambda\in[0,1],\ \forall x,y \in M $$ 説明</description></item><item><title>ノルム空間における無限級数スパン全体列</title><link>https://freshrimpsushi.github.io/jp/posts/1918/</link><pubDate>Sun, 20 Dec 2020 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/1918/</guid><description>無限級数1 定義 $(X, \left\| \cdot \right\|)$をノルム空間とする。$X$の数列$\left\{ \mathbf{x}_{k}\right\}_{k\in \mathbb{N}}$に対して、部分和を以下のよ</description></item><item><title>内積空間における0の性質</title><link>https://freshrimpsushi.github.io/jp/posts/1917/</link><pubDate>Fri, 18 Dec 2020 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/1917/</guid><description>定理 $\left( X, \left\langle \cdot,\cdot \right\rangle \right)$を内積空間と呼ぼう。 (a) すべての$\mathbf{x}\in X$に対して、以下が成立する。 $$ \left\langle \mathbf{0},\mathbf{x} \right\rangle = 0 $$ (b) すべて</description></item><item><title>B-スプライン スケーリング 方程式</title><link>https://freshrimpsushi.github.io/jp/posts/1910/</link><pubDate>Wed, 16 Dec 2020 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/1910/</guid><description>式1 (a) B-スプラインのスケーリング方程式: オーダーが$m\in N$のB-スプラインについて、次の式が成り立つ。 $$ \widehat{N_{m}}(2\gamma)=H_{0}(\gamma)\widehat{N_{m}}(\gamma),\quad \forall \gamma \in \mathbb{R} $$ この時、$H_{</description></item><item><title>セントラルB-スプライン</title><link>https://freshrimpsushi.github.io/jp/posts/1909/</link><pubDate>Mon, 14 Dec 2020 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/1909/</guid><description>定義1 $m\in \mathbb{N}$に関して、中心B-スプライン $B_{m}$を次のように定義する。 $$ B_{m}(x):= T_{-\frac{m}{2}}N_{m}(x)=N_{m}(x+{\textstyle \frac{1}{2}}) $$ ここで、$T$は$L^{2}$空間の</description></item><item><title>B-スプラインの正則性</title><link>https://freshrimpsushi.github.io/jp/posts/1908/</link><pubDate>Sat, 12 Dec 2020 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/1908/</guid><description>定理1 $m=2,3,\dots$に対して、B-スプライン $N_{m}$は以下の性質を持つ。 (a) $N_{m}\in C^{m-2}(\mathbb{R})$ (b) $k\in \mathbb{Z}$において、各区間 $</description></item><item><title>B-スプラインの明示的な公式</title><link>https://freshrimpsushi.github.io/jp/posts/1907/</link><pubDate>Thu, 10 Dec 2020 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/1907/</guid><description>公式1 関数$f: \mathbb{R}\to \mathbb{R}$に対して $$ f(x)_{+}:=\max \left( 0,f(x) \right) $$ としよう。つまり、$f_{+}$は$f$の関数値が$0$より小さい部分をすべて$</description></item><item><title>B-スプラインのフーリエ変換</title><link>https://freshrimpsushi.github.io/jp/posts/1906/</link><pubDate>Tue, 08 Dec 2020 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/1906/</guid><description>式1 順序が$m \in \mathbb{N}$のB-スプラインのフーリエ変換は次のようだ。 $$ \widehat{N_{m}}(\gamma)=\left( \frac{1-e^{-2\pi i\gamma}}{2\pi i \gamma} \right)^{m} $$ この時、$f$のフーリエ変換$\wideh</description></item><item><title>内積空間における直交性、直交集合、正規直交集合</title><link>https://freshrimpsushi.github.io/jp/posts/1912/</link><pubDate>Mon, 07 Dec 2020 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/1912/</guid><description>定義1 $\left( X, \left\langle \cdot, \cdot \right\rangle \right)$を内積空間としよう。二つの元 $\mathbf{x}, \mathbf{y}\in X$が$\left\langle \mathbf{x}, \mathbf{y} \right\rangle =0$を満たすなら、$\mathbf</description></item><item><title>B-スプラインの性質</title><link>https://freshrimpsushi.github.io/jp/posts/1904/</link><pubDate>Sun, 06 Dec 2020 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/1904/</guid><description>性質1 オーダーが$m\in \mathbb{N}$のB-スプライン$N_{m}$は、次の性質を満たす。 (a) $\mathrm{supp}N_{m}=[0,m] \quad \text{and} \quad N_{m}(x)&amp;gt;0 \text{ for } x\in(0,m)$ (b) $\displaystyle \int _{-\infty} ^{\infty} N_{m}(x)dx=1$ (c) $m\ge 2$</description></item><item><title>コンボリューションの性質</title><link>https://freshrimpsushi.github.io/jp/posts/1901/</link><pubDate>Thu, 03 Dec 2020 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/1901/</guid><description>정리 畳み込みは次の性質を満たす。 (a) 交換法則 $$ f \ast g = g \ast f $$ (b) 分配法則 $$ f \ast (g+h) = f \ast g + f \ast h $$ (c) 結合法則 $$ f \ast (g \ast h) = (f \ast g) \ast h $$ (d) スカラ</description></item><item><title>フーリエ変換の複数の定義と記法</title><link>https://freshrimpsushi.github.io/jp/posts/1898/</link><pubDate>Tue, 01 Dec 2020 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/1898/</guid><description>概要 フーリエ変換の定義や記法は、作者のニーズや好みによってさまざまに表れる。だから、教科書や講義、論文などでフーリエ変換を扱う前に、定義や記</description></item><item><title>プランシェレルの定理</title><link>https://freshrimpsushi.github.io/jp/posts/1899/</link><pubDate>Mon, 30 Nov 2020 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/1899/</guid><description>要旨 全ての$f,g \in L^{2}$に対して、以下の式が成り立つ。 $$ \begin{align} \langle \hat{f},\hat{g} \rangle &amp;amp;= 2\pi \left\langle f,g \right\rangle \\[1em] \| \hat{f} \|_{2}^{2} &amp;amp;= 2\pi \| f \|_{2}^{2} \end{align} $$ ここで$\hat{f}$は、$f$の</description></item><item><title>テスト関数の空間がシュワルツ空間の真部分集合であることの証明</title><link>https://freshrimpsushi.github.io/jp/posts/1896/</link><pubDate>Sat, 28 Nov 2020 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/1896/</guid><description>定理1 $\mathcal{D}$をテスト関数空間、$\mathcal{S}$をシュワルツ空間とする。それでは以下の式が成り立つ。 $$ \mathcal{D} \subsetneq \mathcal{S} $$ 証</description></item><item><title>超関数の畳み込みの補題</title><link>https://freshrimpsushi.github.io/jp/posts/1894/</link><pubDate>Thu, 26 Nov 2020 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/1894/</guid><description>概説1 $F$を超関数、$\phi,\psi$をテスト関数としよう。すると$F \ast \phi$は実数空間で定義された関数であり、局所可積分である。</description></item><item><title>超関数の畳み込み、実数で定義された関数としての超関数</title><link>https://freshrimpsushi.github.io/jp/posts/1892/</link><pubDate>Tue, 24 Nov 2020 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/1892/</guid><description>ビルドアップ1 超関数論の目的は、ディラックのデルタ関数などナイーブに定義されたものを数学的に厳密に定義することである。したがって、関数空間で</description></item><item><title>均等収束の必要十分条件</title><link>https://freshrimpsushi.github.io/jp/posts/1891/</link><pubDate>Mon, 23 Nov 2020 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/1891/</guid><description>定理1 距離空間 $E$で定義された関数列$\left\{ f_{n} \right\}$が与えられたとしよう。次の二つの条件は同値である。 $\left\{ f_{n} \right</description></item><item><title>超関数の微分は弱収束に対して連続である</title><link>https://freshrimpsushi.github.io/jp/posts/1890/</link><pubDate>Sun, 22 Nov 2020 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/1890/</guid><description>定理1 超函数の微分は、弱収束に対して連続である。つまり、$T_{k}$が$T$に弱収束するとき、$\partial ^{\alpha} T_{k}$も$\par</description></item><item><title>ディラックのデルタ超関数に収束する超関数</title><link>https://freshrimpsushi.github.io/jp/posts/1889/</link><pubDate>Sat, 21 Nov 2020 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/1889/</guid><description>定理1 $f$が$\int_{\mathbb{R}^{n}} f(\mathbf{x})d\mathbf{x}=1$を満たす関数だとしよう。そし</description></item><item><title>機械学習における回帰のための線形モデル</title><link>https://freshrimpsushi.github.io/jp/posts/1887/</link><pubDate>Fri, 20 Nov 2020 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/1887/</guid><description>定義1 単純モデル データ集合$X = \left\{ \mathbf{x}_{i} \right\}$とラベル集合$Y = \left\{ y_{i} \right\}$の間のターゲット関数$f : X \to Y$を次のように</description></item><item><title>ベクトルと行列の演算／表記法テーブル</title><link>https://freshrimpsushi.github.io/jp/posts/1886/</link><pubDate>Thu, 19 Nov 2020 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/1886/</guid><description>概要 ベクトルと行列に関する様々な記法や演算をまとめた文書だ。 ベクトル ベクトルは主に小文字のボールド体で表記され、特に説明がない場合は$n\t</description></item><item><title>スムーズ関数に対するフーリエ逆変換定理</title><link>https://freshrimpsushi.github.io/jp/posts/1885/</link><pubDate>Wed, 18 Nov 2020 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/1885/</guid><description>定理 $f$が$\mathbb{R} $上で積分可能であり、部分的に滑らかだとする。すると、以下の式が成り立つ。 $$ \lim \limits_{r\to \infty} \frac{1}{2\pi} \int_{-r}^{r}e^{i\xi x} \hat{f}(\xi)d\xi= \frac{1}{2}\big[f(x-)+f(x+) \big],\quad \forall x\in \mathbb{R} $$ この</description></item><item><title>畳み込みノルム収束定理</title><link>https://freshrimpsushi.github.io/jp/posts/1883/</link><pubDate>Tue, 17 Nov 2020 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/1883/</guid><description>定理 関数$g \in L^{1}$が有界で、$\int_{\mathbb{R}}g(y)dy=1$を満たしているとする。$f\in L^{2}$であり</description></item><item><title>曲線座標系でのスカラー関数のラプラシアン</title><link>https://freshrimpsushi.github.io/jp/posts/1882/</link><pubDate>Mon, 16 Nov 2020 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/1882/</guid><description>概要 曲線座標系でのスカラー関数 $f=f(q_{1},q_{2},q_{3})$ のラプラシアンは以下の通りだ。 $$ \nabla ^{2}f= \frac{1}{h_{1}h_{2}h_{3}}\left[\frac{ \partial }{ \partial q_{1} } \left( \frac{h_{2}h_{3}}{h_{1}} \frac{ \partial f}{ \partial q_{1}}\right)+\frac{ \partial }{ \partial q_{2} } \left( \frac{h_{1}h_{3}}{h_{2}} \frac{ \partial f}{ \partial q_{2}}\right)+\frac{ \partial }{ \partial q_{3} } \left( \frac{h_{1}h_{2}}{h_{3}} \frac{ \partial f}{ \partial</description></item><item><title>三次元デカルト座標系におけるスカラー関数のラプラシアン</title><link>https://freshrimpsushi.github.io/jp/posts/1879/</link><pubDate>Sun, 15 Nov 2020 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/1879/</guid><description>定義 3次元のスカラー関数 $f=f(x,y,z)$のグラディエントのダイバージェンスを $f$のラプラシアンLaplacianと言い、$\nab</description></item><item><title>畳み込み収束定理</title><link>https://freshrimpsushi.github.io/jp/posts/1877/</link><pubDate>Sat, 14 Nov 2020 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/1877/</guid><description>定理 函数 $g \in L^{1}$が次の条件を満たすとしよう。 $$ \begin{align*} \int_{\mathbb{R}}g(y)dy &amp;amp;= 1 \\ \int_{-\infty}^{0}g(y)dy &amp;amp;= \alpha \\ \int_{0}^{\infty}g(y)dy &amp;amp;=\beta \\ \alpha+\beta &amp;amp;= 1 \end{align*} $$ そして、$f$が$\mathbb{R}$上で断続的で</description></item><item><title>曲線の導関数が連続であれば、その曲線の長さを測定できる</title><link>https://freshrimpsushi.github.io/jp/posts/1870/</link><pubDate>Thu, 12 Nov 2020 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/1870/</guid><description>定理1 もし$\gamma ^{\prime}$が区間$[a,b]$で連続ならば、$\gamma$は長さを測ることができる曲線であり、以下の式が</description></item><item><title>曲線の長さを測定する方法</title><link>https://freshrimpsushi.github.io/jp/posts/1869/</link><pubDate>Wed, 11 Nov 2020 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/1869/</guid><description>定義1 区間$\gamma : [a,b] \to \mathbb{R}^{k}$における曲線curve、または単に$\mathbb{R}^{k}$上の曲線は、連</description></item><item><title>ベクトル値関数の積分</title><link>https://freshrimpsushi.github.io/jp/posts/1868/</link><pubDate>Tue, 10 Nov 2020 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/1868/</guid><description>定義1 $f_{1}$, $f_{2}$, $\dots$, $f_{k}$が区間$[a,b]$で実数値をとる関数だとしよう。そして$\mathbf{f} : [a,b] \to \mathbb{R}^{k}$</description></item><item><title>部分積分法</title><link>https://freshrimpsushi.github.io/jp/posts/1867/</link><pubDate>Mon, 09 Nov 2020 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/1867/</guid><description>定理 1 $F$、$G$が区間$[a,b]$で微分可能であり、$F^{\prime}=f$、$G^{\prime}=g$が積分可能であるとしよう</description></item><item><title>解析学における微分積分学の基本定理2</title><link>https://freshrimpsushi.github.io/jp/posts/1866/</link><pubDate>Sun, 08 Nov 2020 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/1866/</guid><description>定理1 関数 $f$が区間 $[a,b]$でリーマン積分可能であり、$F^{\prime}=f$を満たす$[a,b]$で微分可能な関数 $F$が存在</description></item><item><title>正則スツルム＝リウヴィル問題の解の直交性</title><link>https://freshrimpsushi.github.io/jp/posts/1859/</link><pubDate>Thu, 05 Nov 2020 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/1859/</guid><description>定理1 異なる$\lambda_{n}, \lambda_{m}$が正則S-L問題の固有値であり、$u_{n}, u_{m}$がそれぞれの固有値に</description></item><item><title>S-L問題における固有値と固有関数</title><link>https://freshrimpsushi.github.io/jp/posts/1858/</link><pubDate>Wed, 04 Nov 2020 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/1858/</guid><description>定義1 もしシュツルム・リウヴィル微分方程式 $$ \begin{equation} \left[ p(x)u^{\prime}(x) \right]^{\prime}+\left[ q(x) +\lambda w(x) \right]u(x)=0 \end{equation} $$ が$0$と異なる解$u \in L_{r}^{2}(a,b)$を持つなら、$\lam</description></item><item><title>シュツルム＝リウヴィル微分方程式</title><link>https://freshrimpsushi.github.io/jp/posts/1857/</link><pubDate>Tue, 03 Nov 2020 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/1857/</guid><description>定義1 $p\in$、$C^{1}(\mathbb{R})$(../1594)とし、$q,r\in C(\mathbb{R})$、$\lambd</description></item><item><title>畳み込みの一般的な定義</title><link>https://freshrimpsushi.github.io/jp/posts/1848/</link><pubDate>Sat, 31 Oct 2020 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/1848/</guid><description>定義 積分変換 $J$と二つの関数 $f$、$g$が与えられたとする。以下の条件を満たす関数 $f \ast g$を$J$に対する$f$と$g$のコンボリューシ</description></item><item><title>積分変換</title><link>https://freshrimpsushi.github.io/jp/posts/1847/</link><pubDate>Fri, 30 Oct 2020 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/1847/</guid><description>定義 関数空間から関数空間へのマップ$J$が下のような積分で定義される場合、$J$を積分変換integral transformという。 $$ (Jf) (x) =</description></item><item><title>パーセプトロンの定義</title><link>https://freshrimpsushi.github.io/jp/posts/1846/</link><pubDate>Thu, 29 Oct 2020 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/1846/</guid><description>정의 線形関数 $f(x) = wx + b$と単位ステップ関数 $H$の合成をパーセプトロンperceptronと定義する。 $$ \text{Perceptron} := H \circ f (x) = H(wx + b) $$ 多変数関数の場</description></item><item><title>ノルムが連続写像であることを証明する</title><link>https://freshrimpsushi.github.io/jp/posts/1845/</link><pubDate>Wed, 28 Oct 2020 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/1845/</guid><description>定理 $(X, \left\| \cdot \right\|)$をノルム空間と呼ぼう。すると、$\lim \limits_{k\to\infty} x_{k} = x$の$X$の数列$\left\{ x_{k} \right\}$について、</description></item><item><title>内積空間で定義された内積に関連したノルムの性質</title><link>https://freshrimpsushi.github.io/jp/posts/1844/</link><pubDate>Tue, 27 Oct 2020 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/1844/</guid><description>定理1 内積空間 $\left( X, \langle \cdot,\cdot \rangle \right)$が与えられたとしよう。すると自然に$\left\| \cdot \right\|:=\sqrt{\left\langle \cdot,\cdot \right\rangle }$のようにノルムを定義できて、下の性質が</description></item><item><title>内積空間とコーシー・シュワルツの不等式</title><link>https://freshrimpsushi.github.io/jp/posts/1843/</link><pubDate>Mon, 26 Oct 2020 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/1843/</guid><description>定理1 $(H, \langle \cdot ,\cdot \rangle)$を内積空間としよう。すると、以下の不等式が成り立ち、これをコーシー・シュワルツの不等式Cauchy-Schw</description></item><item><title>内積空間</title><link>https://freshrimpsushi.github.io/jp/posts/1842/</link><pubDate>Sun, 25 Oct 2020 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/1842/</guid><description>定義1 $X$をベクトル空間とする。$\mathbf{x}, \mathbf{y}, \mathbf{z} \in X$ 及び $\alpha, \beta \in \mathbb{C}$(または $\mathbb{R}$)に対して</description></item><item><title>半線形（共役線形）関数</title><link>https://freshrimpsushi.github.io/jp/posts/1841/</link><pubDate>Sat, 24 Oct 2020 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/1841/</guid><description>定義 関数 $f : X \to \mathbb{C}$が与えられたとする。$x,y\in X$、$a,b \in \mathbb{C}$に対して、下記の式が成立するな</description></item><item><title>内積空間、ノルム空間、距離空間の関係</title><link>https://freshrimpsushi.github.io/jp/posts/1840/</link><pubDate>Fri, 23 Oct 2020 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/1840/</guid><description>説明 内積空間 $\left( X, \langle\cdot, \cdot\rangle \right)$が与えられているとする。そうすると、下記のように内積から自然にノルムを定義できる。 $$ \begin{equation} \left\| x \right\| := \sqrt{ \langle x, x\rangle},\quad x\in</description></item><item><title>コンピュータビジョンとは何か</title><link>https://freshrimpsushi.github.io/jp/posts/1839/</link><pubDate>Thu, 22 Oct 2020 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/1839/</guid><description>説明 コンピュータビジョン とは主に人間の視覚に相当する機能をコンピュータが実行できるようにする研究分野で、画像や映像を扱う。コンピュータビジョ</description></item><item><title>ディープラーニングにおける連続学習</title><link>https://freshrimpsushi.github.io/jp/posts/1837/</link><pubDate>Wed, 21 Oct 2020 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/1837/</guid><description>説明 ディープラーニングでの連続学習とは、人工ニューラルネットワークが複数のタスクを順番に学習することを言い、生涯学習、段階的学習と同義である</description></item><item><title>メリン変換の畳み込み</title><link>https://freshrimpsushi.github.io/jp/posts/1835/</link><pubDate>Mon, 19 Oct 2020 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/1835/</guid><description>定義 メリン変換の畳み込みは次の通りだ。 $$ (f \times g) (y) = \int _{0}^{\infty} f(x)g \left(\frac{y}{x} \right)\frac{dx}{x} $$ 説明 乗法的畳み込みmultiplicative convolution1とも呼ぶ</description></item><item><title>不連続性の分類</title><link>https://freshrimpsushi.github.io/jp/posts/1833/</link><pubDate>Sun, 18 Oct 2020 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/1833/</guid><description>定義1 距離空間 $X$で定義された関数$f :X \to \mathbb{R}$が与えられたとしよう。もし$f$が$x\in X$で連続でなければ、$f$は</description></item><item><title>解析学において厳密に定義される左極限と右極限</title><link>https://freshrimpsushi.github.io/jp/posts/1830/</link><pubDate>Sat, 17 Oct 2020 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/1830/</guid><description>定義 距離空間 $X$で定義された関数 $f :X \to \mathbb{R}$が与えられたとする。もし $f$が $x\in X$で連続ではない場合、$f$は $x$で不連</description></item><item><title>導関数と関数の増減の関係</title><link>https://freshrimpsushi.github.io/jp/posts/1826/</link><pubDate>Fri, 16 Oct 2020 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/1826/</guid><description>定理 関数 $f$が$(a,b)$で微分可能だとしよう。 もし、すべての$x\in (a,b)$に対して$f^{\prime}(x) \ge 0$が成り立つ</description></item><item><title>単調関数、増加関数、減少関数</title><link>https://freshrimpsushi.github.io/jp/posts/848/</link><pubDate>Thu, 15 Oct 2020 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/848/</guid><description>定義 関数 $f:[a,b] \rightarrow \mathbb{R}$が与えられたとする。$x_{1}$、$x_{2}$、$\in [a,b]$に対して $$ x_{1} \lt x_{2} \ \implies f(x_{1}) \le f(x_{2}) $$ を満た</description></item><item><title>解析学における平均値定理</title><link>https://freshrimpsushi.github.io/jp/posts/1824/</link><pubDate>Thu, 15 Oct 2020 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/1824/</guid><description>定理 関数 $f$ と $g$ が区間 $[a,b]$ で連続し、$(a,b)$ で微分可能であるとしよう。すると下の式を満足する $x \in (a,b)$ が存在する。 $$ [f(b)-f(a)]g^{\prime}(x)=[g(b)-g(a)]f^{\prime}(x) $$ 両端点 $a$、$b$ で</description></item><item><title>解析学における微分の連鎖律</title><link>https://freshrimpsushi.github.io/jp/posts/1823/</link><pubDate>Wed, 14 Oct 2020 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/1823/</guid><description>定理1 $f :[a,b] \to \mathbb{R}$が連続関数であり、$x\in [a,b]$で微分可能だとしよう。$g : f([a,b])\to \mathbb{R}$が$f (x)\in f([</description></item><item><title>解析学における極値の定義と微分係数との関係</title><link>https://freshrimpsushi.github.io/jp/posts/1699/</link><pubDate>Wed, 14 Oct 2020 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/1699/</guid><description>定義 $(X,d)$を距離空間としよう。関数$f : X \rightarrow \mathbb{R}$が下記の条件を満たす正の実数$\delta &amp;gt;0$が存在するな</description></item><item><title>微分可能な関数の性質</title><link>https://freshrimpsushi.github.io/jp/posts/1821/</link><pubDate>Tue, 13 Oct 2020 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/1821/</guid><description>定理1 $f, g : [a,b] \to \mathbb{R}$としよう。もし$f,g$が$x\in [a,b]$で微分可能であれば、$f+g$、$fg$、$f/g$も</description></item><item><title>微分可能ならば連続である</title><link>https://freshrimpsushi.github.io/jp/posts/1820/</link><pubDate>Mon, 12 Oct 2020 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/1820/</guid><description>定理1 $f : [a,b] \to \mathbb{R}$としよう。もし$f$が$p \in [a,b]$で微分可能であれば、$f$は$p$で連続である。 説明 逆の「連続で</description></item><item><title>調整過飽和</title><link>https://freshrimpsushi.github.io/jp/posts/1819/</link><pubDate>Sun, 11 Oct 2020 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/1819/</guid><description>定義1 シュワルツ空間の連続する線形汎関数 $T:\mathcal{S}(\mathbb{R}^{n}) \to \mathbb{C}$を調整された超関数tempered distributionと言う。つまり、</description></item><item><title>複素数表示のフーリエ級数</title><link>https://freshrimpsushi.github.io/jp/posts/964/</link><pubDate>Sat, 10 Oct 2020 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/964/</guid><description>式 区間$[-L,\ L)$で定義された関数$f$の複素フーリエ級数complex Fourier seriesは次の通りである。 $$ f(t) = \sum \limits_{n=-\infty}^{\infty} c_{n} e^{i\frac{n\pi t}{L}} $$ ここで複素フ</description></item><item><title>偏微分方程式</title><link>https://freshrimpsushi.github.io/jp/posts/1818/</link><pubDate>Fri, 09 Oct 2020 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/1818/</guid><description>定義1 偏微分方程式 自然数$k \in \mathbb{N}$と、開集合$U \subset \mathbb{R}^{n}$に対して、次の表現を**$k$次の偏微分方</description></item><item><title>曲線座標系におけるベクトル関数の発散</title><link>https://freshrimpsushi.github.io/jp/posts/1817/</link><pubDate>Thu, 08 Oct 2020 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/1817/</guid><description>定理 曲線座標系でのベクトル関数$\mathbf{F}=\mathbf{F}(q_{1},q_{2},q_{3})=F_{1}\hat{\ma</description></item><item><title>曲線座標系でのスカラー関数の勾配</title><link>https://freshrimpsushi.github.io/jp/posts/1816/</link><pubDate>Wed, 07 Oct 2020 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/1816/</guid><description>概要 曲線座標系でスカラー関数の$f=f(q_{1},q_{2},q_{3})$の勾配は次の通りだ。 $$ \nabla f= \frac{1}{h_{1}}\frac{ \partial f }{ \partial q_{1} } \hat{\mathbf{q}}_{1} + \frac{1}{h_{2}}\frac{ \partial f }{ \partial q _{2}}\hat{\mathbf{q}}_{2}+\frac{1}{h_{3}}\frac{ \partial f</description></item><item><title>解析学におけるスプライン、B-スプライン</title><link>https://freshrimpsushi.github.io/jp/posts/1815/</link><pubDate>Tue, 06 Oct 2020 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/1815/</guid><description>定義1 関数 $f:\mathbb{R} \to \mathbb{R}$ が 区間ごとの多項式piecewise polynomialである場合、$f$を $\mathbb{R}$上の スプラインsplin</description></item><item><title>数学における単位分割</title><link>https://freshrimpsushi.github.io/jp/posts/1814/</link><pubDate>Mon, 05 Oct 2020 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/1814/</guid><description>定義 以下の条件を満たす連続関数 $u_{\alpha} : X \to [0,1], \alpha \in \Lambda$の集合 $\left\{ u_{\alpha} \right\}_{\alpha \in \Lambda}$を単位分割と呼ぶ。 $$ \sum _{\alpha \in \Lambda}u_{\alpha}(x)=1 $$</description></item><item><title>ゼーマン効果</title><link>https://freshrimpsushi.github.io/jp/posts/1813/</link><pubDate>Sun, 04 Oct 2020 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/1813/</guid><description>説明 1897年にオランダの物理学者ピータ・ゼーマンPieter Zeemanが発見した現象で、原子が磁場内にあるときに放出されるスペクトル線が</description></item><item><title>スペクトルとフラウンホーファー線</title><link>https://freshrimpsushi.github.io/jp/posts/1812/</link><pubDate>Sat, 03 Oct 2020 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/1812/</guid><description>説明1 2 3 4 スペクトルとは分光学の研究対象で、光を様々な色に分解したものを指す。よく最初に見るスペクトルの絵は、上のように横、または縦に長い</description></item><item><title>分光学とは</title><link>https://freshrimpsushi.github.io/jp/posts/1811/</link><pubDate>Fri, 02 Oct 2020 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/1811/</guid><description>説明1 2 上のGIFのように、光をいくつかの色に分解することをスペクトラムspectrum、韓国語で分光と呼ぶ。 分光学spectroscopy</description></item><item><title>論文レビュー：ゼロトレーニングエラー達成後にゼロトレーニングロスが必要ですか？</title><link>https://freshrimpsushi.github.io/jp/posts/1809/</link><pubDate>Thu, 01 Oct 2020 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/1809/</guid><description>論文レビュー フラッディングfloodingは、ICML 2020で発表されたDo We Need Zero Training Loss After Achieving Zero Training Error?で紹介された正則化技術を指す。こ</description></item><item><title>機械学習でよく使用されるデータセット</title><link>https://freshrimpsushi.github.io/jp/posts/1808/</link><pubDate>Wed, 30 Sep 2020 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/1808/</guid><description>コンピュータービジョン MNIST 機械学習を学ぶときに最初に出会うデータセットだ。[エムニスト]と読み、$28\times 28$サイズの手書き数字画像</description></item><item><title>マシンラーニングにおけるオーバーフィッティングと正則化とは？</title><link>https://freshrimpsushi.github.io/jp/posts/1807/</link><pubDate>Tue, 29 Sep 2020 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/1807/</guid><description>オーバーフィッティング トレーニングロスは減っていくが、テストロス（バリデーションロス）が減らない、あるいは増えてしまう現象をオーバーフィッテ</description></item><item><title>曲線座標系における座標変換とヤコビアン</title><link>https://freshrimpsushi.github.io/jp/posts/1806/</link><pubDate>Mon, 28 Sep 2020 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/1806/</guid><description>公式 3次元のデカルト座標系での体積は、任意の曲線座標系について次のように表される。 $$ dxdydz =\begin{vmatrix} \dfrac{ \partial x}{ \partial q_{1}} &amp;amp; \dfrac{ \partial y}{ \partial q_{1}} &amp;amp; \dfrac{ \partial z}{ \partial q_{1} } \\[1em] \dfrac{ \partial x}{ \partial q_{2}} &amp;amp; \dfrac{</description></item><item><title>シュワルツ空間とシュワルツ関数</title><link>https://freshrimpsushi.github.io/jp/posts/1805/</link><pubDate>Sun, 27 Sep 2020 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/1805/</guid><description>定義 以下の二つの条件を満たす関数$\phi : \mathbb{R}^{n} \to \mathbb{C}$の集合をシュワルツ空間Schwartz spaceと呼び、$\mathc</description></item><item><title>三次元空間の曲線座標系</title><link>https://freshrimpsushi.github.io/jp/posts/1774/</link><pubDate>Sat, 26 Sep 2020 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/1774/</guid><description>ビルドアップ 3次元空間で位置を表現する最も一般的な方法はデカルト座標系だ。デカルトによって考案されたのでこの名前が付けられ、また直交座標系と</description></item><item><title>曲線座標系のスケールファクター</title><link>https://freshrimpsushi.github.io/jp/posts/1776/</link><pubDate>Sat, 26 Sep 2020 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/1776/</guid><description>ビルドアップ 曲線座標系では、スケールファクターは各成分が長さの次元を持つように掛け合わされる要素だ。例えば、極座標系は$(r,\theta)</description></item><item><title>超関数と滑らかな関数の積</title><link>https://freshrimpsushi.github.io/jp/posts/1803/</link><pubDate>Sat, 26 Sep 2020 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/1803/</guid><description>ビルドアップ 超関数は定義域が関数空間であるため、実数空間で定義された関数との乗算ができない。しかし、正則超関数の場合、対応する局所積分可能な</description></item><item><title>超関数の積の微分法</title><link>https://freshrimpsushi.github.io/jp/posts/1804/</link><pubDate>Sat, 26 Sep 2020 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/1804/</guid><description>定理1 $T\in D^{\ast}$を超関数、$f \in C^{\infty}$をスムース関数としよう。すると、以下の式が成り立つ。 $$ (fT)^{\prime}= f^{\prime}T+fT^{\prime} $$ 説明 既存の積の微</description></item><item><title>近似導関数</title><link>https://freshrimpsushi.github.io/jp/posts/1085/</link><pubDate>Sat, 26 Sep 2020 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/1085/</guid><description>ビルドアップ 超関数の微分を定義するアイデアを思い出そう。$u \in {L}_{\mathrm{loc}}^1(\Omega)$に対して、正則超関数</description></item><item><title>ノルム空間内の数列の収束</title><link>https://freshrimpsushi.github.io/jp/posts/1800/</link><pubDate>Fri, 25 Sep 2020 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/1800/</guid><description>定義 $(X, \left\| \cdot \right\|)$をノルム空間と呼ぼう。$X$の列$\left\{ x_{n} \right\}$が $$ \lim \limits_{n \to \infty} \left\| x - x_{n} \right\| = 0,\quad x\in X $$ を満たせば</description></item><item><title>ヒルベルト空間における弱収束</title><link>https://freshrimpsushi.github.io/jp/posts/1801/</link><pubDate>Fri, 25 Sep 2020 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/1801/</guid><description>定義 $(H,\langle \cdot \rangle)$をヒルベルト空間、$\left\{ x_{n} \right\}$を$H$の数列としよう。全ての$y\in H$に対して下の式が</description></item><item><title>分布の収束</title><link>https://freshrimpsushi.github.io/jp/posts/1802/</link><pubDate>Fri, 25 Sep 2020 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/1802/</guid><description>定義1 $D^{\ast}$を超関数空間、$\left\{ T_{n} \right\}$を$D^{\ast}$の中の超関数列としよう。全てのテスト関数 $</description></item><item><title>全微分、完全微分</title><link>https://freshrimpsushi.github.io/jp/posts/1773/</link><pubDate>Thu, 24 Sep 2020 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/1773/</guid><description>定義 多変数関数$f : \mathbb{R}^{n} \to \mathbb{R}$が与えられたとしよう。変数$\mathbf{x} = (x_{1}, x_{2}, \dots, x_{n})$の変化に伴う$f(\ma</description></item><item><title>円筒座標系においてr, θを変数として使用すべきではない理由</title><link>https://freshrimpsushi.github.io/jp/posts/1795/</link><pubDate>Wed, 23 Sep 2020 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/1795/</guid><description>円柱座標の表記法 円柱座標系は3次元空間の点を$(\rho, \phi, z)$のように表す座標系だ。ここで、 $\rho$：位置ベクトル$\mathbf{</description></item><item><title>直交座標系におけるベクトル関数の発散</title><link>https://freshrimpsushi.github.io/jp/posts/1796/</link><pubDate>Wed, 23 Sep 2020 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/1796/</guid><description>定義 ベクトル関数 $\mathbf{F}(x,y,z)=F_{x}\hat{\mathbf{x}}+F_{y}\hat{\mathbf{y}} + F_{z}\hat{\mathbf{z}}$について、以下のようなスカラー関数を$\mathbf{F}$のダイバージェン</description></item><item><title>超関数の微分</title><link>https://freshrimpsushi.github.io/jp/posts/1084/</link><pubDate>Wed, 23 Sep 2020 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/1084/</guid><description>ビルドアップ 配布物超関数は、その定義域が関数空間であるため、実数空間で定義された関数のように微分することはできません。しかし、正則超関数の場</description></item><item><title>ディラックのデルタ関数が正則化された分布ではないことの証明</title><link>https://freshrimpsushi.github.io/jp/posts/1785/</link><pubDate>Tue, 22 Sep 2020 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/1785/</guid><description>定理1 $$ \delta (\phi) := \phi (0), \quad \phi \in \mathcal{D} $$ 上のように定義されたディラック・デルタ関数は正則超関数ではない。正則超関数ではない超関数を特異超関数singul</description></item><item><title>ディラックのデルタ関数のフーリエ変換</title><link>https://freshrimpsushi.github.io/jp/posts/1793/</link><pubDate>Tue, 22 Sep 2020 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/1793/</guid><description>式 関数 $f(x)$ のフーリエ変換を $\hat{f}(\xi) = \mathcal{F}[f] (x) = \displaystyle \int_{-\infty}^{\infty} f(x)e^{-i \xi x}dx$ とする。ディラックのデルタ関数 $\delta (x)$ のフーリエ変換は、以下の通りである。 $$ \hat{\delta}(\xi) = \mathcal{F}[\delta] (\xi) = 1 $$ $\delta (x - y)$ の</description></item><item><title>超関数のダイレーション</title><link>https://freshrimpsushi.github.io/jp/posts/1794/</link><pubDate>Tue, 22 Sep 2020 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/1794/</guid><description>ビルドアップ 超関数はドメインが関数空間であるため、実数空間で定義された関数と同じ方法でダイレーションすることができない。しかし、正則超関数の</description></item><item><title>特性関数、指示関数</title><link>https://freshrimpsushi.github.io/jp/posts/1790/</link><pubDate>Mon, 21 Sep 2020 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/1790/</guid><description>定義 $A \subset X$ について、以下のように定義される 関数 $\chi_{A} : X \to \mathbb{R}$ を 特性関数 または 指示関数 と言う。 $$ \chi _{A}(x) := \begin{cases} 1, &amp;amp; x\in A \\ 0 ,&amp;amp; x \notin A \end{cases} $$ 説明 $\chi$ はギリシャ文</description></item><item><title>超関数によって厳密に定義されるディラックのデルタ関数</title><link>https://freshrimpsushi.github.io/jp/posts/1784/</link><pubDate>Thu, 17 Sep 2020 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/1784/</guid><description>定義1 テスト関数空間 $\mathcal{D}(\mathbb{R}^{n})$の汎関数 $\delta_{a} : \mathcal{D} \to \mathbb{C}$を下記のように定義し、デ</description></item><item><title>すべての局所可積分関数が超関数に拡張可能であることを証明</title><link>https://freshrimpsushi.github.io/jp/posts/1078/</link><pubDate>Wed, 16 Sep 2020 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/1078/</guid><description>定理1 すべての$u \in L_{\mathrm{loc} }^1(\Omega) $に対して、次のように定義される超関数 $T_{u} \in D^{\ast}(\Omega)$が存在する。 $$ T_{u} (\phi) := \int_{\Omega} u(x)\phi (x)dx, \quad \phi \in D(\Omega) $$ 説明</description></item><item><title>テスト関数とテスト関数空間</title><link>https://freshrimpsushi.github.io/jp/posts/1782/</link><pubDate>Wed, 16 Sep 2020 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/1782/</guid><description>定義1 開集合 $\Omega \subset \mathbb{R}^{n}$と関数 $\phi : \Omega \to \mathbb{C}$が与えられているとする。$\phi$が無限に微分可能で、そ</description></item><item><title>テスト関数の空間における収束</title><link>https://freshrimpsushi.github.io/jp/posts/1077/</link><pubDate>Wed, 16 Sep 2020 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/1077/</guid><description>テスト関数空間では、「収束」を特別な方法で定義する。ある空間 $X$が与えられたとき、通常は$X$で定義されたノルムや距離を使用して収束を定義</description></item><item><title>分布の翻訳</title><link>https://freshrimpsushi.github.io/jp/posts/1786/</link><pubDate>Wed, 16 Sep 2020 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/1786/</guid><description>ビルドアップ 超関数は、その定義域が関数空間であるため、実数空間で定義された関数と同じ方法でトランスレーションを行うことはできない。しかし、正</description></item><item><title>局所積分可能な関数</title><link>https://freshrimpsushi.github.io/jp/posts/1783/</link><pubDate>Wed, 16 Sep 2020 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/1783/</guid><description>定義 $\Omega \subset \mathbb{R}^{n}$を開集合と呼ぶ。 定義１1 すべての有界な可測集合 $K \subset \Omega$に対して、 $$ \int_{K} \left| u(x) \right| dx \lt \infty $$ を満たす関</description></item><item><title>超関数、一般化された関数</title><link>https://freshrimpsushi.github.io/jp/posts/1009/</link><pubDate>Wed, 16 Sep 2020 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/1009/</guid><description>定義1 2 $\Omega \subset \mathbb{R}^{n}$が開集合だとしよう。テスト関数空間の連続な線形汎関数 $T : \mathcal{D}(\Omega) \to \mathbb{C}$を超関数dist</description></item><item><title>デルタ関数の歴史とディラックがデルタ関数を使用した理由</title><link>https://freshrimpsushi.github.io/jp/posts/1781/</link><pubDate>Tue, 15 Sep 2020 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/1781/</guid><description>デルタ関数の歴史1 2 3 デルタ関数は19世紀初頭、ポアッソン(1815)、フーリエ(1822)、コーシー(1823, 1827)といった数学や物</description></item><item><title>ファンクショナルがファンクショナルと名付けられた理由</title><link>https://freshrimpsushi.github.io/jp/posts/1780/</link><pubDate>Mon, 14 Sep 2020 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/1780/</guid><description>関数解析学は英語でfunctional analysisです。function analysisではなくfunctionalは一体何を意味してい</description></item><item><title>3次元デカルト座標系におけるスカラー関数の勾配</title><link>https://freshrimpsushi.github.io/jp/posts/1778/</link><pubDate>Sat, 12 Sep 2020 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/1778/</guid><description>定義 スカラー関数 $f=f(x,y,z)$に対して、以下のようなベクトル関数を $f$のグラディエントgradient, 勾配と定義し、$\nab</description></item><item><title>マルチプル・スプリング振動</title><link>https://freshrimpsushi.github.io/jp/posts/1766/</link><pubDate>Wed, 09 Sep 2020 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/1766/</guid><description>スプリングが物体の両側に接続された場合 $x$を物体が移動した距離としよう。スプリングの復元力は$-kx$なので、物体は左のスプリングから$-</description></item><item><title>流体と流体力学の定義</title><link>https://freshrimpsushi.github.io/jp/posts/1768/</link><pubDate>Wed, 09 Sep 2020 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/1768/</guid><description>定義 流体fluidって？ 液体と気体を合わせた言葉 ランダムに配列され、互いに集まっている分子たちの集合1 静止状態では垂直応力が作用し、流動状態</description></item><item><title>結合振動</title><link>https://freshrimpsushi.github.io/jp/posts/1767/</link><pubDate>Wed, 09 Sep 2020 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/1767/</guid><description>単純な結合振動 二つの物体$m_{1}$と$m_{2}$が上の図に示すように二つのバネでつながっているとする。そして、物体$m_{1}$が平衡</description></item><item><title>数学でよく使われる記号と略語</title><link>https://freshrimpsushi.github.io/jp/posts/1764/</link><pubDate>Tue, 08 Sep 2020 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/1764/</guid><description>for all, exist, such that 例文1 For every $\varepsilon \gt 0$, there is an integer N such that $n \ge N$ implies that $d(p_{n},p)&amp;lt;\varepsilon$. どんな正の実数 $\varepsilon$ に対しても、$n$ が何かの整数 $N$ より大きいたびに、$d(p_{n},p)</description></item><item><title>物理振り子</title><link>https://freshrimpsushi.github.io/jp/posts/1765/</link><pubDate>Tue, 08 Sep 2020 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/1765/</guid><description>定義1 重力の影響で固定された水平軸を中心に振動する剛体を物理振り子physical pendulumと呼ぶ。 物理振り子 振り子の運動は調和振動の</description></item><item><title>マルチレゾリューション分析</title><link>https://freshrimpsushi.github.io/jp/posts/1762/</link><pubDate>Mon, 07 Sep 2020 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/1762/</guid><description>定義 閉部分空間の列$L^{2}(\mathbb{R})$と関数$\phi \in V_{0}$が下記の条件を満たす時、$\left( \left\{ V_{j} \right\}, \phi \rig</description></item><item><title>マルチレゾリューション分析スケーリング方程式</title><link>https://freshrimpsushi.github.io/jp/posts/1763/</link><pubDate>Mon, 07 Sep 2020 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/1763/</guid><description>定理 関数 $\phi \in L^{2}(\mathbb{R})$がmultiresolution analysisを生成するとする。すると以下の式を満たす周期</description></item><item><title>MATLABで作業スペースを初期化し、すべての変数を削除する方法</title><link>https://freshrimpsushi.github.io/jp/posts/1758/</link><pubDate>Sun, 06 Sep 2020 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/1758/</guid><description>方法 clear コマンド コマンドウィンドウにclearと入力すると、作業スペースが初期化される。 作業スペースを消去する(Alt+T+O) 作業スペースウ</description></item><item><title>円筒座標系における微小体積</title><link>https://freshrimpsushi.github.io/jp/posts/1753/</link><pubDate>Fri, 04 Sep 2020 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/1753/</guid><description>説明 図を通しての理解 球座標系での微小体積は、上の図で見るように、（緑の線の長さ）$\times$（青の線の長さ）$\times$（赤の線の長</description></item><item><title>極座標系における微小面積、円柱座標系における微小体積</title><link>https://freshrimpsushi.github.io/jp/posts/1755/</link><pubDate>Fri, 04 Sep 2020 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/1755/</guid><description>公式 極座標系での微小面積は以下の通りだ。 $$ dA=rdrd\theta $$ 円筒座標系での微小体積と円筒の表面の微小面積は以下の通りだ。 $$ dV=\rho d\rho d\phi dz \\ dA=\rho d\phi dz $$ 説明 極座標系 $\mathbf{r}=\mathbf{r}(r,\theta)$</description></item><item><title>3次元デカルト座標系におけるベクトル関数のカール(回転)</title><link>https://freshrimpsushi.github.io/jp/posts/1752/</link><pubDate>Thu, 03 Sep 2020 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/1752/</guid><description>定義 ベクトル関数 $\mathbf{F}(x,y,z)=(F_{x},F_{y},F_{z})=F_{x}\hat{\mathbf{x}} + F_{y}\hat{\mathbf{y}} + F_{z}\hat{\mathbf{z}}$に対して、以下のようなベクトルを$\mathbf{F}$のカールcurl</description></item><item><title>双曲線関数</title><link>https://freshrimpsushi.github.io/jp/posts/1749/</link><pubDate>Thu, 03 Sep 2020 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/1749/</guid><description>定義 $z \in \mathbb{C}$について, $$ \begin{align*} \sinh z &amp;amp;:= \frac{e^{z}-e^{-z}}{2} \\ \cosh z &amp;amp;:= \frac{e^{z}+e^{-z}}{2} \\ \tanh z &amp;amp;:= \frac{\sinh z}{\cosh z} \end{align*} $$ $$ \begin{align*} \mathrm{csch}x&amp;amp;=\frac{1}{\sinh x} \\ \mathrm{sech} x&amp;amp;=\frac{1}{\cosh x} \\ \coth x &amp;amp;=\frac{1}{\tanh x} \end{align*} $$ 三角関数との関係 $$ \begin{align*} \sinh (iz) &amp;amp;= i\sin z</description></item><item><title>双曲線関数の二倍角と半角の公式</title><link>https://freshrimpsushi.github.io/jp/posts/1748/</link><pubDate>Thu, 03 Sep 2020 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/1748/</guid><description>式 二倍角の公式: $$ \begin{align} \sinh (2x) =&amp;amp;\ 2\sinh x \cosh x \label{1} \\ \cosh (2x) =&amp;amp;\ \cosh^{2} x + \sinh^{2} x = 2\cosh ^{2 } x -1 = 2\sinh ^{2} x +1 \\ \tanh (2x) =&amp;amp;\ \frac{2\tanh x}{1+\tanh^{2}x} \end{align} $$ 半角の公式: $$ \begin{align} \sinh^{2} \frac{x}{2} =&amp;amp;\ \frac{\cosh x -1 }{2} \\ \cosh^{2} \frac{x}{2} =&amp;amp;\ \frac{\cosh x +1 }{2} \\</description></item><item><title>双曲線関数の和差公式と乗法公式</title><link>https://freshrimpsushi.github.io/jp/posts/1750/</link><pubDate>Thu, 03 Sep 2020 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/1750/</guid><description>公式 和差公式: $$ \begin{align} \sinh x +\sinh y =&amp;amp;\ 2\sinh \left(\frac{x+y}{2}\right) \cosh \left(\frac{x-y}{2}\right) \\[1em] \sinh x -\sinh y =&amp;amp;\ 2\sinh \left(\frac{x-y}{2}\right) \cosh \left( \frac{x+y}{2} \right) \\[1em] \cosh x + \cosh y =&amp;amp;\ 2 \cosh \left(\frac{x+y}{2}\right) \cosh \left(\frac{x-y}{2}\right) \\[1em] \cosh x -\cosh y =&amp;amp;\ 2 \sinh \left( \frac{x+y}{2} \right) \sinh \left(\frac{x-y}{2}\right) \end{align} $$ 積の公式: $$ \begin{align} \sinh x \sinh y =&amp;amp;\ \frac{\cosh</description></item><item><title>双曲線関数の加法定理の証明</title><link>https://freshrimpsushi.github.io/jp/posts/1743/</link><pubDate>Wed, 02 Sep 2020 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/1743/</guid><description>公式 $$ \begin{align} \sinh (x\pm y) =&amp;amp;\ \sinh x \cosh y \pm \sinh y \cosh x \\ \cosh (x \pm y) =&amp;amp;\ \cosh x \cosh y \pm \sinh x \sinh y \\ \tanh{x \pm y}&amp;amp;=\frac{\tanh x \pm \tanh y}{1 \pm \tanh x \tanh y} \end{align} $$ 説明 双曲関数と三角関数の関係を考えてみれば、三</description></item><item><title>双曲線関数の恒等式</title><link>https://freshrimpsushi.github.io/jp/posts/1744/</link><pubDate>Wed, 02 Sep 2020 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/1744/</guid><description>数式 $$ \begin{align} \sinh(-x) =&amp;amp;\ -\sinh x \\ \cosh(-x) =&amp;amp;\ \cosh x \\ \tanh(-x) =&amp;amp;\ - \tanh x \\ \cosh x + \sinh x =&amp;amp;\ e^{x} \\ \cosh x - \sinh x =&amp;amp;\ e^{-x} \\ \cosh^{2}x -\sinh^{2}x =&amp;amp;\ 1 \end{align} $$ 説明 特に証明することもない。定義からすぐに分かる事実だ。</description></item><item><title>強制調和振動と共鳴振動数</title><link>https://freshrimpsushi.github.io/jp/posts/1742/</link><pubDate>Wed, 02 Sep 2020 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/1742/</guid><description>強制調和振動1 物体がバネに吊るされ振動するような運動を調和運動と言う。このとき、空気抵抗などの摩擦力を含む他の外力が存在せず、バネ定数$k$</description></item><item><title>コンプトンカメラの原理</title><link>https://freshrimpsushi.github.io/jp/posts/1740/</link><pubDate>Mon, 31 Aug 2020 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/1740/</guid><description>原理 コンプトンカメラはコンプトン散乱を利用してガンマ線を放出する物質の位置を見つけ出す装置だ。Compton telescopeあるいはCom</description></item><item><title>トモグラフィーとは何ですか？</title><link>https://freshrimpsushi.github.io/jp/posts/1741/</link><pubDate>Mon, 31 Aug 2020 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/1741/</guid><description>トモグラフィーとは？1 トモグラフィーは韓国語で断層撮影と言い、語源はギリシャ語のτoμoσsliceとγραψετεwriteだ。言葉の意味</description></item><item><title>減衰調和振動</title><link>https://freshrimpsushi.github.io/jp/posts/1736/</link><pubDate>Sat, 29 Aug 2020 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/1736/</guid><description>減衰調和振動1 バネ定数を$k$とするとき、単振動の運動方程式は次のようになる。 $$ m \ddot {x}+kx=0 $$ 単振動ではバネの復元力のみを考慮する。しかし、実際に</description></item><item><title>거리공간에서 연속함수일 동치 조건</title><link>https://freshrimpsushi.github.io/jp/posts/1722/</link><pubDate>Mon, 24 Aug 2020 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/1722/</guid><description>定理1 二つの距離空間 $(X,d_{X})$, $(Y,d_{Y})$について、$E\subset X$であり、$p \in E$、$f : E \to Y$とする。このとき、以下の三つの</description></item><item><title>コンパクト距離空間における連続な全単射関数の逆関数は連続である。</title><link>https://freshrimpsushi.github.io/jp/posts/1726/</link><pubDate>Mon, 24 Aug 2020 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/1726/</guid><description>定理 $X$をコンパクトな距離空間、$Y$を距離空間とする。$f : X \to Y$が全単射で連続な関数だとする。すると、以下のように定義される$f$の</description></item><item><title>コンパクト距離空間上の連続関数が一様連続であることの証明</title><link>https://freshrimpsushi.github.io/jp/posts/1727/</link><pubDate>Mon, 24 Aug 2020 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/1727/</guid><description>定理 $(X,d_{X})$がコンパクト距離空間で、$(Y,d_{Y})$が距離空間で、 $f:X\to Y$が連続だとする。すると、$f$は$X$で一様連続</description></item><item><title>距離空間におけるコンパクト性の条件の重要性</title><link>https://freshrimpsushi.github.io/jp/posts/1728/</link><pubDate>Mon, 24 Aug 2020 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/1728/</guid><description>概要 解析学の多くの定理では、コンパクトを必要条件として要求している（参考1, 参考2, 参考3, 参考4）。証明過程でコンパクトであるという仮定を</description></item><item><title>距離空間における最大最小定理</title><link>https://freshrimpsushi.github.io/jp/posts/1725/</link><pubDate>Mon, 24 Aug 2020 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/1725/</guid><description>要旨 $X$をコンパクトな距離空間、$f : X \to \mathbb{R}$を連続とする。そうしたら、次のようになる。 $$ M = \sup \limits_{x\in X} f(x),\quad m=\inf \limits_{x \in X}f(x) $$ そうする</description></item><item><title>距離空間における連結集合</title><link>https://freshrimpsushi.github.io/jp/posts/1729/</link><pubDate>Mon, 24 Aug 2020 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/1729/</guid><description>定義 距離空間 $X$ の二つの部分集合 $A$ と $B$が $$ A \cap \overline{B}= \varnothing \quad \text{and} \quad \overline{A}\cap B= \varnothing $$ を満たすとき、$A$ と $B$ は分離していると言う。つまり、$B$ の閉包に含まれ</description></item><item><title>距離空間における連続性とコンパクト性</title><link>https://freshrimpsushi.github.io/jp/posts/1724/</link><pubDate>Mon, 24 Aug 2020 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/1724/</guid><description>定理 $X$をコンパクト距離空間、$Y$を距離空間、$f:X\to Y$が連続だとする。すると、$f(X)$はコンパクトである。 コンパクトという</description></item><item><title>距離空間における連続関数の合成は連続性を保持する</title><link>https://freshrimpsushi.github.io/jp/posts/1721/</link><pubDate>Mon, 24 Aug 2020 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/1721/</guid><description>定理 三つの距離空間 $(X,d_{X})$, $(Y,d_{Y})$, $(Z,d_{Z})$があるとしよう。$E\subset X$であり、二つの関数$f:E\to Y$、$g:f(E) \to Z$</description></item><item><title>距離空間における連続関数の性質</title><link>https://freshrimpsushi.github.io/jp/posts/1723/</link><pubDate>Mon, 24 Aug 2020 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/1723/</guid><description>定理: 実数値関数 二つの関数 $f$, $g$が、距離空間 $X$から複素数への関数であるとする。 $$ f:X \to \mathbb{C},\quad g:X \to \mathbb{C} $$ 二つの関数が連続であれば、$f+g$, $fg$,</description></item><item><title>距離空間における関数の極限</title><link>https://freshrimpsushi.github.io/jp/posts/1719/</link><pubDate>Mon, 24 Aug 2020 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/1719/</guid><description>定義 $(X,d_{X})$, $(Y,d_{Y})$ を距離空間としよう。$E\subset X$で、$f: E\rightarrow Y$で、$p$が$E$の集積点としよう。すると、すべての正の数$\vareps</description></item><item><title>距離空間における関数の極限の性質</title><link>https://freshrimpsushi.github.io/jp/posts/1720/</link><pubDate>Mon, 24 Aug 2020 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/1720/</guid><description>定理1 $(X,d)$を距離空間、$E\subset X$を部分集合、$p$を$E$の集積点とする。そして、$E$で定義された2つの複素数値関数</description></item><item><title>距離空間における数列の収束</title><link>https://freshrimpsushi.github.io/jp/posts/1713/</link><pubDate>Thu, 20 Aug 2020 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/1713/</guid><description>定義1 $\left\{ p_{n} \right\}$が距離空間 $(X,d)$の点の列であるとしよう。以下の条件を満たす点 $p \in X$が存在するなら、列 $\left\{ p_{n} \right\</description></item><item><title>距離空間における集合の直径</title><link>https://freshrimpsushi.github.io/jp/posts/1717/</link><pubDate>Thu, 20 Aug 2020 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/1717/</guid><description>定義1 $E$を、距離空間 $(X,d)$の部分集合だとしよう。そして、$S$を以下のようにしよう。 $$ S=\left\{ d(p, q) : \forall p, q \in E\right\} $$ そうすると、$S$の最</description></item><item><title>距離空間内のコーシー数列と完備性</title><link>https://freshrimpsushi.github.io/jp/posts/1718/</link><pubDate>Thu, 20 Aug 2020 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/1718/</guid><description>定義 $\left\{ p_{n} \right\}$を距離空間$(X,d)$の点の数列とする。全ての正の数$\varepsilon$に対して $$ n\ge N,\ m\ge N \implies d(p_{n},p_{m})&amp;lt;\varepsilon $$ が成り立つ</description></item><item><title>ユークリッド空間における空でない完全集合は非可算である</title><link>https://freshrimpsushi.github.io/jp/posts/1712/</link><pubDate>Wed, 19 Aug 2020 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/1712/</guid><description>定義 $(X,d)$を距離空間としよう。$p \in X$であり、かつ$E \subset X$とする。 $d(q,p)&amp;lt;r$を満たすすべての$q$を含む集合を点</description></item><item><title>収束する実数列の性質</title><link>https://freshrimpsushi.github.io/jp/posts/1714/</link><pubDate>Wed, 19 Aug 2020 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/1714/</guid><description>定理11 $\left\{ s_{n} \right\}$, $\left\{ t_{n} \right\}$が実数（または複素数）の数列で、$\lim \limits_{n\to\infty} s_{n}=s$, $\lim\limits_{n\to\infty}t_{n</description></item><item><title>すべてのk-cellはコンパクトである：ユークリッド空間でコンパクトである同値条件。</title><link>https://freshrimpsushi.github.io/jp/posts/1711/</link><pubDate>Tue, 18 Aug 2020 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/1711/</guid><description>定義 $a_i, b_i \in \mathbb{R} (1 \le i \le k)$に対して、集合$I=[a_{1}, b_{1}] \times [a_{2}, b_{2}] \times \cdots \times [a_{k}, b_{k}]$を**$k$-セル**と言う。ここで$\times</description></item><item><title>距離空間における一般化されたカントールの縮小区間定理</title><link>https://freshrimpsushi.github.io/jp/posts/1710/</link><pubDate>Tue, 18 Aug 2020 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/1710/</guid><description>定理1 $(X,d)$が距離空間だとしよう。$K_{n}\subset X (n=1,2,\cdots)$は空でないコンパクト部分集合だ。この時$</description></item><item><title>メトリック空間におけるコンパクト性</title><link>https://freshrimpsushi.github.io/jp/posts/1705/</link><pubDate>Sun, 16 Aug 2020 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/1705/</guid><description>定義 オープンカバー 距離空間$(X,d)$と部分集合$E\subset X$が与えられたとする。下の式を満たす$X$の開集合の集合$\left\</description></item><item><title>距離空間におけるコンパクト集合の閉部分集合はコンパクトである</title><link>https://freshrimpsushi.github.io/jp/posts/1706/</link><pubDate>Sun, 16 Aug 2020 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/1706/</guid><description>定理1 距離空間 $X$において、コンパクト集合 $K$の[($X$に対して)閉じている]部分集合はコンパクトだ。 証明 距離空間 $X$で $F\subset K \subset X$と</description></item><item><title>距離空間における相対的に開かれた集合</title><link>https://freshrimpsushi.github.io/jp/posts/1703/</link><pubDate>Sat, 15 Aug 2020 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/1703/</guid><description>説明 ２つの距離空間$Y\subset X$があるとしよう。そして、部分集合$E \subset Y \subset X$が与えられたとしよう。もし$E$が全体空間$X$に対し</description></item><item><title>距離空間における開集合と閉集合の性質</title><link>https://freshrimpsushi.github.io/jp/posts/1702/</link><pubDate>Fri, 14 Aug 2020 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/1702/</guid><description>$(X,d)$が距離空間だとする。$p \in X$であり、$E \subset X$とする。 $d(q,p)&amp;lt;r$を満たす全ての$q$を含む集合を点$p$の近</description></item><item><title>メートル空間における近傍、限界点、オープン、クローズド</title><link>https://freshrimpsushi.github.io/jp/posts/1700/</link><pubDate>Thu, 13 Aug 2020 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/1700/</guid><description>定義 $(X,d)$が距離空間だとしよう。$p \in X$であり、$E \subset X$とする。 $d(q,p)&amp;lt;r$を満たすすべての$q$を含む集合を点$</description></item><item><title>計量空間における閉包と派生集合</title><link>https://freshrimpsushi.github.io/jp/posts/1701/</link><pubDate>Thu, 13 Aug 2020 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/1701/</guid><description>定義 $(X,d)$が距離空間であるとする。$p \in X$であり、$E \subset X$であるとする。 $d(q,p)&amp;lt;r$を満たす全ての$q$を含む集合</description></item><item><title>区間内で保持されるリーマン-スティルチェスの可積分性</title><link>https://freshrimpsushi.github.io/jp/posts/1695/</link><pubDate>Tue, 11 Aug 2020 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/1695/</guid><description>この文章はリーマン-スティルチェス積分を基準にして書かれたものだ。$\alpha=\alpha (x)=x$としたら、リーマン積分と同じになる</description></item><item><title>積分可能な関数と絶対値</title><link>https://freshrimpsushi.github.io/jp/posts/1697/</link><pubDate>Tue, 11 Aug 2020 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/1697/</guid><description>この記事はリーマン-スティルチェス積分を基に書かれている。$\alpha=\alpha (x)=x$とすると、リーマン積分と同じだ。 定理1 関数</description></item><item><title>解析学における微分積分学の基本定理1</title><link>https://freshrimpsushi.github.io/jp/posts/1698/</link><pubDate>Tue, 11 Aug 2020 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/1698/</guid><description>要旨1 $f$が区間$[a,b]$でリーマン積分可能な関数だとしよう。そして、$a\le x \le b$に対して次のように$F$を定義しよう。 $$ F(x) = \int</description></item><item><title>関数の大小関係に基づく積分の大小関係</title><link>https://freshrimpsushi.github.io/jp/posts/1696/</link><pubDate>Tue, 11 Aug 2020 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/1696/</guid><description>この記事はリーマン-シュティルチェス積分に基づいて書かれた。$\alpha=\alpha (x)=x$とした場合、リーマン積分と同じである。 定</description></item><item><title>日、仕事-エネルギーの定理</title><link>https://freshrimpsushi.github.io/jp/posts/1694/</link><pubDate>Thu, 06 Aug 2020 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/1694/</guid><description>定義 力 $\mathbf{F}$が物体に作用して、その物体が力と同じ方向に$s$だけ移動したとき、力の大きさと移動距離の積 $W=Fs$を力 $\</description></item><item><title>2次/3次/n次方程式の根と係数の関係</title><link>https://freshrimpsushi.github.io/jp/posts/1691/</link><pubDate>Sun, 02 Aug 2020 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/1691/</guid><description>式 二次方程式の根と係数の関係 二次方程式$ax^{2}+bx+c=0$の二つの根を$\alpha$と$\beta$とする。すると、以下の式が成</description></item><item><title>三次方程式の根の公式</title><link>https://freshrimpsushi.github.io/jp/posts/1692/</link><pubDate>Sun, 02 Aug 2020 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/1692/</guid><description>式 3次方程式$t^{3}+pt+q = 0$の解は次の通りだ。 $$ \begin{cases} t_{1}=u_{1}+v_{1}=\sqrt[3]{-\frac{q}{2}+\sqrt{\frac{q^{2}}{4}+\frac{p^{3}}{27}}}+\sqrt[3]{-\frac{q}{2}-\sqrt{\frac{q^{2}}{4}+\frac{p^{3}}{27}}} \\ t_{2}=u_{2}+v_{3}=\sqrt[3]{-\frac{q}{2}+\sqrt{\frac{q^{2}}{4}+\frac{p^{3}}{27}}}\omega+\sqrt[3]{-\frac{q}{2}-\sqrt{\frac{q^{2}}{4}+\frac{p^{3}}{27}}}\omega^{2} \\ t_{3}=u_{3}+v_{2}=\sqrt[3]{-\frac{q}{2}+\sqrt{\frac{q^{2}}{4}+\frac{p^{3}}{27}}}\omega^{2}+\sqrt[3]{-\frac{q}{2}-\sqrt{\frac{q^{2}}{4}+\frac{p^{3}}{27}}}\omega\end{cases} $$ この時$\omega = e^{i\frac{2}{3}\pi}$であ</description></item><item><title>ケプラーの第1法則：楕円軌道の法則</title><link>https://freshrimpsushi.github.io/jp/posts/1689/</link><pubDate>Thu, 30 Jul 2020 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/1689/</guid><description>ケプラーの第一法則: 楕円軌道の法則 惑星の公転軌道は太陽を焦点の一つとする楕円である。 ケプラーの惑星運動の法則の中で一番目の法則である。 証明1</description></item><item><title>ケプラーの第三法則：世界の調和</title><link>https://freshrimpsushi.github.io/jp/posts/1690/</link><pubDate>Thu, 30 Jul 2020 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/1690/</guid><description>ケプラーの第3法則: 調和の法則 惑星の公転周期の二乗は、その軌道の半長軸の三乗に比例する。 ケプラーの惑星運動の法則の中の第三法則である。惑星の</description></item><item><title>楕円の周囲</title><link>https://freshrimpsushi.github.io/jp/posts/1688/</link><pubDate>Wed, 29 Jul 2020 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/1688/</guid><description>ほとんどの資料では二種類の楕円積分がどのように導出されるか、詳細な説明がない。もしあっても間違っている場合が多いから1、**「正確で」そして</description></item><item><title>第二種楕円積分</title><link>https://freshrimpsushi.github.io/jp/posts/1687/</link><pubDate>Wed, 29 Jul 2020 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/1687/</guid><description>定義 下記の積分を第2種完全楕円積分complete elliptic integral of the second kindという。 $$ E(k)=\int_{0}^{{\textstyle \frac{\pi}{2}}}\sqrt{1-k^{2} \sin ^{2} \theta} d\theta $$ 下記の積分を第2種不完全楕円積分incomple</description></item><item><title>楕円</title><link>https://freshrimpsushi.github.io/jp/posts/1685/</link><pubDate>Mon, 27 Jul 2020 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/1685/</guid><description>定義 平面上で二つの固定された点$F$、$F^{\prime}$への距離の合計が一定である点の集合を楕円ellipseという。 楕円の要素は以下</description></item><item><title>極座標系における焦点が原点の楕円の方程式</title><link>https://freshrimpsushi.github.io/jp/posts/1686/</link><pubDate>Mon, 27 Jul 2020 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/1686/</guid><description>定理 極座標系での楕円の方程式は以下の通りです。 $$ r=\frac{\alpha}{1+\epsilon \cos \theta}\tag{a} $$ あるいは $$ r=\frac{b^{2}/a}{1+\frac{\sqrt{a^{2}-b^{2}}}{a}\cos\theta} \tag{b} $$ ここで$\alpha$は焦点距離、$\epsilon$は離心率、$a</description></item><item><title>中心力を受ける粒子の軌道方程式</title><link>https://freshrimpsushi.github.io/jp/posts/1684/</link><pubDate>Thu, 23 Jul 2020 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/1684/</guid><description>中心力を受ける粒子の軌道方程式1 中心力を受ける質量が$m$の粒子の運動方程式を極座標系で表すと以下の通りだ。 $$ \begin{equation} m\ddot{\mathbf{r}}=F(r)\hat{\mathbf{r}} \label{eq1} \end{equation} $$ $F(r)$は粒子に</description></item><item><title>ケプラーの第二法則：面積速度一定の法則</title><link>https://freshrimpsushi.github.io/jp/posts/1682/</link><pubDate>Wed, 22 Jul 2020 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/1682/</guid><description>ケプラーの第2法則：面積速度一定の法則1 太陽と惑星を結ぶ線分は、同じ時間で等しい面積を通過する。 面積速度一定の法則は、ケプラーの惑星運動の法</description></item><item><title>二つのベクトルの外積の大きさは、それらが作る平行四辺形の面積と等しい</title><link>https://freshrimpsushi.github.io/jp/posts/1681/</link><pubDate>Wed, 22 Jul 2020 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/1681/</guid><description>定理 二つのベクトル$\mathbf{A}$と$\mathbf{B}$の間の角度が$\theta$の時、二つのベクトルの外積の大きさは以下の通</description></item><item><title>楕円の方程式の導出</title><link>https://freshrimpsushi.github.io/jp/posts/1683/</link><pubDate>Wed, 22 Jul 2020 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/1683/</guid><description>公式 中心が$(x_{0},y_{0})$であり、長軸が$a$、短軸が$b$の楕円の方程式は以下の通りである。 $$ \frac{(x-x_{0})^{2}}{a^{2}}+\frac{(y-y_{0})^{2}}{b^{2}}=1 $$ 説明 楕円とは、2つの焦点ま</description></item><item><title>ケプラーの惑星運動法則</title><link>https://freshrimpsushi.github.io/jp/posts/1680/</link><pubDate>Tue, 21 Jul 2020 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/1680/</guid><description>ケプラーの惑星運動の法則1 ケプラーの法則は、ティコ・ブラーエやヒッパルコスなどの天文学者たちの観測記録を集めて整理した経験法則である。これは</description></item><item><title>均一な球殻と離れた粒子の重力</title><link>https://freshrimpsushi.github.io/jp/posts/1679/</link><pubDate>Tue, 21 Jul 2020 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/1679/</guid><description>一様な球殻と飛び出した粒子の重力1 全質量が$M$、半径が$R$の一様な球殻があるとしよう。そして、球殻の中心$O$から$r$離れた場所に質量</description></item><item><title>万有引力の法則：重力</title><link>https://freshrimpsushi.github.io/jp/posts/1678/</link><pubDate>Mon, 20 Jul 2020 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/1678/</guid><description>万有引力の法則1 万有引力の法則law of universal gravityは、ニュートンが1687年に『プリンキピア』を通じて発表した物理法則である。「すべての</description></item><item><title>粒子系の運動エネルギー</title><link>https://freshrimpsushi.github.io/jp/posts/1676/</link><pubDate>Mon, 20 Jul 2020 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/1676/</guid><description>粒子系の運動エネルギー1 粒子系の直線運動量と角運動量を定義したのと同じように、粒子系の運動エネルギーも各粒子の運動エネルギーの合計として自然</description></item><item><title>遠心力</title><link>https://freshrimpsushi.github.io/jp/posts/1677/</link><pubDate>Mon, 20 Jul 2020 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/1677/</guid><description>定義 物体の位置に関係なく、その物体に作用する力の方向が常に同じ点を向く時、この力を中心力という。代表的な例は重力である。地球上のどこにいても</description></item><item><title>粒子系の角運動量</title><link>https://freshrimpsushi.github.io/jp/posts/1675/</link><pubDate>Sun, 19 Jul 2020 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/1675/</guid><description>公式 粒子系のトルクは、各粒子のトルクの和と等しい。 $$ \mathbf{N}=\frac{ d \mathbf{L}}{ d t }=\sum \limits _{i=1} ^{n} \mathbf{r}_{i}\times \mathbf{F}_{i} $$ 導出1 粒子系の線運動量を各粒子の線運動量の和として定義した。同様</description></item><item><title>角運動量とトルク</title><link>https://freshrimpsushi.github.io/jp/posts/1674/</link><pubDate>Fri, 17 Jul 2020 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/1674/</guid><description>角運動量1 運動量は、物体が直線運動する際の運動の状態を表す物理量である。質量が大きければ大きいほど、速度が速ければ速いほど、運動量は大きくな</description></item><item><title>ニュートンの運動の法則</title><link>https://freshrimpsushi.github.io/jp/posts/1671/</link><pubDate>Thu, 16 Jul 2020 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/1671/</guid><description>ニュートンの運動法則 1 イギリスの数学者であり物理学者であるアイザック・ニュートンIssac Newtonは1687年、プリンキピアPrinci</description></item><item><title>物理学における質量、力、運動量の定義</title><link>https://freshrimpsushi.github.io/jp/posts/1673/</link><pubDate>Thu, 16 Jul 2020 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/1673/</guid><description>質量1 ニュートンの運動の法則では、慣性とは運動の変化に抵抗する性質と説明されている。つまり、慣性が大きいほど動かしづらく、慣性が小さいほど動</description></item><item><title>運動量の記号がpである理由</title><link>https://freshrimpsushi.github.io/jp/posts/1672/</link><pubDate>Thu, 16 Jul 2020 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/1672/</guid><description>説明 物理学で使われる多くの記号は深く考えずとも、なぜそうなったのかわかる。例えば、力を意味する記号$\mathbf{F}$や、質量、速度、加</description></item><item><title>粒子系の質量中心と線運動量</title><link>https://freshrimpsushi.github.io/jp/posts/1670/</link><pubDate>Mon, 13 Jul 2020 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/1670/</guid><description>定義 粒子の集まりを粒子系system of particlesと呼ぶ。 説明 1 質量が$m_{1}$、$m_2$、$\cdots$、$m_{n}$の粒</description></item><item><title>リーマン(-シュティールス)積分の線形性</title><link>https://freshrimpsushi.github.io/jp/posts/1666/</link><pubDate>Thu, 02 Jul 2020 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/1666/</guid><description>정리1 この記事はリーマン・スティルチェス積分を基準に書かれています。$\alpha=\alpha (x)=x$とすると、リーマン積分と同じです</description></item><item><title>ウェーブレットの定義</title><link>https://freshrimpsushi.github.io/jp/posts/1663/</link><pubDate>Mon, 22 Jun 2020 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/1663/</guid><description>定義 $\psi \in L^{2}(\mathbb{R})$としよう。$\psi$が以下の二つの条件を満たす時、関数$\psi$をウェーブレットという。 (a) 整</description></item><item><title>지수성장방정식/상수 계수를 갖는 1계 선형 동차 미분 방정식</title><link>https://freshrimpsushi.github.io/jp/posts/1660/</link><pubDate>Fri, 12 Jun 2020 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/1660/</guid><description>定義 以下のような 一次常微分方程式で独立変数 $t$ が $f$ に明示的に含まれていない場合、それを 自律システムautonomous system または 自律微分方程式a</description></item><item><title>一次線形微分方程式システム</title><link>https://freshrimpsushi.github.io/jp/posts/1659/</link><pubDate>Thu, 11 Jun 2020 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/1659/</guid><description>ビルドアップ1 質量が$m$、減衰係数が$\gamma$、バネ定数が$k$の時、スプリングに吊るされた物体の振動を示す運動方程式は以下の通りだ</description></item><item><title>ラゲール多項式のロドリゲスの公式</title><link>https://freshrimpsushi.github.io/jp/posts/1658/</link><pubDate>Wed, 10 Jun 2020 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/1658/</guid><description>数式 ラゲール多項式の明示的な式は以下のようである。 $$ L_{n}(x) = \frac{1}{n!}e^{x}\frac{ d ^{n}}{ dx^{n} }(x^{n}e^{-x}) \tag{1} $$ 説明 上の式はラゲール多項式に対するロドリゲスの公式と言われる。ロドリゲ</description></item><item><title>エルミート多項式</title><link>https://freshrimpsushi.github.io/jp/posts/1655/</link><pubDate>Tue, 09 Jun 2020 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/1655/</guid><description>説明 エルミート多項式Hermite Polynomialは、下記のように様々な方式で定義される。 微分方程式の解として 以下のエルミート微分方程式</description></item><item><title>エルミート多項式の再帰関係</title><link>https://freshrimpsushi.github.io/jp/posts/1656/</link><pubDate>Tue, 09 Jun 2020 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/1656/</guid><description>定理 エルミート多項式は次の再帰関係を満たす。 $$ \begin{align} H_{n}^{\prime}(x) &amp;amp;= 2nH_{n-1}(x) \\ H_{n+1}(x) &amp;amp;= 2xH_{n}(x)-2nH_{n-1}(x) \\ &amp;amp;= 2xH_{n}(x)-H_{n}^{\prime}(x) \nonumber \end{align} $$ 証明 $(1)$ 生成関数を用いた解法 エルミート多項式の生成関数 $$ \Phi (x,t) = e^{2xt-t^{2}}=\sum \limits _{n=0}^{\infty}</description></item><item><title>エルミート多項式の生成関数</title><link>https://freshrimpsushi.github.io/jp/posts/1654/</link><pubDate>Tue, 09 Jun 2020 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/1654/</guid><description>公式 エルミート多項式の生成関数は下記の通りだ。 $$ \Phi (x,t)=\sum \limits _{n=0}^{\infty} \frac{H_{n}(x)}{n!}t^{n}= e^{2xt-t^{2}} $$ 説明 エルミート多項式の生成関数とは、簡単に言えば、エルミート多項式を係数とする</description></item><item><title>エルミート多項式の直交性</title><link>https://freshrimpsushi.github.io/jp/posts/1657/</link><pubDate>Tue, 09 Jun 2020 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/1657/</guid><description>定理 エルミート多項式 $\left\{ H_{n} \right\}_{n=0}^{\infty}$は区間 $(-\infty, \infty)$で重み関数 $w(x)=e^{-x^{2}}$</description></item><item><title>フォーハマー記号</title><link>https://freshrimpsushi.github.io/jp/posts/1652/</link><pubDate>Fri, 05 Jun 2020 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/1652/</guid><description>定義 ポッホハマー記号には、以下のように二種類の表現がある。 以下の式を下降階乗(falling factorial)と定義する。 $$ \begin{align*} x^{\underline{n}} := (x)_{n}&amp;amp;=x(x-1)(x-2)\cdots(x-n+1) \\ &amp;amp;=\frac{x!}{(x-n)!}=\frac{\Gamma (x+1)</description></item><item><title>ラグール微分方程式の直列解法</title><link>https://freshrimpsushi.github.io/jp/posts/1651/</link><pubDate>Thu, 04 Jun 2020 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/1651/</guid><description>定義 次の微分方程式をラゲールLaguerre微分方程式と呼ぶ。 $$ xy^{\prime \prime}+(1-x)y^{\prime}+ny=0,\quad n=0,1,2,\cdots $$ 説明 ラゲール微分方程式の解をラゲール多項式と呼び、最初の数個のラゲー</description></item><item><title>エルミート微分方程式と級数解</title><link>https://freshrimpsushi.github.io/jp/posts/1650/</link><pubDate>Wed, 03 Jun 2020 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/1650/</guid><description>定義 以下の微分方程式をエルミートHermite 微分方程式と言う。 $$ y^{\prime \prime}-2xy^{\prime}+2ny=0,\quad n=0,1,2,\cdots $$ エルミート微分方程式の解をエルミート多項式Hermite polyn</description></item><item><title>エルミート関数</title><link>https://freshrimpsushi.github.io/jp/posts/1646/</link><pubDate>Tue, 02 Jun 2020 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/1646/</guid><description>定義 エルミート関数は以下のように定義される。 $$ \begin{align} y_{n} &amp;amp;= \left( D-x \right)^{n} e^{-\frac{x^{2}}{2}} \\ &amp;amp;=e^{\frac{x^{2}}{2}} D^{n} e^{-x^{2}} \end{align} $$ ここで$D=\frac{d}{dx}$は微分演算子である。 説明 エルミ</description></item><item><title>エルミート関数が満たす微分方程式の演算子解法</title><link>https://freshrimpsushi.github.io/jp/posts/1648/</link><pubDate>Tue, 02 Jun 2020 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/1648/</guid><description>定理 与えられた微分方程式 $$ y_{n}^{\prime \prime}-x^{2}y_{n}=-(2n+1)y_{n},\quad n=0,1,2,\cdots \tag{1} \label{eq1} $$ $(1)$の解は以下の通りであり、エルミート関数と呼ばれる。 $$ \begin{align*} y_{n} &amp;amp;= \left( D-x \right)^{n} e^{-\frac{x^{2}}{2}} \\ &amp;amp;= e^{\frac{x^{2}}{2}} D^{n} x^{-x^{2}} \end{align*} $$ ここで、$D</description></item><item><title>物理学における微分作用素とは?</title><link>https://freshrimpsushi.github.io/jp/posts/1638/</link><pubDate>Sun, 31 May 2020 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/1638/</guid><description>説明 微分方程式を解く方法の一つに、微分演算子を使って解く方法がある。微分演算子$D$を以下のように定義しよう。 $$ D:= \frac{d}{dx} $$ 微分される変数を明確に</description></item><item><title>量子力学における波動関数とヒルベルト空間</title><link>https://freshrimpsushi.github.io/jp/posts/1637/</link><pubDate>Sat, 30 May 2020 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/1637/</guid><description>ビルドアップ 古典力学では、与えられた条件でニュートンの第二法則$\mathbf{F} = m \mathbf{a}$を満たす位置関数$\mathb</description></item><item><title>角運動量と位置／運動量の交換関係</title><link>https://freshrimpsushi.github.io/jp/posts/1636/</link><pubDate>Fri, 29 May 2020 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/1636/</guid><description>公式 角運動量と位置の交換子は次のようになる。 $$ \begin{align*} [L_{z}, x] &amp;amp;= \i \hbar y \\ [L_{z}, y] &amp;amp;= -\i \hbar x \\ [L_{z}, z] &amp;amp;= 0 \end{align*} $$ 角運動量と運動量の交換子は次のようになる。 $$ \begin{align*} [L_{z}, p_{x}] &amp;amp;=</description></item><item><title>球座標系における角運動量のラダー演算子</title><link>https://freshrimpsushi.github.io/jp/posts/1634/</link><pubDate>Thu, 28 May 2020 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/1634/</guid><description>公式 球座標系では、角運動量のはしご演算子は次のように表される。 $$ \begin{align*} L_{+} &amp;amp;= \hbar e^{\i\phi}\left( \dfrac{\partial }{\partial \theta} + \i\cot\theta \dfrac{\partial }{\partial \phi}\right) \\ L_{-} &amp;amp;= -\hbar e^{-\i\phi}\left( \dfrac{\partial }{\partial \theta} - \i\cot\theta \dfrac{\partial }{\partial \phi}\right) \\ L_{+}L_{-} &amp;amp;= -\hbar ^{2} \left( \frac{ \partial ^{2}}{ \partial \theta ^{2}</description></item><item><title>角運動量演算子の固有関数は球面調和関数である。</title><link>https://freshrimpsushi.github.io/jp/posts/1633/</link><pubDate>Wed, 27 May 2020 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/1633/</guid><description>定理 角運動量演算子 $L^{2}$と$L_{z}$は、定数 $l$、$m$によって決まる同時固有関数 $\ket{\ell, m}$を持つ。 $$ \begin{align*} L^{2}\ket{\ell, m} &amp;amp;= \hbar^{2}\ell(\ell+1)\ket{\ell, m} \\ L_{z}\ket{\ell, m} &amp;amp;= m\hbar\ket{\ell, m} \end{align*}</description></item><item><title>エアリー機能</title><link>https://freshrimpsushi.github.io/jp/posts/1629/</link><pubDate>Sun, 24 May 2020 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/1629/</guid><description>定義 以下の関数をエアリー関数Airy functionと呼ぶ。 $$ \begin{align*} \operatorname{Ai}(x) &amp;amp;= \frac{1}{\pi}\sqrt{\frac{x}{3}}K_{1/3}\left( \frac{2}{3}x^{2/3} \right) \\ \operatorname{Bi}(x) &amp;amp;= \sqrt{\frac{x}{3}}\left[ I_{-1/3}\left( \frac{2}{3}x^{3/2} \right) + I_{1/3} \left( \frac{2}{3}x^{2/3} \right) \right] \end{align*} $$ この時、$I_{\nu}$、$K_{</description></item><item><title>エアリー微分方程式の級数解</title><link>https://freshrimpsushi.github.io/jp/posts/1625/</link><pubDate>Thu, 21 May 2020 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/1625/</guid><description>定義 以下の微分方程式をエアリーAiry 微分方程式という。 $$ y^{\prime \prime}-xy=0,\quad -\infty&amp;lt;x&amp;lt;\infty $$ 説明 この名前はイギリスの天文学者ジョージ・ビッデル・エアリーGeorge Biddell</description></item><item><title>変形ベッセル方程式と変形ベッセル関数</title><link>https://freshrimpsushi.github.io/jp/posts/1624/</link><pubDate>Wed, 20 May 2020 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/1624/</guid><description>ビルドアップ 以下の微分方程式は、変形ベッセル方程式と呼ばれる。 $$ x^2 y^{\prime \prime} + xy^{\prime}-(x^2-\nu^2)y=0 $$ ベッセル方程式で$y$項の符号が$+ \rightarrow -$に変わった形式だ。この</description></item><item><title>ハンケル関数、第三種ベッセル関数</title><link>https://freshrimpsushi.github.io/jp/posts/1623/</link><pubDate>Tue, 19 May 2020 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/1623/</guid><description>定義 第1種ベッセル関数 $J_{\nu}$と第2種ベッセル関数 $N_{\nu}$の以下のような二つの線形結合をハンケル関数もしくは第3種ベッセ</description></item><item><title>ベッセル関数</title><link>https://freshrimpsushi.github.io/jp/posts/1622/</link><pubDate>Tue, 19 May 2020 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/1622/</guid><description>定義 ベッセル方程式 下の微分方程式を$\nu$次のベッセル方程式と言う。 $$ \begin{align*} x^2 y^{\prime \prime} +xy^{\prime} +(x^2-\nu^2)y&amp;amp;=0 \\ x(xy^{\prime})^{\prime}+(x^2- \nu ^2) y&amp;amp;=0 \\ y^{\prime \prime}+\frac{1}{x} y^{\prime} + \left( 1-\frac{\nu^{2}}{x^{2}} \right)y&amp;amp;=0 \end{align*} $$ 説明 関連する関数 第1種ベッ</description></item><item><title>ベッセル関数の直交性</title><link>https://freshrimpsushi.github.io/jp/posts/1621/</link><pubDate>Sun, 17 May 2020 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/1621/</guid><description>定理 $\alpha, \beta$を第一種ベッセル関数の$J_{\nu}(x)$の根とする。すると区間$[0,1]$で$\sqrt{x}J_{\nu}(x)</description></item><item><title>ベッセル関数が解である微分方程式</title><link>https://freshrimpsushi.github.io/jp/posts/1620/</link><pubDate>Sat, 16 May 2020 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/1620/</guid><description>定理1 定理1 ベッセル方程式と少し違う次のような微分方程式が与えられているとしよう。 $$ \begin{equation} \begin{aligned} &amp;amp;&amp;amp; y^{\prime \prime}+\frac{1-2a}{x}y^{\prime}+\left[ (bcx^{c-1})^{2}+\frac{a^{2}-\nu^{2}c^{2}}{x^{2}} \right]y =&amp;amp;\ 0 \\ \text{or} &amp;amp;&amp;amp; x^{2}y^{\prime \prime}+(1-2a)xy^{\prime}+\left[ b^{2}c^{2}x^{2c}+(a^{2}-\nu^{2}c^{2}) \right]y =&amp;amp;\ 0 \end{aligned} \label{1} \end{equation} $$ そして$Z_</description></item><item><title>ベッセル関数の再帰関係</title><link>https://freshrimpsushi.github.io/jp/posts/1619/</link><pubDate>Fri, 15 May 2020 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/1619/</guid><description>定理 $$ J_{\nu}(x)=\sum \limits_{n=0}^{\infty} \frac{(-1)^{n} }{\Gamma (n+1) \Gamma (n+\nu+1)} \left(\frac{x}{2} \right)^{2n+\nu} \tag{1} $$ 上の関数は、階数$\nu$の第一種ベッセル関数と呼ばれる。第一種ベッセル関数$J_{\nu}(x)$は、下記の方</description></item><item><title>ベッセル方程式の第二の級数解：第二種ベッセル関数、ノイマン関数、ウェーバー関数</title><link>https://freshrimpsushi.github.io/jp/posts/1618/</link><pubDate>Thu, 14 May 2020 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/1618/</guid><description>定義[^1] ベッセル方程式の二番目の解をノイマン関数と呼び、$N_{\nu}(x)$または$Y_{\nu}(x)$で表される。非整数の$\n</description></item><item><title>球面座標系におけるシュレーディンガー方程式</title><link>https://freshrimpsushi.github.io/jp/posts/1617/</link><pubDate>Wed, 13 May 2020 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/1617/</guid><description>方程式について 球座標系ではシュレディンガー方程式は次の通りだ。 $$ -\frac{\hbar^{2}}{2M}\left[\frac{1}{r^2}\frac{\partial}{\partial r} \left( r^2\frac{\partial \psi}{\partial r} \right) + \frac{1}{r^2\sin\theta}\frac{\partial}{\partial\theta}\left( \sin\theta \frac{\partial \psi}{\partial \theta} \right) + \frac{1}{r^2\sin^2\theta}\frac{\partial^2 \psi}{\partial^2 \phi} \right]+V\psi=E\psi \tag{1} $$ 説明 3次元の時間に依存しないシュレ</description></item><item><title>関連ルジャンドル多項式</title><link>https://freshrimpsushi.github.io/jp/posts/1615/</link><pubDate>Tue, 12 May 2020 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/1615/</guid><description>定義 関連するルジャンドル多項式は、以下の方法で定義される。 微分方程式の解として 下の関連するルジャンドル微分方程式の解は関連するルジャンドル多</description></item><item><title>球面調和関数の正規化</title><link>https://freshrimpsushi.github.io/jp/posts/1614/</link><pubDate>Mon, 11 May 2020 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/1614/</guid><description>定理 標準化された球面調和関数は以下の通りである。 $$ Y_{l}^{m}(\theta,\phi)=\sqrt{\frac{2l+1}{4\pi}\frac{(l-m)!}{(l+m)!}}P_{l}^{m}(\cos\theta)e^{im\phi} $$ $$ \nabla ^2 f = \frac{1}{r^2}\frac{\partial}{\partial r} \left( r^2\frac{\partial f}{\partial r} \right) + \frac{1}{r^2\sin\theta}\frac{\partial}{\partial\theta}\left( \sin\theta \frac{\partial f}{\partial \theta} \right) + \frac{1}{r^2\sin^2\theta}\frac{\partial^2 f}{\partial^2 \phi}=0 $$ $$ f(r,\theta,\phi)=R(r)\Theta (\theta)\Phi (\phi) $$ 説明 球座標系におけるラプラス</description></item><item><title>関連ルジャンドル多項式の直交性</title><link>https://freshrimpsushi.github.io/jp/posts/1613/</link><pubDate>Sun, 10 May 2020 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/1613/</guid><description>定理 区間$[-1,1]$で固定された$m$に対する関連ルジャンドル多項式は、直交集合を形成する。 $$ \int_{-1}^{1} P_{l}^{m}(x)P_{k}^{m}(x)dx =\frac{ 2}{ 2l+1 }\frac{(l+m)!}{(l-m)!}\delta_{lk} $$ $x=\cos \theta$の場合、 $$ \int_{0}^{\pi}</description></item><item><title>負の指数mの関連ルジャンドル多項式</title><link>https://freshrimpsushi.github.io/jp/posts/1612/</link><pubDate>Sat, 09 May 2020 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/1612/</guid><description>公式 関連するルジャンドル多項式は$m$の符号によって、下の比例関係が成立する。 $$ P_{l}^{-m}(x)=(-1)^{m}\frac{(l-m)!}{(l+m)!}P_{l}^{m}(x) $$ $$ (1-x^{2})\frac{ d^{2}y }{ dx^{2} }-2x \frac{dy}{dx}+\left( \frac{-m^{2}}{1-x^{2}}+l(l+1) \right)y=0 $$ 説明 関連するルジャンドル微分方程式を</description></item><item><title>ルジャンドル多項式</title><link>https://freshrimpsushi.github.io/jp/posts/1611/</link><pubDate>Fri, 08 May 2020 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/1611/</guid><description>定義 Legendre多項式はいくつかの方法で定義される。 微分方程式の解として 次のLegendre微分方程式の解をLegendre多項式という</description></item><item><title>ルジャンドル多項式の生成関数</title><link>https://freshrimpsushi.github.io/jp/posts/1610/</link><pubDate>Thu, 07 May 2020 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/1610/</guid><description>定理 ルジャンドル多項式の生成関数は次の通りだ。 $$ \Phi (x,t) = \frac{1}{\sqrt{1-2xt+t^{2}}} = \sum \limits_{l=0}^{\infty}P_{l}(x)t^{l},\quad |t|&amp;lt;1 $$ 説明 簡単に言えば、ルジャンドル多項式の生成関数はルジャンドル多項式$P_{</description></item><item><title>ルジャンドル多項式の再帰関係</title><link>https://freshrimpsushi.github.io/jp/posts/1609/</link><pubDate>Wed, 06 May 2020 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/1609/</guid><description>サマリー $$ P_{l}(x)=\dfrac{1}{2^l l!} \dfrac{d^l}{dx^l}(x^2-1)^l \tag{1} $$ 以下のようなルジャンドル多項式 $P_{l}$は、次の再帰関係式を満たす。 $$ P^{\prime}_{l+1}(x)-P^{\prime}_{l-1}(x)=(2l+1)P_{l}(x) \tag{a} $$ $$ lP_{l}(x)=(2l-1)xP_{l-1}(x)-(l-1)P_{l-2}(x) \tag{b} $$ $$ xP^{\prime}_{l}(x)-P^{\prime}_{l-1}(x)=lP_{l}(x)\tag{c} $$ 証明 $(a)$ まず、$P_{l}(</description></item><item><title>関連するルジャンドル微分方程式と多項式</title><link>https://freshrimpsushi.github.io/jp/posts/1605/</link><pubDate>Thu, 30 Apr 2020 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/1605/</guid><description>定義1 下の微分方程式を、関連ルジャンドル微分方程式という。 $$ \begin{equation} \begin{aligned} &amp;amp;&amp;amp;(1-x^{2})\frac{ d^{2}y }{ dx^{2} }-2x \frac{dy}{dx}+\left[ +l(l+1)-\frac{m^{2}}{1-x^{2}} \right]y =&amp;amp;\ 0 \\ \mathrm{or} &amp;amp;&amp;amp; \frac{ d }{ dx } \left[ (1-x^{2})y^{\prime} \right] +\left[ l(l+1)-\frac{m^{2}}{1-x^{2}} \right]y =&amp;amp;\ 0 \end{aligned} \label{1} \end{equation} $$ 関連ルジャンドル</description></item><item><title>オイラーの微分方程式の解法</title><link>https://freshrimpsushi.github.io/jp/posts/1599/</link><pubDate>Tue, 28 Apr 2020 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/1599/</guid><description>定義 以下の形の微分方程式をオイラー微分方程式またはオイラー・コーシー方程式と言う。 $$ \begin{equation} a_{2}x^{2}\frac{ d ^{2 }y}{ dx^{2} }+a_{1}x\frac{ d y}{ d x }+a_{0}y=0 \end{equation} $$ 説明 右辺が$0$でない非同次</description></item><item><title>シュレディンガー方程式の導出</title><link>https://freshrimpsushi.github.io/jp/posts/1598/</link><pubDate>Tue, 28 Apr 2020 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/1598/</guid><description>概要 時間に無関じたシュレーティンガー方程式 time independent Schrodinger equation $$ H\psi=\left(-\frac{\hbar^{2}}{2m}\frac{ d ^{2} }{ d x^{2} }+V\right)\psi=E\psi \\ H\psi=\left(-\frac{\hbar^{2}}{2m}\nabla^{2}+V\right)\psi=E\psi $$ 時間に依存するシュレーティンガー方程式 time dependent Schrodinger equation $$ i\hbar\frac{ \partial \psi}{ \partial t}=\left(-\frac{\hbar^{2}}{2m}\frac{ \partial ^{2}</description></item><item><title>球面座標系のラプラス方程式の一般解</title><link>https://freshrimpsushi.github.io/jp/posts/1588/</link><pubDate>Sun, 26 Apr 2020 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/1588/</guid><description>定理 球面座標系でのラプラス方程式は下となる。 $$ \nabla ^2 f = \frac{1}{r^2}\frac{\partial}{\partial r} \left( r^2\frac{\partial f}{\partial r} \right) + \frac{1}{r^2\sin\theta}\frac{\partial}{\partial\theta}\left( \sin\theta \frac{\partial f}{\partial \theta} \right) + \frac{1}{r^2\sin^2\theta}\frac{\partial^2 f}{\partial^2 \phi}=0 $$ 説明 $f$が$f(r,\theta,\phi)=</description></item><item><title>球面座標系ラプラス方程式における径成分方程式の一般解</title><link>https://freshrimpsushi.github.io/jp/posts/1587/</link><pubDate>Sat, 25 Apr 2020 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/1587/</guid><description>定理 球面座標系ラプラス方程式での径成分方程式の一般解は以下の通りだ。 $$ R(r)=\sum \limits_{l=0}^{\infty}R_{l}(r)=\sum \limits_{l=0}^{\infty}\left( A_{l}r^{l}+\frac{ B_{l}}{r^{l+1}} \right) $$ この時、$l$は非負の整数であり、$A_{l}$、$B_</description></item><item><title>球面調和関数：球面座標ラプラス方程式の極角、方位角に対する一般解</title><link>https://freshrimpsushi.github.io/jp/posts/1580/</link><pubDate>Fri, 24 Apr 2020 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/1580/</guid><description>説明 ラプラス方程式を満たす関数を調和関数という。球面調和関数は球座標系でのラプラス方程式を満たす関数を言い、正確には径成分を除いた極角$\t</description></item><item><title>CT（コンピュータ断層撮影）の原理</title><link>https://freshrimpsushi.github.io/jp/posts/1579/</link><pubDate>Thu, 23 Apr 2020 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/1579/</guid><description>原理 CTはComputerized Tomographyの略語で、コンピュータ断層撮影と言います。体の断面写真を取得する技術で、MRIと同じく</description></item><item><title>動く点電荷が作る磁場</title><link>https://freshrimpsushi.github.io/jp/posts/1577/</link><pubDate>Wed, 22 Apr 2020 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/1577/</guid><description>概要 1 動く点電荷が作る電磁場は次の通りだ。 $$ \begin{align*} \mathbf{E}(\mathbf{r}, t) &amp;amp;= \frac{q}{4\pi\epsilon_{0}} \frac{\cR} {( \bcR\cdot \mathbf{u} )^3 } \left[(c^2-v^2)\mathbf{u} +\bcR\times (\mathbf{u} \times \mathbf{a} ) \right] \\ \mathbf{B} (\mathbf{ r}, t) &amp;amp;=\frac{1}{c} \crH\times \mathbf{ E } (\mathbf{ r}, t) \end{align*} $$ 説明 磁場の式は具体的には次の通</description></item><item><title>物理学におけるデル演算子</title><link>https://freshrimpsushi.github.io/jp/posts/1575/</link><pubDate>Tue, 21 Apr 2020 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/1575/</guid><description>説明 物理学では、演算子とは、関数を別の関数に対応させる関数を言う。その中でもデル演算子del operatorは、ある関数が与えられたとき、そ</description></item><item><title>量子力学における交換子とは？</title><link>https://freshrimpsushi.github.io/jp/posts/1574/</link><pubDate>Mon, 20 Apr 2020 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/1574/</guid><description>定義 二つの演算子 $A, B$に対して、$AB - BA$を$A, B$の交換子と定義し、次のように表記する。 $$ [A,B]=AB-BA $$ 説明 最初に交換子の定義に接すると、$A</description></item><item><title>ド・ブロイ方程式と物質波</title><link>https://freshrimpsushi.github.io/jp/posts/1573/</link><pubDate>Sun, 19 Apr 2020 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/1573/</guid><description>説明 光が波なのか粒子なのかという問題は、物理学の歴史の中で大きな関心事だった。20世紀初頭のいくつかの実験を通じて、光は粒子の性質と波の性質</description></item><item><title>量子力学における期待値とは</title><link>https://freshrimpsushi.github.io/jp/posts/1572/</link><pubDate>Sat, 18 Apr 2020 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/1572/</guid><description>定義 規格化された波動関数 $\psi$の演算子 $A$に対する期待値expectation valueを次のように定義する。 $$ \braket{A} =\int_{-\infty}^{\infty} \psi^{\ast}A\psi dx $$ 説明 結論か</description></item><item><title>動く点電荷が作る電場</title><link>https://freshrimpsushi.github.io/jp/posts/1273/</link><pubDate>Fri, 17 Apr 2020 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/1273/</guid><description>概要 1 動く点電荷が作る電磁場は次の通りだ。 $$ \begin{align*} \mathbf{E}(\mathbf{r}, t) &amp;amp;= \frac{q}{4\pi\epsilon_{0}} \frac{\cR} {( \bcR\cdot \mathbf{u} )^3 } \left[(c^2-v^2)\mathbf{u} +\bcR\times (\mathbf{u} \times \mathbf{a} ) \right] \\ \mathbf{B} (\mathbf{ r}, t) &amp;amp;=\frac{1}{c} \crH\times \mathbf{ E } (\mathbf{ r}, t) \end{align*} $$ 説明 電場についての誘導過程を紹</description></item><item><title>パリティ演算子</title><link>https://freshrimpsushi.github.io/jp/posts/1571/</link><pubDate>Thu, 16 Apr 2020 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/1571/</guid><description>定義 次のように定義された演算子 $P$をパリティ演算子parity operatorと言う。 $$ P\psi (x) = \psi (-x) $$ 説明 波動関数の位置変数を対称移動する演</description></item><item><title>リエナール-ヴィーヘルトポテンシャルの時間微分</title><link>https://freshrimpsushi.github.io/jp/posts/1544/</link><pubDate>Wed, 26 Feb 2020 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/1544/</guid><description>概要 リエナール-ビケールトポテンシャルの時間に対する導関数は以下の通りである。 $$ \begin{align*} \frac{ \partial V}{ \partial t} &amp;amp;= \frac{qc}{4\pi \epsilon_{0}} \frac{1}{(\cR c -\bcR \cdot \mathbf{v})^{2}} \left( c^{2} -c^{2}\frac{ \partial t}{ \partial t_{r}}-v^{2}+\bcR\cdot \mathbf{a} \right)\frac{ \partial t_{r}}{ \partial t } \\ \frac{</description></item><item><title>物理学のための微分方程式の基礎：よく遭遇する微分方程式の解法</title><link>https://freshrimpsushi.github.io/jp/posts/1538/</link><pubDate>Sun, 23 Feb 2020 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/1538/</guid><description>微分方程式 学部レベルの物理学を勉強する人向けに、できるだけ直感的に説明した。 微分方程式とは、簡単に言うと微分を含んだ方程式のことだ。難しく考</description></item><item><title>ルジャンドル微分方程式の三角関数形</title><link>https://freshrimpsushi.github.io/jp/posts/1537/</link><pubDate>Fri, 21 Feb 2020 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/1537/</guid><description>定義 三角関数の形の関連するルジャンドルの微分方程式は以下の通りです。 $$ \begin{align} \frac{ d^{2} y}{ d \theta^{2} }+\cot \theta \frac{ d y}{ d \theta}+ \left( l(l+1) -\frac{m^{2}}{\sin ^{2 }\theta} \right)y=0 \\ \mathrm{or} \quad\frac{1}{\sin \theta}\left(\sin \theta \frac{dy}{d\theta} \right)+ \left(l(l+1) -\frac{ m^{2}}{\sin ^{2} \theta} \right)y=0 \end{align} $$ 説</description></item><item><title>回転座標系で動く物体の速度と加速度</title><link>https://freshrimpsushi.github.io/jp/posts/906/</link><pubDate>Tue, 11 Feb 2020 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/906/</guid><description>公式 回転する座標系で、物体の速度と加速度は以下のとおりである。 $$ \mathbf{v} = \mathbf{v}^{\prime} + \boldsymbol{\omega} \times \mathbf{r}^{\prime} +\mathbf{V}_{0} $$ $$ \mathbf{a} = \mathbf{a}^{\prime} + \dot{\boldsymbol{\omega}} \times \mathbf{r}^{\prime}+ 2\boldsymbol{\omega} \times \mathbf{v}^{\prime}+\boldsymbol{\omega} \times ( \boldsymbol{\omega} \times \mathbf{r}^{\prime}) + \mathbf{A}_{0} $$ 回転する座標系1 走っ</description></item><item><title>十分に小さい角度は</title><link>https://freshrimpsushi.github.io/jp/posts/1516/</link><pubDate>Sun, 09 Feb 2020 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/1516/</guid><description>説明 物理学では多くの場所で近似式$\sin x\approx x$を使用する。この近似を使用できる理由は下記の式が成立するからだ。 $$ \lim \limits_{x\rightarrow 0}\frac{\sin x}{x}=1 $$ この式は高等学校</description></item><item><title>量子力学におけるベクトルと内積</title><link>https://freshrimpsushi.github.io/jp/posts/1509/</link><pubDate>Fri, 07 Feb 2020 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/1509/</guid><description>ベクトルの一般化 線形代数学を学んでいない理系の学生にとって、ベクトルとは大きさと方向を持つ物理量であり、3次元空間の点を意味し、通常$\ve</description></item><item><title>フロベニウス法</title><link>https://freshrimpsushi.github.io/jp/posts/1508/</link><pubDate>Wed, 05 Feb 2020 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/1508/</guid><description>説明1 微分方程式を解く様々な方法がある。その中の一つに、解を次のように冪級数として仮定することがある。 $$ y=\sum \limits_{n=0}^{\infty} a_{n}x^{n} $$ しかし、ある級数は上記の形で</description></item><item><title>ベッセル方程式の級数解：第一種ベッセル関数</title><link>https://freshrimpsushi.github.io/jp/posts/1503/</link><pubDate>Mon, 03 Feb 2020 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/1503/</guid><description>定義1 $\nu \in \mathbb{R}$に対して、以下の形の微分方程式を$\nu$次のベッセル方程式という。 $$ \begin{align*} &amp;amp;&amp;amp; x^{2} y^{\prime \prime} +xy^{\prime}+(x^{2}-\nu^{2})y &amp;amp;= 0 \\ \text{or} &amp;amp;&amp;amp; y^{\prime \prime}+\frac{1}{x} y^{\prime} + \left( 1-\frac{\nu^{2}}{x^{2}} \right)y &amp;amp;=</description></item><item><title>球座標系における角運動量演算子</title><link>https://freshrimpsushi.github.io/jp/posts/1495/</link><pubDate>Thu, 30 Jan 2020 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/1495/</guid><description>公式 角運動量演算子は球座標系で以下のように表される。 $$ \begin{align*} L_{x} &amp;amp;= \i\hbar \left(\sin\phi\dfrac{\partial }{\partial \theta} + \cos\phi \cot\theta \dfrac{\partial }{\partial \phi}\right) \\ L_{y} &amp;amp;= -\i\hbar \left( \cos\phi \dfrac{\partial }{\partial \theta} - \sin\phi \cot\theta \dfrac{\partial }{\partial \phi}\right) \\ L_{z} &amp;amp;= -\i\hbar \dfrac{\partial }{\partial \phi} \end{align*} $$ 導出 角運動量</description></item><item><title>2次導関数, 高階導関数</title><link>https://freshrimpsushi.github.io/jp/posts/1094/</link><pubDate>Sun, 26 Jan 2020 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/1094/</guid><description>定義1 関数$f$が区間$I$で導関数$f^{\prime}$を持つと仮定する。このとき、$f^{\prime}$が再度導関数を持つ場合、これ</description></item><item><title>常微分方程式</title><link>https://freshrimpsushi.github.io/jp/posts/1097/</link><pubDate>Fri, 24 Jan 2020 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/1097/</guid><description>定義1 一変数関数 $u(t)$に対して、次の形式formを常微分方程式ordinary differential equations (ODE)と呼ぶ。 $$ F(t, u(t), u^{\prime}(t), \dots, u^{(n)}(t)) = 0 \tag{1} $$ ここで、$u^</description></item><item><title>オイラー積分：ベータ関数とガンマ関数</title><link>https://freshrimpsushi.github.io/jp/posts/1483/</link><pubDate>Wed, 22 Jan 2020 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/1483/</guid><description>定義 オイラー積分Euler integral 以下の二つの積分をオイラー積分と呼ぶ。 $(a)$ 第1種オイラー積分Euler integral of the first kind : ベータ関数 $$ B(p,q)=\int_{0}^1 t^{p-1}(1-t)^{q-1}dt,\quad p&amp;gt;0,\quad q&amp;gt;0 $$ $(b)$ 第2種オ</description></item><item><title>ベータ関数の異常積分形式での表現</title><link>https://freshrimpsushi.github.io/jp/posts/1482/</link><pubDate>Mon, 20 Jan 2020 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/1482/</guid><description>定理 ベータ関数: $$ B(p,q)=\int_{0}^{1}t^{p-1}(1-t)^{q-1}dt\quad \cdots (1) $$ ベータ関数は、以下のような不適切積分で表せる。 $$ B(p,q)=\int_{0}^{\infty}\frac{ t^{p-1} }{ (1+t)^{p+q}}dt\quad \cdots (2) $$ 説明 上の式を使えば、計算が難しい積分値を簡単に得られ</description></item><item><title>ベータ関数とガンマ関数の関係</title><link>https://freshrimpsushi.github.io/jp/posts/1481/</link><pubDate>Sat, 18 Jan 2020 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/1481/</guid><description>定理 $$ B(p,q) = {{\Gamma (p) \Gamma (q)} \over {\Gamma (p+q) }} $$ 説明 ベータ関数は $\displaystyle B(p,q) := \int_{0}^{1} t^{p-1} (1-t)^{q-1} dt $ で定義され、ガンマ関数と同様に多くの分野で応用されている重要な関数だ。ガンマ関数</description></item><item><title>ガンマ関数と階乗を含むさまざまな重要な公式</title><link>https://freshrimpsushi.github.io/jp/posts/1478/</link><pubDate>Thu, 16 Jan 2020 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/1478/</guid><description>式 $$ \Gamma (\frac{1}{2})=\sqrt{\pi} \tag{a} $$ - オイラーの反射公式: $$ \Gamma (p)\Gamma (1-p)=\dfrac{\pi}{\sin(\pi p)} \tag{b} $$ $$ \Gamma (n+\frac{1}{2})=\frac{1\cdot 3\cdot \cdot5 \cdots (2n-1)}{2^{n}}\sqrt{\pi}=\frac{(2n-1)!!}{2^n}\sqrt{\pi}=\frac{(2n)!}{4^{n}n!}\sqrt{\pi},\quad n\in \mathbb{N} \tag{c} $$ $!!$はダブルファクトリアルです。 - 二項係数: $$ \begin{pmatrix} n \\ k \end{pmatrix}=\frac{\Gamma (n+1)}{k! \Gamma (n-k+1)} \tag{d} $$</description></item><item><title>要因分析、二重要因分析、多因子分析</title><link>https://freshrimpsushi.github.io/jp/posts/1477/</link><pubDate>Tue, 14 Jan 2020 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/1477/</guid><description>ファクトリアル 自然数 $n$に対して $n!$を $n$ファクトリアルfactorial, 階乗と読み、以下のように定義する。 $$ n!=n\cdot(n-1)\cdot(n-2)\cdots 2\cdot 1 =\prod\limits_{k=1}^n k $$ 説明 多く</description></item><item><title>ガンマ関数の導出</title><link>https://freshrimpsushi.github.io/jp/posts/1476/</link><pubDate>Sun, 12 Jan 2020 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/1476/</guid><description>非負整数のためのガンマ関数 $\alpha &amp;gt;0$に対して $$ \int_{0}^{\infty} e^{-\alpha x} dx=\left[-\frac{1}{\alpha}e^{-\alpha x}\right]_{0}^{\infty}=\frac{1}{\alpha} $$ 両辺を$\alpha$に関して微分すると、ライプニッツの積分法則によって左辺の</description></item><item><title>ライプニッツの積分則</title><link>https://freshrimpsushi.github.io/jp/posts/1475/</link><pubDate>Sun, 12 Jan 2020 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/1475/</guid><description>定理 $f(x,t)$と$\dfrac{\partial f}{\partial x}(x,t)$が連続だとしよう。すると、以下の式が成り立つ。 $$ \frac{d}{dx} \int_{a}^b f(x,t)dt = \int_{a}^b\frac{\partial f}{\partial x}(x,t)dt $$ 説明</description></item><item><title>位相空間及び部分空間における内部に関する諸性質</title><link>https://freshrimpsushi.github.io/jp/posts/1473/</link><pubDate>Wed, 08 Jan 2020 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/1473/</guid><description>定理 位相空間 $(X,\mathcal{T})$と部分集合 $A,B,A_{\alpha}\subset X\ (\alpha \in \Lambda)$が与えられたとする。そうすると： $(a1)$：$A\sub</description></item><item><title>基底から生成される位相</title><link>https://freshrimpsushi.github.io/jp/posts/1470/</link><pubDate>Mon, 06 Jan 2020 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/1470/</guid><description>ビルドアップ 位相 集合$X$に対して、以下の三つの条件を満たす$X$の部分集合のコレクション$\mathscr{T}$を集合$X$上の位相と言</description></item><item><title>Juliaで画像サイズを変更する方法</title><link>https://freshrimpsushi.github.io/jp/posts/1466/</link><pubDate>Fri, 03 Jan 2020 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/1466/</guid><description>画像サイズの変更 Images パッケージの imresize を使えばいい。関数名はMatlabと同じだ。 imresize(X, ratio=a): 配列Xをa倍に調整した画像を返す。Matlabとは違って、た</description></item><item><title>MATLABでコード実行時間を計測する方法</title><link>https://freshrimpsushi.github.io/jp/posts/1467/</link><pubDate>Fri, 03 Jan 2020 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/1467/</guid><description>方法 tic X1=rand(2^7); X2=rand(2^8); X3=rand(2^9); X4=rand(2^10); X5=rand(2^11); toc Y1=imrotate(X1,45,&amp;#39;bicubic&amp;#39;,&amp;#39;crop&amp;#39;); toc Y2=imrotate(X2,45,&amp;#39;bicubic&amp;#39;,&amp;#39;crop&amp;#39;); toc Y3=imrotate(X3,45,&amp;#39;bicubic&amp;#39;,&amp;#39;crop&amp;#39;); toc Y4=imrotate(X4,45,&amp;#39;bicubic&amp;#39;,&amp;#39;crop&amp;#39;); toc Y5=imrotate(X5,45,&amp;#39;bicubic&amp;#39;,&amp;#39;crop&amp;#39;); toc tic：実行時間を測定するためのストップウォッチを開始する。 toc：ストップウォッチの現在時間を返す。</description></item><item><title>Juliaで画像配列を回転する方法</title><link>https://freshrimpsushi.github.io/jp/posts/1462/</link><pubDate>Thu, 02 Jan 2020 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/1462/</guid><description>画像の回転 imrotate(X, theta) : 配列Xをthetaラジアンで回転させる。ここで注意すべき点は、角度の単位が度（$^{\circ})$のMATLABと異なり、</description></item><item><title>MATLABでの画像サイズの変更方法</title><link>https://freshrimpsushi.github.io/jp/posts/1465/</link><pubDate>Thu, 02 Jan 2020 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/1465/</guid><description>方法 imresize(A, scale): Aのサイズをscale倍調整して新しい画像を返す。 Aが10x10の画像である場合、scaleに0.5を入力すると5x5の画像を返す。</description></item><item><title>Juliaでの2次元配列操作の関数들</title><link>https://freshrimpsushi.github.io/jp/posts/1460/</link><pubDate>Wed, 01 Jan 2020 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/1460/</guid><description>$A = \begin{pmatrix} 1 &amp;amp; 2 &amp;amp; 1 \\ 0 &amp;amp; 3 &amp;amp; 0 \\ 2 &amp;amp; 3 &amp;amp; 4\end{pmatrix}$としよう。 転置行列 julia&amp;gt; A =[1 2 1; 0 3 0; 2 3 4] 3×3 Array{Int64,2}: 1 2 1 0 3 0 2 3 4 julia&amp;gt; transpose(A) 3</description></item><item><title>Juliaで配列をヒートマップ画像として出力保存する方法</title><link>https://freshrimpsushi.github.io/jp/posts/1459/</link><pubDate>Wed, 01 Jan 2020 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/1459/</guid><description>Heatmap Plots パッケージのheatmap関数を使えば、2次元配列をヒートマップ画像として出力でき、savefig関数でその画像を保存できる。@__DI</description></item><item><title>Juliaでベクターを生成する様々な方法</title><link>https://freshrimpsushi.github.io/jp/posts/1452/</link><pubDate>Mon, 16 Dec 2019 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/1452/</guid><description>코드 julia&amp;gt; x1=[1 2 3] 1×3 Array{Int64,2}: 1 2 3 julia&amp;gt; x2=[1, 2, 3] 3-element Array{Int64,1}: 1 2 3 julia&amp;gt; x3=[i for i in 1:3] 3-element Array{Int64,1}: 1 2 3 julia&amp;gt; x4=[i for i in 1:3:10] 4-element Array{Int64,1}: 1 4 7 10 julia&amp;gt; x5=[i for i in 1:3:11] 4-element Array{Int64,1}: 1 4 7 10 x1は2次元配列です。行ベ</description></item><item><title>Juliaで配列を平行移動する方法</title><link>https://freshrimpsushi.github.io/jp/posts/1453/</link><pubDate>Mon, 16 Dec 2019 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/1453/</guid><description>説明 circshifr(A, (n,m))を使用すると、配列Aの行を$n$カン下にシフトさせ、列を$m$カン右にシフトさせることができる。(n,m)は整数から成るタ</description></item><item><title>部分空間トポロジー、相対トポロジー</title><link>https://freshrimpsushi.github.io/jp/posts/1439/</link><pubDate>Fri, 06 Dec 2019 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/1439/</guid><description>定義 1 位相空間 $(X,\mathscr{T})$と部分集合 $A \subset X$が与えられたとしよう。すると以下の集合 $$ \mathscr{T}_{A} =\left\{ A\cap U\ :\ U\in \mathscr{T} \right\} $$ は $A$上の位相</description></item><item><title>位相空間における内部に関するいくつかの同値条件</title><link>https://freshrimpsushi.github.io/jp/posts/1424/</link><pubDate>Wed, 20 Nov 2019 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/1424/</guid><description>定義 1 位相空間 $(X,\mathcal{T})$と部分空間$A$が与えられたとする。$A$に含まれる全ての開集合の和集合を**$A$の内部*</description></item><item><title>全射、単射、値域、定義域を簡単に覚える方法、意味解説</title><link>https://freshrimpsushi.github.io/jp/posts/690/</link><pubDate>Wed, 13 Nov 2019 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/690/</guid><description>説明 初めて単射、全射、余域に出会った時、名前を覚えるのがすごく難しかった。英語でinjective, surjectiveって言えば区別しやす</description></item><item><title>基底を保つ準同型写像の証明</title><link>https://freshrimpsushi.github.io/jp/posts/1407/</link><pubDate>Sat, 02 Nov 2019 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/1407/</guid><description>定理 位相空間 $X$、$Y$ とそれらの間の位相同型写像 $f$ が与えられたとしよう。 $$ f\ :\ X \rightarrow Y $$ $\mathcal{B}_{X}$が $X$ の基底である</description></item><item><title>位相数学における座標系とは</title><link>https://freshrimpsushi.github.io/jp/posts/1404/</link><pubDate>Thu, 31 Oct 2019 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/1404/</guid><description>定義 $M$を$n$次元の多様体としよう。二つの開集合 $U\subset M$、$\tilde{U} \subset \mathbb{R}^n$と位相同型写像 $\phi\ :\ U \rightarrow \tild</description></item><item><title>マキシマル定理</title><link>https://freshrimpsushi.github.io/jp/posts/1390/</link><pubDate>Tue, 22 Oct 2019 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/1390/</guid><description>定理1 任意の$f \in L^1_{\mathrm{loc}}$と任意の$\alpha &amp;gt;0$に対し、以下の条件を満たす定数$C&amp;gt;0$が存</description></item><item><title>局所積分可能な関数の平均値は中心の関数値に収束する。</title><link>https://freshrimpsushi.github.io/jp/posts/1391/</link><pubDate>Tue, 22 Oct 2019 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/1391/</guid><description>定理1 $f \in L^1_{\mathrm{loc}}$としよう。すると、次のことが成り立つ。 $$ \lim \limits_{r \rightarrow 0} A_{r} f(x)=f(x) \text{ a.e. } x\in \mathbb{R}^n $$ ここで、$\text{ a.e. }$</description></item><item><title>ハーディ・リトルウッドの極大関数</title><link>https://freshrimpsushi.github.io/jp/posts/1389/</link><pubDate>Mon, 21 Oct 2019 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/1389/</guid><description>定義1 $ f \in L^1_{\mathrm{loc}}$とする。そうすると、ハーディ・リトルウッドの極大関数$Hf$は次のように定義される。 $$ Hf (x)</description></item><item><title>マクシマル補題</title><link>https://freshrimpsushi.github.io/jp/posts/1388/</link><pubDate>Mon, 21 Oct 2019 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/1388/</guid><description>定理1 $\mathcal{B}$を$\mathbb{R}^n$でのオープンボールのコレクションとしよう。$U=\bigcup \limits_ { B\in \mathcal{B}} B$とす</description></item><item><title>数学における飽和及びファイバーの定義</title><link>https://freshrimpsushi.github.io/jp/posts/1387/</link><pubDate>Thu, 17 Oct 2019 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/1387/</guid><description>定義 セット$X$、$Y$と関数$\pi\ :\ X\rightarrow Y$が与えられているとする。もし$\pi^{-1}\big( \pi (u) \big)=u$が成り立つなら、</description></item><item><title>分離合併位相空間</title><link>https://freshrimpsushi.github.io/jp/posts/1386/</link><pubDate>Wed, 16 Oct 2019 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/1386/</guid><description>定義 $\left\{ X_\alpha \right\}_{\alpha \in A}$を任意の位相空間インデックス・ファミリーとしよう。$u \subset \bigsqcup \limits_{\alpha \in A} X_\alpha$とする。すると、全ての$\alpha \in A</description></item><item><title>分離合併集合: 互いに素な合併集合</title><link>https://freshrimpsushi.github.io/jp/posts/1385/</link><pubDate>Wed, 16 Oct 2019 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/1385/</guid><description>定義 $\left\{ X_{\alpha} \right\} _{\alpha\in A}$を任意のインデックス・ファミリーとしよう。以下のような順序対の集合を$\left\{ X_{\alpha}\right\}$ 分割合併disjoint union,</description></item><item><title>複素測度、ベクトル測度</title><link>https://freshrimpsushi.github.io/jp/posts/1378/</link><pubDate>Fri, 11 Oct 2019 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/1378/</guid><description>定義1 $(X,\mathcal{E})$を可測空間とする。以下の条件を満たす関数$\nu : \mathcal{E} \to \mathbb{C}$を$(X,\mathca</description></item><item><title>代数、準測度</title><link>https://freshrimpsushi.github.io/jp/posts/1377/</link><pubDate>Wed, 09 Oct 2019 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/1377/</guid><description>定義 集合$X \ne \varnothing$の部分集合のコレクション $\mathcal{A}$が下記の三条件を満たす時、集合$\mathcal{A</description></item><item><title>MATLABで等間隔の行ベクトルを生成する方法</title><link>https://freshrimpsushi.github.io/jp/posts/1376/</link><pubDate>Tue, 08 Oct 2019 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/1376/</guid><description>方法 linspace(a,b,n): 区間$[a,b]$を$n$個の等間隔に分けた行ベクトルを返す。 要素数を入力しなければ、$1\times 100$ベクトルを返す。間隔の数</description></item><item><title>絶対連続と積分可能な関数の関係</title><link>https://freshrimpsushi.github.io/jp/posts/1373/</link><pubDate>Sun, 06 Oct 2019 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/1373/</guid><description>ビルドアップ 以下の命題を考えてみよう。 可測空間 $(X,\mathcal{E})$上の測度 $\mu$と$\mu-$積分可能な関数$f$が与えら</description></item><item><title>ルベーグ-ラドン-ニコディムの補助定理</title><link>https://freshrimpsushi.github.io/jp/posts/1371/</link><pubDate>Sat, 05 Oct 2019 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/1371/</guid><description>定理1 可測空間$(X, \mathcal{E})$上の有限測度 $\mu$, $\nu$が与えられたとしよう。そうすると、$\mu \perp \nu$であるか、または</description></item><item><title>符号測度の絶対連続性</title><link>https://freshrimpsushi.github.io/jp/posts/1369/</link><pubDate>Fri, 04 Oct 2019 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/1369/</guid><description>定義1 可測空間 $(X, \mathcal{E})$ における 符号付き測度 $\nu$ と 正の測度 $\mu$ が与えられているとする。すべての $E \in \mathcal{E}$ に対して $$ \mu (E) = 0 \implies \nu (E) = 0 $$ この場合、$\nu$</description></item><item><title>トータルバリエーション</title><link>https://freshrimpsushi.github.io/jp/posts/1367/</link><pubDate>Wed, 02 Oct 2019 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/1367/</guid><description>定義1 測度空間の$(X, \mathcal{E})$上の符号付き測度$\nu$の全変動total variation$| \nu |$を以下のように定義する。 $$ |\nu |= \nu^{+} +\nu^{-} $$ こ</description></item><item><title>MATLABで行列の特定の行、列を選択する方法</title><link>https://freshrimpsushi.github.io/jp/posts/1362/</link><pubDate>Mon, 30 Sep 2019 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/1362/</guid><description>方法 $m \times n$ データが行列で与えられているとし、これを$A$とする。行列$A$の特定の部分のみを使用したい場合は、以下の方法を使えばいい。 B=A(a:b, c:d) 上</description></item><item><title>行列関数、行列指数関数の定義</title><link>https://freshrimpsushi.github.io/jp/posts/1342/</link><pubDate>Sun, 29 Sep 2019 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/1342/</guid><description>定義1 $$ \mathbf{x}(t) = \begin{pmatrix} x_{1}(t) \\ \vdots \\ x_{n}(t) \end{pmatrix},\quad \mathbf{A}(t) = \begin{pmatrix} a_{11}(t) &amp;amp; \cdots &amp;amp; a_{1m}(t) \\ \vdots &amp;amp; &amp;amp; \vdots \\ a_{n1}(t) &amp;amp; \cdots &amp;amp; a_{nm}(t) \end{pmatrix} $$ 行列の各要素が変数$t$の関数である場合、これを行列関数と呼ぶ。 $\ma</description></item><item><title>フレシェ微分に対する連鎖律</title><link>https://freshrimpsushi.github.io/jp/posts/1334/</link><pubDate>Sat, 28 Sep 2019 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/1334/</guid><description>定理 $(X, \left\| \cdot \right\|_{X}), (Y, \left\| \cdot \right\|_{Y}), (Z, \left\| \cdot \right\|_{Z})$ を バナッハ空間 としよう。$\Omega \subset X$、$U \subset Y$ を 開集合 とする。そして関数 $F : \Omega \to Y$、$G : U \to Z$ が与え</description></item><item><title>MATLABグラフでの色、線の種類、マーカーの種類の指定方法</title><link>https://freshrimpsushi.github.io/jp/posts/1330/</link><pubDate>Thu, 26 Sep 2019 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/1330/</guid><description>属性 グラフの属性は以下のように指定できる。 グラフ色 マーカー 線の形状 赤 r 点 . 実線 - 緑 g 星 * 点線 : 青 b x x 一点鎖線 -. 黒 k 円 o（アルファベットのo</description></item><item><title>フレシェ微分</title><link>https://freshrimpsushi.github.io/jp/posts/1332/</link><pubDate>Thu, 26 Sep 2019 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/1332/</guid><description>定義 二つのバナッハ空間 $X, Y$と開集合 $\Omega \subset X$が与えられたとする。すると、関数$F : \Omega \to Y$に対して下の条件を満たす有界線形写像 $L : X \to Y$が</description></item><item><title>MATLABで画像を回転する方法</title><link>https://freshrimpsushi.github.io/jp/posts/1328/</link><pubDate>Wed, 25 Sep 2019 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/1328/</guid><description>方法 imrotate(I,angle,method,bbox) I: 回転する画像だ。 angle: 回転角度で、単位は度だ。 method: 補間方法だ。&amp;rsquo;nearest&amp;rsquo;, &amp;lsquo;bilinear&amp;rsquo;, &amp;lsquo;bicubic&amp;</description></item><item><title>MATLABで特別な行列を作成する関数</title><link>https://freshrimpsushi.github.io/jp/posts/1327/</link><pubDate>Tue, 24 Sep 2019 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/1327/</guid><description>ゼロ行列 zeros(): ゼロ行列を返す。 zeros(n): $n\times n$ ゼロ行列を返す。 zeros(m,n): $n\times m$ ゼロ行列を返す。 zeros(size(A)): 行列Aと同じ大きさのゼロ行列を返す。 全要素が1の行列 ones(): 全要素が1の行</description></item><item><title>MATLABで二つの行列に対して要素ごとの演算を行う方法</title><link>https://freshrimpsushi.github.io/jp/posts/1326/</link><pubDate>Mon, 23 Sep 2019 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/1326/</guid><description>掛け算 times(), .*: 二つの行列の各成分を掛け合わせ、その結果を返します。 二つの行列の大きさが完全に同じ、または一方がスカラー、もしくは行の大きさが同じ</description></item><item><title>一様C^m-正則性条件</title><link>https://freshrimpsushi.github.io/jp/posts/1324/</link><pubDate>Sun, 22 Sep 2019 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/1324/</guid><description>定義1 もし$\mathrm{bdry}\Omega$の局所有限開被覆$\left\{ U_{j} \right\}$が存在し、それに対応する$U_{j}</description></item><item><title>MATLABにおける行列のサイズと関連する関数</title><link>https://freshrimpsushi.github.io/jp/posts/1323/</link><pubDate>Sat, 21 Sep 2019 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/1323/</guid><description>関数 size(): 行列の行と列の長さを要素として持つ行ベクトルを返す。 扱っている行列と同じサイズの零行列を作る時に便利だ。 zeros(size(A)): Aと同じサイズの零行列を返す</description></item><item><title>強い局所リプシッツ条件</title><link>https://freshrimpsushi.github.io/jp/posts/1319/</link><pubDate>Fri, 20 Sep 2019 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/1319/</guid><description>定義1 ある局所的に有限な開被覆$\left\{ U_{j} \right\}$が$\delta \gt 0$、$M \gt 0$、そして$\mathrm{bdry}\O</description></item><item><title>一様コーン条件</title><link>https://freshrimpsushi.github.io/jp/posts/1318/</link><pubDate>Thu, 19 Sep 2019 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/1318/</guid><description>定義1 もし、$\Omega$の境界の局所有限開被覆$\left\{ U_{j} \right\}$と、それに対応する有限錐の列$\left\{ C_{j} \rig</description></item><item><title>集合の境界から一定距離外/内の集合</title><link>https://freshrimpsushi.github.io/jp/posts/1317/</link><pubDate>Wed, 18 Sep 2019 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/1317/</guid><description>定義 開集合 $\Omega \subset \mathbb{R}^n$が与えられたとする。すると、$\Omega_{&amp;lt;\delta}$と$\Omega_{&amp;gt;\</description></item><item><title>ジョルダン分解定理</title><link>https://freshrimpsushi.github.io/jp/posts/1311/</link><pubDate>Tue, 17 Sep 2019 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/1311/</guid><description>定理 可測空間 $(X,\mathcal{E})$とそれに定義された符号付き測度 $\nu$が与えられたとしよう。すると、以下の条件を満たす二つの</description></item><item><title>相互に特異的</title><link>https://freshrimpsushi.github.io/jp/posts/1310/</link><pubDate>Mon, 16 Sep 2019 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/1310/</guid><description>定義1 二つの符号測度$\nu$、$\mu$が与えられたとする。以下の三つの条件を$\nu$、$\mu$に対して満たす$E,F\ \in \mathc</description></item><item><title>ハーン分解定理</title><link>https://freshrimpsushi.github.io/jp/posts/1308/</link><pubDate>Sun, 15 Sep 2019 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/1308/</guid><description>定理1 (a) $\nu$を可測空間 $(X, \mathcal{E})$上で定義された符号測度とする。すると、以下を満たす $\nu$の正集合 $P$と負集合 $</description></item><item><title>正の集合, 負の集合, 零の集合</title><link>https://freshrimpsushi.github.io/jp/posts/1303/</link><pubDate>Sat, 14 Sep 2019 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/1303/</guid><description>定義1 $\nu$を$(X,\mathcal{E})$上の符号測度としよう。そして$E,F \in \mathcal{E}$としよう。すると $\nu (F) \ge 0,\ \forall</description></item><item><title>符号付き測度</title><link>https://freshrimpsushi.github.io/jp/posts/1301/</link><pubDate>Fri, 13 Sep 2019 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/1301/</guid><description>定義1 $(X, \mathcal{E})$を可測空間だとしよう。以下の条件を満たす拡張実数値関数$\nu : \mathcal{E} \to \overline{\mathbb{R</description></item><item><title>測度の一般的な定義</title><link>https://freshrimpsushi.github.io/jp/posts/1302/</link><pubDate>Thu, 12 Sep 2019 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/1302/</guid><description>定義 可測空間 $(X,\mathcal{E})$が与えられたとしよう。以下の三条件を満たす拡張実数値を持つ関数$\mu : \mathcal{E} \to \overline</description></item><item><title>線分条件</title><link>https://freshrimpsushi.github.io/jp/posts/1298/</link><pubDate>Wed, 11 Sep 2019 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/1298/</guid><description>定義1 $\Omega \subset \mathbb{R}^{n}$を開集合とする。全ての$x \in \mathrm{bdry}\Omega$に対して、以下の条件を満たす$x</description></item><item><title>ウィーク・コーン条件</title><link>https://freshrimpsushi.github.io/jp/posts/1297/</link><pubDate>Tue, 10 Sep 2019 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/1297/</guid><description>定義1 $\Omega \subset \mathbb{R}^{n}$を開いた集合としよう。任意の点$x \in \Omega$が与えられたとする。$R(x)$を$x$から$y \in</description></item><item><title>コーン条件</title><link>https://freshrimpsushi.github.io/jp/posts/1296/</link><pubDate>Mon, 09 Sep 2019 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/1296/</guid><description>定義1 $\Omega \subset \mathbb{R}^{n}$を開集合としよう。いくつかの有限コーンが存在して、各$x \in \Omega$に対して$x$を頂点とする有</description></item><item><title>局所有限カバー</title><link>https://freshrimpsushi.github.io/jp/posts/1295/</link><pubDate>Mon, 09 Sep 2019 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/1295/</guid><description>定義1 日本語 集合$S \subset \mathbb{R}^n$のオープンカバー$\mathcal{O}$があるとする。$\mathbb{R}^n$の任意の</description></item><item><title>有限コーン</title><link>https://freshrimpsushi.github.io/jp/posts/1287/</link><pubDate>Sat, 07 Sep 2019 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/1287/</guid><description>定義1 $v$を$\mathbb{R}^n$の単位ベクトル2としよう。ゼロでない各$x\in \mathbb{R}^n$に対して、$\angle</description></item><item><title>一般的な平行六面体の定義</title><link>https://freshrimpsushi.github.io/jp/posts/1286/</link><pubDate>Fri, 06 Sep 2019 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/1286/</guid><description>定義 $n$個の線形独立なベクトル$y_{1},\ \cdots,\ y_{n} \in \mathbb{R}^n$が与えられたとする。すると、以下の集合$P$をパラレルピペド</description></item><item><title>時間遅延の勾配</title><link>https://freshrimpsushi.github.io/jp/posts/1274/</link><pubDate>Tue, 03 Sep 2019 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/1274/</guid><description>概要 時遅れの勾配は、次の通りだ。 $$ \nabla t_{r}=-\frac{1}{c} \crH $$ 証明 $\acR = c(t -t_{r})$であり、$t$は空間変数と無関係なので $$ \nabla \cR =\nabla(-c t_{r})=-c \nabla t_{r} $$ だから、時遅れの勾</description></item><item><title>リエナール-ヴィーハート電位</title><link>https://freshrimpsushi.github.io/jp/posts/1269/</link><pubDate>Sun, 01 Sep 2019 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/1269/</guid><description>概要1 遅延時刻 $t_{r}$で速度 $\mathbf{v}$で動く点電荷 $q$に対するポテンシャルをリエナール‐ヴィーヘルト ポテンシャルLié</description></item><item><title>ゼメンコ方程式</title><link>https://freshrimpsushi.github.io/jp/posts/1264/</link><pubDate>Wed, 28 Aug 2019 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/1264/</guid><description>概要1 連続的な電荷分布が時間によって変化する場合の電場は次の通りである。 $$ \mathbf{E} (\mathbf{r},t)=\frac{1}{4\pi \epsilon_{0}} \int \left[ \frac{ \rho (\mathbf{r}^{\prime}, t_{r}) }{\cR ^2} \crH + \frac{ \dot{\rho}(\mathbf{r}^{\prime}, t_{r})}{c\cR}\crH-\frac{\dot{\mathbf{J}}(\mathbf{r}^{\prime},t_{r}) }{c^2 \cR} \right]d\tau^{\prime} $$ 連続的な電流分布が時間によ</description></item><item><title>電位と電磁場</title><link>https://freshrimpsushi.github.io/jp/posts/1263/</link><pubDate>Tue, 27 Aug 2019 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/1263/</guid><description>概要1 時間によって電荷、電流の分布が変わるときの電界と磁界は以下の通りである。 $$ \mathbf{E}= -\nabla V-\frac{\partial \mathbf{A}}{\partial t} $$ $$ \mathbf{B} = \nabla \times \mathbf{A} $$ $V$はスカラーポテンシャル、$\</description></item><item><title>ポテンシャルバリアに対するシュレディンガー方程式の解</title><link>https://freshrimpsushi.github.io/jp/posts/1256/</link><pubDate>Sun, 25 Aug 2019 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/1256/</guid><description>概要 ポテンシャルが上の図のように壁の形をしているとき、粒子がどのように運動するかを見てみよう。ポテンシャル$U$は $$ U(x) = \begin{cases} 0 &amp;amp; x&amp;lt;-a \\ U_{0} &amp;amp; -a &amp;lt; x</description></item><item><title>有限井戸ポテンシャルに対する有限正方形井戸ポテンシャルのシュレディンガー方程式の解</title><link>https://freshrimpsushi.github.io/jp/posts/1261/</link><pubDate>Sun, 25 Aug 2019 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/1261/</guid><description>概要 ポテンシャルが上の図のように有限な矩形井戸形の場合、粒子がどのように運動するかを見てみよう。ポテンシャル $U$は $$ U(x) = \begin{cases} 0 &amp;amp; x&amp;lt;-a \\ U_{0} &amp;amp; -a &amp;lt;</description></item><item><title>物理学の付録</title><link>https://freshrimpsushi.github.io/jp/posts/1257/</link><pubDate>Sun, 25 Aug 2019 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/1257/</guid><description>基礎 付録A-1 $$ \begin{align*} \frac{ d |x| } {d x} &amp;amp;= \frac{d \sqrt{x^2} }{d x} \\ &amp;amp;= \frac{d \sqrt{x^2}}{d x^2} \frac{d x^2}{dx} \\ &amp;amp;= \frac{1}{2}\frac{1}{\sqrt{x^2}} \cdot 2x \\ &amp;amp;= \dfrac{1}{|x|}x \end{align*} $$ 電磁気学 付録E-1 元の記事に行く $$ \delta \big( f(x) \big) =\sum \limits_{x_{0}} \frac{\delta (x-x_{0})}{ \frac{\partial f}{\partial x}\Big|_{x=x_{0}} } $$ この場</description></item><item><title>拡張された実数値を持つ関数が可測関数であるための必要十分条件</title><link>https://freshrimpsushi.github.io/jp/posts/1255/</link><pubDate>Sat, 24 Aug 2019 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/1255/</guid><description>定理1 与えられたσ-代数$(X,\mathcal{E})$と、拡張された実数の値を持つ関数$f : X\rightarrow \overline{\mathbb{R}}</description></item><item><title>拡張実数体系</title><link>https://freshrimpsushi.github.io/jp/posts/1252/</link><pubDate>Thu, 22 Aug 2019 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/1252/</guid><description>定義 以下のように定義される集合を拡張された実数システムと言います。 $$ \overline{ \mathbb{R} } := \mathbb{R} \cup \left\{ -\infty, +\infty\right\} $$ 説明 解析学などの分野では、便宜のために実数の集合$\</description></item><item><title>ボレルσ-代数、ボレル可測空間</title><link>https://freshrimpsushi.github.io/jp/posts/1251/</link><pubDate>Wed, 21 Aug 2019 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/1251/</guid><description>定理 $X$を任意の集合とする。そして、空集合でない$A \subset \mathcal{P}(X)$が与えられたとする。そうしたら、$A$を含む最小の$\</description></item><item><title>MATLABで1ページに複数の図を出力する方法</title><link>https://freshrimpsushi.github.io/jp/posts/1247/</link><pubDate>Sat, 17 Aug 2019 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/1247/</guid><description>方法 subplot() 関数を使えば、複数の図を一ページに出力することができる。第一、第二の変数はそれぞれ、画像を出力する盤面の行と列を示し、図をどんな形で配</description></item><item><title>階段ポテンシャルに対するシュレーディンガー方程式の解</title><link>https://freshrimpsushi.github.io/jp/posts/1245/</link><pubDate>Thu, 15 Aug 2019 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/1245/</guid><description>概要 ポテンシャルが上の図のように階段関数であるとき、粒子がどのように運動するかを調べてみよう。ポテンシャル$U$は $$ U(x) = \begin{cases} 0 &amp;amp; x&amp;lt;0 \\ U_{0} &amp;amp; x&amp;gt;0 \end{cases} $$</description></item><item><title>L^p 空間が一様に凸であり、反射的であることの証明</title><link>https://freshrimpsushi.github.io/jp/posts/1244/</link><pubDate>Wed, 14 Aug 2019 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/1244/</guid><description>定理1 $1 \lt p \lt \infty$ とする。すると、$L^{p}$空間は一様に凸であり、反射的である。 説明 一様な凸性の定義と クラークソンの不等式 を使って証明が可</description></item><item><title>波動関数の反射と透過</title><link>https://freshrimpsushi.github.io/jp/posts/1241/</link><pubDate>Tue, 13 Aug 2019 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/1241/</guid><description>定義 波動関数の反射係数반사계수(반사율) $R$と透過係数투과계수(투과율) $T$は次のように定義される。 $$ R = \left| \frac{j_{\text{ref}}}{j_{\text{inc}}} \right|,\quad T = \left| \frac{j_{\text{trans}}}{j_{\text{inc}}}\right| \tag{1} $$ この時、$j</description></item><item><title>確率フロー</title><link>https://freshrimpsushi.github.io/jp/posts/1240/</link><pubDate>Mon, 12 Aug 2019 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/1240/</guid><description>定義 1 2 波動関数 $\psi (x, t)$の確率流れprobability currentは以下のように定義される。 $$ j(x,t) := \frac{\hbar}{2m\i}\left( \psi^{\ast}\dfrac{\partial \psi}{\partial x} - \psi\frac{\partial \psi^{\ast}}{\partial x}\right) \tag{1} $$ 公式 確率流れの変</description></item><item><title>量子力学におけるグラム・シュミットの直交化過程</title><link>https://freshrimpsushi.github.io/jp/posts/1239/</link><pubDate>Sun, 11 Aug 2019 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/1239/</guid><description>定義 グラム・シュミットの直交化法Gram-Schmidt orthogonalization procedureは、互いに直交していないベクトルから直交集合を作る方法のことだ。</description></item><item><title>自然な埋め込みと反射的な空間</title><link>https://freshrimpsushi.github.io/jp/posts/1233/</link><pubDate>Fri, 09 Aug 2019 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/1233/</guid><description>定義1 $\left( X, \left\| \cdot \right\|_{X} \right)$をノルム空間としよう。そして、$X^{\ast \ast}=(X^{\ast})^{\ast}$を$X$の双対</description></item><item><title>ハーン-バナッハの拡張定理</title><link>https://freshrimpsushi.github.io/jp/posts/1231/</link><pubDate>Wed, 07 Aug 2019 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/1231/</guid><description>定理1 $(X, \left\| \cdot \right\|)$をノルム空間としよう。$Y \subset X$とする。そして、$Y$の線形汎関数$y^{\ast} \in Y^{\ast}$が与</description></item><item><title>実数、複素数、セミノルムに対するハーン・バナッハの定理</title><link>https://freshrimpsushi.github.io/jp/posts/1230/</link><pubDate>Tue, 06 Aug 2019 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/1230/</guid><description>実数に関するハーン・バナッハの定理1 $X$は$\mathbb{R}$-ベクトル空間であり、$Y \subset X$とする。$p : X \to \mathbb{ R}$を$X$の準線</description></item><item><title>セミノルム</title><link>https://freshrimpsushi.github.io/jp/posts/1229/</link><pubDate>Mon, 05 Aug 2019 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/1229/</guid><description>定義1 $X$をベクトル空間とする。以下の三つの条件を満たす関数$\left\| \cdot \right\| : X \to \mathbb{R}$が存在する場合、$\left\</description></item><item><title>半線形関数</title><link>https://freshrimpsushi.github.io/jp/posts/1333/</link><pubDate>Mon, 05 Aug 2019 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/1333/</guid><description>定義1 関数 $f : X \to Y$が下記の二つの条件を満たす場合、準線形sublinearと呼ばれる。$x,x_{1},x_{2}\in X$と$a \in \m</description></item><item><title>Lp 空間に対するリース表現定理</title><link>https://freshrimpsushi.github.io/jp/posts/1228/</link><pubDate>Sun, 04 Aug 2019 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/1228/</guid><description>定理1 ${L}^{\ p}$空間に対するリース表示定理 $1&amp;lt;p&amp;lt;\infty$で、$L\in \big( {L}^{\ p} \big)^{\ast}$とする。この時、$</description></item><item><title>すべての等距離写像が埋め込みであることの証明</title><link>https://freshrimpsushi.github.io/jp/posts/1226/</link><pubDate>Sat, 03 Aug 2019 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/1226/</guid><description>要旨 $(X, \left\| \cdot \right\|_{X}), (Y, \left\| \cdot \right\|_{Y})$をノルム空間としよう。そして$f : X \to Y$を等距離写像としよう。そうすると$f$は埋め込みだ。</description></item><item><title>ノルム空間とは何か</title><link>https://freshrimpsushi.github.io/jp/posts/1225/</link><pubDate>Fri, 02 Aug 2019 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/1225/</guid><description>定義1 $X$をベクター空間としよう。次の三条件を満たす関数$\left\| \cdot \right\| : X \to \mathbb{R}$が存在すれば、$\left\| \cdot \</description></item><item><title>ソボレフ空間は分離可能であり、一様凸であり、反射的であることの証明</title><link>https://freshrimpsushi.github.io/jp/posts/1222/</link><pubDate>Thu, 01 Aug 2019 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/1222/</guid><description>定理1 $1\le p &amp;lt;\infty$ のとき、ソボレフ空間 $W^{m, p}$ は 分離可能である。また、$1&amp;lt; p &amp;lt; \infty$ のとき、ソボレフ空間は 反射的で一様凸である。 説明 内積が定義され</description></item><item><title>ソボレフ空間はバナッハ空間であることの証明</title><link>https://freshrimpsushi.github.io/jp/posts/1221/</link><pubDate>Wed, 31 Jul 2019 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/1221/</guid><description>定理1 ソボレフ空間 $W^{m, p}$はバナッハ空間だ。 説明 ノルムが定義されていて完備な空間をバナッハ空間という。ソボレフ空間を定義する時に、ノルムも一</description></item><item><title>ソボレフノルムとソボレフ空間</title><link>https://freshrimpsushi.github.io/jp/posts/1220/</link><pubDate>Tue, 30 Jul 2019 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/1220/</guid><description>定義1 ソボレフ空間 $\Omega \subset \mathbb{R}^{n}$を開集合としよう。正の整数$m$と$1\le p \le \infty$に対して、以下のように定義</description></item><item><title>数学における埋め込み、挿入写像</title><link>https://freshrimpsushi.github.io/jp/posts/1214/</link><pubDate>Sat, 27 Jul 2019 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/1214/</guid><description>imbeddingとembeddingは同じ意味だ。 埋め込みは、挿入、埋め込み、組み込み、埋めるなどと訳される。 定義1 $(X, \left\| \cdot \right\|_{X}), (Y, \left\| \cdot \rig</description></item><item><title>ミンコフスキーの不等式</title><link>https://freshrimpsushi.github.io/jp/posts/1212/</link><pubDate>Fri, 26 Jul 2019 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/1212/</guid><description>定理1 $\Omega \subset \mathbb{R}^{n}$を開集合とし、$0 \lt p \lt 1$とする。もし$u, v \in L^p(\Omega)$ならば$u+v \in L^p(\</description></item><item><title>ヘルダーの不等式</title><link>https://freshrimpsushi.github.io/jp/posts/1203/</link><pubDate>Thu, 25 Jul 2019 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/1203/</guid><description>定理1 $\Omega \subset \mathbb{R}^{n}$を開集合とする。$0 &amp;lt; p &amp;lt; 1$、$p^{\prime} = \dfrac{p}{p-1} &amp;lt; 0$とする。もし$u \in$ $L^{p}(\O</description></item><item><title>クラークソンの不等式の証明</title><link>https://freshrimpsushi.github.io/jp/posts/1202/</link><pubDate>Wed, 24 Jul 2019 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/1202/</guid><description>定理1 $\Omega \subset \mathbb{R}^{n}$を開集合としよう。 $u,v\in {L}^{p}(\Omega)$とする。また$\frac{1}{p}+\frac</description></item><item><title>ルベーグ空間における内挿不等式</title><link>https://freshrimpsushi.github.io/jp/posts/1201/</link><pubDate>Tue, 23 Jul 2019 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/1201/</guid><description>定理1 $\Omega \subset \mathbb{R}^{n}$を開集合とする。どんな$\theta$に対しても、$1 \le p \lt q\lt r \le \infty$が$0 \lt \theta \lt 1$で以</description></item><item><title>Lp空間の線型汎関数</title><link>https://freshrimpsushi.github.io/jp/posts/1196/</link><pubDate>Mon, 22 Jul 2019 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/1196/</guid><description>定義1 $\Omega \subset \mathbb{R}^{n}$を開集合としよう。$1 \le p \le \infty$であり、$p^{\prime}=\frac{p}{p-1}</description></item><item><title>一様凸性</title><link>https://freshrimpsushi.github.io/jp/posts/1199/</link><pubDate>Sun, 21 Jul 2019 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/1199/</guid><description>定義1 $(X, \left\| \cdot \right\|)$をノルム空間と呼ぼう。$\left\| \cdot \right\|$が以下の条件を満たす場合、$X$のノルム$\lef</description></item><item><title>ベッセル方程式の導出</title><link>https://freshrimpsushi.github.io/jp/posts/1195/</link><pubDate>Sat, 20 Jul 2019 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/1195/</guid><description>定義 以下の微分方程式を**$\nu$次ベッセル方程式**Bessel&amp;rsquo;s equation of order $\nu$と呼ぶ。 $$ \begin{align*} x^2 y^{\prime \prime} +xy^{\prime} +(x^2-\nu^2)y =&amp;amp;\ 0 \\ x(xy^{\prime})^{\prime} + (x^2- \nu ^2) y</description></item><item><title>MATLABでグラフに使用できる特殊記号一覧</title><link>https://freshrimpsushi.github.io/jp/posts/1191/</link><pubDate>Wed, 17 Jul 2019 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/1191/</guid><description>方法 MATLABでグラフの各軸が何を意味するか示すためにラベルを付ける場合、xlabelとylabelを使用する。特殊記号やボールド体、イタ</description></item><item><title>物理学におけるオイラー‐ラグランジュ方程式</title><link>https://freshrimpsushi.github.io/jp/posts/1183/</link><pubDate>Mon, 15 Jul 2019 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/1183/</guid><description>概要 この記事は、読者が古典力学のカテゴリー、具体的にはラグランジュ力学とハミルトンの最小作用の原理を読んだという前提で書かれています。可能な</description></item><item><title>ラグランジュ力学とハミルトンの変分原理</title><link>https://freshrimpsushi.github.io/jp/posts/1182/</link><pubDate>Sun, 14 Jul 2019 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/1182/</guid><description>概要 ハミルトンの原理、汎関数、作用、変分などについて、可能な限り簡単に説明しています。他の場所で満足のいく説明を見つけられなかった場合は、最</description></item><item><title>ホップ-ラックス公式がハミルトン-ヤコビ方程式を満たすことの証明</title><link>https://freshrimpsushi.github.io/jp/posts/1178/</link><pubDate>Fri, 12 Jul 2019 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/1178/</guid><description>定理 1 ホップ-ラックスの公式 $$ u(x,t) = \min \limits_{y \in \mathbb{R}^n} \left\{ tL\left( \dfrac{x-y}{t} \right) +g(y) \right\} $$ $x \in \mathbb{R}^n$と$t&amp;gt;0$としよう。そして、ホップ-ラックスの</description></item><item><title>代数学の基本定理</title><link>https://freshrimpsushi.github.io/jp/posts/1179/</link><pubDate>Thu, 11 Jul 2019 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/1179/</guid><description>定理1 $p, q, r \ge 1$が$\dfrac{1}{p} + \dfrac{1}{q} + \dfrac{1}{r} = 2$を満たすとする。するとすべての${u \in L^{p}(\mathbb{R}^{n})</description></item><item><title>ホップ・ラックス・フォーミュラ</title><link>https://freshrimpsushi.github.io/jp/posts/1174/</link><pubDate>Tue, 09 Jul 2019 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/1174/</guid><description>ビルドアップ1 ハミルトニアン$H$が$Du$のみに依存するハミルトン-ヤコビ方程式の初期値問題を見てみよう。 $$ \begin{equation} \left\{ \begin{aligned} u_{t} + H(Du)&amp;amp;=0 &amp;amp;&amp;amp; \text{in } \mathbb{R}^n \times (0,\infty) \\ u&amp;amp;=g &amp;amp;&amp;amp;</description></item><item><title>メルリン変換</title><link>https://freshrimpsushi.github.io/jp/posts/1176/</link><pubDate>Sun, 07 Jul 2019 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/1176/</guid><description>定義 関数 $f : [0, \infty) \to \mathbb{C}$について、下記の積分が存在するなら、これを$f$のメリン変換Mellin transformと呼び、こ</description></item><item><title>ハミルトニアンとラグランジアンの凸双対性</title><link>https://freshrimpsushi.github.io/jp/posts/1172/</link><pubDate>Sat, 06 Jul 2019 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/1172/</guid><description>定理1 ルジャンドル変換 $L$は凸関数だ。 $\lim \limits_{ |v|\to \infty} \dfrac{ L(v) }{ |v| }=+\infty$ 上記の条件を満たすラグランジアン $L : \mathbb{R}^{n} \to \mathbb{R}$に対して、$L$のル</description></item><item><title>ルジャンドル変換</title><link>https://freshrimpsushi.github.io/jp/posts/1171/</link><pubDate>Fri, 05 Jul 2019 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/1171/</guid><description>xやpについて、偏微分方程式の変数であることを強調するときは、通常の書体$x,p \in \mathbb{R}^{n}$で表記し、$s$の関数である</description></item><item><title>ラプラス変換の畳み込み</title><link>https://freshrimpsushi.github.io/jp/posts/1170/</link><pubDate>Thu, 04 Jul 2019 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/1170/</guid><description>定義1 $\mathcal{L}$をラプラス変換と呼ぼう。次の式を満たす関数$f*g$をラプラス変換における$f$と$g$の畳み込み$f$と$</description></item><item><title>変分法およびオイラー-ラグランジュ方程式から導出されるハミルトン方程式</title><link>https://freshrimpsushi.github.io/jp/posts/1168/</link><pubDate>Wed, 03 Jul 2019 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/1168/</guid><description>xやpに関して、偏微分方程式の変数として強調する場合は、普通の文字体で$x,p \in \mathbb{R}^{n}$と表記し、$s$の関数として強</description></item><item><title>ヒルベルト変換</title><link>https://freshrimpsushi.github.io/jp/posts/1167/</link><pubDate>Tue, 02 Jul 2019 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/1167/</guid><description>ビルドアップ ラドン逆変換 $$ f(x,y)=\dfrac{1}{2} \mathcal{B} \left\{ \mathcal{F}^{-1} \Big[ |S|\mathcal{F} (\mathcal{R}f) (S,\ \theta) \Big]&amp;gt; \right\} (x,y) $$ この公式は$f$のラドン変換$\mathcal{R}f$から$f$を求める公式だ。まず、</description></item><item><title>ラドン逆変換：フィルタリングバックプロジェクション（FBP）</title><link>https://freshrimpsushi.github.io/jp/posts/1166/</link><pubDate>Mon, 01 Jul 2019 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/1166/</guid><description>定理 $f : \mathbb{R}^{2} \to \mathbb{R}$について、次の式が成り立つ。 説明 フィルタードバックプロジェクション公式とも言う。 $f$のラドン変換$\ma</description></item><item><title>バックプロジェクション：ラドン変換のデュアル</title><link>https://freshrimpsushi.github.io/jp/posts/1164/</link><pubDate>Sun, 30 Jun 2019 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/1164/</guid><description>定義1 2 Radon変換 $\mathcal{R} : L^{2}(\mathbb{R}^{n}) \to L^{2}(Z_{n})$のデュアルオペレーター $\mathcal{R}^{\#} : L^{2}(Z_{n}) \to L^{2}(\mathbb{R}^{n})$をバックプ</description></item><item><title>フーリエスライス定理</title><link>https://freshrimpsushi.github.io/jp/posts/1165/</link><pubDate>Sun, 30 Jun 2019 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/1165/</guid><description>概要 $f : \mathbb{R}^{2} \to \mathbb{R}$について、以下の式が成り立ちます。 $$ \begin{equation} \mathcal{F}_2 f(\xi \cos\theta,\ \xi \sin\theta)=\mathcal{F}(\mathcal{R}f)(\xi ,\ \theta) \label{thm1} \end{equation} $$ ここで、$\mathcal{F}$は1次元のフー</description></item><item><title>MATLABでExcelのデータをインポートする方法</title><link>https://freshrimpsushi.github.io/jp/posts/1163/</link><pubDate>Fri, 28 Jun 2019 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/1163/</guid><description>方法 MatlabにはExcelのデータを読み込む機能がある。まずはホームメニューからデータの取り込みをクリックする。 読み込みたいデータが保存</description></item><item><title>ハミルトン-ヤコビ方程式とハミルトニアン方程式</title><link>https://freshrimpsushi.github.io/jp/posts/1162/</link><pubDate>Fri, 28 Jun 2019 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/1162/</guid><description>ハミルトン方程式を得る方法は二つある。一つはオイラー-ラグランジュ方程式から得るもので、もう一つはこの記事で紹介するハミルトン・ヤコビ方程式</description></item><item><title>偏微分方程式におけるラグランジアンとオイラー・ラグランジュ方程式</title><link>https://freshrimpsushi.github.io/jp/posts/1157/</link><pubDate>Thu, 27 Jun 2019 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/1157/</guid><description>定義1 ラグランジアンLagrangian スムース関数 $L : \mathbb{R}^n \times \mathbb{R}^n \to \mathbb{R}$が与えられたとしよう。これをラグランジアンと呼び、以下</description></item><item><title>一次元のダランベールの公式</title><link>https://freshrimpsushi.github.io/jp/posts/1151/</link><pubDate>Mon, 24 Jun 2019 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/1151/</guid><description>定理1 波動方程式のコーシー問題が次のように与えられたとしよう。 $$ \begin{align*} u_{tt}-u_{xx}&amp;amp;= 0 &amp;amp;&amp;amp; \text{in } \mathbb{R}^2=\mathbb{R}_{x} \times \mathbb{R}_{t} \\ u=g,\quad u_{t}=&amp;amp;\h &amp;amp;&amp;amp; \text{on } \mathbb{R}\times\left\{t=0\right\} \end{align*} $$ この時、$g \in C^2(\mathbb{R}), h\in C^1(\mathbb</description></item><item><title>MATLABで計算したデータをExcelファイルに保存する方法</title><link>https://freshrimpsushi.github.io/jp/posts/1150/</link><pubDate>Sun, 23 Jun 2019 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/1150/</guid><description>方法 MATLABで計算したデータをExcelに整理したい時、データ量が多くない場合は、直接コピー＆ペーストすることが可能だ。しかし、上の写真</description></item><item><title>MATLABで一度に複数行のコメントとコメント解除をする方法</title><link>https://freshrimpsushi.github.io/jp/posts/1149/</link><pubDate>Sat, 22 Jun 2019 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/1149/</guid><description>方法 コメントアウトしたい部分をドラッグして選択した後、Ctrl+Rを入力すれば、ドラッグした部分全体をコメントアウトできる。元に戻したいとき</description></item><item><title>任意の関数を二つの非負の関数として表す方法</title><link>https://freshrimpsushi.github.io/jp/posts/1145/</link><pubDate>Wed, 19 Jun 2019 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/1145/</guid><description>定義1 関数$f : X \to \mathbb{R}$に対して$f^{+}$と$f^{-}$を以下のように定義しよう。 $$ \begin{align*} f^{+} (x) &amp;amp;:= \max \left\{ f(x),\ 0 \right\} \\ f^{-} (x) &amp;amp;:= \max \left\{ -f(x),\</description></item><item><title>実数値を持つ可測関数の性質</title><link>https://freshrimpsushi.github.io/jp/posts/1136/</link><pubDate>Tue, 18 Jun 2019 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/1136/</guid><description>定理1 可測空間 $(X,\mathcal{E})$で定義された2つの関数 $f, g : X \to \mathbb{R}$が可測関数ならば、以下の関数も全て可測</description></item><item><title>予測可能関数</title><link>https://freshrimpsushi.github.io/jp/posts/1135/</link><pubDate>Fri, 14 Jun 2019 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/1135/</guid><description>定義1 $(X, \mathcal{E})$を可測空間としよう。集合$S_{f}(\alpha)$を次のように定義する。 $$ S_{f}(\alpha):=\left\{ x\in X\ |\ f(x) &amp;gt;\alpha \right\} = f^{-1}\left( (\alpha, \infty) \right),\quad \forall \alpha</description></item><item><title>離散フーリエ変換</title><link>https://freshrimpsushi.github.io/jp/posts/1121/</link><pubDate>Tue, 04 Jun 2019 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/1121/</guid><description>ビルドアップ1 $f$を特定の間隔で測定されるある物理的信号としよう。現実的な条件を考えた時、信号が測定され始める瞬間$t=0$と測定が終わる</description></item><item><title>フーリエ変換を用いた微分方程式の解法</title><link>https://freshrimpsushi.github.io/jp/posts/1119/</link><pubDate>Mon, 03 Jun 2019 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/1119/</guid><description>説明 フーリエ級数とフーリエ変換は、熱方程式を解くために出てきた概念である。もちろん、条件を満たしていれば、他の微分方程式を解く時にも使用でき</description></item><item><title>ラドン変換の性質</title><link>https://freshrimpsushi.github.io/jp/posts/1118/</link><pubDate>Sat, 01 Jun 2019 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/1118/</guid><description>性質1 ラドン変換 $\mathcal{R} : L^{2}(\mathbb{R}^{n}) \to L^{2}(\Lambda)$は次の性質を持っている。 線形性 $\alpha, \beta \in \mathbb{R}$、$f, g \in L^{2}(\m</description></item><item><title>L1空間とL2空間の関係</title><link>https://freshrimpsushi.github.io/jp/posts/1114/</link><pubDate>Fri, 31 May 2019 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/1114/</guid><description>定義 $L^{1}$ 空間 次の式を満たす関数$f$を期間$[a,\ b]$で**(絶対)積分可能**absolutely integrableだという。 $$ \int_{a}^b |f(x)| dx</description></item><item><title>フーリエ逆変換定理</title><link>https://freshrimpsushi.github.io/jp/posts/1112/</link><pubDate>Thu, 30 May 2019 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/1112/</guid><description>ビルドアップ フーリエ変換を導出する過程で、逆変換の定義も同時に導出された。しかし、これは理解を助けるために簡単に説明したもので、変換式を正確</description></item><item><title>モリフィケーションの収束</title><link>https://freshrimpsushi.github.io/jp/posts/1109/</link><pubDate>Wed, 29 May 2019 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/1109/</guid><description>定理 モリファイア $\eta_{\epsilon}$に対して以下が成り立つとしよう。 $\displaystyle \alpha= \int_{-\infty}^{0} \eta_{\epsilon}(x) dx$ $\displaystyle \beta=\int_{0}^{\infty} \eta_{\epsilon} (x) dx$ $\alpha + \beta = 1$としよう。 そして、$f$が</description></item><item><title>指数関数集合と三角関数集合は正規直交基底である</title><link>https://freshrimpsushi.github.io/jp/posts/1108/</link><pubDate>Wed, 29 May 2019 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/1108/</guid><description>要旨 二つの集合$\left\{ e^{inx} \right\}_{n=-\infty}^\infty$と$\left\{ \cos nx\ \right\}_{n=0}^\infty \cup \left\{ \sin nx \right\}_{</description></item><item><title>極座標によって定義される直線</title><link>https://freshrimpsushi.github.io/jp/posts/1110/</link><pubDate>Wed, 29 May 2019 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/1110/</guid><description>説明 極座標で定められる直線 図(1)のような直線は、傾き$a$と$y$切片$b$で定まる。傾きと切片だけあれば、平面上のすべての直線を表せるよ</description></item><item><title>リーマン-ルベーグの補題</title><link>https://freshrimpsushi.github.io/jp/posts/1106/</link><pubDate>Mon, 27 May 2019 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/1106/</guid><description>定理1 $f \in$ $L^{1}$とする。すると、次の式が成立する。 $$ \lim \limits_{n \to \pm \infty} \hat{f}(\xi) = 0 $$ ここで、$\hat{f}$は$f$のフーリエ変換である。 証明 step</description></item><item><title>特性関数のフーリエ変換</title><link>https://freshrimpsushi.github.io/jp/posts/1105/</link><pubDate>Mon, 27 May 2019 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/1105/</guid><description>公式 特性関数のフーリエ変換は次のとおりだ。 $$ \mathcal{F} \left[ \chi_{[-a,a]}(x) \right] = \dfrac{2 \sin(a\xi) }{\xi} $$ 証明 $$ \begin{align*} \mathcal{F} \left[ \chi_{[-a,a]}(x) \right] &amp;amp;= \int_{-\infty}^{\infty} \chi_{[-a,a]}(x)e^{-i \xi x } dx \\ &amp;amp;= \int_{-a}^{a}e^{-i \xi x} dx \\ &amp;amp;= \dfrac{1}{-i\xi} \left. e^{-i\xi x}\right]_{-a}^{a} \\ &amp;amp;= \dfrac{1}{-i\xi} \left( e^{-i a \xi} - e^{i a \xi} \right)</description></item><item><title>ガウス関数のフーリエ変換</title><link>https://freshrimpsushi.github.io/jp/posts/1104/</link><pubDate>Fri, 24 May 2019 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/1104/</guid><description>証明 フーリエ変換の定義と補助定理を用いると、 $$ \begin{align*} \mathcal{F} \left[ e^{-Ax^2} \right] (\xi) &amp;amp;= \int e^{-Ax^2}e^{-i\xi x}dx \\ &amp;amp;= \int e^{-A(x^2+\frac{i\xi}{A}x) } dx \\ &amp;amp;= \int e^{-A\left[ \left( x^2+\frac{i\xi}{A}x+\left( \frac{i\xi}{2A} \right)^2 \right) - \left( \frac{i\xi}{2A} \right)^2 \right] } dx \\ &amp;amp;= \int e^{-A\left[ x^2+\frac{i\xi}{A}x+\left( \frac{i\xi}{2A} \right)^2 \right]} e^{ A\left( \frac{i\xi}{2A} \right)^2 } dx \\</description></item><item><title>フーリエ変換の性質</title><link>https://freshrimpsushi.github.io/jp/posts/1101/</link><pubDate>Thu, 23 May 2019 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/1101/</guid><description>定理1 $\cal{F}f, \hat{f}$を$f$のフーリエ変換としよう。$f \in L^{1}$とする。すると、フーリエ変換について次の性質が成り立つ。 (a) 任意の実</description></item><item><title>加法関数と乗法関数</title><link>https://freshrimpsushi.github.io/jp/posts/1096/</link><pubDate>Wed, 22 May 2019 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/1096/</guid><description>関数 $f : X \to Y$が与えられたとしよう。$a, b \in X$、$a_{i} \in X\ (i=1,\cdots)$とする。 部分加法関数 関数$f$が下の式を満た</description></item><item><title>カラテオドリの定理の証明</title><link>https://freshrimpsushi.github.io/jp/posts/1095/</link><pubDate>Tue, 21 May 2019 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/1095/</guid><description>定義1 全ての$A \subset X$に対して以下の式が成り立つなら、$E \subset X$はカラテオドリ条件Caratheodory conditionを満たすと言い、</description></item><item><title>非線形一次微分方程式の境界の線形化</title><link>https://freshrimpsushi.github.io/jp/posts/1092/</link><pubDate>Mon, 20 May 2019 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/1092/</guid><description>ビルドアップ 非線形1次微分方程式の特性方程式を簡単に解く方法の一つに、定義域$\Omega$の境界である$\partial \Omega$の小</description></item><item><title>一般化されたヘルダーの不等式、ヘルダーの不等式の系</title><link>https://freshrimpsushi.github.io/jp/posts/1091/</link><pubDate>Sun, 19 May 2019 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/1091/</guid><description>説明 $\Omega \subset \mathbb{R}^{n}$を開集合と呼ぼう。次の式を満たす二つの定数$1 \lt p \lt \infty, 1 \lt p^{\prime} \lt \infty$が与えられたとしよう。 $$ \dfrac{1}{p}</description></item><item><title>ヘルダー連続関数空間</title><link>https://freshrimpsushi.github.io/jp/posts/1087/</link><pubDate>Sat, 18 May 2019 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/1087/</guid><description>定義1 連続関数空間 $\Omega \subset \mathbb{R}^{n}$を開集合としよう。非負の整数$m$に対し、$|\alpha| \le m$であるすべての多重指数</description></item><item><title/><link>https://freshrimpsushi.github.io/jp/posts/1086/</link><pubDate>Fri, 17 May 2019 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/1086/</guid><description>定義 関数としてのフーリエ変換 関数 $f \in$ $L^{1}$のフーリエ変換Fourier transform of $f$を次のように定義する。 $$ \hat{f}(\xi) := \int_{-\infty}^{\infty} f(t) e^{-i \xi t}dt $$ オペレーター</description></item><item><title>完全正規直交基底と完全正規直交集合</title><link>https://freshrimpsushi.github.io/jp/posts/1082/</link><pubDate>Tue, 14 May 2019 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/1082/</guid><description>定理：正規直交集合が持つ同値条件 $\left\{ \phi_{n} \right\}_{1}^\infty$が$L^2(a,b)$の正規直交集合であり、$f \in L^2(a,b</description></item><item><title>L2空間でのベッセルの不等式</title><link>https://freshrimpsushi.github.io/jp/posts/1081/</link><pubDate>Mon, 13 May 2019 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/1081/</guid><description>定理 $\left\{ \phi_{n} \right\}_{n=1}^{\infty}$を$L^{2}(a,b)$の中の正規直交集合だとしよう。そして$f\in L^{2}(</description></item><item><title>関数列のノルム収束</title><link>https://freshrimpsushi.github.io/jp/posts/1080/</link><pubDate>Sun, 12 May 2019 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/1080/</guid><description>定義 関数列 $\left\{ f_{n} \right\}$ が与えられたとする。$\| f_{n} - f \|$ が $0$ に収束する場合、$f_{n}$ は ノルム収束するconverge in norm と言い、以下のように</description></item><item><title>遅延時刻連続分布に関する遅延ポテンシャル</title><link>https://freshrimpsushi.github.io/jp/posts/1075/</link><pubDate>Thu, 09 May 2019 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/1075/</guid><description>概要1 動く点電荷に関するスカラーポテンシャルとベクトルポテンシャルは遅延ポテンシャルretarded potentialと呼ばれ、これらは以下</description></item><item><title>特性方程式を利用した非線形1系偏微分方程式の解法。</title><link>https://freshrimpsushi.github.io/jp/posts/1074/</link><pubDate>Wed, 08 May 2019 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/1074/</guid><description>説明1 $x$と$p$について、偏微分方程式の変数であることを強調する場合、通常のフォントで $x,p \in \mathbb{R}^{n}$ と表示し、$s$に関する関数であることを強調</description></item><item><title>非線形1階偏微分方程式の特性方程式</title><link>https://freshrimpsushi.github.io/jp/posts/1073/</link><pubDate>Tue, 07 May 2019 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/1073/</guid><description>xとpに関して、偏微分方程式の変数を強調する時は普通のフォントで$x,p \in \mathbb{R}^{n}$と表記し、$s$の関数であることを強</description></item><item><title>非線形一階偏微分方程式の表記法</title><link>https://freshrimpsushi.github.io/jp/posts/1071/</link><pubDate>Mon, 06 May 2019 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/1071/</guid><description>表記法1 非線形1次偏微分方程式は次のように表記される。 $$ \begin{equation} F(Du, u, x) = F(p, z, x) = 0 \label{eq1} \end{equation} $$ $\Omega \subset \mathbb{R}^{n}$は開集合 $x\in \Omega$ $F : \mathbb{R}^n \times \mathbb{R}^n \times</description></item><item><title>クーロンゲージとローレンツゲージ</title><link>https://freshrimpsushi.github.io/jp/posts/134/</link><pubDate>Sun, 05 May 2019 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/134/</guid><description>概要1 電位と電荷密度、電流密度の間には以下のような関係が成り立つ。 $$ \begin{align*} \nabla ^2 V +\dfrac{\partial }{\partial t}(\nabla \cdot \mathbf{A}) &amp;amp;= -\frac{1}{\epsilon_{0}}\rho \\ \left( \nabla ^2 \mathbf{A}-\mu_{0}\epsilon_{0} \dfrac{\partial ^2 \mathbf{A} }{\partial t^2} \right) -\nabla\left( \nabla \cdot \mathbf{A} +\mu_{0}\epsilon_{0} \dfrac{\partial V}{\partial t}\right) &amp;amp;= -\mu_{0} \mathbf{J} \end{align*} $$ こ</description></item><item><title>ゲージ変換</title><link>https://freshrimpsushi.github.io/jp/posts/129/</link><pubDate>Sun, 05 May 2019 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/129/</guid><description>概要1 あるスカラーポテンシャル $V$とベクトルポテンシャル $\mathbf{A}$は、電場$\mathbf{E}$と磁場$\mathbf{B</description></item><item><title>垂直波、並行波、平面偏光</title><link>https://freshrimpsushi.github.io/jp/posts/1070/</link><pubDate>Sun, 05 May 2019 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/1070/</guid><description>定義 進行方向と振動方向が互いに直交する波を垂直波transverse wave, 横波という。逆に、進行方向と振動方向が互いに平行な波を平行波longi</description></item><item><title>調和関数のスムージング効果</title><link>https://freshrimpsushi.github.io/jp/posts/1063/</link><pubDate>Fri, 03 May 2019 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/1063/</guid><description>定理 平均値の性質 $$ \begin{align*} u(x) = -\!\!\!\!\!\! \int_{\partial B(x,r)} udS = -\!\!\!\!\!\! \int _{B(x,r)} udy \end{align*} $$ $u \in C(\Omega)$がそれぞれの開いた球 $B(x,r)\subset \Omega$で平均値の性質を満たすとしよう。す</description></item><item><title>マルチインデックス表記法</title><link>https://freshrimpsushi.github.io/jp/posts/1062/</link><pubDate>Thu, 02 May 2019 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/1062/</guid><description>定義[^1] 要素が非負の整数の組$\alpha=(\alpha_{1}, \alpha_{2}, \cdots, \alpha_{n})$をオーダーが$|\alpha|$のマルチ</description></item><item><title>モリフィケーション</title><link>https://freshrimpsushi.github.io/jp/posts/1060/</link><pubDate>Thu, 02 May 2019 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/1060/</guid><description>定義 1 $f \in {L^1_{\mathrm{Loc}}( \Omega)}$と$\epsilon&amp;gt;0$についての$f$の**$\epsilon$-モリフィケーション**$\epsi</description></item><item><title>サイン波と複素波動関数</title><link>https://freshrimpsushi.github.io/jp/posts/1066/</link><pubDate>Wed, 01 May 2019 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/1066/</guid><description>定義 波を三角関数で表したものをサイン波sinusoidal waveという。 説明 サイン波の一般的な形は以下の通りだ。式が$\cos$である理由</description></item><item><title>モリファイアー</title><link>https://freshrimpsushi.github.io/jp/posts/1059/</link><pubDate>Wed, 01 May 2019 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/1059/</guid><description>定義1 関数$\eta \in C^{\infty}(\mathbb{R}^{n})$を以下のように定義しよう。 $$ \begin{equation} \eta (x) := \begin{cases} C \exp \left( \dfrac{1}{|x|^2-1} \right) &amp;amp; |x|&amp;lt;1 \\ 0 &amp;amp; |x| \ge 1\end{cases}</description></item><item><title>波の境界条件：反射と透過</title><link>https://freshrimpsushi.github.io/jp/posts/1058/</link><pubDate>Wed, 01 May 2019 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/1058/</guid><description>2本の異なる糸が結ばれているとしよう。波が糸1に沿って左から右に伝播する状況だと考える。波の伝播速度は質量に関連しているため、糸が結ばれてい</description></item><item><title>一次元波動方程式の導出</title><link>https://freshrimpsushi.github.io/jp/posts/1057/</link><pubDate>Tue, 30 Apr 2019 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/1057/</guid><description>概要 一次元の波動方程式wave equationは以下のとおりだ。 $$ \dfrac{\partial ^{2} f }{\partial x^{2}} = \dfrac{1}{v^{2}}\dfrac{\partial ^{2} f}{\partial t^{2}} $$ ここで、$v$は波の伝搬速度を表す。 波の特徴 図１のよ</description></item><item><title>電磁場の角運動量</title><link>https://freshrimpsushi.github.io/jp/posts/1056/</link><pubDate>Mon, 29 Apr 2019 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/1056/</guid><description>概要1 電磁場に蓄えられた角運動量は以下の通りだ。 $$ \mathbf{\ell} = \mathbf{r} \times \mathbf{g}=\epsilon_{0}\big( \mathbf{r} \times (\mathbf{E} \times \mathbf{B} )\big) $$ $\mathbf{g}$は電磁場に蓄えられた運動量密度だ。 説明 電磁</description></item><item><title>電磁気学における運動量保存</title><link>https://freshrimpsushi.github.io/jp/posts/1055/</link><pubDate>Mon, 29 Apr 2019 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/1055/</guid><description>概要1 電気力学では、運動量保存の法則は次のようになる。 $$ \dfrac{d \mathbf{p}}{dt} =-\epsilon_{0}\mu_{0}\dfrac{d}{dt}\int_{\mathcal{V}} \mathbf{S} d\tau + \oint_{\mathcal{S}} \mathbf{T} \cdot d\mathbf{a} $$ 説明 ニュートンの第二法則によると、対象が受ける力とその対象の運</description></item><item><title>ポアソン方程式のディリクレ問題の解の一意性</title><link>https://freshrimpsushi.github.io/jp/posts/1046/</link><pubDate>Sun, 21 Apr 2019 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/1046/</guid><description>定理1 $\Omega \subset \mathbb{R}^n$が開いていて有界だとしよう。そして、$g \in C(\partial \Omega)$、$f \in C(\Omega)$だとしよう。それ</description></item><item><title>調和関数の最大値原理</title><link>https://freshrimpsushi.github.io/jp/posts/1044/</link><pubDate>Sat, 20 Apr 2019 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/1044/</guid><description>定理1 $\Omega \subset \mathbb{R}^n$が開集合であり、有界であるとしよう。また、$u : \Omega \to \mathbb{R}$が$u \in C^2(\Omega) \cap C(\bar \Omega)$</description></item><item><title>体積内の電荷が受ける電磁気力</title><link>https://freshrimpsushi.github.io/jp/posts/1042/</link><pubDate>Fri, 19 Apr 2019 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/1042/</guid><description>概要1 体積$\mathcal{V}$内の全ての電荷が受ける電磁力は以下の通りである。 $$ \mathbf{F} =\oint_{\mathcal{S}} \mathbf{T} \cdot d\mathbf{a} -\epsilon_{0}\mu_{0}\dfrac{d}{dt}\int_{\mathcal{V}} \mathbf{S} d\tau $$ $\mathcal{S}$は体積$\</description></item><item><title>マクスウェルの応力テンソル</title><link>https://freshrimpsushi.github.io/jp/posts/1041/</link><pubDate>Thu, 18 Apr 2019 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/1041/</guid><description>定義1 以下のテンソル $\mathbf{T}$をマクスウェル応力テンソルと呼ぶ。 $$ \mathbf{T}=\overleftrightarrow{\mathbf{T}}=\begin{pmatrix} T_{xx} &amp;amp; T_{xy} &amp;amp; T_{xz} \\ T_{yx} &amp;amp; T_{yy} &amp;amp; T_{yz} \\ T_{zx} &amp;amp; T_{zy} &amp;amp; T_{zz} \end{pmatrix} $$ $$ T_{ij}=\epsilon_{0} \left( E_{i}E_{j}-\dfrac{1}{2}\delta_{ij}E^2 \right) + \dfrac{1}{\mu_{0}}\left(B_{i}B_{j}-\dfrac{1}{2}\delta_{ij}B^2 \right) $$ こ</description></item><item><title>物理学におけるテンソルとは</title><link>https://freshrimpsushi.github.io/jp/posts/1040/</link><pubDate>Wed, 17 Apr 2019 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/1040/</guid><description>概要 断然この記事は、テンソルが何か分からなくてこのページにたどり着いた物理学部の学生に最も分かりやすいテンソルについての説明だから、是非読む</description></item><item><title>ポインティングの定理とポインティングベクトル</title><link>https://freshrimpsushi.github.io/jp/posts/1039/</link><pubDate>Tue, 16 Apr 2019 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/1039/</guid><description>整理1 電磁力が電荷にした仕事は、電磁場に蓄えられたエネルギーの減少量と境界面を通じて外に漏れ出たエネルギーを足したものと同じである。これをポ</description></item><item><title>マックスウェルの方程式</title><link>https://freshrimpsushi.github.io/jp/posts/1038/</link><pubDate>Mon, 15 Apr 2019 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/1038/</guid><description>公式 マックスウェルの方程式Maxwell&amp;rsquo;s equations $(\text{i}) \quad \nabla \cdot \mathbf{E}=\dfrac{1}{\epsilon_{0}}\rho$ (ガウスの法則) $(\text{ii}) \quad \nabla \cdot \mathbf{B}=0$ (磁場に対するガウスの法則) $(\text{iii}) \quad \nabla \times \mathbf{E} = -\dfrac{\partial \mathbf{B}}{\partial t}$</description></item><item><title>ラプラス方程式の平均値定理</title><link>https://freshrimpsushi.github.io/jp/posts/1037/</link><pubDate>Sun, 14 Apr 2019 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/1037/</guid><description>要旨1 開集合 $\Omega \subset \mathbb{R}^{n}$ が与えられたとしよう。そして $u \in C^2(\Omega)$ が ラプラス方程式 を満たすとする。そうすると、各々の 開球 $B(x,r)\subset \subset \Omega$ に対して、以下が成り立つ。 $$</description></item><item><title>電磁気学における連続方程式</title><link>https://freshrimpsushi.github.io/jp/posts/1032/</link><pubDate>Sat, 13 Apr 2019 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/1032/</guid><description>式 以下の式は 連続方程式continuity equationと呼ばれる。 $$ \dfrac{\partial \rho}{\partial t}=-\nabla \cdot \mathbf{J} $$ 説明1 連続方程式は局所的な領域での電荷保存の法則を数式で</description></item><item><title>関数のフーリエ級数が関数に絶対収束かつ一様収束する十分条件</title><link>https://freshrimpsushi.github.io/jp/posts/1030/</link><pubDate>Fri, 12 Apr 2019 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/1030/</guid><description>定理 $[L, -L)$で定義された関数$f$が連続であり、断片的に滑らかである とする。すると $f$のフーリエ級数は$f$に絶対収束し、一様収束する。</description></item><item><title>磁場内のエネルギー</title><link>https://freshrimpsushi.github.io/jp/posts/1029/</link><pubDate>Thu, 11 Apr 2019 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/1029/</guid><description>説明1 電荷分布が作る電場のエネルギーを考えたように、電流分布が作る磁場のエネルギーを考えることができる。回路に電流を流すとエネルギーが入る。</description></item><item><title>自己インダクタンス</title><link>https://freshrimpsushi.github.io/jp/posts/1028/</link><pubDate>Wed, 10 Apr 2019 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/1028/</guid><description>説明1 上の図のような状況で、ループ1に電流$I_{1}$が流れると、磁場$\mathbf{B}_{1}$が流れ、$\mathbf{B}_{1</description></item><item><title>相互インダクタンス</title><link>https://freshrimpsushi.github.io/jp/posts/1027/</link><pubDate>Tue, 09 Apr 2019 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/1027/</guid><description>説明1 上の図のように、固定された２つの導体ループがあるとしよう。ループ1に定常電流$I_{1}$が流れると、磁場$\mathbf{B}_{1</description></item><item><title>ファラデーの法則とレンツの法則</title><link>https://freshrimpsushi.github.io/jp/posts/1018/</link><pubDate>Thu, 04 Apr 2019 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/1018/</guid><description>ファラデーの法則 変化する磁場は電場を誘導する。 $$ \nabla \times \mathbf{E} = -\dfrac{\partial \mathbf{B}}{\partial t} $$ 説明1 ファラデーは1831年に以下の実験結果を発表した。公開された実験結果は</description></item><item><title>ポアソン方程式の基本解</title><link>https://freshrimpsushi.github.io/jp/posts/1015/</link><pubDate>Wed, 03 Apr 2019 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/1015/</guid><description>ビルドアップ1 ラプラス方程式の基本解 $x \in \mathbb{R}^{n}$であり、$x \ne 0$に対して、以下の関数$\Phi$をラプラス方程式の基</description></item><item><title>奇関数のフーリエ係数</title><link>https://freshrimpsushi.github.io/jp/posts/1008/</link><pubDate>Mon, 01 Apr 2019 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/1008/</guid><description>定理 周期が$2L$の関数$f$が反波対称ならば、$f$のフーリエ係数は以下のようになる。 $$ \begin{align*} a_{0} &amp;amp;= 0 \\ a_{n} &amp;amp;= \begin{cases} \dfrac{2}{L} {\displaystyle \int_{0}^{L}} f(t) \cos \frac{n \pi t}{L} dt &amp;amp; (n=1, 3, \cdots ) \\ 0 &amp;amp;</description></item><item><title>フーリエ余弦級数、正弦級数、偶関数と奇関数のフーリエ係数</title><link>https://freshrimpsushi.github.io/jp/posts/1007/</link><pubDate>Sun, 31 Mar 2019 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/1007/</guid><description>定義 $f$を区間$[0,L)$で片わりに滑らかな関数としよう。以下で定義される$f_{e}$を区間$[-L, L)$の$f$の偶関数の拡張と言</description></item><item><title>半波対称関数</title><link>https://freshrimpsushi.github.io/jp/posts/1003/</link><pubDate>Sat, 30 Mar 2019 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/1003/</guid><description>定義 周期が$2L$の周期関数$f$が、全ての$t$に対して以下の式を満たすとき、$f$を半波対称half wave symmetryと言う。 $$ f(t)=-f(t+L) $$ 説明</description></item><item><title>任意の関数は常に奇関数と偶関数の和として表すことができる</title><link>https://freshrimpsushi.github.io/jp/posts/1002/</link><pubDate>Fri, 29 Mar 2019 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/1002/</guid><description>定理 $\mathbb{R}$で定義された任意の関数$f$は、常に偶関数と奇関数の和として表せるんだ。 証明 $f_{e}(t)$と$f_o(t)</description></item><item><title>熱方程式, 拡散方程式</title><link>https://freshrimpsushi.github.io/jp/posts/1001/</link><pubDate>Thu, 28 Mar 2019 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/1001/</guid><description>定義1 2 以下の偏微分方程式は、熱方程式heat equationまたは拡散方程式diffusion equationと呼ばれる。 $$ \dfrac{\partial u}{\partial t} = \dfrac{\partial^{2} u}{\partial x^{2}}</description></item><item><title>畳み込みの定義</title><link>https://freshrimpsushi.github.io/jp/posts/1000/</link><pubDate>Wed, 27 Mar 2019 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/1000/</guid><description>定義 $\mathbb{R}$で定義された二つの関数$f$、$g$が与えられたとする。以下の積分が存在する場合、これを二つの関数$f$、$g$</description></item><item><title>ラプラス方程式とポアソン方程式</title><link>https://freshrimpsushi.github.io/jp/posts/997/</link><pubDate>Tue, 26 Mar 2019 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/997/</guid><description>定義1 $\ U \in \mathbb{R}^n$は開集合 $\ x\in U$ $u=u(x) : \overline{U} \rightarrow \mathbb{R}^n$ ラプラス方程式 下の偏微分方程式をラプラス方程式という。 $$ \Delta u=0 $$ ここで、$\De</description></item><item><title>ラプラス方程式は直交変換に対して不変であることを証明する</title><link>https://freshrimpsushi.github.io/jp/posts/995/</link><pubDate>Tue, 26 Mar 2019 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/995/</guid><description>定理1 $u$がラプラス方程式を満たすとしよう。そして、$v(x)$を以下のように定義しよう。 $$ v(x) :=u(Rx) $$ その時、$R$は回転変換だ。だから、$v</description></item><item><title>グリーンの定理</title><link>https://freshrimpsushi.github.io/jp/posts/974/</link><pubDate>Mon, 25 Mar 2019 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/974/</guid><description>定理 $u, v \in C^2( \bar{U})$としよう。それでは、以下の式が成り立つ。 (i) $\displaystyle \int_{U} \Delta u dx=\int_{\partial U} \dfrac{\partial u}{\partial \nu}dS$ (ii) $\displaystyle \int_{U} Dv \cdot Du dx = -\int_{U} u \Delta v dx+\int_{\partial U}\dfrac{\partial v}{\partial \nu}udS$ (iii) $\displaystyle \int_{U} (u\Delta v - v\Delta u )dx</description></item><item><title>グリーンの定理、部分積分の公式</title><link>https://freshrimpsushi.github.io/jp/posts/990/</link><pubDate>Mon, 25 Mar 2019 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/990/</guid><description>定理 $U\subset \mathbb{R}^{n}$を開集合としよう。$u : \bar{U} \to \mathbb{R}$で、$u \in C^1(\bar{U})$とする。$\nu$</description></item><item><title>外向き単位法線ベクトル</title><link>https://freshrimpsushi.github.io/jp/posts/988/</link><pubDate>Mon, 25 Mar 2019 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/988/</guid><description>定義1 $U\subset \mathbb{R}^{n}$を開集合とする。$U$の境界 $\partial U$が$\partial U \in C^1$だとする。そうすると、以下のような外</description></item><item><title>輸送方程式の初期値問題と非同次問題の解法</title><link>https://freshrimpsushi.github.io/jp/posts/986/</link><pubDate>Mon, 25 Mar 2019 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/986/</guid><description>方程式 下記の偏微分方程式は輸送方程式transport equationと言われている。 $$ u_{t} + b \cdot Du=0\quad \text{in }\mathbb{R}^n \times (0,\ \infty) $$ 解法1 初期値問題 輸送方程式の初</description></item><item><title>フーリエ係数の極限は0である</title><link>https://freshrimpsushi.github.io/jp/posts/985/</link><pubDate>Sun, 24 Mar 2019 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/985/</guid><description>定理 フーリエ係数 $a_{n}, b_{n}$と複素フーリエ係数 $c_{\pm n}$は限界$n \rightarrow \infty$だ $$ \begin{align*} \lim \limits_{n \rightarrow \infty} a_{n} &amp;amp;= 0 \\ \lim \limits_{n \rightarrow \infty} b_{n} &amp;amp;= 0 \\ \lim \limits_{n \rightarrow \infty} c_{\pm n} &amp;amp;= 0 \end{align*} $$</description></item><item><title>フーリエ級数の定数項は、関数の一周期の平均と等しい。</title><link>https://freshrimpsushi.github.io/jp/posts/984/</link><pubDate>Sun, 24 Mar 2019 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/984/</guid><description>定理 周期が$2L$の関数$f$のフーリエ級数の定数項は、関数$f$の一周期の平均と同じだ。 証明 定義によって $f(t)$の一周期の積分は $$ \dfrac{1}{2L}\int_{-L}^{L} f(t)dt</description></item><item><title>フーリエ級数の定積分</title><link>https://freshrimpsushi.github.io/jp/posts/980/</link><pubDate>Sun, 24 Mar 2019 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/980/</guid><description>定理 周期が$2L$の周期関数$f$が区間$[-L,\ L)$でピースワイズ連続だとする。そうすると、$f$の定積分は以下のように表せる。 $$ \int_{t_{1}}^{t_{2}} f(t)</description></item><item><title>周期関数の一周期にわたる積分は、積分区間に関わらず常に同じ値を持つ</title><link>https://freshrimpsushi.github.io/jp/posts/982/</link><pubDate>Sun, 24 Mar 2019 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/982/</guid><description>定理 $f$を$2L$-周期関数としよう。すると、以下の値は$a$の値に関わらず一定だ。 $$ \int_{a}^{a+2L}f(t)dt $$ 説明 周期関数の定義によれば、これは当然の事実だ。</description></item><item><title>導関数のフーリエ係数</title><link>https://freshrimpsushi.github.io/jp/posts/979/</link><pubDate>Sun, 24 Mar 2019 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/979/</guid><description>式 区間 $[-L,\ L)$で定義された関数$f$が連続で、部分的に滑らかであるとしよう。すると$f^{\prime}$のフーリエ係数は次の通りである。 $$</description></item><item><title>関数の値の平均</title><link>https://freshrimpsushi.github.io/jp/posts/983/</link><pubDate>Sun, 24 Mar 2019 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/983/</guid><description>定義 $[a,\ b]$から$f(x)$の平均値は区間に対して積分した後、区間の長さで割ることと同じだ。 $$ \dfrac{1}{b-a}\int_{a}^bf(x)dx $$ 導出 区間$[a,\ b]$の分割を$P$とし</description></item><item><title>不連続点でのフーリエ級数の収束성</title><link>https://freshrimpsushi.github.io/jp/posts/973/</link><pubDate>Wed, 20 Mar 2019 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/973/</guid><description>定理1 区間$[-L,\ L)$で定義された関数$f(t)$が逐片連続であるとする。不連続点を$t_{i}\ (i=1,\ \cdots m )$とし、各不連続点で左微分係</description></item><item><title>各断片ごとの連続性、各断片ごとの滑らかさ</title><link>https://freshrimpsushi.github.io/jp/posts/972/</link><pubDate>Wed, 20 Mar 2019 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/972/</guid><description>定義 関数 $f$が区間 $I$で以下の条件を満たすとき、$f$は区間 $I$で片方向に連続piecewise continuousだと言われる。 有限</description></item><item><title>2次線形微分方程式の2つの解のロンスキアン</title><link>https://freshrimpsushi.github.io/jp/posts/965/</link><pubDate>Mon, 18 Mar 2019 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/965/</guid><description>定理 1 $y_{1}$と$y_{2}$が二階線形微分方程式$y^{\prime \prime}+p(t)y^{\prime}+q(t)y=0$の</description></item><item><title>デル演算子を含む式の部分積分</title><link>https://freshrimpsushi.github.io/jp/posts/959/</link><pubDate>Sun, 17 Mar 2019 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/959/</guid><description>公式 デル演算子が含まれるベクトル積分について、次の式が成り立つ。 (a) $$ \int_{\mathcal{V}}\mathbf{A} \cdot (\nabla f)d\tau = \oint_{\mathcal{S}}f\mathbf{A} \cdot d \mathbf{a}-\int_{\mathcal{V}}f(\nabla \cdot \mathbf{A})d\tau $$ (b) $$ \int_{\mathcal{S}} f \left( \nabla \times \mathbf{A} \right)\mathbf{A} \cdot d \mathbf{a} = \int_{\mathcal{S}} \left[ \mathbf{A} \times \left( \nabla f \right) \right] \cdot d\mathbf{a}</description></item><item><title>起電力と運動起電力</title><link>https://freshrimpsushi.github.io/jp/posts/963/</link><pubDate>Sun, 17 Mar 2019 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/963/</guid><description>起電力1 回路の中で電荷を動かして電流を生み出す力を$\mathbf{f}$としよう。この$\mathbf{f}$は2つに分けることができる。</description></item><item><title>静電気学における仕事とエネルギー</title><link>https://freshrimpsushi.github.io/jp/posts/961/</link><pubDate>Sun, 17 Mar 2019 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/961/</guid><description>電荷を動かすためにした仕事1 電位と電場の間には以下のような式が成立します。 $$ -\int_\mathbf{a} ^\mathbf{b} \mathbf{E} \cdot d\mathbf{l} = \int_\mathbf{a} ^ \mathbf{b} \left( \nabla V \right) \cdot d\mathbf{l} = V(\mathbf{b}) - V(\mathbf{a}) $$ したがって、固定された源</description></item><item><title>チェビシェフの微分方程式とチェビシェフ多項式</title><link>https://freshrimpsushi.github.io/jp/posts/956/</link><pubDate>Mon, 11 Mar 2019 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/956/</guid><description>定義 次の微分方程式をチェビシェフChebyshev の微分方程式と呼ぶ。 $$ \begin{equation} (1-x^2)\dfrac{d^2 y}{dx^2} -x\dfrac{dy}{dx}+n^2 y=0 \label{def1} \end{equation} $$ チェビシェフ微分方程式の解をチェビシェフ多項式と呼び</description></item><item><title>チェビシェフ微分方程式の直列解法</title><link>https://freshrimpsushi.github.io/jp/posts/955/</link><pubDate>Mon, 11 Mar 2019 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/955/</guid><description>定義 次の微分方程式をチェビシェフChebyshev 微分方程式という。 $$ (1-x^2)\dfrac{d^2 y}{dx^2} -x\dfrac{dy}{dx}+n^2 y=0 $$ 説明 係数に独立変数 $x$が含まれる形式であり、解がべき級数の</description></item><item><title>外部磁場による電子軌道の変化と反磁性</title><link>https://freshrimpsushi.github.io/jp/posts/953/</link><pubDate>Sun, 10 Mar 2019 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/953/</guid><description>説明1 核の周りを半径$R$で公転している電子がいるとしよう。移動する点電荷が定常電流にはならないが、その速度が非常に速いために定常電流のよう</description></item><item><title>外部磁場中の磁気双極子が受けるトルクと常磁性</title><link>https://freshrimpsushi.github.io/jp/posts/952/</link><pubDate>Sun, 10 Mar 2019 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/952/</guid><description>説明1 電気双極子が外部電場によってトルクを得るのと同じように、磁気双極子もまた同じだ。以下の図のように、一定の外部磁場 $\mathbf{B}=B\hat{\mathbf{z}}$ の中にある電流ループ</description></item><item><title>束縛電流密度と磁化された物体が作るベクトル磁場</title><link>https://freshrimpsushi.github.io/jp/posts/954/</link><pubDate>Sun, 10 Mar 2019 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/954/</guid><description>説明1 外部磁場によって磁化された物体があるとしよう。この物体は磁化密度 $\mathbf{M}$を持っていることになり、この磁化密度によって新</description></item><item><title>自己密度と強磁性体</title><link>https://freshrimpsushi.github.io/jp/posts/951/</link><pubDate>Sun, 10 Mar 2019 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/951/</guid><description>説明1 見た目では磁性がない物体があるとしよう。この物体を原子レベルまで詳しく見ると、核の周りを回る電子によって微小な電流が生じ、これが磁気現</description></item><item><title>量子力学における波動関数の確率的解釈と正規化</title><link>https://freshrimpsushi.github.io/jp/posts/945/</link><pubDate>Wed, 06 Mar 2019 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/945/</guid><description>波動関数 波動関数wave functionは量子力学で時間、位置による粒子の運動状態を表す関数だ。生サーモン寿司店では位置と時間についての波動</description></item><item><title>アンペールの法則とその応用</title><link>https://freshrimpsushi.github.io/jp/posts/922/</link><pubDate>Sun, 03 Mar 2019 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/922/</guid><description>数式 体積電流密度 $\mathbf{J}$によって生じる磁場$\mathbf{B}$が回転する方向は、$\mathbf{J}$の方向を軸とした</description></item><item><title>ストークスの定理</title><link>https://freshrimpsushi.github.io/jp/posts/937/</link><pubDate>Sun, 03 Mar 2019 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/937/</guid><description>定理1 $\mathbf{v}, \mathcal{S}$をそれぞれ3次元空間におけるあるベクトル、面積だとしよう。$\mathcal{S}$の面積ベクトルを$d\m</description></item><item><title>ベクトルポテンシャルの多重極展開と磁気双極子モーメント</title><link>https://freshrimpsushi.github.io/jp/posts/924/</link><pubDate>Sun, 03 Mar 2019 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/924/</guid><description>ベクトルポテンシャルの多重極展開1 ベクトルポテンシャルの多重極展開とは、電流が集まっている時、充分に遠くのベクトルポテンシャルを$\dfra</description></item><item><title>一定な外部電場による極性分子の配向</title><link>https://freshrimpsushi.github.io/jp/posts/817/</link><pubDate>Sun, 03 Mar 2019 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/817/</guid><description>概要 1 電気的に中性の原子が外部電場の中に置かれた場合、偏極して双極子モーメント$\mathbf{p}$を持つことになる。しかし、外部電場の影</description></item><item><title>不均一電場による極性分子の配向</title><link>https://freshrimpsushi.github.io/jp/posts/818/</link><pubDate>Sun, 03 Mar 2019 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/818/</guid><description>説明 1 極性分子は外部電場がなくても双極子モーメントを持っている。もし一定の外部電場があれば、その電場と同じ方向に双極子モーメントが整列する。</description></item><item><title>偏光密度とゲノム</title><link>https://freshrimpsushi.github.io/jp/posts/819/</link><pubDate>Sun, 03 Mar 2019 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/819/</guid><description>概要1 2 導体の中には自由電荷が非常に多い。多くの電子が特定の原子核に束縛されずに導体の内部を自由に動き回るという意味だ。しかし、誘電体または</description></item><item><title>双極子が作る電界</title><link>https://freshrimpsushi.github.io/jp/posts/153/</link><pubDate>Sun, 03 Mar 2019 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/153/</guid><description>説明1 電気双極子 $\mathbf{p}$による電位は次のとおりだ。 $$ V_{\text{dip}}(\mathbf{r}) = \dfrac{1}{4\pi\epsilon_{0}}\dfrac{\mathbf{p}\cdot\hat{\mathbf{r}}}{r^2} = \dfrac{1}{4\pi\epsilon_{0}}\dfrac{p\cos\theta}{r^{2}} $$ 今、$\mathbf{p}$が原点にあり、上の図のように$z</description></item><item><title>定常電流とビオ・サバールの法則</title><link>https://freshrimpsushi.github.io/jp/posts/899/</link><pubDate>Sun, 03 Mar 2019 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/899/</guid><description>定義1 定常電流steady currentとは、量や進行方向が変わらずに絶え間なく続く電荷の流れを指す。 説明 時間によって電流が変わらないため、</description></item><item><title>束縛電荷と偏極された物体が生成する電場</title><link>https://freshrimpsushi.github.io/jp/posts/880/</link><pubDate>Sun, 03 Mar 2019 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/880/</guid><description>結合電荷 外部電場によって物体の双極子が一方向に整列し、このために物体は偏極し、双極子モーメント$\mathbf{p}$を持つ。双極子モーメン</description></item><item><title>磁力は仕事をしない</title><link>https://freshrimpsushi.github.io/jp/posts/897/</link><pubDate>Sun, 03 Mar 2019 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/897/</guid><description>定理1 磁力は仕事をしない。 説明 磁力がある状況で粒子や物体などが動くと、外見上はまるで磁力が仕事をしたように見える。しかし、実際にはそうではな</description></item><item><title>磁場のベクトルポテンシャル</title><link>https://freshrimpsushi.github.io/jp/posts/923/</link><pubDate>Sun, 03 Mar 2019 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/923/</guid><description>説明1 静電学では、$\nabla \times \mathbf{E} = \mathbf{0}$という性質を使って、スカラーポテンシャル $V$を定義する。同様に、磁気静学では、</description></item><item><title>磁場の発散と回転</title><link>https://freshrimpsushi.github.io/jp/posts/920/</link><pubDate>Sun, 03 Mar 2019 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/920/</guid><description>定理 磁場の発散と回転は以下の通りだ。 $$ \begin{align*} \nabla \cdot \mathbf{B} =&amp;amp;\ 0 \\ \nabla \times \mathbf{B} =&amp;amp;\ \mu_{0} \mathbf{J} \end{align*} $$ 説明 電場が常に$\mathbf{0}$の回転を持つ特別なベクトル関数だっ</description></item><item><title>磁気とローレンツ力の法則</title><link>https://freshrimpsushi.github.io/jp/posts/896/</link><pubDate>Sun, 03 Mar 2019 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/896/</guid><description>定義1 動いている電荷（電流）は周りに磁場magnetic field $\mathbf{B}$を作る。磁場 $\mathbf{B}$ の中で $\mathbf{v}$ の速さで動いている電荷 $Q$ が受ける力は</description></item><item><title>磁気双極子が生成する磁場</title><link>https://freshrimpsushi.github.io/jp/posts/156/</link><pubDate>Sun, 03 Mar 2019 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/156/</guid><description>説明 磁気双極子 $\mathbf{m}$ によるベクトルポテンシャルは、磁気双極子モーメントで次のように与えられる。 $$ \mathbf{A}_{\text{dip}}(\mathbf{r}) = \dfrac{\mu_{0}}{4 \pi} \dfrac{\mathbf{m} \times \hat{\mathbf{r}}}{r^2} = \dfrac{\mu_{0}}{4 \pi} \dfrac{m\sin\theta}{r^{2}} \hat{\boldsymbol{\phi}} $$ 今、$\mathbf{</description></item><item><title>電流と電流密度</title><link>https://freshrimpsushi.github.io/jp/posts/898/</link><pubDate>Sun, 03 Mar 2019 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/898/</guid><description>定義1 導線のどこかの点を単位時間ごとに通過する電荷の量を電流currentと定義し、$I$と表記する。それゆえ、左に動く負の電荷と右に動く正</description></item><item><title>리만적분가능한 함수의 푸리에 급수는 수렴한다</title><link>https://freshrimpsushi.github.io/jp/posts/934/</link><pubDate>Sat, 02 Mar 2019 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/934/</guid><description>定理1 関数 $f$ が区間 $[-L,\ L)$ で リーマン可積分 であるとしよう。すると 連続 な点 $t$ に対して $f$ の フーリエ級数 $\lim \limits_{N \to \infty }S^{f}_{N}(t)$ は $f(t)$ に収束する。 $$ \lim \limits_{N \rightarrow \infty} S^{f}_{N}(t)=f(t) $$ このと</description></item><item><title>ポテンシャルの多重極展開と双極子モーメント</title><link>https://freshrimpsushi.github.io/jp/posts/936/</link><pubDate>Sat, 02 Mar 2019 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/936/</guid><description>多重展開1 離れた場所から見た時、集まった電荷分布は点電荷のように見えるだろう。つまり、電荷分布の総電荷が$Q$だとしたら、非常に遠い場所から</description></item><item><title>三角関数の定義を用いた第二の余弦定理の証明</title><link>https://freshrimpsushi.github.io/jp/posts/935/</link><pubDate>Sat, 02 Mar 2019 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/935/</guid><description>公式 上に示された三角形について、次の式が成り立ち、これを第2の余弦定理law of cosinesと呼ぶ。 $$ \begin{cases} a^{2} =b^{2}+c^{2}-2bc\cos\alpha \\ b^{2}=a^{2}+c^{2}-2ac\cos\beta \\ c^{2}=a^{2}+b^{2}-2ab\cos\gamma \end{cases} $$ 証明 図の左上の三角形</description></item><item><title>ディリクレ核</title><link>https://freshrimpsushi.github.io/jp/posts/932/</link><pubDate>Fri, 01 Mar 2019 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/932/</guid><description>定義 ディリクレカーネルDirichlet kernel $D_{n}$は次のように定義される。 $$ \begin{equation} D_{n}(t) := \dfrac{1}{2}+\sum \limits_{k=1}^{n} \cos kt \end{equation} $$ 説明 ディリクレカーネルは、デルタ関数、指</description></item><item><title>フーリエ級数の導出</title><link>https://freshrimpsushi.github.io/jp/posts/929/</link><pubDate>Fri, 01 Mar 2019 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/929/</guid><description>定義 $2L$-周期関数 $f$に対して次のような級数を $f$のフーリエ級数Fourier series of $f$と定義する。 $$ \begin{align*} \lim \limits_{N \rightarrow \infty} S^{f}_{N}(t) &amp;amp;= \lim \limits_{N \to \infty}\left[ \dfrac{a_{0}}{2}+\sum \limits_{n=1}^{N} \left( a_{n}</description></item><item><title>ルジャンドル多項式の直交性</title><link>https://freshrimpsushi.github.io/jp/posts/931/</link><pubDate>Fri, 01 Mar 2019 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/931/</guid><description>概要 区間$[-1,\ 1]$で、ルジャンドル多項式は直交集合を成す。 $$ \int_{-1}^{1} P_{l}(x)P_{m}(x) dx =\frac{2}{2l+1}\delta_{lm} \quad (l, m = 0, 1, 2, \dots) $$ 証明 Case 1: $l \ne m$ ルジャンドル微分方程式 次の微分方</description></item><item><title>ルジャンドル多項式は、低次の任意の多項式と直交する</title><link>https://freshrimpsushi.github.io/jp/posts/933/</link><pubDate>Fri, 01 Mar 2019 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/933/</guid><description>定理 $P_{l}(x)$がルジャンドル多項式で、$f(x)$を$l$より低い次数の任意の多項式とするとき、$P_{l}(x)$と$f(x)$</description></item><item><title>三角関数の集合が直交性を持つことの証明</title><link>https://freshrimpsushi.github.io/jp/posts/928/</link><pubDate>Fri, 01 Mar 2019 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/928/</guid><description>定理 $2L$が周期関数である関数集合$\left\{ 1,\ \cos \dfrac{\pi x}{L},\ \cos \dfrac{2\pi x}{L}, \cdots ,\ \sin\dfrac{\pi x}{L},\ \sin\dfrac{2\pi x}{L},\ \cdots \right\}$は、区間$[-L,\ L)$で直交集合である</description></item><item><title>互いに直交する三角関数の和</title><link>https://freshrimpsushi.github.io/jp/posts/930/</link><pubDate>Fri, 01 Mar 2019 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/930/</guid><description>式 $C_{n}$と$S_{n}$を以下のように定義する。 $$ \begin{align*} C_{n}: &amp;amp;= 1+\cos x + \cos 2x + \cdots +\cos nx \\ S_{n}: &amp;amp;= \sin x +\sin 2x + \cdots + \sin nx \end{align*} $$ すると、以下の式が成立する。 $$</description></item><item><title>直交関数と直交集合</title><link>https://freshrimpsushi.github.io/jp/posts/926/</link><pubDate>Fri, 01 Mar 2019 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/926/</guid><description>定義 内積 間隔 $[a,b]$で定義された二つの関数 $f$、$g$の内積を次のように定義する。 $$ \braket{f , g} := \int_{a}^b f(x) g(x) dx $$ $f, g$が複素関数の場合は、 $$ \braket{f,</description></item><item><title>分離ベクトルの回転</title><link>https://freshrimpsushi.github.io/jp/posts/919/</link><pubDate>Tue, 26 Feb 2019 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/919/</guid><description>式 $$ \nabla \times \dfrac{\crH }{\cR ^2} = \mathbf{0} $$ 説明 この式が特別な意味を持つわけではない。磁場の発散を求める過程で出てくるが、計算が簡単ではないため、別に説明する。 証明</description></item><item><title>中心角が小さい場合、弧の長さと弦の長さが近似的であることを証明する</title><link>https://freshrimpsushi.github.io/jp/posts/913/</link><pubDate>Wed, 20 Feb 2019 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/913/</guid><description>定理 中心角 $\theta$が十分に小さい場合、弦の長さと弧の長さは近似する。$\theta \rightarrow 0$の時 $$\overline{AB} \approx \stackrel\frown{AB}$$ 証明 上の図で、弦の長さは $$\overline{AB} =2\overline{AM}=2r\sin \frac{\theta}{2}$$ 中心</description></item><item><title>ルジャンドル多項式のロドリゲスの公式</title><link>https://freshrimpsushi.github.io/jp/posts/895/</link><pubDate>Wed, 13 Feb 2019 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/895/</guid><description>公式 ルジャンドル多項式の明示的explicitな公式は以下の通りです。 $$ P_{l}(x)=\dfrac{1}{2^{l} l!} \dfrac{d^{l}}{dx^{l}}(x^{2}-1)^{l} \tag{1} $$ 説明 $l$番目のルジャンドル多項式を得る公式であり、これを</description></item><item><title>ルジャンドル微分方程式の直列解法：ルジャンドル多項式</title><link>https://freshrimpsushi.github.io/jp/posts/889/</link><pubDate>Mon, 11 Feb 2019 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/889/</guid><description>定義1 以下の微分方程式をルジャンドルLegendre微分方程式と言う。 $$ (1-x^2)\dfrac{d^2 y}{dx^2} -2x\dfrac{dy}{dx}+l(l+1) y=0 $$ ルジャンドル微分方程式の解をルジャンドル多項式と言い、通常</description></item><item><title>ライプニッツの定理の証明</title><link>https://freshrimpsushi.github.io/jp/posts/884/</link><pubDate>Sun, 10 Feb 2019 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/884/</guid><description>定理 $$ \dfrac{d}{dx} (fg)=\dfrac{df}{dx}g+f\dfrac{dg}{dx} $$ $$ \begin{align*} \dfrac{d^n}{dx^n}(fg)&amp;amp;=\sum \limits_{k=0}^{n}\frac{n!}{(n-k)!k!}\dfrac{d^{n-k}f}{dx^{n-k}}\dfrac{d^k g}{dx^k} \\ &amp;amp;=\sum \limits_{k=0}^{n}{}_{n}\mathrm{C}_{k} \dfrac{d^{n-k}f}{dx^{n-k}}\dfrac{d^k g}{dx^k} \\ &amp;amp;=\sum \limits_{k=0}^{n} \binom{n}{k} \dfrac{d^{n-k}f}{dx^{n-k}}\dfrac{d^k g}{dx^k} \end{align*} $$ 説明 ライプニッツの法則Leibniz&amp;rsquo;s ruleとしても知られている。 最初の式は</description></item><item><title>級数、無限級数</title><link>https://freshrimpsushi.github.io/jp/posts/886/</link><pubDate>Sun, 10 Feb 2019 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/886/</guid><description>定義1 数列 $\left\{ a_{n} \right\}$が与えられたとしよう。そして、以下の記法を定義しよう。 $$ \sum \limits_{n=p}^{q} a_{n} = a_{p} + a_{p+1} + \cdots + a_{q}\quad (p \le q) $$ $\left\{ a_{n} \right\}$</description></item><item><title>フーリエ級数とベッセルの不等式</title><link>https://freshrimpsushi.github.io/jp/posts/3041/</link><pubDate>Fri, 08 Feb 2019 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/3041/</guid><description>式 区間$[-L,L)$で定義された関数$f$がリーマン積分可能であれば、以下の不等式が成り立ち、これをベッセルの不等式と言う。 $$ \dfrac{1}{4}|a_{0}|^{2} +\dfrac{1}{2}\sum\limits_{n=1}^{\infty} \left(|a_{n}|^{2} + |b_{n}|^{2} \right)</description></item><item><title>ヘヴィサイド階段関数を微分するとディラックのデルタ関数になることの証明</title><link>https://freshrimpsushi.github.io/jp/posts/878/</link><pubDate>Fri, 08 Feb 2019 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/878/</guid><description>定理 ヘビサイド階段関数の導関数はディラックのデルタ関数である。 $$ \dfrac{dH}{dx}=\delta (x) $$ この時、$H=H(x)$はヘビサイド階段関数Heaviside step fun</description></item><item><title>ラプラシアン演算子が2回登場する方程式、2階の偏微分</title><link>https://freshrimpsushi.github.io/jp/posts/876/</link><pubDate>Fri, 08 Feb 2019 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/876/</guid><description>解説 $T$をスカラー関数、$\mathbf{A}$をベクトル関数としよう。 グラディエントのダイバージェンス: $\nabla \cdot (\nabla T) = \dfrac{\partial^{2} T}{\partial x^{2}} + \dfrac{\partial ^{2} T} {\partial y^{2}} + \dfrac{\partial</description></item><item><title>変数分離法を用いた円筒座標系におけるジェット軸に無関係なラプラス方程式の解法</title><link>https://freshrimpsushi.github.io/jp/posts/873/</link><pubDate>Sun, 03 Feb 2019 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/873/</guid><description>定理 円柱座標系で円筒対称性cylindrical symmetryがある時のラプラス方程式の一般解は次の通りである。 $$ V(s,\phi) = A_{0} \ln s +B_{0} +\sum \limits _{k=1} ^\infty ( A_{k}</description></item><item><title>球座標系における方位角に依存しないラプラス方程式の解法：変数分離法を使用</title><link>https://freshrimpsushi.github.io/jp/posts/872/</link><pubDate>Sat, 02 Feb 2019 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/872/</guid><description>定理 球座標系での方位角対称性がある場合のラプラス方程式の一般解は以下のとおりである。 $$ V(r,\theta) = \sum \limits_{l=0} ^\infty \left( A_{l} r^l + \dfrac{B_{l}}{r^{l+1} } \right) P_{l}(\cos \theta) $$ 証明 ステップ 0 境界条件が</description></item><item><title>置換を用いた非同次オイラー微分方程式の解法</title><link>https://freshrimpsushi.github.io/jp/posts/871/</link><pubDate>Wed, 30 Jan 2019 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/871/</guid><description>定義 以下のように与えられた微分方程式をオイラー微分方程式Euler differential equationと呼ぶ。 $$ \begin{align} &amp;amp;&amp;amp; a_2 x^2 \dfrac{d^2 y}{d x^2} + a_{1} x \dfrac{dy}{dx} + a_{0} y &amp;amp;= f(x) \label{eq1} \\ \mathrm{or}&amp;amp;&amp;amp; a_2 x^2 y^{\prime \prime}</description></item><item><title>積分可能性は二つの関数の乗算で保存される</title><link>https://freshrimpsushi.github.io/jp/posts/854/</link><pubDate>Wed, 23 Jan 2019 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/854/</guid><description>定理1 二つの関数 $f$ と $g$ が区間 $[a,b]$ でリーマン(-スティルチェス)積分可能であれば、$fg$も積分可能である。 証明 $f, g$が積分可能だとする。積分は</description></item><item><title>積分可能性は連続関数との合成で保存される</title><link>https://freshrimpsushi.github.io/jp/posts/853/</link><pubDate>Tue, 22 Jan 2019 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/853/</guid><description>この文章は、リーマン・スティルチェス積分を基準にして書かれている。それを$\alpha=\alpha (x)=x$とすると、リーマン積分と同じ</description></item><item><title>単調関数はリーマン・スティルチェス積分可能である</title><link>https://freshrimpsushi.github.io/jp/posts/849/</link><pubDate>Mon, 21 Jan 2019 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/849/</guid><description>リーマン積分について 関数$f$が$[a,b]$で単調だとしよう。その場合、$f$はリーマン積分可能である。 証明 $f$が単調増加関数1であると</description></item><item><title>連続関数はリーマン-スティルチェス可積分である</title><link>https://freshrimpsushi.github.io/jp/posts/847/</link><pubDate>Sat, 19 Jan 2019 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/847/</guid><description>= この記事はリーマン・スティルチェス積分を基準に書かれている。$\alpha=\alpha (x)=x$と設定した場合、リーマン積分と同じであ</description></item><item><title>ポテンシャルの性質</title><link>https://freshrimpsushi.github.io/jp/posts/846/</link><pubDate>Fri, 18 Jan 2019 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/846/</guid><description>電位の基準点1 電位の定義は次の通りだ。 $$ V(\mathbf{r} ) \equiv - \int _\mathcal{O} ^{\mathbf{r}} \mathbf{E} \cdot d \mathbf{l} $$ したがって、基準点$\mathcal{O}$によって、その値が変わる可能性が</description></item><item><title>ポテンシャル</title><link>https://freshrimpsushi.github.io/jp/posts/845/</link><pubDate>Thu, 17 Jan 2019 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/845/</guid><description>説明1 電界は常にカール(回転)が$\mathbf{0}$になる特別なベクトル関数だ。この特性から、電場$\mathbf{E}$に関連する電位</description></item><item><title>電場の回転</title><link>https://freshrimpsushi.github.io/jp/posts/844/</link><pubDate>Wed, 16 Jan 2019 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/844/</guid><description>定理 電場のカール（回転）は常に$\mathbf{0}$である。 $$ \nabla \times \mathbf{E} = \mathbf{0} $$ 証明1 点電荷が原点にある特別な場合の結果から一般的な結果を導くこ</description></item><item><title>積分形式のガウスの法則の応用</title><link>https://freshrimpsushi.github.io/jp/posts/640/</link><pubDate>Tue, 15 Jan 2019 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/640/</guid><description>説明1 ガウスの法則は、電場を非常に簡単に計算できるが、常にそうとは限らない。ガウスの法則自体は常に成り立つが、数式的な利点は特定の状況でのみ</description></item><item><title>電場の発散</title><link>https://freshrimpsushi.github.io/jp/posts/839/</link><pubDate>Tue, 15 Jan 2019 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/839/</guid><description>公式1 体積電荷密度が$\rho$の体積電荷が作る電場 $\mathbf{E}$のダイバージェンスは以下の通りである。 $$ \nabla \cdot \mathbf{E} = \dfrac{1}{\epsilon_{0}} \rho ( \mathbf{r} ) $$ 説明</description></item><item><title>電気フラックスとガウスの法則</title><link>https://freshrimpsushi.github.io/jp/posts/635/</link><pubDate>Tue, 15 Jan 2019 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/635/</guid><description>定義1 面 $\mathcal S$を通過する電場 $\mathbf{E}$のフラックスを以下のように定義する。 $$ \Phi_{E} \equiv \int_{\mathcal S} \mathbf{E} \cdot d\mathbf{a} $$ これから、$\mathcal{S}</description></item><item><title>分離ベクトルの発散</title><link>https://freshrimpsushi.github.io/jp/posts/837/</link><pubDate>Mon, 14 Jan 2019 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/837/</guid><description>式 $$ \begin{align*} \nabla \cdot \left( \dfrac{1}{r^2}\hat{ \mathbf{r} } \right) =&amp;amp;\ 4\pi \delta^3(\mathbf{r}) \\[1em] \nabla \cdot \left( \dfrac{1}{\cR^{2}} \crH \right) =&amp;amp;\ 4\pi \delta^3(\bcR) \\[1em] \nabla^2 \left(\dfrac{1}{\cR} \right) =&amp;amp;\ -4\pi \delta^3 ( \bcR ) \end{align*} $$ ここで、$\mathbf{r}$は位置ベクトル、$\bcR$は分離ベク</description></item><item><title>クーロンの法則と電場</title><link>https://freshrimpsushi.github.io/jp/posts/836/</link><pubDate>Sun, 13 Jan 2019 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/836/</guid><description>クーロンの法則1 固定された点電荷 $q$から距離$\cR$だけ離れたところにある試験電荷$Q$が受ける力をクーロン力といい、その式は次の通りで</description></item><item><title>傾きの基本定理</title><link>https://freshrimpsushi.github.io/jp/posts/835/</link><pubDate>Sat, 12 Jan 2019 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/835/</guid><description>定理 $T$を3次元スカラー関数としよう。$a, b$を3次元空間上の任意の点とする。$a$から点$b$への任意の経路に沿った$T$の総変化量は</description></item><item><title>リーマン（-スティルチェス）積分可能の必要十分条件</title><link>https://freshrimpsushi.github.io/jp/posts/833/</link><pubDate>Thu, 10 Jan 2019 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/833/</guid><description>この記事は、リーマン-シュティルチェス積分を基に書かれている。$\alpha=\alpha (x)=x$とすれば、リーマン積分と同じだ。 定理1</description></item><item><title>上積分は下積分以上である。</title><link>https://freshrimpsushi.github.io/jp/posts/831/</link><pubDate>Wed, 09 Jan 2019 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/831/</guid><description>この記事はリーマン-スティルチェス積分を基に書かれています。$\alpha=\alpha (x)=x$とすると、リーマン積分と同じです。 定理1</description></item><item><title>細分화</title><link>https://freshrimpsushi.github.io/jp/posts/830/</link><pubDate>Wed, 09 Jan 2019 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/830/</guid><description>この投稿はリーマン-スティルチェス積分を基準に書かれている。$\alpha=\alpha (x)=x$と設定すれば、リーマン積分と同じだ。 定義</description></item><item><title>リーマン・スティルチェス積分</title><link>https://freshrimpsushi.github.io/jp/posts/829/</link><pubDate>Mon, 07 Jan 2019 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/829/</guid><description>概要 リーマン・スティルチェス積分は、リーマン積分を一般化したもので、簡単にスティルチェス積分とも呼ばれる。リーマン積分はリーマン・スティルチ</description></item><item><title>分割、リーマン和、リーマン積分</title><link>https://freshrimpsushi.github.io/jp/posts/828/</link><pubDate>Sat, 05 Jan 2019 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/828/</guid><description>分割1 区間$[a,b]$が与えられたとしよう。$[a,b]$の分割partition$P$を下のように定義する。 $$ P := \left\{ x_{0},\ x_{1},\ \cdots, x_{n}\right\},\quad a=x_{0} &amp;lt;x_{1}&amp;lt;\cdots &amp;lt; x_{n} =b $$</description></item><item><title>ディラックのデルタ関数のラプラス変換</title><link>https://freshrimpsushi.github.io/jp/posts/772/</link><pubDate>Sat, 29 Dec 2018 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/772/</guid><description>定理1 ディラックデルタ関数のラプラス変換は次のようになる。 $$ \mathcal{L} \left\{ \delta (t-t_{0}) \right\} = e^{-st_{0}} $$ 証明 上の図のように$d_\tau (t) = \dfrac{1}{2\tau}$$-\tau \le t \le \tau$と定義する</description></item><item><title>周期関数のラプラス変換</title><link>https://freshrimpsushi.github.io/jp/posts/773/</link><pubDate>Sat, 29 Dec 2018 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/773/</guid><description>公式 $f$を周期が$T$の周期関数としよう。すると$f(t+T)=f(t)$であり、$f(t)$のラプラス変換は以下のようになる。 $$ \mathcal{L} \left\{ f(t) \right\}</description></item><item><title>t^{n}f(t)のラプラス変換</title><link>https://freshrimpsushi.github.io/jp/posts/771/</link><pubDate>Thu, 15 Nov 2018 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/771/</guid><description>公式 関数 $f(t)$のラプラス変換が $\mathcal{L} \left\{ f(t) \right\} = \displaystyle \int _{0} ^\infty e^{-st}f(t)dt = F(s)$だとしよう。すると、$t^{n}f(t)$のラプラス変換は以下のようにな</description></item><item><title>F(as+b)のラプラス逆変換</title><link>https://freshrimpsushi.github.io/jp/posts/767/</link><pubDate>Sat, 10 Nov 2018 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/767/</guid><description>公式1 関数$f(t)$のラプラス変換$\mathcal{L} \left\{ f(t) \right\}= \displaystyle \int _{0} ^\infty e^{-st}f(t)dt =F(s)$が$s&amp;gt;\alpha \ge 0$であるとき存在すると</description></item><item><title>f(ct)のラプラス変換</title><link>https://freshrimpsushi.github.io/jp/posts/765/</link><pubDate>Sat, 10 Nov 2018 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/765/</guid><description>公式1 関数 $f(t)$のラプラス変換 $\mathcal{L} \left\{ f(t) \right\} = \displaystyle \int _{0} ^\infty e^{-st}f(t)dt = F(s)$が $s&amp;gt;a \ge 0$であると仮定する。すると、$c &amp;gt;0$に対して $f(ct)</description></item><item><title>F(ks)のラプラス逆変換</title><link>https://freshrimpsushi.github.io/jp/posts/766/</link><pubDate>Sat, 10 Nov 2018 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/766/</guid><description>式1 関数 $f(t)$のラプラス変換 $\mathcal{L} \left\{ f(t) \right\} = \displaystyle \int _{0} ^\infty e^{-st}f(t)dt = F(s)$が $s&amp;gt;a \ge 0$であるとしよう。それならば、正の数 $k&amp;gt; 0$に対して、$F(ks)$</description></item><item><title>n次導関数のラプラス変換</title><link>https://freshrimpsushi.github.io/jp/posts/762/</link><pubDate>Sat, 10 Nov 2018 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/762/</guid><description>定理1 以下の2つの条件を仮定する。 任意の区間 $0 \le t \le A$において、関数 $f$, $f^{\prime}$, $\cdots$, $f^{(n-1)}$が連続であり、n階導関数 $f^{(n)}(</description></item><item><title>ラプラス変換の平行移動</title><link>https://freshrimpsushi.github.io/jp/posts/764/</link><pubDate>Sat, 10 Nov 2018 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/764/</guid><description>公式1 関数 $f(t)$ のラプラス変換 $F(s)=\mathcal{L} \left\{ f(t) \right\}$ が $s&amp;gt;a$ として存在するとする。すると、定数 $c$ に対して次が成立する。 $$ \begin{align*} \mathcal{L} \left\{ e^{ct}f(t) \right\}&amp;amp;=F(s-c), &amp;amp;s&amp;gt;a+c \\ \mathcal{L^{-1}} \left\{ F(s-c) \right\}&amp;amp;=e^{ct}f(t) &amp;amp; \end{align*} $$ 説明 $f$ に指数関</description></item><item><title>ラプラス変換を用いた2次線形非同次微分方程式の解法</title><link>https://freshrimpsushi.github.io/jp/posts/763/</link><pubDate>Sat, 10 Nov 2018 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/763/</guid><description>定理1 $$ ay^{\prime \prime} + by^{\prime} + cy = g(t) $$ このような二次線形非同次微分方程式が与えられたとする。そして、$\mathcal{L} \left\{ y \right\} =Y(s)$、$\ma</description></item><item><title>一階導関数のラプラス変換</title><link>https://freshrimpsushi.github.io/jp/posts/760/</link><pubDate>Sat, 10 Nov 2018 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/760/</guid><description>定理1 次の二つの条件を仮定しよう。 任意の区間 $0 \le t \le A$で関数 $f(t)$が連続であり、1次導関数 $f^{\prime}(t)$が部分的に連</description></item><item><title>ステップ関数のラプラス変換</title><link>https://freshrimpsushi.github.io/jp/posts/758/</link><pubDate>Fri, 09 Nov 2018 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/758/</guid><description>定義1 単位階段関数を$c$だけ平行移動したものを以下のように表そう。 $$ u_{c}(t)=\begin{cases} 0 &amp;amp; t&amp;lt;c \\ 1 &amp;amp; t \ge c \end{cases} $$ 公式 階段関数$u_{c}(t)$のラプラス変換</description></item><item><title>ラプラス変換の定義と存在証明</title><link>https://freshrimpsushi.github.io/jp/posts/761/</link><pubDate>Fri, 09 Nov 2018 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/761/</guid><description>証明 仮定2. により、$t \ge M$について$|f(t)| \le Ke^{at}$が成り立つ。両辺に$e^{-st}$を掛けると $$ |e^{-st}f(t)| \le Ke^{-(s-a)t} $$ 補助定理1 以下</description></item><item><title>階段関数</title><link>https://freshrimpsushi.github.io/jp/posts/757/</link><pubDate>Fri, 09 Nov 2018 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/757/</guid><description>定義 部分ごとに定数関数である関数をステップ関数と呼ぶ。 説明 上の図のように階段のような形をしているのでステップ関数と呼ばれる。最初に提案した人</description></item><item><title>ラプラス変換の線形性</title><link>https://freshrimpsushi.github.io/jp/posts/749/</link><pubDate>Sun, 04 Nov 2018 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/749/</guid><description>定理1 $f_{1}$と$f_2$をラプラス変換が存在する関数としよう。そして、$c_{1}, c_2$を任意の定数とする。そうすると $$ \mathcal{L} \left\{ c_{1}f_{1} +</description></item><item><title>ラプラス変換の表</title><link>https://freshrimpsushi.github.io/jp/posts/743/</link><pubDate>Sun, 04 Nov 2018 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/743/</guid><description>公式1 これはラプラス変換の表です。 $f(t)=\mathcal{L^{-1}}$ $F(s)=\mathcal{L} \left\{ f(t) \right\}$ 導く정 $1$ $\dfrac{1}{s}$ link $e^{at}$ $\dfrac{1}{s-a}$ link $t^n$ $\dfrac{n!}{s^{n+1}}$ link $t^{p}$ $\dfrac{ \Gamma (p+1) }{ s^{p+1}}$ link $t^{p}e^{at}$ $\dfrac{ \Gamma (p+1) }{ (s-a)^{p+1}}$ link $\sin (at)$ $\dfrac{a}{s^2+a^2}$ link $\cos (at)$ $\dfrac{s}{s^2+a^2}$ link $e^{at}\sin(bt)$ $\dfrac{b}{(s-a)^2 +b^2}$ link $e^{at}\cos(bt)$ $\dfrac{s-a}{(s-a)^2+b^2}$ link $\sinh (at)$ $\dfrac{a}{s^2-a^2}$ link $\cosh (at)$ $\dfrac{s}{s^2-a^2}$</description></item><item><title>三角関数のラプラス変換</title><link>https://freshrimpsushi.github.io/jp/posts/746/</link><pubDate>Sun, 04 Nov 2018 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/746/</guid><description>公式1 サインとコサインのラプラス変換は以下の通りだ。 $$ \mathcal{L} \left\{ \sin (at) \right\} = \dfrac{a}{s^2+a^2},\quad s&amp;gt;0 $$ $$ \mathcal{L} \left\{ \cos (at) \right\} = \dfrac{s}{s^2+a^2},\quad s&amp;gt;0 $$ 導出 $\sin (at)$ $$ \begin{align*} \mathcal{L} \left\{ \sin (at) \right\}&amp;amp; =\displaystyle \int_{0}^\infty e^{-st}\sin(at)dt \\ &amp;amp;= \lim \limits_{A \to \infty} \left[-\dfrac{1}{a}e^{-st}\cos (at) \right]_{0}^A+ \lim</description></item><item><title>双曲線関数のラプラス変換</title><link>https://freshrimpsushi.github.io/jp/posts/751/</link><pubDate>Sun, 04 Nov 2018 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/751/</guid><description>公式1 双曲線正弦関数と双曲線余弦関数のラプラス変換は以下の通りである。 $$ \mathcal{L} \left\{ \sinh (at) \right\} = \dfrac{a}{s^2-a^2},\quad s&amp;gt;|a| \\ \mathcal{L} \left\{ \cosh (at) \right\} = \dfrac{s}{s^2-a^2},\quad s&amp;gt;|a| $$ 説明 双曲関数の定義は以下の通りで</description></item><item><title>多項関数のラプラス変換</title><link>https://freshrimpsushi.github.io/jp/posts/747/</link><pubDate>Sun, 04 Nov 2018 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/747/</guid><description>式1 $$ \mathcal{L} \left\{ t^p \right\} = \dfrac{ \Gamma (p+1) } {s^{p+1}},\quad s&amp;gt;0 $$ 説明 多項式のラプラス変換はガンマ関数で表される。 $t^p$の代わりに馴染みやすい形である$x^p$とすれば、一</description></item><item><title>定数関数のラプラス変換</title><link>https://freshrimpsushi.github.io/jp/posts/745/</link><pubDate>Sun, 04 Nov 2018 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/745/</guid><description>公式1 $$ \mathcal{L} \left\{ 1 \right\} = \dfrac{1}{s},\quad s&amp;gt;0 $$ 導出 $$ \begin{align*} \mathcal{L}\left\{ 1 \right\} &amp;amp;= \int _{0}^\infty e^{-st} \cdot 1 dt \\ &amp;amp;= \lim \limits_{A \to \infty} \left[ -\dfrac{e^{-st}}{s} \right]_{0}^A \\ &amp;amp;= \lim \limits_{A \to \infty} \left[ -\dfrac{e^{-sA}}{s} +\dfrac{e^{-0t}}{s} \right] \\ &amp;amp;= \dfrac{1}{s} \end{align*} $$ ここで、$\lim \limits_{A \to \infty}\dfrac{e^{-sA}}{s}=0$ でなければならな</description></item><item><title>指数関数のラプラス変換</title><link>https://freshrimpsushi.github.io/jp/posts/750/</link><pubDate>Sun, 04 Nov 2018 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/750/</guid><description>式1 $$ \mathcal {L} \left\{ e^{at} \right\} = \dfrac{1}{s-a},\quad s&amp;gt;a $$ 説明 定数関数のラプラス変換の結果と比較しよう。 $$ \mathcal{L} \left\{ 1 \right\} =\dfrac{1}{s} $$ $e^{at}$のラプラス変換の結果は、$f(t)=1$</description></item><item><title>抽象代数学における環</title><link>https://freshrimpsushi.github.io/jp/posts/587/</link><pubDate>Wed, 03 Oct 2018 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/587/</guid><description>定義 1 二つの二項演算、足し算$+$と掛け算$\cdot$に関して以下のルールを満たす集合$R$を環と定義する。 $a$、$b$、$c$が$R$</description></item><item><title>環における乗法のルール</title><link>https://freshrimpsushi.github.io/jp/posts/588/</link><pubDate>Wed, 03 Oct 2018 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/588/</guid><description>定理 $a,\ b,\ c$が環$R$の元であり、$0$が加算に関する単位元である場合、以下の性質が成り立つ。 $a0=0a=0$ $a(-b)=(-a)b=-(ab)$ $(-a)(-b)=ab$ $a(b-c)=ac-ac \ \ \And\ \ (b-c)a=ba-ca$ 乗算に関する単位元$1$が存</description></item><item><title>部分環の定義と部分環判定法</title><link>https://freshrimpsushi.github.io/jp/posts/590/</link><pubDate>Wed, 03 Oct 2018 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/590/</guid><description>定義 1 環 $R$の部分集合 $S$が環 $R$の演算に対して環の条件を満たすとき、$S$を環 $R$の部分環subring という。 一方、$\left</description></item><item><title>剰余類の性質とその証明</title><link>https://freshrimpsushi.github.io/jp/posts/691/</link><pubDate>Fri, 21 Sep 2018 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/691/</guid><description>定理 $H$を$G$の部分群だとしよう。すると、群$G$の元$a$に対して、集合$aH= \left\{ ah | h\in H \right\}$を左剰余類といい、$Ha =</description></item><item><title>2桁の数で末尾が5である数の累乗を簡単にする</title><link>https://freshrimpsushi.github.io/jp/posts/661/</link><pubDate>Tue, 14 Aug 2018 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/661/</guid><description>数式 一の位が5の二桁の数の二乗は、上の写真に示されているように、速く簡単に計算することができる。結果だけを知って利用してもいいが、なぜこのよ</description></item><item><title>擬似ベクトルとは</title><link>https://freshrimpsushi.github.io/jp/posts/641/</link><pubDate>Tue, 24 Jul 2018 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/641/</guid><description>説明 物理を勉強していると、擬ベクトルまたは軸ベクトルという言葉に出くわすかもしれない。重要なのは、擬ベクトルに出くわしても、何であるか理解す</description></item><item><title>数学及び物理学の教科書におけるWとΩの区別</title><link>https://freshrimpsushi.github.io/jp/posts/611/</link><pubDate>Tue, 10 Jul 2018 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/611/</guid><description>説明 物理学や数学の専門書を読んでいると、その文字がオメガかダブリューか混同しやすい。専攻科目を勉強し始めたばかりの2年生の場合、オメガの存在</description></item><item><title>部分群の定義と部分群の判定法</title><link>https://freshrimpsushi.github.io/jp/posts/589/</link><pubDate>Sat, 23 Jun 2018 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/589/</guid><description>定義1 群 $G$ の部分集合 $H$ が群 $G$ の演算に関して群であるとき、$H$ を群 $G$ の 部分群subgroupという。次のように表記する。 $$ H \le G $$ 説明 $H$ が $G$</description></item><item><title>ガウスの定理, 発散定理</title><link>https://freshrimpsushi.github.io/jp/posts/565/</link><pubDate>Sat, 12 May 2018 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/565/</guid><description>定理1 3次元ベクトル関数$\mathbf{F}$について、以下が成り立つ。 $$ \begin{equation} \int_{\mathcal{V}} \nabla \cdot \mathbf{F} dV = \oint_{\mathcal{S}} \mathbf{F} \cdot d \mathbf{S} \label{1} \end{equation} $$ ここで、$\nabla \cdot \math</description></item><item><title>クレロの微分方程式の解</title><link>https://freshrimpsushi.github.io/jp/posts/556/</link><pubDate>Thu, 10 May 2018 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/556/</guid><description>定義 以下の1次の非線形微分方程式をクレロ方程式Clairaut equationという。 $$ y=xy^\prime+f(y^\prime ) $$ 説明 クレロ微分方程式は、ベルヌーイ微分方程式や</description></item><item><title>リッカチ微分方程式の解</title><link>https://freshrimpsushi.github.io/jp/posts/555/</link><pubDate>Wed, 09 May 2018 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/555/</guid><description>定義 下記の1階非線形微分方程式をリカッチ方程式Ricatti equationという。 $$ y^\prime = P(x)y+Q(x)y^2+R(x) $$ 説明 $y_{1}$を既に知ってる特別解part</description></item><item><title>ベルヌーイ微分方程式の解法</title><link>https://freshrimpsushi.github.io/jp/posts/554/</link><pubDate>Mon, 07 May 2018 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/554/</guid><description>定義 下の1階非線形微分方程式をベルヌーイ方程式Bernoulli equationと呼ぶ。 $$ y^\prime + p(x)y = q(x)y^n $$ この時、$n$は$2$以上の整数で、$</description></item><item><title>二階微分方程式の第二解を求める方法</title><link>https://freshrimpsushi.github.io/jp/posts/553/</link><pubDate>Sun, 06 May 2018 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/553/</guid><description>説明1 $$ \begin{equation} y^{\prime \prime }+p(t)y^{\prime} + q(t)y=0 \end{equation} $$ 上のような微分方程式が与えられて、一つの解 $y_{1}$を知っているとする。一般解を$y(t)=\nu (t) y_{1}(</description></item><item><title>二階線形非同次微分方程式の一般解</title><link>https://freshrimpsushi.github.io/jp/posts/547/</link><pubDate>Fri, 04 May 2018 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/547/</guid><description>補助定理1 以下の非同次/同次二階線形微分方程式を考えよう。 $$ \begin{align} y^{\prime \prime}+p(t)y^\prime + q(t)y &amp;amp;=g(t) \label{eq1} \\ y^{\prime \prime}+p(t)y^\prime + q(t)y &amp;amp;=0 \label{eq2} \end{align} $$ ここで、$y_{1} (t)$と$y_{2} (t)</description></item><item><title>2次の斉次線形微分方程式の解の基本集合とロンスキアン</title><link>https://freshrimpsushi.github.io/jp/posts/546/</link><pubDate>Thu, 03 May 2018 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/546/</guid><description>説明 $$ ay^{\prime \prime}+ by^\prime +cy=0 $$ 上に与えられたような2階線型同次微分方程式を考えよう。微分演算子を$D := \dfrac{d}{dx}$と定義すれば、$\dfr</description></item><item><title>同次微分方程式における同次の意味</title><link>https://freshrimpsushi.github.io/jp/posts/545/</link><pubDate>Wed, 02 May 2018 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/545/</guid><description>説明 $$ a_{n}(x)\dfrac{d^ny}{dx^n}+a_{n-1}(x)\dfrac{d^{n-1}y}{dx^{n-1}}+ \cdots + a_{1}(x)\dfrac{dy}{dx}+a_{0}(x)y=f(x) $$ 微分方程式が上に示されているように、$f(x)=0$であれば同次homogeneous、$f(x) \ne 0$でなければ非同次no</description></item><item><title>二次同次微分方程式の解</title><link>https://freshrimpsushi.github.io/jp/posts/544/</link><pubDate>Tue, 01 May 2018 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/544/</guid><description>定理1 $$ ay^{\prime \prime} + by^\prime + cy=0 $$ 上で与えられた微分方程式の特性方程式 $ar^2+br+c=0$の解を$r_{1}$、$r_2$としよう。すると、 $\text{1.}$ $r</description></item><item><title>復元力と一次元単純調和振動子</title><link>https://freshrimpsushi.github.io/jp/posts/543/</link><pubDate>Mon, 30 Apr 2018 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/543/</guid><description>単純調和運動1 バネに吊り下げられた物体の運動を考えてみよう。バネの復元力によって前後に振動する。このような運動を調和振動と呼ぶ。調和振動を表</description></item><item><title>定数係数の2階線形同次微分方程式と特性方程式</title><link>https://freshrimpsushi.github.io/jp/posts/540/</link><pubDate>Fri, 27 Apr 2018 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/540/</guid><description>定理1 定数係数の2次線形同次微分方程式$a y^{\prime \prime} + by^\prime +cy=0$の一般解は、以下の通りである。 $$ y(x)=A e^{r_{1} x}+Be^{r_2 x} $$ この時、$r_{1,2}=\dfra</description></item><item><title>同次線形微分方程式の解の線形結合も解であることの証明</title><link>https://freshrimpsushi.github.io/jp/posts/542/</link><pubDate>Thu, 26 Apr 2018 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/542/</guid><description>要旨1 $y_{1}, y_{2}$が$ay^{\prime \prime}+by^\prime +cy=0$の解であれば$d_{1}y_{1} + d_{2}y_{2}$も解である。この時、$d</description></item><item><title>三角関数の和差公式と積和公式</title><link>https://freshrimpsushi.github.io/jp/posts/539/</link><pubDate>Wed, 25 Apr 2018 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/539/</guid><description>合成/乗算の公式は頻繁には使われないから、倍角/半角の公式ほど重要ではない。しかし、それで全く必要ないわけではない。導出過程がとても簡単だか</description></item><item><title>流体上に物体が置かれた時の深さに応じた流体の圧力</title><link>https://freshrimpsushi.github.io/jp/posts/533/</link><pubDate>Mon, 16 Apr 2018 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/533/</guid><description>説明 簡単に言うと、液体の上に物体がある場合、深さによる圧力は、深さによる液体の圧力を求める場合、$P_{0}$の代わりに${P_{0} }^\</description></item><item><title>深さに応じた流体の圧力を算出する公式</title><link>https://freshrimpsushi.github.io/jp/posts/520/</link><pubDate>Tue, 10 Apr 2018 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/520/</guid><description>公式 液体の表面から垂直距離$h$のところの圧力、つまり深さが$h$の場所の液体の圧力$P_{h}$は、以下の通りである。 $$ P_{h}=P_{0}+\rho g h $$ この時、$</description></item><item><title>流体の圧力</title><link>https://freshrimpsushi.github.io/jp/posts/519/</link><pubDate>Mon, 09 Apr 2018 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/519/</guid><description>定義 流体が単位面積当たりに作用する力を圧力pressureと言う。$F$を力、$A$を力が作用する面積、$P$を圧力としよう。そうすると, $$</description></item><item><title>1階線形微分方程式の積分因子法</title><link>https://freshrimpsushi.github.io/jp/posts/515/</link><pubDate>Sun, 08 Apr 2018 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/515/</guid><description>概要1 一次線形微分方程式 $\dfrac{dy}{dx}+p(x)y=q(x)$の解は次のように与えられる。 $$ \begin{align*} y(x)&amp;amp;=\dfrac{1}{e^{\int p(x) dx}} \left[ \int e^{\int p(x) dx} q(x) dx +C \right] \\ &amp;amp;=e^{-\int p(x)</description></item><item><title>完全微分方程式の定義と判別法</title><link>https://freshrimpsushi.github.io/jp/posts/516/</link><pubDate>Sun, 08 Apr 2018 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/516/</guid><description>定義 次のように与えられた微分方程式 $\psi=\psi (x,y)$ で $\psi (x,y)$ を満たす$\psi=\psi (x,y)$が存在する場合、完全exact 微分方程式と言います。 説明</description></item><item><title>完全微分方程式の解法</title><link>https://freshrimpsushi.github.io/jp/posts/517/</link><pubDate>Sun, 08 Apr 2018 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/517/</guid><description>解答 与えられた完全微分方程式 $M(x,y)+N(x,y)\dfrac{dy}{dx}=0$の解は次の通りだ。 ステップ 0. 与えられた微分方程式が</description></item><item><title>球殻の慣性モーメント</title><link>https://freshrimpsushi.github.io/jp/posts/243/</link><pubDate>Sat, 07 Apr 2018 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/243/</guid><description>公式 半径が$a$、質量が$m$の球殻の慣性モーメントは以下のようになる。 $$ I=\frac{2}{3}ma^{2} $$ 導出 半径が$a$で質量が$m$の均一な球殻を考えてみよう。球の</description></item><item><title>ソックス-シューズの性質: abの逆元はbの逆元とaの逆元の積と等しい</title><link>https://freshrimpsushi.github.io/jp/posts/513/</link><pubDate>Wed, 04 Apr 2018 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/513/</guid><description>定理 1 任意の群 $G$の元 $a,b$に対して、$(ab)^{-1}=b^{-1}a^{-1}$である。 証明 $(ab)^{-1}$は $ab$の逆</description></item><item><title>デカルト座標系におけるベクトル、内積、外積の微分</title><link>https://freshrimpsushi.github.io/jp/posts/506/</link><pubDate>Mon, 02 Apr 2018 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/506/</guid><description>公式 $\mathbf{A} = A_{x}\hat{\mathbf{x}} + A_{y}\hat{\mathbf{y}} + A_{z}\hat{\mathbf{z}}, \mathbf{B} = B_{x}\hat{\mathbf{x}} + B_{y}\hat{\mathbf{y}} + B_{z}\hat{\mathbf{z}}$を3次元直交座標系でのベクトルとしよう。$n$を任意のスカラーとす</description></item><item><title>物理学における運動エネルギーとポテンシャルエネルギーの定義</title><link>https://freshrimpsushi.github.io/jp/posts/507/</link><pubDate>Mon, 02 Apr 2018 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/507/</guid><description>運動エネルギー1 力が位置にのみ依存する時、つまり速度や時間に対して独立している時、粒子の直線運動の運動方程式（微分方程式）は以下のようになる</description></item><item><title>同次関数と1階微分方程式</title><link>https://freshrimpsushi.github.io/jp/posts/505/</link><pubDate>Sun, 01 Apr 2018 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/505/</guid><description>証明 $$ f(x,y)dx+g(x,y)dy=0 $$ ここで$y \equiv ux$と置換すると$u=\dfrac{y}{x}$、$dy=udx+xdu$なので、与えられた微分方程式は次のようにな</description></item><item><title>線膨張係数と体積膨張係数</title><link>https://freshrimpsushi.github.io/jp/posts/504/</link><pubDate>Sun, 01 Apr 2018 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/504/</guid><description>線膨張係数 線膨張係数とは、固体が熱を受けて膨張した時、固体の単位長さ当たりの長さの変化を言い、次のようだ。 $$ \alpha = \dfrac{\Delta L}{L} \dfrac{1}{\Delta T} \left[ ^\circ \mathrm{C} ^{-1} \right] $$ ここで、</description></item><item><title>ヴロンスキアンの定義と線形独立の判断</title><link>https://freshrimpsushi.github.io/jp/posts/501/</link><pubDate>Sat, 31 Mar 2018 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/501/</guid><description>定義1 $S=\left\{ f_{1}, f_{2}, \dots, f_{n} \right\}$が$n-1$回まで微分可能な関数の集合であるとする。このロンスキアンWronskian $W$を以下のような</description></item><item><title>分離可能な一階微分方程式</title><link>https://freshrimpsushi.github.io/jp/posts/503/</link><pubDate>Sat, 31 Mar 2018 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/503/</guid><description>定義1 1次微分方程式が下記の条件を満たす時、分離可能と言う。 $$ f(x)+g(y)\dfrac{dy}{dx}=0 \quad \text{or} \quad f(x)dx = -g(y)dy $$ 説明 色々な形で表現できるが、大事な点は両辺に各変数が分離されな</description></item><item><title>e^{x^2}形の不定積分</title><link>https://freshrimpsushi.github.io/jp/posts/487/</link><pubDate>Thu, 22 Mar 2018 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/487/</guid><description>定理 $$ \int e^{x^2}dx = \sum\limits_{n=0}^\infty \dfrac{x^{2n+1}}{(2n+1)n!}+C $$ 説明 $e^{-x^{2}}$のように、一般的な方法では積分するのが難しい。エラー関数error function, imaginary error function, erfiを定義して積</description></item><item><title>サインの二乗プラスコサインの二乗が1に等しいことの証明</title><link>https://freshrimpsushi.github.io/jp/posts/482/</link><pubDate>Tue, 20 Mar 2018 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/482/</guid><description>公式 $$ \sin^2\theta+\cos^2\theta=1 $$ 証明 1-コサインの加法公式 コサインの加法定理を使えば、すごく簡単にわかる。 $$ \cos(\theta_{1}-\theta_2)=\cos\theta_{1}\cos\theta_2 + \sin\theta_{1}\sin\theta_2 $$ ここで、$\theta_{1}$, $\thet</description></item><item><title>三角関数の倍角公式と半角公式</title><link>https://freshrimpsushi.github.io/jp/posts/481/</link><pubDate>Tue, 20 Mar 2018 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/481/</guid><description>概要 寿司屋の店長が高校生だった時には、加法定理や倍角公式、和差公式まで教育課程にあったが、最近はないと聞いている。以下の公式はすべて加法公式</description></item><item><title>微分方程式の分類</title><link>https://freshrimpsushi.github.io/jp/posts/483/</link><pubDate>Tue, 20 Mar 2018 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/483/</guid><description>説明 微分方程式を分類する基準はいくつかある。大きく常微分方程式か偏微分方程式かで分けられる。その次に係数と次数、線形/非線形でさらに細かく分</description></item><item><title>微分方程式の定義と例</title><link>https://freshrimpsushi.github.io/jp/posts/479/</link><pubDate>Sat, 17 Mar 2018 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/479/</guid><description>定義 一つまたはそれ以上の従属変数を一つまたはそれ以上の独立変数に関して微分した導関数を含む等式を微分方程式differential equat</description></item><item><title>完全弾性衝突と運動エネルギーの保存</title><link>https://freshrimpsushi.github.io/jp/posts/466/</link><pubDate>Thu, 08 Mar 2018 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/466/</guid><description>定理 反発係数が $e$ が $1$ のとき、完全弾性衝突という。完全弾性衝突には重要な特徴が二つある。 (a) 衝突前後の各物体の運動エネルギー合計が保存される。 (b)</description></item><item><title>二つの物体の衝突と反発係数</title><link>https://freshrimpsushi.github.io/jp/posts/465/</link><pubDate>Tue, 06 Mar 2018 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/465/</guid><description>説明 二つの物体が衝突する時、その型を3つに分類することができる。 完全弾性衝突（弾性衝突） 非弾性衝突 完全非弾性衝突 分類基準は反発係数$e$だ。</description></item><item><title>運動量保存の法則：簡単な証明（高校レベル）</title><link>https://freshrimpsushi.github.io/jp/posts/464/</link><pubDate>Mon, 05 Mar 2018 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/464/</guid><description>定理 外力が作用しない場合、力（内力）の作用前後の運動量の総和は一定である。簡単に言えば、二つの物体が衝突する時、衝突前の各物体の運動量の合計</description></item><item><title>角運動量演算子の行列表現</title><link>https://freshrimpsushi.github.io/jp/posts/463/</link><pubDate>Sat, 03 Mar 2018 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/463/</guid><description>公式 角運動量演算子の行列表示は次の通りだ。$\ell = 1$のとき、$m = 1, 0, -1$だ。 $$ \underset{\normalsize L_{z} = }{\scriptsize} \begin{array}{cccc} \scriptstyle{m=1} &amp;amp; \scriptstyle m=0 &amp;amp; \scriptstyle m=-1 &amp;amp; \\ \hbar\left[ \begin{array}{c} 1 \\ 0 \\ 0 \end{array} \right. &amp;amp; \begin{array}{c} 0</description></item><item><title>調和振動子演算子の行列表現</title><link>https://freshrimpsushi.github.io/jp/posts/367/</link><pubDate>Mon, 18 Dec 2017 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/367/</guid><description>説明 調和 🚧 이 포스트는 아직 이관 작업이 완료되지 않았습니다 🚧 シュレディンガー方程式は線形方程式だから方程式を満たす複数の波動関数の線形結合も方程式</description></item><item><title>量子力学における演算子の行列表現</title><link>https://freshrimpsushi.github.io/jp/posts/366/</link><pubDate>Sun, 17 Dec 2017 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/366/</guid><description>ビルドアップ 2次元空間の二つの単位ベクトル$\widehat{\mathbf{x}} = (1, 0)$と$\widehat{\mathbf{y}} =</description></item><item><title>演算子法による調和振動子問題の解法：ラダー演算子の定義</title><link>https://freshrimpsushi.github.io/jp/posts/362/</link><pubDate>Wed, 13 Dec 2017 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/362/</guid><description>ビルドアップ 調和振動子のはしご演算子は$\mathrm{Ladder\ Operator}$に示されている。エネルギー演算子であるハミルトニア</description></item><item><title>無限ポテンシャル井戸におけるエネルギー準位</title><link>https://freshrimpsushi.github.io/jp/posts/361/</link><pubDate>Tue, 12 Dec 2017 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/361/</guid><description>🚧 이 포스트는 아직 이관 작업이 완료되지 않았습니다 🚧 無限ポテンシャル井戸での波動関数（固有関数）とエネルギー（固有値）を求めるには、ここを参考にし</description></item><item><title>量子力学における波動関数の縮退とは？</title><link>https://freshrimpsushi.github.io/jp/posts/307/</link><pubDate>Mon, 11 Dec 2017 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/307/</guid><description>定義 量子力学では、縮退degeneracyとは、異なる（=線形独立な）二つの波動関数が同じ固有値を持つことを意味する。 説明 簡単に言えば、二つ</description></item><item><title>エネルギーがポテンシャルより小さい時に時間に無関係なシュレーディンガー方程式の解は存在しない</title><link>https://freshrimpsushi.github.io/jp/posts/360/</link><pubDate>Wed, 06 Dec 2017 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/360/</guid><description>$$ \begin{align*} \int_{-\infty}^{\infty} |\psi|^2 dx &amp;amp;= \int_{-\infty}^{\infty} |Ae^{\kappa x}+Be^{-\kappa x}|^2 dx \\ &amp;amp;= \int_{-\infty}^{\infty} (A^2e^{2\kappa x}+2AB + B^2e^{-2\kappa x}) dx \\ &amp;amp;= \left[ \frac{A^2}{2\kappa} e^{2\kappa x}+2ABx + \frac{B^2}{-2\kappa} e^{-2\kappa x} \right]_{-\infty}^{\infty} \\ &amp;amp;= \infty \end{align*} $$ 解が二乗積分可能ではなく発散するので、これは$\psi$が物理的（量</description></item><item><title>角運動量の同時固有函数と階梯演算子の関係</title><link>https://freshrimpsushi.github.io/jp/posts/348/</link><pubDate>Tue, 28 Nov 2017 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/348/</guid><description>まとめ 角運動量演算子 $L^{2}$と $L_{z}$の固有値を $\ell(\ell+1)\hbar^{2}$と $m\hbar$ としよう。それぞれの固有値に対</description></item><item><title>二つのエルミート演算子の積がエルミート演算子になる条件</title><link>https://freshrimpsushi.github.io/jp/posts/347/</link><pubDate>Mon, 27 Nov 2017 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/347/</guid><description>整理 二つの演算子 $A$, $B$がエルミート演算子だとする。 $A$, $B$が可換であれば $AB$もエルミート演算子$Hermitian operator이다</description></item><item><title>角運動量のラダー演算子</title><link>https://freshrimpsushi.github.io/jp/posts/344/</link><pubDate>Sun, 26 Nov 2017 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/344/</guid><description>定義 各運動量演算子 $L_{z}$に対応するはしご演算子は次の通り。 $$ L_{+} := L_{x} + \i L_{y} \\ L_{-} := L_{x} - \i L_{y} $$ $L_{+}$を昇演算子raising ope</description></item><item><title>角運動量の同時固有関数</title><link>https://freshrimpsushi.github.io/jp/posts/343/</link><pubDate>Sun, 26 Nov 2017 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/343/</guid><description>定理 角運動量演算子 $L^{2}$ と $L_{z}$の 規格化された 同時固有関数を $\ket{l, m}$と表示しよう。これに対する固有値方程式は次の通り。 $$ \begin{align*} L^{2} \ket{\ell, m} &amp;amp;= \ell(\ell+1)\hbar^{2}\ket{\ell, m} \\</description></item><item><title>任意の演算子に対して常にエルミート形式</title><link>https://freshrimpsushi.github.io/jp/posts/327/</link><pubDate>Sun, 19 Nov 2017 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/327/</guid><description>式 任意の演算子 $A$ に対して、以下の形は常にエルミート演算子だ。 $$ A + A^{\dagger} \tag{1} $$ $$ \i (A - A^{\dagger}) \tag{2} $$ $$ A A^{\dagger} \tag{3} $$ 証明 元の式に共役転置 $^{\dagger}$</description></item><item><title>iの累乗とeの累乗の関係</title><link>https://freshrimpsushi.github.io/jp/posts/325/</link><pubDate>Fri, 17 Nov 2017 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/325/</guid><description>定理 自然定数 $e$と虚数 $i$の累乗は以下の関係を満たします。 $$ e^{i\frac{l \pi}{2}} = i^{l} $$ 証明 $e^{ i \frac{l \pi}{2}}=\cos\frac{l \pi}{2}+i\sin \frac{l \pi}{2}$であるため、$l=0$時、 $$ e^{ 0}= 1</description></item><item><title>同時固有関数を持つ二つの演算子は交換可能です。</title><link>https://freshrimpsushi.github.io/jp/posts/321/</link><pubDate>Tue, 14 Nov 2017 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/321/</guid><description>定理 異なる2つの演算子が同じ固有関数を持つと、2つの演算子は可換になる。つまり次の式が成立すると、$[A, B] = 0$ということだ。 $$ \begin{cases} A\psi=a\psi \\ B\psi=b\psi \end{cases}</description></item><item><title>異なる固有値を持つ2つの固有ベクトルは直交する。</title><link>https://freshrimpsushi.github.io/jp/posts/318/</link><pubDate>Sun, 12 Nov 2017 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/318/</guid><description>定理 任意のエルミート演算子$A$の異なる固有値に対する二つの固有関数は互いに直交している。 $$ \begin{cases} A\psi_{n}=a_{n}\psi_{n} \\ A\psi_{m}=a_{m}\psi_{m} \end{cases} $$ もし$a_{n} \ne a_{m}$の場合</description></item><item><title>量子力学における固有値方程式の意味</title><link>https://freshrimpsushi.github.io/jp/posts/306/</link><pubDate>Sat, 11 Nov 2017 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/306/</guid><description>定義 行列 $n\times n$ 行列 $A$が与えられるとする。この式を満たす$a$を固有値eigenvalue、零ベクトルでない$n\times 1$ベクトル $\</description></item><item><title>エルミート演算子の期待値固有値は常に実数であることの証明</title><link>https://freshrimpsushi.github.io/jp/posts/305/</link><pubDate>Fri, 10 Nov 2017 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/305/</guid><description>定理 エルミート演算子の期待値は常に実数だ。 証明 $A$をエルミート演算子としよう。$A$の期待値は $$ \braket{A \rangle = \int \psi^{\ast}A\psi dx = \langle \psi | A\psi} $$ 実数であることを示</description></item><item><title>エルミート演算子</title><link>https://freshrimpsushi.github.io/jp/posts/304/</link><pubDate>Thu, 09 Nov 2017 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/304/</guid><description>定義 演算子 $A$ が次の式を満たす時、 エルミート演算子エルミート演算子 と呼ぶ。 $$ A = A^{\dagger} $$ この時、 $A^{\dagger}$ は $A$ の 共役転置 だ。 説明 $A^{\dagger}$ は [エーダガー(A dagger)] と読</description></item><item><title>ディラック記法とは何ですか?</title><link>https://freshrimpsushi.github.io/jp/posts/303/</link><pubDate>Wed, 08 Nov 2017 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/303/</guid><description>定義 量子力学では波動関数はベクトルであり、基本的に列ベクトルとして扱われる。列ベクトルは右の単一角括弧で表記され、これをケットベクトルket</description></item><item><title>ベクトル空間の次元</title><link>https://freshrimpsushi.github.io/jp/posts/3018/</link><pubDate>Wed, 08 Nov 2017 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/3018/</guid><description>定義1 ベクトル空間 $V$ の 基底 の要素（ベクトルの数）を $V$ の 次元dimension と定義し、以下のように表記する。 $$ \dim (V) $$ 説明 このような次元の一般</description></item><item><title>物理学（量子力学）における演算子とは</title><link>https://freshrimpsushi.github.io/jp/posts/301/</link><pubDate>Tue, 07 Nov 2017 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/301/</guid><description>ビルドアップ 数学で 関数functionというのは、ある集合 $X$ の各要素に別の集合 $Y$ の要素を一つだけ対応させる関係を指し、functionの頭文</description></item><item><title>曲線座標系における勾配、発散、回転、ラプラシアン</title><link>https://freshrimpsushi.github.io/jp/posts/299/</link><pubDate>Sun, 05 Nov 2017 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/299/</guid><description>解説 物理学で、デル演算子$\nabla$を含む4つの演算、勾配、発散、回転、ラプラシアンは非常に重要である。そのため、3つの座標系における上</description></item><item><title>角運動量演算子の交換関係</title><link>https://freshrimpsushi.github.io/jp/posts/298/</link><pubDate>Sat, 04 Nov 2017 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/298/</guid><description>公式 各運動量演算子の交換関係は次の通り。 $$ \left[L_{j}, L_{k} \right] = \i \hbar \epsilon_{jk\ell}L_{\ell} \tag{1} $$ このとき、$\epsilon_{jk\ell}$はレビ-チビタ記号だ。詳しく書き</description></item><item><title>交換子の性質</title><link>https://freshrimpsushi.github.io/jp/posts/297/</link><pubDate>Fri, 03 Nov 2017 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/297/</guid><description>定義 二つの演算子$A, B$に対して、$AB - BA$は$A, B$の交換子と定義され、次のように表記される。 $$ [A,B]=AB-BA $$ 性質 $$ \begin{align} [A, A] &amp;amp;= 0 \\[1em] [A, B] &amp;amp;= -[B, A] \\[1em]</description></item><item><title>デカルト座標系の単位ベクトルを球面座標系の単位ベクトルに表示する</title><link>https://freshrimpsushi.github.io/jp/posts/291/</link><pubDate>Wed, 01 Nov 2017 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/291/</guid><description>公式 直交座標系の単位ベクトルを球座標系の単位ベクトルに表す式は下記の通りだ。 $$ \begin{align*} \hat{ \mathbf{x} }&amp;amp;= \cos \phi \sin \theta \hat{ \mathbf{r} } + \cos \phi \cos \theta \hat{ \boldsymbol{\theta} } - \sin\phi\hat{ \boldsymbol{\phi} } \\ \hat{ \mathbf{y} } &amp;amp;= \sin\phi\sin\theta \hat{ \mathbf{r}</description></item><item><title>無限ポテンシャル井戸における波動関数固有関数とエネルギー固有値の求め方</title><link>https://freshrimpsushi.github.io/jp/posts/289/</link><pubDate>Mon, 30 Oct 2017 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/289/</guid><description>命題 ポテンシャルが区間$[0, a]$上で無限の井戸のような形をしているとき、波動関数のエネルギー（固有値）$E_{n}$と波動関数（固有状態</description></item><item><title>線形結合、生成</title><link>https://freshrimpsushi.github.io/jp/posts/512/</link><pubDate>Mon, 30 Oct 2017 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/512/</guid><description>定義: 線形組み合わせ1 $\mathbf{w}$をベクトル空間$V$のベクトルとする。もし$\mathbf{w}$が$V$のベクトル$\mat</description></item><item><title>ベクトル空間の部分空間</title><link>https://freshrimpsushi.github.io/jp/posts/285/</link><pubDate>Fri, 27 Oct 2017 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/285/</guid><description>定義1 $W$がベクトル空間$V$の空集合でない部分集合とする。$W$が$V$で定義された加算とスカラー乗算に対してベクトル空間の定義を満たす</description></item><item><title>ベクトル空間の定義</title><link>https://freshrimpsushi.github.io/jp/posts/282/</link><pubDate>Tue, 24 Oct 2017 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/282/</guid><description>定義1 空集合ではない集合 $V$ の要素が二つの演算 加算additionと スカラー乗算scalar multiplicationに対して下記の10個の</description></item><item><title>ローレンツ変換がもたらす特殊相対性理論の特徴: 同時性の喪失</title><link>https://freshrimpsushi.github.io/jp/posts/260/</link><pubDate>Sun, 08 Oct 2017 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/260/</guid><description>ローレンツ変換の特徴 特殊相対性理論では、2つの座標系間の変換は古典的な変換とは異なる。「光の速さはどの観測者にとっても同じ」という点がその理</description></item><item><title>ローレンツ変換による特殊相対性理論の特徴：長さの収縮</title><link>https://freshrimpsushi.github.io/jp/posts/263/</link><pubDate>Sun, 08 Oct 2017 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/263/</guid><description>ローレンツ変換の特徴 特殊相対性理論において、二つの座標系間の変換は古典的な変換とは異なる。「光の速度はどの観測者にとっても同じである」という</description></item><item><title>行列のランク、零化次元</title><link>https://freshrimpsushi.github.io/jp/posts/3021/</link><pubDate>Wed, 04 Oct 2017 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/3021/</guid><description>要旨1 行列$A$の行空間と列空間の次元は同じである。 証明 $R$を$A$の行階段形行列とする。基本的な行操作は$A$の行空間と列空間の次元を変</description></item><item><title>ローレンツ変換の導出</title><link>https://freshrimpsushi.github.io/jp/posts/251/</link><pubDate>Tue, 26 Sep 2017 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/251/</guid><description>導出 言葉は少し長くなるけど、とても簡単に書いたから、怖がらずにやってみよう。 $A$慣性系(座標系)の平面で動く光(光子)を考えてみよう。$t</description></item><item><title>世界線とガリレイ変換</title><link>https://freshrimpsushi.github.io/jp/posts/250/</link><pubDate>Tue, 26 Sep 2017 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/250/</guid><description>定義 粒子の軌跡を時空間で表した線を世界線world lineと呼ぶ。 説明 まず一方向に等速運動する座標系だけを考えよう。$A$座標系では、原点に</description></item><item><title>相対性理論とローレンツ変換</title><link>https://freshrimpsushi.github.io/jp/posts/249/</link><pubDate>Tue, 26 Sep 2017 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/249/</guid><description>ビルドアップ 相対性理論は、電磁気学の完成から始まる。電磁気学が完成したということは、マクスウェルが電場$\mathbf{E}$と磁場$\ma</description></item><item><title>カールの発散は常にゼロである</title><link>https://freshrimpsushi.github.io/jp/posts/244/</link><pubDate>Fri, 22 Sep 2017 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/244/</guid><description>式 ベクター関数の$\mathbf{A}$のカールのダイバージェンスは、常に$0$である。 $$ \nabla \cdot (\nabla \times \mathbf{A}) = 0 $$ 証明 $\mathbf{A}$のカー</description></item><item><title>球体の慣性モーメント</title><link>https://freshrimpsushi.github.io/jp/posts/240/</link><pubDate>Sun, 10 Sep 2017 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/240/</guid><description>公式 半径が$a$、質量が$m$の球の慣性モーメントは以下の通りだ。 $$ I=\frac{2}{5}ma^{2} $$ 証明 球の慣性モーメントを求めるアイデアは他の剛体とは少し異なる。キー</description></item><item><title>円盤と円筒の慣性モーメント</title><link>https://freshrimpsushi.github.io/jp/posts/239/</link><pubDate>Fri, 08 Sep 2017 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/239/</guid><description>式 半径が$a$、質量が$m$の円盤の慣性モーメントは 回転軸が円盤に垂直な場合、$I=\dfrac{1}{2}ma^2$である。 回転軸が円盤と</description></item><item><title>輪および円筒シェルの慣性モーメント</title><link>https://freshrimpsushi.github.io/jp/posts/238/</link><pubDate>Fri, 08 Sep 2017 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/238/</guid><description>公式 半径が$a$で質量が$m$のリングの慣性モーメントは、回転軸がリングの中心を通り、 リングが作る平面に垂直な場合は$I=ma^{2}$であ</description></item><item><title>垂直軸定理</title><link>https://freshrimpsushi.github.io/jp/posts/236/</link><pubDate>Wed, 06 Sep 2017 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/236/</guid><description>垂直軸の定理 任意の平面に垂直な回転軸に対する慣性モーメントは、その垂直軸を通過しながら平面上に存在する互いに垂直な任意の二軸に対する慣性モー</description></item><item><title>平行軸定理</title><link>https://freshrimpsushi.github.io/jp/posts/237/</link><pubDate>Wed, 06 Sep 2017 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/237/</guid><description>平行軸定理 剛体の任意の回転軸に対する慣性モーメントは、その軸に平行で、質量中心を通る回転軸に対する慣性モーメントと、剛体の質量と二つの軸の間</description></item><item><title>慣性モーメントと旋回半径</title><link>https://freshrimpsushi.github.io/jp/posts/234/</link><pubDate>Tue, 05 Sep 2017 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/234/</guid><description>慣性モーメント $$ \begin{align*} I &amp;amp;= \sum_{i} m_{i} {r_{i}}^2 \\ I &amp;amp;= \int r^2 dm \end{align*} $$ 慣性モーメントmoment of inertiaは（粒子の質量）$\times$（回転軸から粒子までの</description></item><item><title>細い棒の慣性モーメント</title><link>https://freshrimpsushi.github.io/jp/posts/235/</link><pubDate>Tue, 05 Sep 2017 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/235/</guid><description>公式 長さが$a$、質量が$m$の棒の慣性モーメントは 回転軸が棒の端にある場合、$I=\dfrac{1}{3}ma^{2}$である。 回転軸が棒</description></item><item><title>ベクトル関数のカールのカール</title><link>https://freshrimpsushi.github.io/jp/posts/209/</link><pubDate>Sun, 06 Aug 2017 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/209/</guid><description>公式 ベクター関数のカールのカールは以下の通りだ。 $$ \nabla \times (\nabla \times \mathbf{A}) = \nabla (\nabla \cdot \mathbf{A}) - \nabla^2 \mathbf{A} $$ 説明 最初の項、$\nabla(\nabla \cdot \mathbf{A</description></item><item><title>マックスウェルの方程式から電磁波光の速度を求める</title><link>https://freshrimpsushi.github.io/jp/posts/207/</link><pubDate>Sat, 05 Aug 2017 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/207/</guid><description>公式 真空中のマックスウェル方程式 $$ \begin{align} \nabla \cdot \mathbf{E} &amp;amp;= 0 \\[1em] \nabla \cdot \mathbf{B} &amp;amp;= 0 \\[1em] \nabla \times \mathbf{E} &amp;amp;= -\frac{\partial \mathbf{B}}{\partial t} \\[1em] \nabla \times \mathbf{B} &amp;amp;= \mu_{0}\epsilon_{0}\frac{\partial \mathbf{E}}{\partial t} \end{align} $$ 一次元波動方程式 $$ \frac{\partial^2 f}{\partial x^2}=\frac{1}{v^2}\frac{\partial^2 f}{\partial t^2} $$ 三次元波動方程式</description></item><item><title>勾配の回転は常にゼロです</title><link>https://freshrimpsushi.github.io/jp/posts/208/</link><pubDate>Sat, 05 Aug 2017 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/208/</guid><description>公式 スカラー関数 $T$の勾配のカールは常に $\mathbf{0}$である $$ \nabla \times (\nabla T) = \mathbf{0} $$ 証明 直交座標系での$T$の勾配は次のようになる。 $$ \nabla</description></item><item><title>ユークリッド空間</title><link>https://freshrimpsushi.github.io/jp/posts/205/</link><pubDate>Fri, 04 Aug 2017 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/205/</guid><description>定義 自然数$n \in \mathbb{N}$に対し、実数の集合$\mathbb{R}$のデカルト積$\mathbb{R}^{n}$をユークリッド空</description></item><item><title>波動関数の相対位相の重要性</title><link>https://freshrimpsushi.github.io/jp/posts/201/</link><pubDate>Fri, 04 Aug 2017 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/201/</guid><description>説明 波動関数はしばしば次のように複素指数関数で表される。 $$ \psi = R e^{\i\theta} $$ このとき、式で物理的に意味があるのは$\psi$ではなく、$\left|</description></item><item><title>運動量と位置の交換子</title><link>https://freshrimpsushi.github.io/jp/posts/200/</link><pubDate>Thu, 03 Aug 2017 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/200/</guid><description>公式 位置と運動量演算子の交換子は次の通りだ。 $$ \begin{align} [p, x] &amp;amp;= -\i \hbar \\ [x, p] &amp;amp;= \i \hbar \end{align} $$ この式を標準交換関係式canonical commutation relationと言う。</description></item><item><title>運動量の期待値が常に実数であることを証明</title><link>https://freshrimpsushi.github.io/jp/posts/199/</link><pubDate>Thu, 03 Aug 2017 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/199/</guid><description>要約 運動量演算子の期待値 $\langle p \rangle$ は常に実数だ。 説明 実際、運動量演算子だけでなく全てのエルミート演算子の固有値は常に実数だ。 証明 運動量の期待値は</description></item><item><title>量子力学における運動量演算子</title><link>https://freshrimpsushi.github.io/jp/posts/100/</link><pubDate>Sun, 23 Jul 2017 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/100/</guid><description>定義 量子力学で、運動量演算子は以下の通りだ。 $$ P = \frac{\hbar}{\i}\frac{\partial}{\partial x} = -\i\hbar \dfrac{\partial }{\partial x} $$ 説明 運動量演算子とは波動関数の運動量を計算してくれる関数で、運動量が$p =</description></item><item><title>電子は核の構成要素にはなれない</title><link>https://freshrimpsushi.github.io/jp/posts/184/</link><pubDate>Sun, 23 Jul 2017 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/184/</guid><description>定理 電子は原子核の成分になれない。 説明 $10^{-14}\mathrm{m}$ 程度の規模を持つ核は $1\mathrm{MeV} \sim10\mathrm{MeV}$ 範囲のエネルギーを持つ電子を放出する。核物理学の初期には、電子が核内に存在す</description></item><item><title>コンプトン散乱</title><link>https://freshrimpsushi.github.io/jp/posts/182/</link><pubDate>Sat, 22 Jul 2017 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/182/</guid><description>公式 入射光の波長を$\lambda$、散乱された光子の波長を$\lambda^{\prime}$としよう。このとき、以下の式が成り立つ。 $$ \lambda^{\prime}</description></item><item><title>光子の静止質量は0である</title><link>https://freshrimpsushi.github.io/jp/posts/183/</link><pubDate>Sat, 22 Jul 2017 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/183/</guid><description>まとめ 光子の速度を$c = 299,792,458 \mathrm{m/s}$とする。すると、光子の静止質量は$0$になる。 証明 1. 相対論的エネルギー、運動量と速度の関</description></item><item><title>直交座標系における速度と加速度</title><link>https://freshrimpsushi.github.io/jp/posts/174/</link><pubDate>Fri, 21 Jul 2017 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/174/</guid><description>直交座標系での速度と加速度 $$ \begin{align*} \mathbf{r} &amp;amp;= x \hat{\mathbf{x}} + y \hat{\mathbf{y}} + z \hat{\mathbf{z}} \\ \mathbf{v} &amp;amp;= \dot{\mathbf{r}} = \dot{x} \hat{\mathbf{x}} + \dot{y} \hat{\mathbf{y}} + \dot{z} \hat{\mathbf{z}} \\ \mathbf{a} &amp;amp;= \dot{\mathbf{v}} = \ddot{\mathbf{r}} = \ddot{x} \hat{\mathbf{x}} + \ddot{y} \hat{\mathbf{y}} +\ddot{z}\hat{\mathbf{z}} \end{align*} $$ 導出 直交座標系で速度と加速度を求め</description></item><item><title>傾きmの円の接線の方程式</title><link>https://freshrimpsushi.github.io/jp/posts/172/</link><pubDate>Thu, 20 Jul 2017 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/172/</guid><description>公式 円 $x^{2}+y^{2}=r^{2}$ の傾きが $m$ の接線の方程式は、以下の通りだ。 $$ y=mx \pm r\sqrt{m^{2}+1} $$ 証明 傾きが $m$ の直線の方程式を $y=mx+n$ としよう。円の方程式に代入してxに関して整理すると</description></item><item><title>円上の一点での接線の方程式を求める</title><link>https://freshrimpsushi.github.io/jp/posts/173/</link><pubDate>Thu, 20 Jul 2017 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/173/</guid><description>説明 円 $x^2+y^2=r^2$の上の一点$(x_{1},y_{1})$での接線の方程式を求めよう。$y_{1}\neq 0$の場合と$y_{</description></item><item><title>座標系での速度と加速度</title><link>https://freshrimpsushi.github.io/jp/posts/164/</link><pubDate>Wed, 19 Jul 2017 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/164/</guid><description>球座標系での速度と加速度 $$ \begin{align*} \mathbf{v} &amp;amp;=\dot{r} \hat {\mathbf{r}} +r \dot{\theta} \hat{ \boldsymbol{\theta}}+ r \dot{\phi} \sin{\theta} \hat{ \boldsymbol{\phi}} \\ \mathbf{a} &amp;amp;= (\ddot{r}-r\dot\theta^2-r\dot\phi^2\sin^2\theta)\hat{\mathbf{r}}+(r\ddot\theta+2\dot{r}\dot\theta-r\dot\phi^2\sin\theta\cos\theta)\hat{\boldsymbol{\theta}} \\ &amp;amp;\quad+(r\ddot\phi\sin\theta+2\dot{r}\dot\phi\sin\theta+2r\dot\theta\dot\phi\cos\theta)\hat{\boldsymbol{\phi}} \end{align*} $$ 導出 球座標系での単位ベクトルは以下の通りだ。 $$ \begin{align*} \hat{\mathbf{r}} &amp;amp;= \cos \phi \sin \theta \hat{\mathbf{x}} + \sin \phi \sin</description></item><item><title>掛け算の公式表</title><link>https://freshrimpsushi.github.io/jp/posts/171/</link><pubDate>Wed, 19 Jul 2017 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/171/</guid><description>概要 よく使われる乗算の公式を紹介する。 公式 $$ \begin{align} (a+b)^2 &amp;amp;=a^2+2ab+b^2 \\ (a-b)^2 &amp;amp;= a^2-2ab+b^2 \end{align} $$ $$ \begin{equation} (a+b)(a-b)=a^2-b^2 \end{equation} $$ $$ \begin{align} (a+b)^3 &amp;amp;= a^3+3a^2b+3ab^2+b^3 \\ (a-b)^3 &amp;amp;= a^3-3a^2b+3ab^2-b^3 \end{align} $$ $$ \begin{equation} (a+b+c)^2=a^2+b^2+c^2+2ab+2bc+2ca \end{equation} $$ $$ \begin{align} (a+b)(a^2-ab+b^2) &amp;amp;= a^3+b^3 \\ (a-b)(a^2+ab+b^2) &amp;amp;= a^3-b^3 \end{align} $$ 証明 (1)、(</description></item><item><title>円筒座標系における速度と加速度</title><link>https://freshrimpsushi.github.io/jp/posts/163/</link><pubDate>Tue, 18 Jul 2017 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/163/</guid><description>円柱座標系での速度と加速度 $$ \begin{align*} \mathbf{v}&amp;amp;=\dot{r} \hat{\mathbf{r}} + r \dot{\phi} \hat{\boldsymbol{\phi}}+\dot{z} \hat{\mathbf{z}} \\ \mathbf{a} &amp;amp;= (\ddot r -r\dot{\phi} ^2)\hat{\mathbf{r}} + (2\dot{r} \dot{\phi} + r\ddot{\phi})\hat{\boldsymbol{\phi}} + \ddot{z}\hat{\mathbf{z}} \end{align*} $$ 導出 円柱座標系では単位ベクトルは以下の通りです。 $$ \begin{align*} \boldsymbol{\rho}&amp;amp;=x\hat{\mathbf{x}}+y \hat{\mathbf{y}} +z\hat{\mathbf{z}}=r\hat{\mathbf{r}} +z\hat{\mathbf{z}} \\ \hat{\mathbf{r}}</description></item><item><title>極座標系における速度と加速度</title><link>https://freshrimpsushi.github.io/jp/posts/158/</link><pubDate>Mon, 17 Jul 2017 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/158/</guid><description>極座標系での速度と加速度 $$ \begin{align*} \mathbf{v}&amp;amp;=\dot{r} \hat{\mathbf{r}} + r \dot{\theta} \hat{\boldsymbol{\theta}} \\ \mathbf{a}&amp;amp;= (\ddot r -r\dot{\theta} ^2)\hat{\mathbf{r}} + (2\dot{r} \dot{\theta} + r\ddot{\theta})\hat{\boldsymbol{\theta}} \end{align*} $$ 導出 極座標系では、単位ベクトルは以下のようである。 $$ \begin{align*} &amp;amp;&amp;amp; \mathbf{r}&amp;amp;=r\hat{\mathbf{r}}=x\hat{\mathbf{x}} + y \hat{\mathbf{y}} \\ \implies &amp;amp;&amp;amp; \hat{\mathbf{r}} &amp;amp;=</description></item><item><title>直交座標系の単位ベクトルで表された球面座標系の単位ベクトル</title><link>https://freshrimpsushi.github.io/jp/posts/152/</link><pubDate>Sun, 16 Jul 2017 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/152/</guid><description>球面座標系の単位ベクトル $$ \begin{align*} \hat{\mathbf{r}} &amp;amp;= \cos\phi \sin\theta\hat{\mathbf{x}} + \sin\phi \sin\theta\hat{\mathbf{y}} + \cos\theta\hat{\mathbf{z}} \\ \hat{\boldsymbol{\theta}} &amp;amp;= \cos\phi \cos\theta \hat{\mathbf{x}} + \sin\phi \cos\theta \hat{\mathbf{y}} - \sin\theta\hat{\mathbf{z}} \\ \hat{\boldsymbol{\phi}} &amp;amp;= -\sin\phi \hat{\mathbf{x}} + \cos\phi \hat{\mathbf{y}} \end{align*} $$ 導出 まず、$\hat{\mathbf{r}}$を計</description></item><item><title>スカラー三重積</title><link>https://freshrimpsushi.github.io/jp/posts/144/</link><pubDate>Fri, 14 Jul 2017 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/144/</guid><description>定義 次の式をスカラー三重積scalar triple productと言う。 $$ \mathbf{A}\cdot (\mathbf{B} \times \mathbf{C} ) $$ 説明 スカラー三重積は、3つのベクトルを掛け合わせる操作で、結果が</description></item><item><title>分離ベクトル</title><link>https://freshrimpsushi.github.io/jp/posts/141/</link><pubDate>Wed, 12 Jul 2017 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/141/</guid><description>定義1 原点から観察点までのベクトルを分離ベクトルseparation vectorという。 $$ \bcR = \mathbf{r} - \mathbf{r}^{\prime} $$ 説明 原点ベクトルsource vector $\mathbf{r}^{\prime}$: 電荷や</description></item><item><title>分離ベクトルの大きさの勾配</title><link>https://freshrimpsushi.github.io/jp/posts/142/</link><pubDate>Wed, 12 Jul 2017 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/142/</guid><description>数式 分離ベクトル $\bcR$の大きさの$n$乗、$\cR ^{n}$の勾配は以下の通りだ。 $$ \nabla (\cR^n)=n\cR^{n-1}\crH $$ 説明 多項関数の微分と同じやり方で計算した後に</description></item><item><title>直線上の内分点と外分点の求め方</title><link>https://freshrimpsushi.github.io/jp/posts/138/</link><pubDate>Wed, 12 Jul 2017 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/138/</guid><description>定理 数直線上の点$A(x_{1})$と点$B(x_{2})$を$m:n$で内分する点$P(x)$の座標は$\displaystyle x=\f</description></item><item><title>垂直な二直線の傾きの積は常に-1であることを証明하시오</title><link>https://freshrimpsushi.github.io/jp/posts/111/</link><pubDate>Sat, 20 May 2017 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/111/</guid><description>定理 互いに垂直な二つの直線の傾きの積は常に$-1$である。 説明 多くの問題で非常に役に立つ事実である。2つの証明方法を紹介する。 証明 1 ピタゴラ</description></item><item><title>규격화된 파동함수의 상태는 시간의 변화에 무관하다</title><link>https://freshrimpsushi.github.io/jp/posts/101/</link><pubDate>Sat, 06 May 2017 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/101/</guid><description>定理1 規格化された波動関数は時間が経っても規格化された状態を維持する。 説明 時間$t=0$のとき波動関数を規格化したと仮定する。この定理により</description></item><item><title>ディラックのデルタ関数</title><link>https://freshrimpsushi.github.io/jp/posts/103/</link><pubDate>Sat, 06 May 2017 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/103/</guid><description>定義 以下の二つの条件を満たす関数をディラックデルタ関数という。 $$ \delta (x) = \begin{cases} 0, &amp;amp; x\neq 0 \\ \infty , &amp;amp; x=0 \end{cases} $$ $$ \int_{-\infty}^{\infty}{\delta (x) dx}=1 $$ 説明 ※クロネッカーデルタと間違えない</description></item><item><title>ディラックのデルタ関数の性質</title><link>https://freshrimpsushi.github.io/jp/posts/104/</link><pubDate>Sat, 06 May 2017 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/104/</guid><description>特性 $$ \begin{equation} \delta (-x) =\delta (x) \end{equation} $$ $$ \begin{equation} \delta (kx)= \frac{1}{|k|} \delta (x) \end{equation} $$ 証明 $(1)$ の証明 $\int_{-\infty }^ { \infty } f(x) \delta (-x) dx$ を $-x \equiv y$ に置き換えると$x=-y$、$dx=-dy$ となり、 $$ \begin{align*} \int_{-\infty } ^{ \infty</description></item><item><title>単振り子の周期は振り子の質量に依存しないことを証明します</title><link>https://freshrimpsushi.github.io/jp/posts/102/</link><pubDate>Sat, 06 May 2017 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/102/</guid><description>定理 単振り子の運動の周期 $T$は、振り子の質量 $m$と無関係だ。 説明 だから、単振り子の運動の周期 $T$は振り子の質量、振幅の大きさなどと無関</description></item><item><title>アインシュタインの記法</title><link>https://freshrimpsushi.github.io/jp/posts/90/</link><pubDate>Sat, 29 Apr 2017 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/90/</guid><description>ノーテーション ２回以上繰り返される添字については、合計記号$\sum$を省略する。 説明 アインシュタインの合計規約Einstein summation conve</description></item><item><title>二つのレビ-チビタ記号の積</title><link>https://freshrimpsushi.github.io/jp/posts/88/</link><pubDate>Sat, 29 Apr 2017 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/88/</guid><description>定理 次のように定義される $\epsilon_{ijk}$ を レビ-チビタ記号 と呼ぶ。 $$ \epsilon_{ijk} = \begin{cases} +1 &amp;amp; \text{if} \ \epsilon_{123}, \epsilon_{231}, \epsilon_{312} \\ -1 &amp;amp; \text{if} \ \epsilon_{132}, \epsilon_{213}, \epsilon_{321} \\ 0 &amp;amp; \text{if} \ i=j \ \text{or} \ j=k \ \text{or} \ k=i \end{cases} $$ 次のように定義され</description></item><item><title>放物線運動：水平到達距離と最大高さ角</title><link>https://freshrimpsushi.github.io/jp/posts/89/</link><pubDate>Sat, 29 Apr 2017 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/89/</guid><description>定義1 2 角度$\alpha$、初速度$v_{0}$で打ち出された物体の運動を放物線運動と言う。 説明 投射体運動とも言う。 通常、空気抵抗などの外</description></item><item><title>量子力学における水素原子の最小エネルギー</title><link>https://freshrimpsushi.github.io/jp/posts/92/</link><pubDate>Sat, 29 Apr 2017 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/92/</guid><description>定理 水素原子の最小エネルギーは次の通りだ。 $$ E_{min}=-\frac{1}{2}mc^2\alpha^{2} $$ $m$は水素原子の質量、$c$は光速、$\alpha$は微細構造定数だ。 説明 ここで、$\al</description></item><item><title>クロネッカーのデルタ</title><link>https://freshrimpsushi.github.io/jp/posts/84/</link><pubDate>Wed, 26 Apr 2017 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/84/</guid><description>定義 次のように定義される$\delta_{ij}$をクロネッカーのデルタKronecker deltaと呼ぶ。 $$ \delta_{ij} := \begin{cases} 1,&amp;amp;i=j \\ 0, &amp;amp; i\ne j \end{cases} $$ 説明 クロ</description></item><item><title>レヴィ-チヴィタ記号</title><link>https://freshrimpsushi.github.io/jp/posts/83/</link><pubDate>Tue, 25 Apr 2017 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/83/</guid><description>定義 以下のように定義される$\epsilon_{ijk}$を レビ-チビタ記号Levi-Civita-symbol という。 $$ \epsilon_{ijk} = \begin{cases} +1 &amp;amp; \text{if} \ \epsilon_{123}, \epsilon_{231},</description></item><item><title>ベクトル三重積、BAC-CAB公式</title><link>https://freshrimpsushi.github.io/jp/posts/71/</link><pubDate>Sun, 23 Apr 2017 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/71/</guid><description>説明 上の式の左辺をベクトル三重積と呼ぶ。右辺の結果を簡単に**BAC-CAB（バックキャップ）**という。ベクトル三重積は、結果がベクトルに</description></item><item><title>ローレンツ変換による特殊相対性理論の特徴：時間の遅れ</title><link>https://freshrimpsushi.github.io/jp/posts/75/</link><pubDate>Sun, 23 Apr 2017 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/75/</guid><description>ローレンツ変換の特性 特殊相対性理論では、二つの座標系間の変換は古典的な変換と異なる。「光の速度はすべての観測者に対して同じだ」という点のため</description></item><item><title>等加速度直線運動とそのグラフ</title><link>https://freshrimpsushi.github.io/jp/posts/72/</link><pubDate>Sun, 23 Apr 2017 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/72/</guid><description>定義 ある物体の加速度が時間$t$によって変わらない場合、その物体は等加速度運動をしていると言われる。 $$ a(t)=a $$ 等加速度直線運動は、加速度が変わら</description></item><item><title>等速度運動とグラフ</title><link>https://freshrimpsushi.github.io/jp/posts/74/</link><pubDate>Sun, 23 Apr 2017 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/74/</guid><description>説明 等速度という名前を解くと、「等(同じ)+速度」である。すなわち、速度が同じ、一定に保たれる運動であるということだ。速度はベクトルなので、</description></item><item><title>運動量と衝撃量の関係</title><link>https://freshrimpsushi.github.io/jp/posts/73/</link><pubDate>Sun, 23 Apr 2017 00:00:00 +0000</pubDate><guid>https://freshrimpsushi.github.io/jp/posts/73/</guid><description>定義 運動量 物体の質量と速度の積を運動量と呼び、$p$で表される。高校の物理では、物体の運動状態を表すために速度$v$がよく使われるが、大学の</description></item></channel></rss>