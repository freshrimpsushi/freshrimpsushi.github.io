<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>확률과정론 on 생새우초밥집</title>
    <link>https://freshrimpsushi.github.io/categories/%ED%99%95%EB%A5%A0%EA%B3%BC%EC%A0%95%EB%A1%A0/</link>
    <description>Recent content in 확률과정론 on 생새우초밥집</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>ko</language>
    <lastBuildDate>Mon, 30 Dec 2019 00:00:00 +0000</lastBuildDate><atom:link href="https://freshrimpsushi.github.io/categories/%ED%99%95%EB%A5%A0%EA%B3%BC%EC%A0%95%EB%A1%A0/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>타이트 확률 과정</title>
      <link>https://freshrimpsushi.github.io/posts/tight-probability-process/</link>
      <pubDate>Mon, 30 Dec 2019 00:00:00 +0000</pubDate>
      
      <guid>https://freshrimpsushi.github.io/posts/tight-probability-process/</guid>
      <description>수리통계학에서 정의됐던 확률유계타이트 확률 측도 확률 공간 $( \Omega , \mathcal{F} , P)$ 에서 확률 과정 $\left\{ X_n \right\}_{n \in \mathbb{N}}$ 이 정의되어 있다고 하자. 모든 $\varepsilon &amp;gt; 0$ 에 대해 $\displaystyle \inf_{n \in \mathbb{N}} P\left( X_{n} \in K \right) &amp;gt; 1 - \varepsilon$ 를 만족시키는 컴팩트 셋 $K \subset \Omega$ 가 존재하면 $\left\{ X_{n} \right\}$ 이 타이트 하다고 한다. 수리통계학에서는 확률 유계에 해당하는 개념이다. 타이트는 분포 수렴과 관련해서 다음과 같이 중요한 성</description>
    </item>
    
    <item>
      <title>프리컴팩트 확률 과정</title>
      <link>https://freshrimpsushi.github.io/posts/precompact-stochastic-process/</link>
      <pubDate>Wed, 25 Dec 2019 00:00:00 +0000</pubDate>
      
      <guid>https://freshrimpsushi.github.io/posts/precompact-stochastic-process/</guid>
      <description>가측 공간 $(S, \mathcal{S})$ 에서 $(S&#39;, \mathcal{S}&#39;)$ 로 가는 연속함수들을 모아놓은 함수공간을 $\mathscr{H} := C \left( S,S&#39; \right)$와 같이 두고 $\left\{ h^{-1}(A&#39;) : h \in \mathscr{H} , A&#39; \in \mathcal{S}&#39; \right\}$ 가 $(S , \mathcal{S})$ 의 세퍼레이팅 클래스라고 하자. $X$ 는 $S$ 에서 정의된 확률 원소, $\left\{ X_n \right\}_{n \in \mathbb{N}}$ 은 $S$ 에서 정의된 확률 과정이다.If (1) and (2) :(1) $\left\{ X_{n} \right\}$ 은 프리 컴팩트다.(2) 모든 $h \in \mathscr{H}$ 에 대해 $h \left( X_{n} \right) \overset{D}{\to} h(X)$Then :$X_{n} \overset{D}{\to} X$ 연속 사상 정리</description>
    </item>
    
    <item>
      <title>확률과정론에서의 프로젝션 매핑</title>
      <link>https://freshrimpsushi.github.io/posts/projection-mapping/</link>
      <pubDate>Wed, 18 Dec 2019 00:00:00 +0000</pubDate>
      
      <guid>https://freshrimpsushi.github.io/posts/projection-mapping/</guid>
      <description>공간 $S$ 가 거리 공간 $( S , \rho)$ 이면서 가측 공간 $(S,\mathcal{B}(S))$ 이고 $k \in \mathbb{N}$ 이라 하자.1. 이산형 프로젝션 매핑 : (이산 시간) $N = \left\{ n \in \mathbb{N} : n \le \xi, \xi \in [0,\infty] \right\}\subset \mathbb{N}$ 과 $S$ 의 $\displaystyle S^{\sup N} := \prod_{n \in N} S$ 의 원소 $x := (x_{1} , x_{2} , \cdots )$ 에 대해 다음과 같이 정의된 $\pi_{k} : S^{\sup N} \to S^{k}$ 를 (이산형) 프로젝션 매핑 이라고 한다. $$ \pi_{k} (x) = (x_{1} , x_{2} , \cdots , x_{k}) $$ 2. 연속형 프로젝션 매핑 : (연속 시간) $T</description>
    </item>
    
    <item>
      <title>L1 수렴 마틴게일이면 클로저블 마틴게일임을 증명</title>
      <link>https://freshrimpsushi.github.io/posts/1401/</link>
      <pubDate>Wed, 27 Nov 2019 00:00:00 +0000</pubDate>
      
      <guid>https://freshrimpsushi.github.io/posts/1401/</guid>
      <description>확률 공간 $( \Omega , \mathcal{F} , P)$ 과 마틴게일 $\left\{ ( X_{n} , \mathcal{F}_{n} ) \right\}$ 이 주어져 있다고 하자.확률 과정 $\left\{ ( X_{n} , \mathcal{F}_{n} ) \right\}$ 이 확률 변수 $Y$ 로 $\mathcal{L}_{1}$하면 $\left\{ ( X_{n} , \mathcal{F}_{n} ) : n = 1 , \cdots , \infty \right\}$ 은 클로저블 마틴게일이다. 원래 $X_{n}$ 이 $Y$ 로 $\mathcal{L}_{1}$ 수렴하고 $X_{n}$ 이 $X_{\infty}$ 로 거의 확실히 수렴한다고 해도 $Y $ 와 $X_{\infty}$ 이 어떤 관계가 있다고 장담할 수는 없다. $$ X_{n} \overset{\mathcal{L}_{1}}{\to} Y \land X_{n}</description>
    </item>
    
    <item>
      <title>균등적분가능 마틴게일이면 L1 수렴 마틴게일임을 증명</title>
      <link>https://freshrimpsushi.github.io/posts/1399/</link>
      <pubDate>Mon, 25 Nov 2019 00:00:00 +0000</pubDate>
      
      <guid>https://freshrimpsushi.github.io/posts/1399/</guid>
      <description>확률 공간 $( \Omega , \mathcal{F} , P)$ 가 주어져 있다고 하자.확률 과정 $\left\{ X_{n} \right\}$ 이 어떤 확률 변수 $X_{\infty}$ 에 대해 다음을 만족하면 $\left\{ X_{n} \right\}$ 이 $X_{\infty}$ 로 $\mathcal{L}_{p}$ 수렴한다고 말한다. $$ \lim_{n \to \infty} | X_{n} - X_{\infty} |_{p} = 0 $$ 확률 과정 $\left\{ X_{n} \right\}$ 가 $\mathcal{L}_{p}$ 수렴하면 마틴게일 $\left\{ ( X_{n} , \mathcal{F}_{n} ) \right\}$ 이 $\mathcal{L}_{p}$ 수렴한다 고 말한다. 마틴게일 $\left\{ ( X_{n} , \mathcal{F}_{n} ) \right\}$ 이 균등적분가능이면 $\mathcal{L}_{1}$ 수렴한다. 측도론의 센스로 보았을 때 $p=1$ 에서 수렴</description>
    </item>
    
    <item>
      <title>레귤러 마틴게일이면 균등적분가능 마틴게일임을 증명</title>
      <link>https://freshrimpsushi.github.io/posts/1393/</link>
      <pubDate>Wed, 20 Nov 2019 00:00:00 +0000</pubDate>
      
      <guid>https://freshrimpsushi.github.io/posts/1393/</guid>
      <description>확률 공간 $( \Omega , \mathcal{F} , P)$ 가 주어져 있다고 하자.확률 변수의 집합 $\Phi$ 가 주어져있다고 할 때, 모든 $\varepsilon&amp;gt;0$ 에 대해 $$ \displaystyle \sup_{ X \in \Phi } \int_{ \left( \left| X \right| \ge k \right) } \left| X \right| dP &amp;lt; \varepsilon $$ 를 만족하는 $k \in \mathbb{N}$ 가 존재하면 $\Phi$ 가 균등적분가능하다고 말한다. 확률 과정 $\left\{ X_{n} \right\}$ 가 균등적분가능하면 마틴게일 $\left\{ ( X_{n} , \mathcal{F}_{n} ) \right\}$ 이 균등적분가능하다고 말한다. 마틴게일 $\left\{ ( X_{n} , \mathcal{F}_{n} ) \right\}$ 이 레귤</description>
    </item>
    
    <item>
      <title>레귤러 마틴게일과 클로저블 마틴게일</title>
      <link>https://freshrimpsushi.github.io/posts/regular-martingale-and-closable/</link>
      <pubDate>Mon, 18 Nov 2019 00:00:00 +0000</pubDate>
      
      <guid>https://freshrimpsushi.github.io/posts/regular-martingale-and-closable/</guid>
      <description>확률 공간 $( \Omega , \mathcal{F} , P)$ 와 마틴게일 $\left\{ ( X_{n} , \mathcal{F}_{n} ) \right\}$ 이 주어져 있다고 하자.1. 만약 어떤 적분가능한 확률 변수 $\eta$ 에 대해 $X_{n} = E ( \eta | \mathcal{F}_{n} )$ 이면 $\left\{ ( X_{n} , \mathcal{F}_{n} ) \right\}$ 을 레귤러 마틴게일 이라고 한다.2. 만약 $\left\{ ( X_{n} , \mathcal{F}_{n} ) : n = 1 , \cdots , \infty \right\}$ 이 마틴게일이 되도록 하는 어떤 적분가능한 확률 변수 $X_{\infty}$ 이 존재하고 $\mathcal{F}_{\infty}</description>
    </item>
    
    <item>
      <title>서브 마틴게일 수렴 정리 증명</title>
      <link>https://freshrimpsushi.github.io/posts/proof-of-sub-martingale-convergence-theorem/</link>
      <pubDate>Sat, 16 Nov 2019 00:00:00 +0000</pubDate>
      
      <guid>https://freshrimpsushi.github.io/posts/proof-of-sub-martingale-convergence-theorem/</guid>
      <description>확률 공간 $( \Omega , \mathcal{F} , P)$ 와 서브 마틴게일 $\left\{ ( X_{n} , \mathcal{F}_{n} ) \right\}$ 이 주어져 있다고 하자.$\displaystyle \sup_{n \in \mathbb{N}} E X_{n}^{+} &amp;lt; \infty$ 이라고 하면 $X_{n}$ 은 어떤 확률 변수 $X_{\infty} : \Omega \to \mathbb{R}$ 로 거의 확실히 수렴하고 $E X_{\infty} &amp;lt; E X_{\infty}^{+} &amp;lt; \infty $ Strategy** : 리미트 슈프리멈과 리미트 인피멈의 성질을 사용한다. $$ X^{ * } := \limsup_{n \in \mathbb{N}} X_{n} \\ X_{*} := \liminf_{n \in \mathbb{N}} X_{n} $$ 이라고 하면 $$ \left( X^{ * } &amp;gt; X_{*} \right) = \bigcup_{a &amp;lt; b</description>
    </item>
    
    <item>
      <title>확률과정론에서의 업크로싱</title>
      <link>https://freshrimpsushi.github.io/posts/upcrossing/</link>
      <pubDate>Thu, 14 Nov 2019 00:00:00 +0000</pubDate>
      
      <guid>https://freshrimpsushi.github.io/posts/upcrossing/</guid>
      <description>확률 공간 $( \Omega , \mathcal{F} , P)$ 와 서브 마틴게일 $\left\{ ( X_{n} , \mathcal{F}_{n} ) \right\}$ 이 주어져 있다고 하자.폐구간 $[a,b]$ 에 대해 $X_{t_{1}} \le a $ 이었다가 $X_{t_{2}} \ge b $ 가 되는 것을 업크로싱 이라고 한다. $N \in \mathbb{N}$ 번까지 관찰할 때 업크로싱의 횟수를 다음과 같이 나타낸다. $$ \beta_{N} (a,b) : = \text{A number of upcrossing of } \left\{ X_{n} \right\} \text{ of interval } [a,b] $$ 업크로싱은 쉽게 말해 $X_{n}$ 이 하한 $a$ 에서 상한 $b$ 를 넘어가는 것을 말한다. $N$ 까지 관</description>
    </item>
    
    <item>
      <title>둡의 최대 부등식 증명</title>
      <link>https://freshrimpsushi.github.io/posts/proof-doobs-maximal-inequality/</link>
      <pubDate>Tue, 12 Nov 2019 00:00:00 +0000</pubDate>
      
      <guid>https://freshrimpsushi.github.io/posts/proof-doobs-maximal-inequality/</guid>
      <description>확률 공간 $( \Omega , \mathcal{F} , P)$ 와 서브 마틴 게일 $\left\{ ( X_{n} , \mathcal{F}_{n} ) \right\}$ 이 주어져 있다고 하자.어떤 $N \in \mathbb{N}$ 과 $p&amp;gt;1$ 에 대해 $X_{n} \ge 0 (n \le N)$, $E X_{N}^{p} &amp;lt; \infty$ 이면 $$ E \left( \max_{n \le N} X_{n}^{p} \right) \le \left( {{ p } \over { p-1 }} \right)^{p} E X_{N}^{p} \text{ a.s.} $$ 수식의 모양은 $\displaystyle \max_{n \le N} \cdot_{n} ^{p}$ 으로 말미암아 생기는 $\displaystyle \left( {{ p } \over { p-1 }} \right)^{p}$ 을 밖으로 빼내고 그 상한을 계산하는 것으로 볼 수 있다. $\displaystyle \left( {{ p } \over { p-1 }} \right)&amp;gt;1$ 이기 때문에 $p$ 가</description>
    </item>
    
    <item>
      <title>마틴게일의 부등식들</title>
      <link>https://freshrimpsushi.github.io/posts/inequalities-of-martingale/</link>
      <pubDate>Sun, 10 Nov 2019 00:00:00 +0000</pubDate>
      
      <guid>https://freshrimpsushi.github.io/posts/inequalities-of-martingale/</guid>
      <description>$\left\{ (X_{n} , \mathcal{F}_{n}) \right\}$ 이 슈퍼 마틴게일이라고 하자. [1]** 모든 $\lambda &amp;gt; 0$ 에 대해 $$ \begin{eqnarray*} \lambda P \left( \max_{n \le N} X_{n} \ge \lambda \right) &amp;amp;\le&amp;amp; E X_{1} - \int_{(\max_{n \le N} X_{n} &amp;lt; \lambda)} X_{N} dP \\ &amp;amp;\le&amp;amp; E X_{1} + E X_{N}^{-} \text{ a.s.} \end{eqnarray*} $$ [2]** 모든 $\lambda &amp;gt; 0$ 에 대해 $$ \begin{eqnarray*} \lambda P \left( \min_{n \le N} X_{n} \le - \lambda \right) &amp;amp;\le&amp;amp; - \int_{(\min_{n \le N} X_{n} \le - \lambda)} X_{N} dP \\ &amp;amp;\le&amp;amp; E X_{N}^{-} \text{ a.s.} \end{eqnarray*} $$ $\left\{ (X_{n} , \mathcal{F}_{n}) \right\}$ 이 서브 마틴게일이라고 하자. [3]** 모든 $\lambda &amp;gt; 0$ 에 대해 $$ \begin{eqnarray*} \lambda P \left( \max_{n \le N} X_{n} \ge \lambda \right) &amp;amp;\le&amp;amp; \int_{(\max_{n \le N} X_{n} \ge \lambda)} X_{N}</description>
    </item>
    
    <item>
      <title>선택적 샘플링 정리 증명</title>
      <link>https://freshrimpsushi.github.io/posts/proof-of-optional-sampling-theorem/</link>
      <pubDate>Wed, 30 Oct 2019 00:00:00 +0000</pubDate>
      
      <guid>https://freshrimpsushi.github.io/posts/proof-of-optional-sampling-theorem/</guid>
      <description>확률 공간 $( \Omega , \mathcal{F} , P)$ 와 슈퍼 마틴게일 $\left\{ ( X_{n} , \mathcal{F}_{n} ) \right\}$ 이 주어져 있다고 하자.$\tau$ 와 $\sigma$ 가 $\sigma \le \tau$ 면서 $\mathcal{F}_{n}$ 에 대해 바운디드 정지 시간이라고하면 $$ E \left( X_{\tau} | \mathcal{F}_{\sigma} \right) \le X_{\sigma} \text{ a.s.} $$ * $\tau$ 가 $\mathcal{F}_{n}$ 에 대해 바운디드라는 것은 말 그대로 모든 $E \in \mathcal{F}_{n}$ 에 대해 $\tau(E) \le N$ 를 만족하는 $N \in \mathbb{N}$ 이 존재한다는 것이다.수식 자체가 말해주는 것은 $\sigma \le \tau \le N$ 이라는 조건이 있을 때</description>
    </item>
    
    <item>
      <title>정지 시간의 성질들</title>
      <link>https://freshrimpsushi.github.io/posts/properties-of-stopping-time/</link>
      <pubDate>Mon, 28 Oct 2019 00:00:00 +0000</pubDate>
      
      <guid>https://freshrimpsushi.github.io/posts/properties-of-stopping-time/</guid>
      <description>확률 공간 $( \Omega , \mathcal{F} , P)$ 와 마틴 게일 $\left\{ ( X_{n} , \mathcal{F}_{n} ) \right\}$ 이 주어져 있다고 하자.정지 시간 $\tau$ 에 대해 $\mathcal{F}_{\tau} := \left\{ A \in \mathcal{F} : A \cap ( \tau = n ) \in \mathcal{F}_{n} \right\}$ 을 $\tau$ 에 의해 유도된 시그마 필드 라고 한다.[1] $\mathcal{F}_{\tau}$ 는 시그마 필드다.[2] $\tau$ 는 $\mathcal{F}_{\tau}$-가측 함수다.[3] 마틴 게일 $\left\{ ( X_{n} , \mathcal{F}_{n} ) \right\}$ 에 대해 $X_{\tau}$ 는 $\mathcal{F}</description>
    </item>
    
    <item>
      <title>확률과정론에서의 정지 시간</title>
      <link>https://freshrimpsushi.github.io/posts/stopping-time/</link>
      <pubDate>Sat, 26 Oct 2019 00:00:00 +0000</pubDate>
      
      <guid>https://freshrimpsushi.github.io/posts/stopping-time/</guid>
      <description>확률 공간 $( \Omega , \mathcal{F} , P)$ 이 주어져 있다고 하자.필트레이션 $\left\{ \mathcal{F}_{n} \right\}$ 에 대해 $0$ 보다 크거나 같은 정수 값을 갖는 확률 변수 $\tau$ 가 모든 $n \in \mathbb{N}_{0}$ 에 대해 $(\tau = n) \in \mathcal{F}_{n}$ 을 만족하면 $\tau$ 를 정지 시간이라고 한다. * 보렐 셋 $B \in \mathcal{B}(\mathbb{R})$ 에 대해 $(\tau \in B) = \tau^{-1} (B)$ 로써, $(\tau = n)$ 은 $\tau^{-1} ( \left\{ n \right\} )$ 과 같다.정지 시간의 직관적인 개념은 관심 있는 사건이 일어나는―관찰되는 순간을 말한다. 가</description>
    </item>
    
    <item>
      <title>마틴게일의 정의</title>
      <link>https://freshrimpsushi.github.io/posts/definition-of-martingales/</link>
      <pubDate>Thu, 24 Oct 2019 00:00:00 +0000</pubDate>
      
      <guid>https://freshrimpsushi.github.io/posts/definition-of-martingales/</guid>
      <description>확률 공간 $( \Omega , \mathcal{F} , P)$ 이 주어져 있다고 하자.1. $\mathcal{F}$ 의 서브 시그마 필드의 시퀀스 $\left\{ \mathcal{F}_{n} \right\}_{n \in \mathbb{N}}$ 이 다음을 만족하면 필트레이션Filtration 이라고 부른다. $$ \forall n \in \mathbb{N}, \mathcal{F}_{n} \subset \mathcal{F}_{n+1} $$ 2. 필트레이션 $\left\{ \mathcal{F}_{n} \right\}_{n \in \mathbb{N}}$ 이 주어져 있을 때 르벡 적분 가능한 $\mathcal{F}_{n}$-가측 확률 변수 $X_{n}$ 의 시퀀스 $\left\{ X_{n} \right\}_{n \in \mathbb{N}}$ 가 이루는 순서쌍의 시퀀스 $\left\{</description>
    </item>
    
    <item>
      <title>확률과정론의 인크리먼트</title>
      <link>https://freshrimpsushi.github.io/posts/increment-of-stochastic-process/</link>
      <pubDate>Wed, 27 Mar 2019 00:00:00 +0000</pubDate>
      
      <guid>https://freshrimpsushi.github.io/posts/increment-of-stochastic-process/</guid>
      <description>확률과정 $\xi(t)$ 이 시간 $T$ 에서 정의되었고 $t_{0} &amp;lt; t_{1} &amp;lt; \cdots &amp;lt; t_{n} \in T$ 이라고 하자.1. $\xi ( t ) - \xi ( s ) $ 를 인크리먼트 라고 한다.2. 모든 $i=1, \cdots , n$ 에 대해 $\xi ( t_{i} ) - \xi ( t_{i-1} )$ 들이 서로 독립이면 $\xi(t)$ 이 독립 인크리먼트Independent Increment 를 갖는다고 한다.3. 모든 $h&amp;gt;0$ 와 $t,s,t+h,s+h \in T$ 에 대해 $\xi (t+h) - \xi ( s + h ) $ 가 같은 확률분포를 가지면 $\xi(t)$ 이 정상적 인</description>
    </item>
    
    <item>
      <title>도박꾼의 파산 문제</title>
      <link>https://freshrimpsushi.github.io/posts/gamblers-ruin-problem/</link>
      <pubDate>Thu, 28 Feb 2019 00:00:00 +0000</pubDate>
      
      <guid>https://freshrimpsushi.github.io/posts/gamblers-ruin-problem/</guid>
      <description>도박꾼의 파산 문제 는 랜덤워크의 일종으로 두 명의 플레이어가 한정된 돈을 걸고 둘 중 하나가 파산할 때까지 반복하는 게임을 상정한다.당신이 플레이어 중 하나라고 한다면, 위 도식과 같이 당신이 이길 확률이 $p$ 고 질 확률이 $(1-p)$ 라고 할 수 있다. 상태 $0$ 은 당신이 파산한 경우고, 상태 $N$ 은 당신이 상대의 돈을 모두 딴 경우로 더 이상 게임을 반복하지 않는다. 이는 $0$ 과</description>
    </item>
    
    <item>
      <title>일반화된 랜덤워크</title>
      <link>https://freshrimpsushi.github.io/posts/generalized-random-walk/</link>
      <pubDate>Thu, 21 Feb 2019 00:00:00 +0000</pubDate>
      
      <guid>https://freshrimpsushi.github.io/posts/generalized-random-walk/</guid>
      <description>시계열에서의 랜덤워크 확률과정 $\left\{ X_{n} \right\} $ 의 상태공간이 정수의 집합 $\left\{ \cdots , -2 , -1, 0 , 1 , 2 , \cdots \right\} $ 이고, 상태 $0$ 에서 이라고 하자. 다음 스텝에서 $1$ 만큼 작아질 확률을 $p$, $1$ 만큼 커질 확률이 $(1-p)$ 일 때 $\left\{ X_{n} \right\}$ 을 일반화된 랜덤워크 라고 한다. $\displaystyle p = {{1} \over {2}}$ 이면 상태 $0$ 은 리커런트하고, $\displaystyle p \ne {{1} \over {2}}$ 이면 상태 $0$ 은 트랜젼트하다. 랜덤워크란 확률 과정 중</description>
    </item>
    
    <item>
      <title>확률과정의 극한</title>
      <link>https://freshrimpsushi.github.io/posts/limit-of-probability-process/</link>
      <pubDate>Sat, 16 Feb 2019 00:00:00 +0000</pubDate>
      
      <guid>https://freshrimpsushi.github.io/posts/limit-of-probability-process/</guid>
      <description>현재의 상태가 $i$ 일 때, 무한한 스탭을 거쳐 $j$ 로 갈 확률을 $\displaystyle \pi_{j} := \lim_{n \to \infty} p_{ij}^{ ( n ) }$ 과 같이 나타낸다. 통계학이든 응용수학이든 하는 일이 대개 그렇지만 주된 관심사는 미래의 예측이다. 확률과정론에서 관심을 갖는 부분 역시 한 치 앞은 물론 먼 미래에 어떻게 될지가 궁금하다. 그리고 주로 이런 표현은 무한을 이용한다.정의에서 $\displaystyle \pi_{j} = \sum_{i} \pi_{i} p_{ij}$ 과 같이 표현할 수</description>
    </item>
    
    <item>
      <title>확률과정론에서 상태의 유형</title>
      <link>https://freshrimpsushi.github.io/posts/classification-of-state-in-stochastic-process/</link>
      <pubDate>Thu, 14 Feb 2019 00:00:00 +0000</pubDate>
      
      <guid>https://freshrimpsushi.github.io/posts/classification-of-state-in-stochastic-process/</guid>
      <description>$i,j$ 를 스테이트라고 하자.1. $p_{ij}^{ ( n ) } &amp;gt; 0$ 를 만족하는 $n \ge 0$ 이 존재하면 $j$ 는 $i$ 로부터 억세서블Accessible 하다고 한다.2. $i$ 와 $j$ 가 서로 억세서블하면 커뮤니케이트Cummunicate 하다고 한다.3. 커뮤니케이트한 스테이트들의 집합 중 가장 큰 것을 클래스Class 라고 한다. 두 스테이트가 커뮤니케이트하면 하나의 클</description>
    </item>
    
    <item>
      <title>채프만-콜모고로프 방정식 유도</title>
      <link>https://freshrimpsushi.github.io/posts/derivation-of-chapman-kolmogorov-equation/</link>
      <pubDate>Wed, 13 Feb 2019 00:00:00 +0000</pubDate>
      
      <guid>https://freshrimpsushi.github.io/posts/derivation-of-chapman-kolmogorov-equation/</guid>
      <description>$$ **displaystyle { p }_{ ij }^{ (n+m) } =\sum _{ k } { { p } _{ ik }^{ (n) } { p } _{ kj }^{ (m) } } $$ 스테이트 $i$ 에서 $j$ 로 갈 때까지 걸리는 $n+m$ 의 스텝을 $n$ 과 $m$ 으로 쪼개어 표현할 수 있다는 뜻이다.굳이 증명하지 않고 직관적으로 생각해봐도 $i$ 부터 $k$ 까지 $n$ 번 걸리는 확률과 $k$ 에서 $j$ 까지 $m$ 번 걸리는 확률을 생각해보면 $i$ 에서 $k$ 를 거쳐 $j$ 까지 갈 확률일테고, 모든 상태 $k$ 에 대해서 이</description>
    </item>
    
    <item>
      <title>마코프 체인</title>
      <link>https://freshrimpsushi.github.io/posts/mc-markov-chain/</link>
      <pubDate>Tue, 12 Feb 2019 00:00:00 +0000</pubDate>
      
      <guid>https://freshrimpsushi.github.io/posts/mc-markov-chain/</guid>
      <description>1. 확률과정 $ \left\{ X_{n} \right\} $ 이 $p \left( X_{n+1} = j \mid X_{n} = i , X_{n-1} = k , \cdots , X_{0} = l \right) = p \left( X_{n+1} = j \mid X_{n} = i \right) $ 을 만족하면 마코프 체인 이라고 한다.2. $p_{ij} := p \left( X_{n+1} = j \mid X_{n} = i \right) $ 을 전이 확률Transition Probability 이라고 하며 현재 상태를 의미하는 $i$ 를 소스 스테이트Source State , 목표 상태를 의미하는 $j$ 를 타겟 스테이트Target State 라고 한다. $k$</description>
    </item>
    
    <item>
      <title>확률과정이란</title>
      <link>https://freshrimpsushi.github.io/posts/stochastic-process/</link>
      <pubDate>Sun, 10 Feb 2019 00:00:00 +0000</pubDate>
      
      <guid>https://freshrimpsushi.github.io/posts/stochastic-process/</guid>
      <description>1. 확률변수 $X : \Omega \to E$ 의 공역을 상태공간 이라고 한다.2. 확률변수의 집합 $ \left\{ X_{t} \mid t \in [ 0 , \infty ) \right\} $ 을 연속적 확률과정 이라고 한다.3. 확률변수의 수열 $\left\{ X_{n} \mid n = 0, 1, 2, \cdots \right\} $ 을 이산적 확률과정 이라고 한다. 확률과정은 과정Process이라는 단어 때문에 이해하기 어려운, 전형적으로 말이 어려워서 어려운 개념이다. &amp;lsquo;</description>
    </item>
    
    <item>
      <title>돈스커의 정리</title>
      <link>https://freshrimpsushi.github.io/posts/donskers-theorem-invariance-priciple-functional-clt/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://freshrimpsushi.github.io/posts/donskers-theorem-invariance-priciple-functional-clt/</guid>
      <description>$\left\{ \xi_i \right\}_{i \in \mathbb{N}}$ 이 $(0,1)$ 에서 정의된 확률 과정이라고 하자. 함수 공간 $C[0,1]$ 에서 확률 함수 $X_{n}$ 가 다음과 같이 정의되어 있다고 하자. $$ X_{n} := {{ 1 } \over { \sqrt{n} }} \sum_{i=1}^{\lfloor nt \rfloor} \xi_{i} + \left( nt - \lfloor nt \rfloor \right) {{ 1 } \over { \sqrt{n} }} \xi_{\lfloor nt \rfloor + 1} $$ $X_{n}$ 은 $n \to \infty$ 일 때 위너 프로세스 $W$ 로 분포 수렴한다. * $C[0,1]$ 은 정의역이 $[0,1]$ 이고 공역이 $\mathbb{R}$ 인 연속함수들의 공간이다. * $\lfloor \cdot \rfloor$ 은 바닥 함수Floor Fun</description>
    </item>
    
    <item>
      <title>위너 프로세스</title>
      <link>https://freshrimpsushi.github.io/posts/wiener-process/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://freshrimpsushi.github.io/posts/wiener-process/</guid>
      <description>$s&amp;lt; t &amp;lt; t+u$ 라고 할 때, 다음의 조건들을 만족하는 확률과정 $\left\{ W_{t} \right\}$ 를 위너 프로세스 라고 한다. (i) $W_{0} = 0$ (ii) $\left( W_{t+u} - W_{t} \right) \perp W_{s}$ (iii) $\left( W_{t+u} - W_{t} \right) \sim N ( 0, u )$ (iv) $W_{t}$ 의 샘플 패스는 거의 어디서나 연속이다. 위너 프로세스는 브라운 운동Brownian Motion 이라고도 불린다. (ii) $\left( W_{t+u} - W_{t} \right) \perp W_{s}$ 이고 (iii) 인크리먼트가 정규분포 $N(0,t)$ 를 따른다는 것은 위너 프로세스는 특정 시</description>
    </item>
    
    <item>
      <title>푸아송 프로세스</title>
      <link>https://freshrimpsushi.github.io/posts/poisson-process/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://freshrimpsushi.github.io/posts/poisson-process/</guid>
      <description>지수분포와 푸아송분포의 관계 1. $\tau_{1} , \tau_{2} , \cdots \sim \text{exp} ( \lambda )$ 이라고 하자. $\lambda$ 를 강도Intensity 라고 한다.2. $\displaystyle s_{n} := \sum_{k=1}^{n} \tau_{k}$ 를 도달 시간Arrival Time 이라고 한다.3. $N_{t} := \begin{cases} 0 , &amp;amp; 0 \le t &amp;lt; s_{1} \\ k , &amp;amp; s_{k} \le t &amp;lt; s_{k+1} \end{cases}$ 와 같이 정의된 확률과정 $\left\{ N_{t} \right\}_{t = 0}^{\infty}$ 를 푸아송 프로세스 라고 한다. (1) $\displaystyle p (N_{t} = k ) = {{ ( \lambda t )^{t} e^{ - \lambda t} } \over { k! }}$(2) $\displaystyle p \left(</description>
    </item>
    
    <item>
      <title>히든 마코프 체인</title>
      <link>https://freshrimpsushi.github.io/posts/hidden-markov-chain/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://freshrimpsushi.github.io/posts/hidden-markov-chain/</guid>
      <description>위의 그림과 같이 어떤 기계에서 일정한 시간마다 어떤 물건을 생산한다고 생각해보자. 녹색이 정상적인 양품 $1$ 이고 적색이 폐기해야하는 불량품 $0$ 이라면, 지금까지의 기록은 $\left( 1, 0 , 1 \right) $ 이 될 것이다. 이렇게 실제로 눈에 보이는 결과를 시그널Signal 이라고 한다.단, 불량품이 나올 확률은 기계가 정상인지 고장인지에 따라 다르다고 하자. 정상 $+$</description>
    </item>
    
  </channel>
</rss>
