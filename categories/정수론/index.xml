<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>정수론 on 생새우초밥집</title>
    <link>https://freshrimpsushi.github.io/categories/%EC%A0%95%EC%88%98%EB%A1%A0/</link>
    <description>Recent content in 정수론 on 생새우초밥집</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>ko</language>
    <lastBuildDate>Thu, 24 Feb 2022 00:00:00 +0000</lastBuildDate><atom:link href="https://freshrimpsushi.github.io/categories/%EC%A0%95%EC%88%98%EB%A1%A0/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>소수와 합성수</title>
      <link>https://freshrimpsushi.github.io/posts/prime-number-and-composite-number/</link>
      <pubDate>Thu, 24 Feb 2022 00:00:00 +0000</pubDate>
      
      <guid>https://freshrimpsushi.github.io/posts/prime-number-and-composite-number/</guid>
      <description>정의 1 자연수 $p \ge 2$ 의 약수가 $1$ 과 $p$ 뿐이면 소수Prime NUmber라 한다. 자연수 $m \ge 2$ 가 소수가 아니면 합성수Composite Number라 한다. 설명 정의에 따라 $2$ 는 당연히 소수다. 수론Number Theory에서 다루는 수는 아주 넓게 잡아 유리수까지인데, 실제 그 연구대상은 &amp;lsquo;소수론&amp;rsquo;이라 불</description>
    </item>
    
    <item>
      <title>짝수의 정의</title>
      <link>https://freshrimpsushi.github.io/posts/definition-of-even-number/</link>
      <pubDate>Tue, 11 Jan 2022 00:00:00 +0000</pubDate>
      
      <guid>https://freshrimpsushi.github.io/posts/definition-of-even-number/</guid>
      <description>정의 쉬운 정의 $2$ 로 나눈 나머지가 $0$ 인 정수를 짝수라 한다. 어려운 정의 $$ a = 2 \cdot k $$ 정수 $a$ 에 대해 위를 만족하는 정수 $k$ 가 존재하면 $a$ 가 짝수Even라 한다. 짝수가 아닌 정수를 홀수Odd라 한다. 설명 쿨타임이 돌때마다 인터넷 커뮤니티를 뜨겁게 달구는 질문이 있다. &amp;ldquo;$0$ 은 짝수인가?&amp;rdquo; 전국민이 초등학교 때 다 배웠는데도 매번 논쟁이</description>
    </item>
    
    <item>
      <title>몫과 나머지</title>
      <link>https://freshrimpsushi.github.io/posts/quotient-and-remainder/</link>
      <pubDate>Fri, 07 Jan 2022 00:00:00 +0000</pubDate>
      
      <guid>https://freshrimpsushi.github.io/posts/quotient-and-remainder/</guid>
      <description>정의 1 두 정수 $A$ 와 $B \ne 0$ 에 대해 $B &amp;gt; R \ge 0$ 과 $$ A = Q \cdot B + R $$ 을 만족하는 정수 $Q$, $R$ 이 있다고 하자. 이 때 $Q$ 를 몫Quotient, $R$ 을 나머지Remainder라 한다. 설명 요즘 초등학교에서 몫과 나머지를 어떻게 정의하는지는 모르겠으나, 엄밀한 이산수학과 정수론 수준과는 차이가 있을 것이다. 정의에서 주목할만한 점은 몫과 나머지를 나</description>
    </item>
    
    <item>
      <title>최대공약수와 서로소</title>
      <link>https://freshrimpsushi.github.io/posts/greatest-common-divisor-and-relatively-prime/</link>
      <pubDate>Mon, 03 Jan 2022 00:00:00 +0000</pubDate>
      
      <guid>https://freshrimpsushi.github.io/posts/greatest-common-divisor-and-relatively-prime/</guid>
      <description>정의 1 두 정수 $n$ 과 $m \ne 0$ 에 대해 다음을 만족하는 정수 $k$ 가 존재하면 $n$ 을 $m$ 이 나눈다고 한다. $$ n = mk $$ 이 때 $n$ 을 $m$ 의 배수Multiple, $m$ 을 $n$ 의 약수Divisor라 하며 다음과 같이 표기한다. $$ m \mid n $$ $m$ 이 $n$ 을 나눌 수 없으면 삭선을 그어 $m \nmid n$ 로 나타낸다. $0$ 이 아닌 두 정수 $a$, $b$ 가 주어져 있다고 하자. 둘 모두를 나누는 약수 중 가장 큰 수</description>
    </item>
    
    <item>
      <title>수론에서의 p-진수</title>
      <link>https://freshrimpsushi.github.io/posts/p-adic-number/</link>
      <pubDate>Mon, 17 Aug 2020 00:00:00 +0000</pubDate>
      
      <guid>https://freshrimpsushi.github.io/posts/p-adic-number/</guid>
      <description>정의 1 소수 $p$ 와 정수 $a \in \mathbb{Z}$ 에 대해 다음과 같이 정의된 $v_{p}$ 를 $a$ 의 $p$-진수 부치$p$-adic Valuation라 한다. $$ v_{p} (a) := \sup \left\{ e \in \mathbb{Z} : p^{e} \mid a \right\} $$ 정리 2 [0]: 모든 소수 $p$ 에 대해 $$ v_{p} (0) = \infty $$ [1]: $$v_{p} (xy) = v_{p}(x) + v_{p}(y)$$ [2]: $$v_{p} (x+y) \ge \min \left\{ v_{p} (x) , v_{p} (y) \right\}$$ [3]: $n \in \mathbb{N}$, $x , y \in \mathbb{Z}$, 소수 $p$ 가 $$ \gcd (n,p) = 1 \\ p \mid (x \mp y) \\ p \nmid x \\ p \nmid y $$ 를 만족하면 $$ v_{p} \left( x^{n}</description>
    </item>
    
    <item>
      <title>지수승강 보조정리 증명</title>
      <link>https://freshrimpsushi.github.io/posts/proof-of-lifting-the-exponent-lemma-lte-lemma/</link>
      <pubDate>Mon, 17 Aug 2020 00:00:00 +0000</pubDate>
      
      <guid>https://freshrimpsushi.github.io/posts/proof-of-lifting-the-exponent-lemma-lte-lemma/</guid>
      <description>정리 $n \in \mathbb{N}$, $x , y \in \mathbb{Z}$, 소수 $p \ne 2$ 가 $$ \gcd (n,p) = 1 \\ p \mid (x - y) \\ p \nmid x \\ p \nmid y $$ 를 만족하면 $$ v_{p} \left( x^{n} - y^{n} \right) = v_{p} \left( x - y \right) + v_{p} (n) $$ $v_{p} (a)$ 는 $a$ 의 $p$-진수 부치를 의미한다. 증명 1 전략: $p$-진수 부치의 성질들에서 자연스럽게 연역된다. 그런데 정작 그 성질들을 증명하는 과정이 꽤 길다. 관건은 아래의 성질들을 앞서 보이는 것인데, 초등</description>
    </item>
    
    <item>
      <title>산술 함수의 부분합에 대한 일반화된 디리클레 곱 표현</title>
      <link>https://freshrimpsushi.github.io/posts/partial-sums-of-dirichlet-product/</link>
      <pubDate>Thu, 13 Aug 2020 00:00:00 +0000</pubDate>
      
      <guid>https://freshrimpsushi.github.io/posts/partial-sums-of-dirichlet-product/</guid>
      <description>정리 1 $h = f \ast g$ 인 산술 함수 $f,g,h$ 에 대해 $F, G, H$ 를 다음과 같이 정의하자. $$ F (x) := \sum_{n \le x} f(x) \\ G (x) := \sum_{n \le x} g(x) \\ H (x) := \sum_{n \le x} h(x) $$ 그러면 $$ H = f \circ G = g \circ F $$ 여기서 연산 $\circ$ 는 일반화된 컨볼루션을 의미한다. 다시 말해, 다음이 성립한다. $$ H(x) = \sum_{n \le x} f(n) G \left( {{ x } \over { n }} \right) = \sum_{n \le x} g(n) F \left( {{ x } \over { n }} \right) $$ 증명 $$ U(x) := \begin{cases} 0 &amp;amp;, 0 &amp;lt; x &amp;lt; 1</description>
    </item>
    
    <item>
      <title>일반화된 디리클레 곱</title>
      <link>https://freshrimpsushi.github.io/posts/generalized-convolution/</link>
      <pubDate>Fri, 07 Aug 2020 00:00:00 +0000</pubDate>
      
      <guid>https://freshrimpsushi.github.io/posts/generalized-convolution/</guid>
      <description>정의 1 $F : \mathbb{R}^{+} \to \mathbb{C}$ 는 $x \in (0,1)$ 에서 $F(x) = 0$ 인 함수라고 하자. 임의의 산술 함수 $\alpha$ 에 대해 다음과 같은 연산 $\circ$ 을 일반화된 디리클레 곱이라 정의한다. $$ (\alpha \circ F)(x) := \sum_{n \le x} \alpha(n) F \left( {{ x } \over { n }} \right) $$ 기초 성질 $\alpha$ 와 $\beta$ 는 산술 함수고 $F , G : \mathbb{R}^{+} \to \mathbb{C}$ 는 $x \in (0,1)$ 에서 함숫값이 $0$ 인 함수이라 하자. [1]: $\alpha \circ \left( \beta \circ F \right) = \left( \alpha \ast\ \beta \right) \circ F$ [2] 좌항등원: $(I \circ F) = F$ [3] 일반</description>
    </item>
    
    <item>
      <title>셀버그 항등식 증명</title>
      <link>https://freshrimpsushi.github.io/posts/proof-of-selberg-identity/</link>
      <pubDate>Sat, 06 Jun 2020 00:00:00 +0000</pubDate>
      
      <guid>https://freshrimpsushi.github.io/posts/proof-of-selberg-identity/</guid>
      <description>정리 1 $$ \Lambda (n) \log n + \sum_{d \mid n } \Lambda (d) \Lambda \left( {{ n } \over { d }} \right) = \sum_{d \mid n} \mu (d) \log^{2} {{ n } \over { d }} $$ 증명 전략: 보이는 것만큼 어렵지 않다. 산술함수의 미분만 있다면 아주 간단하게 유도할 수 있다. 망골트 급수: $$ \sum_{d \mid n} \Lambda ( d ) = \log n $$ 산술 함수의 미분의 정의에 따라 망골트 급수는 컨볼루션을 써서 다음과 같이 나타낼 수 있다. $$ \Lambda \ast\ u = 1 \cdot \log n = u \log n</description>
    </item>
    
    <item>
      <title>산술 함수의 미분</title>
      <link>https://freshrimpsushi.github.io/posts/derivative-of-arithmetical-function/</link>
      <pubDate>Tue, 02 Jun 2020 00:00:00 +0000</pubDate>
      
      <guid>https://freshrimpsushi.github.io/posts/derivative-of-arithmetical-function/</guid>
      <description>정의 1 산술 함수 $f$ 의 미분 혹은 도함수 $f &#39;$ 를 다음과 같이 정의한다. $$ f &#39; (n) := f(n) \log n \qquad , n \in \mathbb{N} $$ 기초 성질 [1] 합의 미분법: $(f+g)&#39; = f &#39;+g&#39;$ [2] 곱의 미분법: $\left( f \ast g \right)&#39; = f &#39;\ast g + f \ast g&#39;$ [3] 몫의 미분법: $f(1) \ne 0$ 이면 $\left( f^{-1} \right)&#39; = - f &#39; \ast\ (f \ast\ f)^{-1}$ 설명 산술 함수는 개념적으로는 그냥 수열에 지나지 않기 때문에 흔히 변화율로 설명되곤 하는 미분을 정의할 수 없다. 하</description>
    </item>
    
    <item>
      <title>산술 함수의 벨 급수</title>
      <link>https://freshrimpsushi.github.io/posts/bell-series-of-arithmetical-function/</link>
      <pubDate>Thu, 28 May 2020 00:00:00 +0000</pubDate>
      
      <guid>https://freshrimpsushi.github.io/posts/bell-series-of-arithmetical-function/</guid>
      <description>정의 1 주어진 산술 함수 $f$ 와 소수 $p$ 에 대해 다음과 같이 정의된 $f_{p}(x)$ 를 모듈로 $p$ 에서 $f$ 의 벨 급수 라한다. $$ f_{p}(x) := \sum_{n=0}^{\infty} f \left( p^{n} \right) x^{n} $$ 기초 성질 [1] 유일성: 두 산술 함수 $f,g$ 가 승법적라고 하자. 모든 소수 $p$ 에 대해$f = g \iff f_{p}(x) = g_{p}(x)$ [2] 디리클레 곱: 두 산술 함수 $f,g$ 의 디리클레 곱이 $h = f \ast\ g$ 이라고 하자. 그러면 모든 소수 $p$ 에 대해 $$ h_{p}(x) = f_{p}(x) g_{p} (x) $$ 이다. 만약 $h$ 가 승</description>
    </item>
    
    <item>
      <title>해석적 수론에서의 리우빌 함수</title>
      <link>https://freshrimpsushi.github.io/posts/liouvilles-function-in-analytic-number-theory/</link>
      <pubDate>Sun, 24 May 2020 00:00:00 +0000</pubDate>
      
      <guid>https://freshrimpsushi.github.io/posts/liouvilles-function-in-analytic-number-theory/</guid>
      <description>정의 1 소수 $p_{1} , \cdots , p_{k}$ 에 대해 자연수 $n$ 을 $n = p_{1}^{a_{1}} \cdots p_{k}^{a_{k}}$ 과 같이 나타낸다고 하자. 다음과 같이 정의된 산술 함수 $\lambda$ 를 리우빌 함수라 한다. $$ \lambda (n) = (-1)^{a_{1} + \cdots a_{k}} $$ 기초 성질 [1] 리우빌 급수: $n$ 이 제곱수일 때만 $1$ 이고 그 외엔 $0$ 이다. 다시 말해, $$ \sum_{d \mid n} \lambda (d) = \begin{cases} 1 &amp;amp;, n \text{ is a square} \\ 0 &amp;amp; , \text{otherwise}\end{cases} $$ [2] 완전 승법성: 모든 $m,n \in \mathbb{N}$ 에 대해 $\lambda(mn) = \lambda(m) \lambda(n)$ 설명 $$ \begin{matrix} n &amp;amp; 1 &amp;amp; 2 &amp;amp;</description>
    </item>
    
    <item>
      <title>해석적 수론에서의 망골트 함수</title>
      <link>https://freshrimpsushi.github.io/posts/mangoldt-function-in-analytic-number-theory/</link>
      <pubDate>Wed, 20 May 2020 00:00:00 +0000</pubDate>
      
      <guid>https://freshrimpsushi.github.io/posts/mangoldt-function-in-analytic-number-theory/</guid>
      <description>정의 1 다음과 같이 정의된 산술 함수 $\Lambda$ 를 망골트 함수라 한다. $$ \Lambda(n) := \begin{cases} \log p &amp;amp; n = p^{m} , p \text{ is prime}, m \in \mathbb{N} \\ 0 &amp;amp; \text{otherwise} \end{cases} $$ 기초 성질 [1] 망골트 급수: 로그 함수 $\log$ 다. 다시 말해, $$ \sum_{d \mid n} \Lambda ( d ) = \log n $$ 설명 $$ \begin{matrix} n &amp;amp; 1 &amp;amp; 2 &amp;amp; 3 &amp;amp; 4 &amp;amp; 5 &amp;amp; 6 &amp;amp; 7 &amp;amp; 8 &amp;amp; 9 &amp;amp; 10 \\ \Lambda(n) &amp;amp; 0 &amp;amp; \log 2 &amp;amp; \log 3 &amp;amp; \log 2 &amp;amp; \log 5 &amp;amp; 0 &amp;amp; \log 7 &amp;amp; \log 2 &amp;amp; \log 3 &amp;amp; 0 \\ \sum_{d \mid n} \Lambda(d) &amp;amp; 0 &amp;amp; \log 2 &amp;amp;</description>
    </item>
    
    <item>
      <title>뫼비우스 역 공식 유도</title>
      <link>https://freshrimpsushi.github.io/posts/derivation-of-m%C3%B6bius-inversion-formula/</link>
      <pubDate>Sat, 16 May 2020 00:00:00 +0000</pubDate>
      
      <guid>https://freshrimpsushi.github.io/posts/derivation-of-m%C3%B6bius-inversion-formula/</guid>
      <description>공식 1 $f$ 와 $g$ 가 산술 함수고 $\mu$ 는 뫼비우스 함수다. $$ f(n) = \sum_{d \mid n} g(d) \iff g(n) = \sum_{d \mid n} f(d) \mu \left( {{ n } \over { d }} \right) $$ 설명 뫼비우스 함수는 그 정의만 보았을 땐 부자연스러운 함수로 보이지만, 사실 산술 함수 전체를 관통하는 핵심 공식에 등장하게 된다. 임의의 산술 함수 $g$ 의 급수는 유닛 함수 $u$ 와 컨볼루션 $\ast$ 을 써서 $g*u$ 와 같이 표현할 수 있는데, 마침 $u$ 의 인버스가 $\mu$,</description>
    </item>
    
    <item>
      <title>해석적 수론에서의 유닛 함수</title>
      <link>https://freshrimpsushi.github.io/posts/unit-function-in-analytic-number-theory/</link>
      <pubDate>Tue, 12 May 2020 00:00:00 +0000</pubDate>
      
      <guid>https://freshrimpsushi.github.io/posts/unit-function-in-analytic-number-theory/</guid>
      <description>정의 1 다음과 같이 정의된 산술 함수 $u$ 를 유닛 함수라 한다. $$ u(n) := 1 $$ 기초 성질 [1] 유닛 급수: 약수의 갯수 $\sigma_{0}$ 다. 다시 말해, $$ \sum_{d \mid n} u(d) = \sigma_{0} (n) $$ [2] 완전 승법성: 모든 $m,n \in \mathbb{N}$ 에 대해 $u(mn) = u(m) u(n)$ 설명 $$ \begin{matrix} n &amp;amp; 1 &amp;amp; 2 &amp;amp; 3 &amp;amp; 4 &amp;amp; 5 &amp;amp; 6 &amp;amp; 7 &amp;amp; 8 &amp;amp; 9 &amp;amp; 10 \\ u (n) &amp;amp; 1 &amp;amp; 1 &amp;amp; 1 &amp;amp; 1 &amp;amp; 1 &amp;amp; 1 &amp;amp; 1 &amp;amp; 1 &amp;amp; 1 &amp;amp; 1 \\ \sum_{d \mid n} u(d) &amp;amp; 1 &amp;amp; 2 &amp;amp; 2 &amp;amp; 3 &amp;amp; 2 &amp;amp; 4 &amp;amp; 2 &amp;amp; 4</description>
    </item>
    
    <item>
      <title>해석적 수론에서의 오일러 토션트 함수</title>
      <link>https://freshrimpsushi.github.io/posts/totient-fuction-in-analytic-number-theory/</link>
      <pubDate>Tue, 28 Apr 2020 00:00:00 +0000</pubDate>
      
      <guid>https://freshrimpsushi.github.io/posts/totient-fuction-in-analytic-number-theory/</guid>
      <description>정의 1 다음과 같이 정의된 산술 함수 $\varphi$ 을 토션트 함수라 한다. $$ \varphi (n) := \sum_{\gcd ( k , n ) = 1} 1 $$ 기초 성질 [1] 토션트 급수: 놈 $N$ 이다. 다시 말해, $$ \sum_{d \mid n } \varphi (d) = N(n) $$ [2] 승법성: $\gcd (m,n) = 1$ 을 만족하는 모든 $m, n \in \mathbb{N}$ 에 대해 $\varphi (mn) = \varphi (m) \varphi (n)$ 설명 $$ \begin{matrix} n &amp;amp; 1 &amp;amp; 2 &amp;amp; 3 &amp;amp; 4 &amp;amp; 5 &amp;amp; 6 &amp;amp; 7 &amp;amp; 8 &amp;amp; 9 &amp;amp; 10 \\ \varphi(n) &amp;amp; 1 &amp;amp; 1 &amp;amp; 2 &amp;amp; 2 &amp;amp; 4 &amp;amp; 2 &amp;amp; 6 &amp;amp; 4 &amp;amp; 6 &amp;amp; 4 \\ \sum_{d</description>
    </item>
    
    <item>
      <title>해석적 수론에서의 뫼비우스 함수</title>
      <link>https://freshrimpsushi.github.io/posts/m%C3%B6bius-function-in-analytic-number-theory/</link>
      <pubDate>Fri, 24 Apr 2020 00:00:00 +0000</pubDate>
      
      <guid>https://freshrimpsushi.github.io/posts/m%C3%B6bius-function-in-analytic-number-theory/</guid>
      <description>정의 1 소수 $p_{1} , \cdots , p_{k}$ 에 대해 자연수 $n$ 을 $n = p_{1}^{a_{1}} \cdots p_{k}^{a_{k}}$ 과 같이 나타낸다고 하자. 다음과 같이 정의된 산술 함수 $\mu$ 을 뫼비우스 함수라 한다. $$ \mu(n) := \begin{cases} 1 &amp;amp;, n=1 \\ (-1)^{k} &amp;amp;, a_{1} = \cdots = a_{k} = 1 \\ 0 &amp;amp; , \text{otherwise} \end{cases} $$ 기초 성질 [1] 뫼비우스 급수: 아이덴터티 $I$ 다. 다시 말해, $$ \sum_{d \mid n } \mu (d) = I(n) $$ [2] 승법성: $\gcd (m,n) = 1$ 을 만족하는 모든 $m, n \in \mathbb{N}$ 에 대해 $\mu (mn) = \mu (m) \mu (n)$ 설명 $$</description>
    </item>
    
    <item>
      <title>해석적 정수론에서의 놈</title>
      <link>https://freshrimpsushi.github.io/posts/norm-in-analytic-number-theory/</link>
      <pubDate>Mon, 20 Apr 2020 00:00:00 +0000</pubDate>
      
      <guid>https://freshrimpsushi.github.io/posts/norm-in-analytic-number-theory/</guid>
      <description>정의 1 다음과 같이 정의된 산술 함수 $N$ 을 놈이라 한다. $$ N(n) := n $$ 기초 성질 [1] 놈 급수: 시그마 함수 $\sigma = \sigma_{1}$ 다. 다시 말해, $$ \sum_{d \mid n } N(d) = \sigma_{1}(n) $$ [2] 완전 승법성: 모든 $m,n \in \mathbb{N}$ 에 대해 $N(mn) = N(m) N (n)$ 설명 $$ \begin{matrix} n &amp;amp; 1 &amp;amp; 2 &amp;amp; 3 &amp;amp; 4 &amp;amp; 5 &amp;amp; 6 &amp;amp; 7 &amp;amp; 8 &amp;amp; 9 &amp;amp; 10 \\ N(n) &amp;amp; 1 &amp;amp; 2 &amp;amp; 3 &amp;amp; 4 &amp;amp; 5 &amp;amp; 6 &amp;amp; 7 &amp;amp; 8 &amp;amp; 9 &amp;amp; 10 \\ \sum_{d \mid n} N(d) &amp;amp; 1 &amp;amp; 3 &amp;amp; 4 &amp;amp; 7 &amp;amp; 6 &amp;amp; 6 &amp;amp; 8 &amp;amp; 15 &amp;amp;</description>
    </item>
    
    <item>
      <title>해석적 수론에서의 디바이저 함수</title>
      <link>https://freshrimpsushi.github.io/posts/divisor-function-in-analytic-number-theory/</link>
      <pubDate>Thu, 16 Apr 2020 00:00:00 +0000</pubDate>
      
      <guid>https://freshrimpsushi.github.io/posts/divisor-function-in-analytic-number-theory/</guid>
      <description>정의 1 $\alpha \in \mathbb{C}$ 에 대해 다음과 같이 정의된 $\sigma_{\alpha} : \mathbb{N} \to \mathbb{C}$ 을 디바이저 함수라 부른다. $$ \sigma_{\alpha} (n) := \sum_{d \mid n} d^{\alpha} $$ 기초 성질 [1] 승법성: $\gcd (m,n) = 1$ 을 만족하는 모든 $m, n \in \mathbb{N}$ 에 대해 $\sigma_{\alpha} (mn) = \sigma_{\alpha} (m) \sigma_{\alpha} (n)$ [2]: 소수 $p$ 와 자연수 $a$ 에 대해 $$ \sigma_{\alpha} \left( p^{a} \right) = \begin{cases} a +1 &amp;amp; , \alpha = 0 \\ {{ p^{\alpha (a+1)} - 1 } \over { p^{\alpha} - 1 }} &amp;amp;,\alpha \ne 0 \end{cases} $$ 설명 특히 $\alpha = 0$ 이면 약수의 수를 나타내는 함수 $d := \sigma_{0}$ 로 나타내기도</description>
    </item>
    
    <item>
      <title>승법적 함수의 아벨리안 그룹</title>
      <link>https://freshrimpsushi.github.io/posts/abelian-group-of-multiplicative-functions/</link>
      <pubDate>Sun, 12 Apr 2020 00:00:00 +0000</pubDate>
      
      <guid>https://freshrimpsushi.github.io/posts/abelian-group-of-multiplicative-functions/</guid>
      <description>정리 1 승법적 함수 들의 집합 $M$ 과 이항 연산 $\ast$ 에 대해 $(M,*)$ 는 아벨리안 그룹이다. 설명 산술 함수의 집합 $A$ 가 컨볼루션 $\ast$과 더불어 아벨리안 그룹 $(A,*)$ 가 되듯, 승법적 함수 역시 아벨리안 그룹이 된다. 물론 $M \le A$, 즉 $M$ 이 $A$ 의 서브 그룹이 된다. 증명 모노이드 $\left&amp;lt; G, \ast\ \right&amp;gt;$ 의 원소 $a$ 와 항등원 $e$ 대해 $a \ast\ a&amp;rsquo; = a&amp;rsquo; \ast\ a = e$ 를 만족하는 $a&amp;rsquo;$ 가 존재하면 $\left&amp;lt; G, \ast\ \r</description>
    </item>
    
    <item>
      <title>디리클레 곱과 승법적 성질</title>
      <link>https://freshrimpsushi.github.io/posts/drichlet-convolution-and-multiplicativity/</link>
      <pubDate>Wed, 08 Apr 2020 00:00:00 +0000</pubDate>
      
      <guid>https://freshrimpsushi.github.io/posts/drichlet-convolution-and-multiplicativity/</guid>
      <description>정리 1 [1]: $f$ 와 $g$ 가 승법적 함수면 $f \ast\ g$ 도 승법적 함수다. [2]: $g$ 와 $f \ast g$ 가 승법적 함수면 $f$ 도 승법적 함수다. 설명 이 성질들은 승법적 함수들의 대수적인 성질을 논할 때 바로 쓰일 수 있다: 정리 [1]은 다시 말해 승법적 함수가 컨볼루션 $\ast$에 대해 닫혀있음을 의미한다. 정리 [2]는 $g$ 와 $I = g\ast g^{-1}$ 와 같이 둠으로써 승법적 함수의 인버스가 승법적</description>
    </item>
    
    <item>
      <title>산술 함수의 승법적 성질</title>
      <link>https://freshrimpsushi.github.io/posts/multiplicativity-of-arithmetical-function/</link>
      <pubDate>Sat, 04 Apr 2020 00:00:00 +0000</pubDate>
      
      <guid>https://freshrimpsushi.github.io/posts/multiplicativity-of-arithmetical-function/</guid>
      <description>정의 1 $\forall n \in \mathbb{N}$ 에 대해 $f(n) = 0$ 은 아닌 산술 함수 $f$ 가 다음을 만족시키면 승법적 함수라 한다. $$ f(mn) = f(m) f(n) \qquad,\gcd(m,n)=1 $$ 승법적 함수가 다음 조건을 만족시키면 완전 승법적 함수라 한다. $$ f(mn) = f(m) f(n) \qquad,m,n \in \mathbb{N} $$ 기초성질 [1]: $f$ 가 승법적이면 $f(1) = 1$ 이다. [2]: $f$ 가 승법적 함수인 것과 모든 소수 $p_{1} , \cdots , p_{r}$ 와 모든 $a_{1} , \cdots, a_{r} \in \mathbb{N}$ 에 대해 $f \left( p_{1}^{a_{1}} \cdots p_{r}^{a_{r}} \right) = f \left( p_{1}^{a_{1}} \right) \cdots f \left( p_{r}^{a_{r}} \right)$ 은 동</description>
    </item>
    
    <item>
      <title>산술 함수의 아벨리안 그룹</title>
      <link>https://freshrimpsushi.github.io/posts/abelian-group-of-arithmetic-functions/</link>
      <pubDate>Fri, 27 Mar 2020 00:00:00 +0000</pubDate>
      
      <guid>https://freshrimpsushi.github.io/posts/abelian-group-of-arithmetic-functions/</guid>
      <description>정리 1 $f(1) \ne 0$ 이 아닌 산술 함수 들의 집합 $A = \left\{ f : \mathbb{N} \to \mathbb{C} \mid f(1) \ne 0 \right\}$ 과 이항 연산 $\ast$ 에 대해 $(A,*)$ 는 아벨리안 그룹이다. 설명 엄밀히 말하면 모든 산술 함수의 집합이 아벨리안 그룹이 될 수 있는 것은 아니다. 대수적 구조가 그룹이 되기 위한 마지막 조건인 역원의 존재성 때문인데, 다행스럽게도 그렇게 어려운 조건은 아니고 $f(1) \ne 0$ 이면 충분하다. 증명 모노이드 $\left&amp;lt;</description>
    </item>
    
    <item>
      <title>디리클레 곱에 대한 인버스</title>
      <link>https://freshrimpsushi.github.io/posts/inverse-function-under-drichlet-convolution/</link>
      <pubDate>Tue, 03 Mar 2020 00:00:00 +0000</pubDate>
      
      <guid>https://freshrimpsushi.github.io/posts/inverse-function-under-drichlet-convolution/</guid>
      <description>정의 1 산술 함수 $f$ 에 대해 다음을 만족하는 산술 함수 $f^{-1}$ 가 유일하게 존재하면 $f^{-1}$ 를 $f$ 의 (디리클레) 인버스라 한다. $$ f \ast\ f^{-1} = f^{-1} \ast\ f = I $$ 여기서 $I$ 는 컨볼루션에 대한 아이덴터티 함수다. 정리 [1]: 산술 함수 $f$ 가 $f(1) \ne 0$ 면 그 인버스 $f^{-1}$ 가 유일하게 존재하고, 다음과 같은 재귀함수로 나타난다. $$ f^{-1}(n) = \begin{cases} \displaystyle {{1} \over {f(1)}} &amp;amp;,n=1 \\ \displaystyle {{-1} \over {f(1)}} \sum_{d \mid n , d &amp;lt; n } f \left( {{ n</description>
    </item>
    
    <item>
      <title>디리클레 곱에 대한 아이덴터티</title>
      <link>https://freshrimpsushi.github.io/posts/identity-function-under-drichlet-convolution/</link>
      <pubDate>Mon, 24 Feb 2020 00:00:00 +0000</pubDate>
      
      <guid>https://freshrimpsushi.github.io/posts/identity-function-under-drichlet-convolution/</guid>
      <description>정의 1 다음과 같이 정의된 산술 함수 $I$ 를 아이덴터티 함수라 한다. $$ I(n) := \left[ {{ 1 } \over { n }} \right] $$ [1] 아이덴터티 급수: 유닛 함수 $u$ 다. 다시 말해, $$ \sum_{d \mid n}I(d) = u(n) = 1 $$ [2] 완전 승법성: 모든 $n , m \in \mathbb{N}$ 에 대해 $I (mn) = I(m) I(n)$ [a] 컨볼루션에 대한 항등원: 모든 산술 함수 $f$ 에 대해 $$ I \ast\ f = f \ast\ I = f $$ $\left[ x \right] = \lceil x \rceil$ 는 바닥 함수Floor function 로 불리며 $x$ 보</description>
    </item>
    
    <item>
      <title>산술 함수의 디리클레 곱</title>
      <link>https://freshrimpsushi.github.io/posts/dirichlet-product-of-arithmetical-function/</link>
      <pubDate>Thu, 20 Feb 2020 00:00:00 +0000</pubDate>
      
      <guid>https://freshrimpsushi.github.io/posts/dirichlet-product-of-arithmetical-function/</guid>
      <description>정의 1 두 산술 함수 $f$, $g$ 에 대해 다음을 만족시키는 산술 함수 $h$ 를 $f$, $g$ 의 디리클레 곱Dirichlet Product이라고 부른다. $$ h(n) = \sum_{d \mid n} f(d) g \left( {{ n } \over { d }} \right) $$ 디리클레 곱은 $h (n) = \left( f \ast g \right) (n) $ 혹은 $h = f \ast g$ 와 같이 나타낼 수 있다. 설명 디리클레 곱은 그 모양에서 짐작할 수 있듯 합성곱[컨볼루션]Convolution이라</description>
    </item>
    
    <item>
      <title>해석적 수론에서의 산술 함수</title>
      <link>https://freshrimpsushi.github.io/posts/arithmetical-function-in-analytic-number-theory/</link>
      <pubDate>Tue, 18 Feb 2020 00:00:00 +0000</pubDate>
      
      <guid>https://freshrimpsushi.github.io/posts/arithmetical-function-in-analytic-number-theory/</guid>
      <description>정의 1 정의역이 자연수의 집합 $\mathbb{N}$ 이고 공역이 실수 집합 $\mathbb{R}$ 혹은 복소수 집합 $\mathbb{C}$ 인 함수를 산술 함수라 한다. 설명 해석적 정수론에서는 다양한 산술 함수의 성질과 관계에 관심을 가지며, 다음과 같은 예들이 있다: 아이덴티티 함수 $I$ 디바이저 함수 $\sigma_{\alpha}$ 놈 $N$ 디바이저 함수 $\sigma_{\alpha}$ 뫼비우스 함수 $\mu$ 오일러 토션트 함수 $\varphi$ 유닛 함수 $u$ 망골트 함수 $\Lambda$ 리우빌 함수 $\lambda$ 산술 함수의 정</description>
    </item>
    
    <item>
      <title>1만번째까지의 소수 목록</title>
      <link>https://freshrimpsushi.github.io/posts/list-of-prime-numbers/</link>
      <pubDate>Tue, 11 Feb 2020 00:00:00 +0000</pubDate>
      
      <guid>https://freshrimpsushi.github.io/posts/list-of-prime-numbers/</guid>
      <description>소수 1만번째까지의 소수 목록이다. 다운로드 2 3 5 7 11 13 17 19 23 29 31 37 41 43 47 53 59 61 67 71 73 79 83 89 97 101 103 107 109 113 127 131 137 139 149 151 157 163 167 173 179 181 191 193 197 199 211 223 227 229 233 239 241 251 257 263 269 271 277 281 283 293 307 311 313 317 331 337 347 349 353 359 367 373 379 383 389 397 401 409 419 421 431 433 439 443 449 457 461 463 467 479 487 491 499 503 509 521 523 541 547 557 563 569 571 577 587 593 599 601 607 613 617 619 631 641 643 647 653 659 661 673 677 683 691 701 709 719 727 733</description>
    </item>
    
    <item>
      <title>아이젠슈타인 소수 정리 증명</title>
      <link>https://freshrimpsushi.github.io/posts/proof-of-eisenstein-prime-theorem/</link>
      <pubDate>Thu, 19 Sep 2019 00:00:00 +0000</pubDate>
      
      <guid>https://freshrimpsushi.github.io/posts/proof-of-eisenstein-prime-theorem/</guid>
      <description>정리 아이젠슈타인 링의 이리듀서블 엘리먼트를 아이젠슈타인 소수라 한다. 아이젠슈타인 정수 $\pi \in \mathbb{Z}[ \omega ]$ 가 다음의 조건들 중 하나를 만족하면 아이젠슈타인 소수다. (i): $\pi = 1 + \omega 2$ (ii): 소수 $p \in \mathbb{Z}$ 에 대해 $p \equiv 2 \pmod{3}$ 인 $\pi = p$ (iii): 소수 $p \in \mathbb{Z}$ 에 대해 $p \equiv 1 \pmod{3}$ 이라고 할 때, $p = u^2 - uv+ v^2$ 를 만족시키는 $\pi = u + \omega v$ (iv): 위의 (i)~(iii) 에 해당되는 $\pi$ 에 $\mathbb{Z} [\omega ]$ 의 유닛 $\pm 1</description>
    </item>
    
    <item>
      <title>아이젠슈타인 링의 놈</title>
      <link>https://freshrimpsushi.github.io/posts/norm-of-eisenstein-ring/</link>
      <pubDate>Tue, 17 Sep 2019 00:00:00 +0000</pubDate>
      
      <guid>https://freshrimpsushi.github.io/posts/norm-of-eisenstein-ring/</guid>
      <description>정리 아이젠슈타인 링 $\mathbb{Z}[ \omega ]$ 에 대해 함수 $N : \mathbb{Z}[\omega] \to \mathbb{Z}$ 를 생각해보자. [1]: $N(x + \omega y) := x^2 - xy + y^2$ 이라고 정의하면 $N$ 은 $\mathbb{Z}[ \omega ]$ 의 승법적 놈이 된다. [2]: $\mathbb{Z}[ \omega ]$ 은 유클리디안 도메인이다. [3]: $\mathbb{Z}[ \omega ]$ 의 유닛은 $\pm 1, \pm \omega, \pm \omega^2 $ 뿐이다. 설명 아이젠슈타인 정수는 추상대수의 도움을 받으면 훨씬 편하게 연구할 수 있다. 인티그럴 도메인에서 정의되는 놈 $N$ 으로 [2] 를 증</description>
    </item>
    
    <item>
      <title>아이젠슈타인 정수</title>
      <link>https://freshrimpsushi.github.io/posts/eisenstein-integer/</link>
      <pubDate>Sun, 15 Sep 2019 00:00:00 +0000</pubDate>
      
      <guid>https://freshrimpsushi.github.io/posts/eisenstein-integer/</guid>
      <description>정의 $\mathbb{Z} [ \omega ] := \left\{ a + \omega b : a, b \in \mathbb{Z} \right\}$ 를 아이젠슈타인 링Eisenstein Ring이라 하고, 그 원소를 아이젠슈타인 인티저라 한다. 정리 [1]: $\overline{ \omega } = \omega^{2} = - (1 + \omega)$ [2]: $( a \pm \omega b ) + ( c \pm \omega d) = (a \pm c) + \omega (b \pm d)$ [3]: $( a + \omega b )( c + \omega d) = (ac - bd) + \omega (ad - bd + bc)$ 설명 $\omega$ 는 삼차방정식 $x^3 +1 = 0$ 의 복소근 $\displaystyle \omega := {{-1 + \sqrt{-3}} \over {2}} = e^{2 \pi i/3 }$ 으</description>
    </item>
    
    <item>
      <title>가우스 소수 정리 증명</title>
      <link>https://freshrimpsushi.github.io/posts/proof-of-gaussian-prime-theorem/</link>
      <pubDate>Fri, 13 Sep 2019 00:00:00 +0000</pubDate>
      
      <guid>https://freshrimpsushi.github.io/posts/proof-of-gaussian-prime-theorem/</guid>
      <description>정리 1 가우시안 링의 이리듀서블 엘리먼트를 가우스 소수라 한다. 가우스 정수 $\pi \in \mathbb{Z}[i]$ 가 다음의 조건들 중 하나를 만족하면 가우스 소수다. (i): $\pi = 1 + i$ (ii): 소수 $p \in \mathbb{Z}$ 에 대해 $p \equiv 3 \pmod{4}$ 인 $\pi = p$ (iii): 소수 $p \in \mathbb{Z}$ 에 대해 $p \equiv 1 \pmod{4}$ 이라고 할 때, $p = u^2 + v^2$ 를 만족시키는 $\pi = u + iv$ (iv): 위의 (i)~(iii) 에 해당되는 $\pi$ 에 $\mathbb{Z}[i]$ 의 유닛 $1,-1,i,-i$ 을 곱해서 구해지는 $ i^{k} \pi$ (iv): 위의 (i)~(iii) 에 해당</description>
    </item>
    
    <item>
      <title>가우시안 링의 놈</title>
      <link>https://freshrimpsushi.github.io/posts/norm-of-gaussian-ring/</link>
      <pubDate>Thu, 05 Sep 2019 00:00:00 +0000</pubDate>
      
      <guid>https://freshrimpsushi.github.io/posts/norm-of-gaussian-ring/</guid>
      <description>정리 1 가우시안 링 $\mathbb{Z}[i]$ 에 대해 함수 $N : \mathbb{Z}[i] \to \mathbb{Z}$ 를 생각해보자. [1]: $N(x + iy) := x^2 + y^2$ 이라고 정의하면 $N$ 은 $\mathbb{Z}[i]$ 의 승법적 놈이 된다. [2]: $\mathbb{Z}[i]$ 은 유클리디안 도메인이다. [3]: $\mathbb{Z}[i]$ 의 유닛은 $1,-1,i,-i$ 뿐이다. 설명 가우스 정수는 추상대수의 도움을 받으면 훨씬 편하게 연구할 수 있다. 인티그럴 도메인에서 정의되는 놈 $N$ 으로 [2] 를 증명하면 ED가 UFD 이므로 가우스 소수로 확장된 산술</description>
    </item>
    
    <item>
      <title>가우스 정수</title>
      <link>https://freshrimpsushi.github.io/posts/gaussian-integer/</link>
      <pubDate>Sat, 31 Aug 2019 00:00:00 +0000</pubDate>
      
      <guid>https://freshrimpsushi.github.io/posts/gaussian-integer/</guid>
      <description>정의 1 $\mathbb{Z} [i] := \left\{ a + i b : a, b \in \mathbb{Z} \right\}$ 를 가우시안 링Gaussian Ring이라 하고, 그 원소를 가우시안 인티저라 한다. 정리 [1]: $\overline{i} = i^{3}$ [2]: $( a \pm ib ) + ( c \pm id) = (a \pm c) + i (b \pm d)$ [3]: $( a + ib )( c + id) = (ac - bd) + i (ad + bc)$ 설명 $i$ 는 이차방정식 $x^2 +1 = 0$ 의 복소근으로써, $\mathbb{Z} [i]$ 은 인티저 링 $\mathbb{Z}$ 의 심플 익스텐젼이 된다. 마치 실수체 $\mathbb{R}$ 이 복소수체</description>
    </item>
    
    <item>
      <title>준소수의 소인수분해 문제가 쉽게 풀리는 조건</title>
      <link>https://freshrimpsushi.github.io/posts/condition-for-factorization-problem-be-solved-easily/</link>
      <pubDate>Wed, 24 Jul 2019 00:00:00 +0000</pubDate>
      
      <guid>https://freshrimpsushi.github.io/posts/condition-for-factorization-problem-be-solved-easily/</guid>
      <description>정리 1 준소수의 소인수분해 문제 $N = pq$ 는 다음의 조건 하에서 비교적 쉽게 풀리게 된다. (i): $p$ 가 스무스한 소수다. (ii): $p \approx q$ 설명 조건 (ii)의 의미는 $p$ 와 $q$ 의 차이가 적을 때 쉽게 풀린다는 것인데, 이에 대해서는 설명이 필요할 것이다: 언뜻 생각해보았을 때 $p,q \in \mathbb{N}$ 에 대해 $(p + q)$ 가 제한되어있다면 $N = pq$ 를 가장 크게 만드는 방법은 가능한 한 $p$ 와 $q$ 의 차가</description>
    </item>
    
    <item>
      <title>폴라드 p-1 소인수분해 알고리즘 증명</title>
      <link>https://freshrimpsushi.github.io/posts/proof-of-pollards-p-1-factorization-algorithm/</link>
      <pubDate>Tue, 23 Jul 2019 00:00:00 +0000</pubDate>
      
      <guid>https://freshrimpsushi.github.io/posts/proof-of-pollards-p-1-factorization-algorithm/</guid>
      <description>알고리즘 1 준소수 $N$ 이 주어져있다고 하자. $p$ 가 스무스 소수라면 $N$ 의 소인수분해 $N = pq$ 는 다음과 같이 구할 수 있다. Step 1. $a := 2$ 와 $L := 1$ 을 정한다. Step 2. $d := \gcd ( a^{L} - 1 , N )$ 를 계산한다. Step 3. $1&amp;lt; d &amp;lt; N$ 이면 $N$ 의 약수 $d = p$ 를 구한 것이므로 끝이다. 그 외의 경우엔 $L := (L+1)!$ 과 같이 업데이트한다. $L$ 이 너무 큰 경우엔 $L := 1$ 로 되돌리고 $a : = a+ 1$ 과 같</description>
    </item>
    
    <item>
      <title>골드바서-미칼리 확률 키 암호체계 증명</title>
      <link>https://freshrimpsushi.github.io/posts/proof-of-goldwasser-micali-probabilistic-key-cryptosystem/</link>
      <pubDate>Sun, 21 Jul 2019 00:00:00 +0000</pubDate>
      
      <guid>https://freshrimpsushi.github.io/posts/proof-of-goldwasser-micali-probabilistic-key-cryptosystem/</guid>
      <description>빌드업 왼쪽부터 순서대로 앨리스 , 밥 , 이브라 하자. 앨리스와 밥은 메세지를 주고받을 당사자고, 이브는 메세지에 관심이 있는 소극적 공격자다. 주황색 상자는 앨리스만 알고 있는 정보를, 하늘색 상자는 밥만 알고 있는 정보를, 검은색 상자는 공개된(이브도 알고 있는) 정보를 나타낸다. 앨리스는 밥에게 받아야할 메세지 $m \in \left\{ 0 , 1 \right\}$ 이 있다. $\displaystyle \left( {{</description>
    </item>
    
    <item>
      <title>RSA 공개 키 암호체계 증명</title>
      <link>https://freshrimpsushi.github.io/posts/proof-of-rsa-public-key-cryptosystem/</link>
      <pubDate>Fri, 19 Jul 2019 00:00:00 +0000</pubDate>
      
      <guid>https://freshrimpsushi.github.io/posts/proof-of-rsa-public-key-cryptosystem/</guid>
      <description>빌드업 왼쪽부터 순서대로 앨리스 , 밥 , 이브라 하자. 앨리스와 밥은 메세지를 주고받을 당사자고, 이브는 메세지에 관심이 있는 소극적 공격자다. 주황색 상자는 앨리스만 알고 있는 정보를, 하늘색 상자는 밥만 알고 있는 정보를, 검은색 상자는 공개된(이브도 알고 있는) 정보를 나타낸다. 앨리스는 밥에게 받아야할 메세지 $m \in \mathbb{N}$ 이 있다. 알고리즘 1 키 설</description>
    </item>
    
    <item>
      <title>소인수분해</title>
      <link>https://freshrimpsushi.github.io/posts/factorization/</link>
      <pubDate>Wed, 17 Jul 2019 00:00:00 +0000</pubDate>
      
      <guid>https://freshrimpsushi.github.io/posts/factorization/</guid>
      <description>정의 자연수 $N$ 에 대해 $N = p_{1}^{r_{1}} \cdots p_{n}^{r_{n}}$ 을 만족하는 소수 $p_{1} , \cdots , p_{n}$ 와 자연수 $r_{1} , \cdots , r_{n}$ 를 찾는 것을 소인수분해라 한다. 설명 역사적으로 소수는 늘 탐구의 대상이었으나 그럼에도 불구하고 아직 모르는 것이 많다. 페르마 판정법, 코셀트 판정법, 밀러-라빈 판정법과 같은 초등적 도구는 물론, 소수 정리를 비롯한 해석적 접근은 인간 지성의 위대한 산물이다. 완벽</description>
    </item>
    
    <item>
      <title>준소수</title>
      <link>https://freshrimpsushi.github.io/posts/semiprime/</link>
      <pubDate>Tue, 02 Apr 2019 00:00:00 +0000</pubDate>
      
      <guid>https://freshrimpsushi.github.io/posts/semiprime/</guid>
      <description>정의 두 소수의 곱을 준소수Semiprime라 한다. 설명 준소수의 예로써 $4 = 2 \cdot 2$ 이나 $21 = 3 \cdot 7$, $673703 = 719 \cdot 937$ 등이 있다. 일본어 번역으로는 반소수半素數라고도 하는데, 한국어 문서로는 준소수나 반소수나 둘 다 찾아보기 어렵다. 본질적으로 준소수는 준소수 자체가 아니라 소수의 성질을 어느정도 이어받아서 응용된다. 예를들어 제법 큰 두 개의 소</description>
    </item>
    
    <item>
      <title>이산로그 문제가 쉽게 풀리는 조건</title>
      <link>https://freshrimpsushi.github.io/posts/condition-for-discrete-log-problem-be-solved-easily/</link>
      <pubDate>Tue, 26 Mar 2019 00:00:00 +0000</pubDate>
      
      <guid>https://freshrimpsushi.github.io/posts/condition-for-discrete-log-problem-be-solved-easily/</guid>
      <description>정리 1 그룹 $G = F_{p}$ 의 원소 $g$ 가 오더 $N$ 이라고 하자. 그러면 이산로그 문제 $g^{x} = h$ 는 다음의 조건 하에서 비교적 쉽게 풀리게 된다. (i): $p$ 가 스무스 소수다. (ii): $p \equiv 3 \pmod{4}$ 고 $a$ 가 모듈로 $p$ 에 대한 이차잉여다. 증명 (i) $p$ 가 스무스한 소수면 폴리그-헬맨 알고리즘을 사용할 수 있으므로 이산로그 문제는 비교적 쉽게 풀린다. ■ (ii) $$ x^{2} \equiv a \pmod{p} $$ $a$ 가 모듈로 $p$ 에 대한 이</description>
    </item>
    
    <item>
      <title>폴리그-헬맨 알고리즘 증명</title>
      <link>https://freshrimpsushi.github.io/posts/proof-of-pohlig-hellman-algorithm/</link>
      <pubDate>Sun, 24 Mar 2019 00:00:00 +0000</pubDate>
      
      <guid>https://freshrimpsushi.github.io/posts/proof-of-pohlig-hellman-algorithm/</guid>
      <description>알고리즘 그룹 $G$ 의 원소 $g$ 가 오더 $N = q_{1}^{r_{1}} q_{2}^{r_{2}} \cdots q_{t}^{r_{t}}$ 이라고 하자. 그러면 이산로그 문제 $g^{x} = h$ 는 다음의 알고리즘에 따라 많아도 $\displaystyle O \left( \sum_{i=1}^{t} S_{q_{i}^{r_{i}}} + \log N \right)$ 스텝 안에 풀린다. Step 1. $\displaystyle g_{i} : = g^{N / q_{i}^{r_{i}}}$ 와 $\displaystyle h_{i} := h^{N / q_{i}^{r_{i}}}$ 을 계산한다. Step 2. 샹크스 알고리즘을 통해 이산로그 문제 $g_{i}^{y} = h_{i}$ 의 해 $y_{i}$ 를 구한다. Step 3. 중국인의 나머지 정리를 통해 $\begin{cases} x \equiv y_{1} \pmod{ q_{1}^{r_{1}} } \\ \qquad \vdots \\ x \equiv y_{t} \pmod{ q_{t}^{r_{t}}</description>
    </item>
    
    <item>
      <title>스무스 소수</title>
      <link>https://freshrimpsushi.github.io/posts/smooth-prime/</link>
      <pubDate>Thu, 21 Mar 2019 00:00:00 +0000</pubDate>
      
      <guid>https://freshrimpsushi.github.io/posts/smooth-prime/</guid>
      <description>정의 소수 $p$ 에 대해 $(p-1)$ 가 많은 약수를 가지면 $p$ 가 스무스 소수라고 한다. $B$ 보다 작거나 같은 소수들의 곱으로 나타나는 수를 $B$-스무스 수라고 한다. $\psi ( X , B )$ 는 $X$ 보다 작거나 같은 $B$-스무스 수의 갯수를 나타낸다. 설명 스무스한 소수의 예로써 $p=37$ 를 생각해보면 $(p-1)$ 는 $p-1 = 36 = 2^2 3^2$ 와 같이 자잘한 소수들의 곱들로 표현된다. 스무스는 개념은 암호</description>
    </item>
    
    <item>
      <title>샹크스 알고리즘 증명</title>
      <link>https://freshrimpsushi.github.io/posts/proof-of-shankss-babystep-giantstep-algorithm/</link>
      <pubDate>Tue, 19 Mar 2019 00:00:00 +0000</pubDate>
      
      <guid>https://freshrimpsushi.github.io/posts/proof-of-shankss-babystep-giantstep-algorithm/</guid>
      <description>알고리즘 1 항등원이 $e$ 인 그룹 $G$ 의 원소 $g$ 가 오더 $N$ 이라고 하자. 그러면 이산로그 문제 $g^{x} = h$ 는 다음의 알고리즘에 따라 많아도 $O \left( \sqrt{N} \log N \right)$ 스텝 안에 풀린다. Step 1. $n: = 1 + \lfloor \sqrt{N} \rfloor $ Step 2. 두 개의 리스트 $A := \left\{ e , g , g^{2} , \cdots , g^{n} \right\}$ 와 $B := \left\{ h , hg^{-n} , hg^{-2n} , \cdots , hg^{-n^2} \right\}$ 를 만든다. Step 3. $g^{i} = h g^{-jn} \in A \cap B$ 를 찾는다. Step 4. $x = i + jn$ 은 $g^{x} = h$ 의 솔루션이다</description>
    </item>
    
    <item>
      <title>엘가말 공개 키 암호체계 증명</title>
      <link>https://freshrimpsushi.github.io/posts/proof-of-elgamal-public-key-cryptosystem/</link>
      <pubDate>Sun, 17 Mar 2019 00:00:00 +0000</pubDate>
      
      <guid>https://freshrimpsushi.github.io/posts/proof-of-elgamal-public-key-cryptosystem/</guid>
      <description>빌드업 왼쪽부터 순서대로 앨리스 , 밥 , 이브라 하자. 앨리스와 밥은 메세지를 주고받을 당사자고, 이브는 메세지에 관심이 있는 소극적 공격자다. 주황색 상자는 앨리스만 알고 있는 정보를, 하늘색 상자는 밥만 알고 있는 정보를, 검은색 상자는 공개된(이브도 알고 있는) 정보를 나타낸다. 앨리스는 밥에게 받아야할 메세지 $m \in \mathbb{N}$ 이 있다. 알고리즘 1 $\mathbb{F}_{p}^{ \ast</description>
    </item>
    
    <item>
      <title>디피-헬만 키 교환 알고리즘 증명</title>
      <link>https://freshrimpsushi.github.io/posts/proof-of-diffie-hellman-key-exchange-algorithm/</link>
      <pubDate>Fri, 15 Mar 2019 00:00:00 +0000</pubDate>
      
      <guid>https://freshrimpsushi.github.io/posts/proof-of-diffie-hellman-key-exchange-algorithm/</guid>
      <description>빌드업 왼쪽부터 순서대로 앨리스 , 밥 , 이브라 하자. 앨리스와 밥은 메세지를 주고받을 당사자고, 이브는 메세지에 관심이 있는 소극적 공격자다. 주황색 상자는 앨리스만 알고 있는 정보를, 하늘색 상자는 밥만 알고 있는 정보를, 검은색 상자는 공개된(이브도 알고 있는) 정보를 나타낸다. 앨리스와 밥이 암호체계 $( \mathcal{K} , \mathcal{M} , \mathcal{C} , e_{k} , d_{k} )$ 하에서 메세지를</description>
    </item>
    
    <item>
      <title>이산로그</title>
      <link>https://freshrimpsushi.github.io/posts/discrete-logarithm/</link>
      <pubDate>Wed, 13 Mar 2019 00:00:00 +0000</pubDate>
      
      <guid>https://freshrimpsushi.github.io/posts/discrete-logarithm/</guid>
      <description>정의 1 소수 $p$ 에 대해 갈루아 필드 $\mathbb{F}_{p} := \mathbb{Z} / p \mathbb{Z}$ 의 항등원이 $0$ 이라고 하자. $\mathbb{F}_{p}$ 의 원시근 $g \ne 0$ 에 대해 시클릭 그룹 $\mathbb{F}_{p} ^{ \ast } := \mathbb{F}_{p} \setminus \left\{ 0 \right\} = \left&amp;lt; g \right&amp;gt;$ 상에서 정의된 함수 $\log_{g} : \mathbb{F}_{p}^{ \ast } \to \mathbb{Z} / (p-1) \mathbb{Z}$ 가 다음을 만족하면 이산로그Discrete Logarithm라 한다. $$ g^{ \log_{g} (h) } \equiv h \pmod{p} $$ 설명 $\mathbb{F}_{p} ^{ \ast }$ 의 존재성은 원시근 정리에 의해 보장된다. 사실 이산</description>
    </item>
    
    <item>
      <title>암호론에서의 암호화와 복호화</title>
      <link>https://freshrimpsushi.github.io/posts/encryption-and-decryption-in-cryptography/</link>
      <pubDate>Mon, 11 Mar 2019 00:00:00 +0000</pubDate>
      
      <guid>https://freshrimpsushi.github.io/posts/encryption-and-decryption-in-cryptography/</guid>
      <description>빌드업 앨리스Alice가 밥Bob에게 전하고 싶은 메세지가 있다고 생각해보자. 세상에 사람이 둘 뿐이라면 이 메세지는 오직 둘만이 공유하며, 감출 이유가 없다. [ NOTE: 암호론에서 앨리스는 $A$ 를 대신하는 이름이고, 밥은 $B$ 를 대신하는 이름이다. ] 하지만 이들 외의 제3자로 이브Eve가 있다고 하자. 이브는 딱히 나쁜 의도는 없지만, 앨리스가 밥에게</description>
    </item>
    
    <item>
      <title>펠 방정식</title>
      <link>https://freshrimpsushi.github.io/posts/pells-equation/</link>
      <pubDate>Mon, 25 Feb 2019 00:00:00 +0000</pubDate>
      
      <guid>https://freshrimpsushi.github.io/posts/pells-equation/</guid>
      <description>빌드업 $a_{n} : = n^2$ 를 사각수Square Number라 한다. $\displaystyle b_{m} : = {{ m ( m + 1 ) } \over {2}}$ 를 삼각수Triangular Number라 한다. 이들 중에서 사각수면서도 삼각수인 수가 있는지 한번 생각해보면, 당장 $a_{1} =b_{1} = 1$ 과 $\displaystyle a_{6} = 6 ^2 = 36 = {{ 8 \cdot 9 } \over {2}} = b_{8}$ 이 있다. 이제 일반적으로 사각수이면서도 삼각수인 경우를 생각해보자. $$ \begin{align*}</description>
    </item>
    
    <item>
      <title>소수를 3으로 나눈 나머지가 1이 되는 필요충분조건</title>
      <link>https://freshrimpsushi.github.io/posts/necessity-and-sufficiency-for-prime-number-is-congruent-to-1-mod-4/</link>
      <pubDate>Sun, 27 Jan 2019 00:00:00 +0000</pubDate>
      
      <guid>https://freshrimpsushi.github.io/posts/necessity-and-sufficiency-for-prime-number-is-congruent-to-1-mod-4/</guid>
      <description>정리 $p \ne 3$ 이 소수라고 하자. $p \equiv 1 \pmod{3}$ $\iff$ 어떤 $a,b \in \mathbb{Z}$ 에 대해 $p = a^2 - ab + b^2$ 설명 $p=3$ 은 제외했지만, 사실 $ 3= 2^2 - 2 \cdot 1 + 1^2$ 이므로 정리에 포함되어도 큰 상관은 없다. 예를들어 $13 \equiv 1 \pmod{4}$ 는 $$ 13 = 1 - 4 + 16 = 1^2 - 1 \cdot 4 + 4^2 $$ $37 \equiv 1 \pmod{4}$ 는 $$ 37 = 9 -21 + 49 = 3^2 - 3 \cdot 7+ 7^2 $$ $61 \equiv 1 \pmod{4}$ 는 $$ 61 = 16 - 36 + 81 = 4^2 - 4 \cdot 9 + 9^2 $$ 이러한 팩트는 그 자체만</description>
    </item>
    
    <item>
      <title>소수를 4로 나눈 나머지가 1이 되는 필요충분조건</title>
      <link>https://freshrimpsushi.github.io/posts/necessity-and-sufficiency-for-prime-number-is-congruent-to-1-mod-3/</link>
      <pubDate>Fri, 25 Jan 2019 00:00:00 +0000</pubDate>
      
      <guid>https://freshrimpsushi.github.io/posts/necessity-and-sufficiency-for-prime-number-is-congruent-to-1-mod-3/</guid>
      <description>정리 $p \ne 2$ 가 소수라고 하자. $p \equiv 1 \pmod{4}$ $\iff$ 어떤 $a,b \in \mathbb{Z}$ 에 대해 $p = a^2 + b^2$ 설명 $p=2$ 는 제외했지만, 사실 $ 2= 1^2 + 1^2$ 이므로 정리에 포함되어도 큰 상관은 없다. 예를들어 $13 \equiv 1 \pmod{4}$ 는 $$ 13 = 4 + 9 = 2^2 + 3^2 $$ $37 \equiv 1 \pmod{4}$ 는 $$ 37 = 1 + 36 = 1^2 + 6^2 $$ $61 \equiv 1 \pmod{4}$ 는 $$ 61 = 25 + 36 = 5^2 + 6^2 $$ 이다. 이러한 팩트는 그 자체만으로도 흥미롭지만, 가우스 소수와 깊은 연관</description>
    </item>
    
    <item>
      <title>가우스의 이차상호 법칙 증명</title>
      <link>https://freshrimpsushi.github.io/posts/proof-of-gausss-law-of-quadratic-reciprocity/</link>
      <pubDate>Wed, 16 Jan 2019 00:00:00 +0000</pubDate>
      
      <guid>https://freshrimpsushi.github.io/posts/proof-of-gausss-law-of-quadratic-reciprocity/</guid>
      <description>정리 1 서로 다른 두 홀수 소수 $p , q$ 에 대해 다음이 성립한다. (1): $$ \left( {{ q } \over { p }} \right) = \begin{cases} \left( {{ p } \over { q }} \right) &amp;amp; p \equiv 1 \pmod{4} \lor q \equiv 1 \pmod{4} \\ - \left( {{ p } \over { q }} \right) &amp;amp; p \equiv 3 \pmod{4} \land q \equiv 3 \pmod{4} \end{cases} $$ (2): $$ \left( {{ p } \over { q }} \right) \left( {{ q } \over { p }} \right) = (-1)^{ { {p-1} \over {2} }{ {q-1} \over {2} } } $$ (1)과 (2)는 표현만 다를 뿐 같은 말이다. 이차잉여에 대해 너무나 깔끔하게 정리</description>
    </item>
    
    <item>
      <title>오일러 판정법</title>
      <link>https://freshrimpsushi.github.io/posts/eulers-criterion/</link>
      <pubDate>Tue, 15 Jan 2019 00:00:00 +0000</pubDate>
      
      <guid>https://freshrimpsushi.github.io/posts/eulers-criterion/</guid>
      <description>정리 1 소수 $p \ne 2$ 에 대해 $$ a^{{p-1} \over {2}} \equiv \left( {a \over p} \right) \pmod{p} $$ 설명 이에 따르면 $a$ 하나만 이차잉여인지 비이차잉여인지 보고싶을 땐 무작정 계산해보면 그만이다. 물론 거듭제곱이 그렇게 만만한 작업은 아니지만 모든 수를 계산해보는 것보단 나을 것이다. 증명 자체는 별로 어렵지 않지만 보조정리가 많이 쓰이기 때문에 어느정도 공부를 해둬야 이해하기 쉽다. 증명 $a$ 가</description>
    </item>
    
    <item>
      <title>르장드르 기호의 곱셈적 성질 증명</title>
      <link>https://freshrimpsushi.github.io/posts/proof-of-legendre-symbols-multiplicativity/</link>
      <pubDate>Mon, 14 Jan 2019 00:00:00 +0000</pubDate>
      
      <guid>https://freshrimpsushi.github.io/posts/proof-of-legendre-symbols-multiplicativity/</guid>
      <description>정의 QR과 NR은 각각 이차잉여와 비이차잉여를 의미한다. 르장드르 기호Legendre Symbol는 $p$ 보다 작은 자연수 $a$ 에 대해 $$ \left( { a \over p } \right) = \begin{cases} 1 &amp;amp; a \text{: QR} \\ -1 &amp;amp; a \text{: NR} \end{cases} $$ 과 같이 정의된다. 정수론에서 $\displaystyle \left( {{x} \over {y}} \right)$ 는 분수가 아니라 르장드르 기호Legendre Symbol라 하며, 소수가 아닌 자연수에 대해 일반화하면 표기</description>
    </item>
    
    <item>
      <title>이차잉여와 비이차잉여</title>
      <link>https://freshrimpsushi.github.io/posts/quadratic-residue-and-quadratic-nonresidue/</link>
      <pubDate>Sun, 13 Jan 2019 00:00:00 +0000</pubDate>
      
      <guid>https://freshrimpsushi.github.io/posts/quadratic-residue-and-quadratic-nonresidue/</guid>
      <description>정의 1 소수 $p \ne 2$ 와 $a &amp;lt; p$ 에 대해 합동방정식 $x^{2} \equiv a \pmod{p}$ 의 해가 존재하면 $a$ 를 모듈로 $p$ 에 대한 이차잉여 QR이라 한다. $a$ 가 이차잉여가 아니면 비이차잉여 NR이라 한다. 설명 쉽게 말해 이차잉여란 $\pmod{p}$에서 제곱근이 존재하는 수를 의미한다. 예를 들어 소수 $7$ 을 생각해보면 $$ 1^2 \equiv 1 \pmod{7} \\ 2^2 \equiv 4 \pmod{7} \\ 3^2 \equiv 2 \pmod{7} \\ 4^2 \equiv 2 \pmod{7} \\ 5^2 \equiv 4 \pmod{7} \\</description>
    </item>
    
    <item>
      <title>밀러-라빈 판정법</title>
      <link>https://freshrimpsushi.github.io/posts/miller-rabin-test/</link>
      <pubDate>Sat, 12 Jan 2019 00:00:00 +0000</pubDate>
      
      <guid>https://freshrimpsushi.github.io/posts/miller-rabin-test/</guid>
      <description>정리 1 홀수 $n,q$ 를 $n-1 = 2^{k} q$ 와 같이 나타내자. $$ a \nmid n \\ a^{q} \not\equiv 1 \pmod{n} $$ 이면서 모든 $i = 0, 1, \cdots , (k-1)$ 에 대해 $$ a^{2^{i} q} \not\equiv -1 \pmod{n} $$ 를 만족하는 $ a$ 가 존재하면 $n$ 은 합성수다. 설명 계산량이 늘어난만큼 페르마 판정법을 통과하는 합성수도 걸러낼 가능성이 있다. 예로써 카마이클 수인 $561$ 은 $n-1 = 560 = 2^4 \cdot 35$ 이 $2^{35} \equiv 263 \pmod{561}$ 이므로 $561$ 이 소수가 아님을 빠르게 확인할 수 있다.</description>
    </item>
    
    <item>
      <title>코셀트 판정법</title>
      <link>https://freshrimpsushi.github.io/posts/korselt-criterion/</link>
      <pubDate>Thu, 10 Jan 2019 00:00:00 +0000</pubDate>
      
      <guid>https://freshrimpsushi.github.io/posts/korselt-criterion/</guid>
      <description>개요 카마이클 수임을 판정하는 방법으로써 필요충분조건이라는 점이 또 유용하게 쓰일 수 있는 정리다. 정리 1 홀수 $n$ 이 합성수라고 하자. $n$ 은 카마이클 수 $\iff$ $p \mid n$ 을 만족하는 모든 소수 $p$ 에 대해 $p^2 \nmid n$ 이면서 $(p-1) \mid (n-1)$ 증명 카마이클 수의 정의: 자연수 $n$ 이 모든 $1 \le a \le n$ 에 대해 $a^{n} \equiv a \pmod{n}$ 를 만족하면 카마이클 수라 한다. $( \Rightarrow )$ 카마이클 수는 $2$ 를 제외한 서</description>
    </item>
    
    <item>
      <title>원시근 정리 증명</title>
      <link>https://freshrimpsushi.github.io/posts/proof-of-primitive-root-thoerem/</link>
      <pubDate>Tue, 08 Jan 2019 00:00:00 +0000</pubDate>
      
      <guid>https://freshrimpsushi.github.io/posts/proof-of-primitive-root-thoerem/</guid>
      <description>정의 1 $1 \le a \le p$ 가 $\text{ord}_{p} (a) = p-1$ 를 만족하면 법 $p$ 의 원시근이라 정의한다. 위수 $\text{ord}_{p} (a) $ 는 $a^{e} \equiv 1 \pmod{p}$ 를 만족하는 가장 작은 자연수 $e$ 를 의미한다. 정리 모든 소수 $p$ 는 $\phi ( p - 1)$ 개의 원시근을 갖는다. $\phi$ 는 토션트 함수다. 설명 $\text{ord}_{p} (a) = p-1$ 를 만족하는 $a$ 를 원시근이라고 부르는 이유는 페르마의 소정리에 의해 $a^{p-1} \equiv 1 \pmod{ p }$ 이므로 $\text{ord}_{p} (a) \le p-1$ 임은 보장되어 있는데,</description>
    </item>
    
    <item>
      <title>정수론에서의 위수</title>
      <link>https://freshrimpsushi.github.io/posts/order-in-analytic-number-theory/</link>
      <pubDate>Sun, 06 Jan 2019 00:00:00 +0000</pubDate>
      
      <guid>https://freshrimpsushi.github.io/posts/order-in-analytic-number-theory/</guid>
      <description>정의 1 $\gcd (a, p) = 1$ 이라고 하자. $a^{e} \equiv 1 \pmod{p}$ 를 만족하는 가장 작은 자연수 $e$ 를 $\text{ord}_{p} (a)$ 라 쓰고 법 $p$ 에서 $a$ 의 위수Order라 정의한다. 정리 $a^{n} \equiv 1 \pmod{p}$ 이라고 하면 $\text{ord}_{p} (a) \mid n$ 이다. 설명 예를 들어 $p=7$ 을 생각해보면 $$ \begin{align*} 1^{1} \equiv &amp;amp; 1 \pmod{ 7 } \\ 2^{3} \equiv &amp;amp; 1 \pmod{ 7 } \\ 3^{6} \equiv &amp;amp; 1 \pmod{ 7 } \\ 4^{3} \equiv &amp;amp; 1 \pmod{ 7 } \\ 5^{6} \equiv &amp;amp; 1 \pmod{ 7 } \\ 6^{2} \equiv &amp;amp; 1 \pmod{ 7 } \end{align*} $$ 이다. 여기서 $6$ 의 위수는 $2$</description>
    </item>
    
    <item>
      <title>카마이클 수</title>
      <link>https://freshrimpsushi.github.io/posts/carmichael-number/</link>
      <pubDate>Wed, 02 Jan 2019 00:00:00 +0000</pubDate>
      
      <guid>https://freshrimpsushi.github.io/posts/carmichael-number/</guid>
      <description>정의 1 자연수 $n$ 이 모든 $1 \le a \le n$ 에 대해 $a^{n} \equiv a \pmod{n}$ 를 만족하면 카마이클 수라 한다. 정리 모든 카마이클 수는 $2$ 를 제외한 서로 다른 소수의 곱으로만 나타난다. 설명 카마이클 수는 합성수임에도 불구하고 페르마 판정법을 통과하는, 말하자면 소수처럼 보이는 수다. 예로써 $561=3 \cdot 11 \cdot 17$ 은 합성수지만 $a^{561} \equiv a \pmod{561}$ 이 항상 성립한다. 한편 이러한 카마이클 수를 잡아</description>
    </item>
    
    <item>
      <title>합동방정식의 거듭제곱근</title>
      <link>https://freshrimpsushi.github.io/posts/k-th-roots-modulo-m/</link>
      <pubDate>Mon, 31 Dec 2018 00:00:00 +0000</pubDate>
      
      <guid>https://freshrimpsushi.github.io/posts/k-th-roots-modulo-m/</guid>
      <description>알고리즘 1 자연수 $b,k,m$ 가 $\gcd (b , m) = \gcd ( k , \phi (m) ) = 1$ 을 만족하면 합동방정식 $x^{k} \equiv b \pmod{ m }$ 의 해 $x$ 는 다음과 같이 계산할 수 있다. Step 1. $\phi (m)$ 을 계산한다. Step 2. $ku - \phi(m) v =1$ 을 만족하는 $u, v$ 을 찾고 양변에 $u$ 승을 취해 $x^{ku} \equiv b^{u} \pmod{m}$ 를 얻는다. Step 3. $b^{u} \pmod{ m }$ 을 연속제곱법으로 계산한다. 설명 $\phi$ 는 토션트 함수로, 곱셈적 성질을 가져 $m$ 의 소인수분해가 핵심이다</description>
    </item>
    
    <item>
      <title>연속제곱법 증명</title>
      <link>https://freshrimpsushi.github.io/posts/proof-of-successive-squaring-method/</link>
      <pubDate>Mon, 23 Jul 2018 00:00:00 +0000</pubDate>
      
      <guid>https://freshrimpsushi.github.io/posts/proof-of-successive-squaring-method/</guid>
      <description>알고리즘 자연수 $a,k,m$ 에 대해 $b \equiv a^{k} \pmod{m}$ 를 다음과 같이 계산할 수 있다. Step 1. $k$ 의 이진법 전개 $u_{i} = 0$ 혹은 $u_{i} = 1$ 에 대해 다음과 같이 나타낸다. $$ k = \sum_{i=0}^{r} u_{i} 2^{i} = u_{0} + 2 u_{1} + \cdots + 2^r u_{r} $$ Step 2. $$ \begin{align*} a &amp;amp; &amp;amp; &amp;amp; \equiv A_{0} \pmod{m} \\ a^{2} &amp;amp; \equiv ( a^1 )^2 &amp;amp; \equiv A_{0}^2 &amp;amp; \equiv A_{1} \pmod{m} \\ a^{4} &amp;amp; \equiv ( a^2 )^2 &amp;amp; \equiv A_{1}^2 &amp;amp; \equiv A_{2} \pmod{m} \\ a^{8} &amp;amp; \equiv ( a^4 )^2 &amp;amp; \equiv A_{2}^2 &amp;amp; \equiv A_{3} \pmod{m} \\ &amp;amp; &amp;amp; &amp;amp; \vdots \end{align*} $$ 위와 같이 $a^{2^{r}} \equiv ( a^{2^{r-1}} )^2 \equiv A_{r-1}^2 \equiv A_{r} \pmod{m}$ 를</description>
    </item>
    
    <item>
      <title>오일러의 완전수 정리 증명</title>
      <link>https://freshrimpsushi.github.io/posts/proof-of-eulers-perfect-number-theorem/</link>
      <pubDate>Tue, 03 Jul 2018 00:00:00 +0000</pubDate>
      
      <guid>https://freshrimpsushi.github.io/posts/proof-of-eulers-perfect-number-theorem/</guid>
      <description>정리 1 짝수 $n = 2^{p-1} (2^p - 1)$ 가 완전수면 $2^{p}-1$ 는 메르센 소수다. 설명 언뜻 보면 유클리드 완전수 공식의 역이 되는 것 같지만 짝수에 대해서만 언급되었다는 점이 다르다. 그러나 이 정리는 완전수의 거의 모든 것을 말해주고 있는데, 실제로 홀수 완전수는 아직 발견된 적이 없기 때문이다. 현재까지 홀수 완전수에 대해 밝혀진 사실이라고는 &amp;lsquo;존재한다면 아</description>
    </item>
    
    <item>
      <title>유클리드의 완전수 공식 유도</title>
      <link>https://freshrimpsushi.github.io/posts/derivation-of-euclids-perfect-number-formula/</link>
      <pubDate>Tue, 26 Jun 2018 00:00:00 +0000</pubDate>
      
      <guid>https://freshrimpsushi.github.io/posts/derivation-of-euclids-perfect-number-formula/</guid>
      <description>공식 1 $2^{p}-1$ 이 소수면 $2^{p-1}(2^{p} - 1)$ 은 완전수다. 설명 모든 완전수가 저런 형태일지는 확실하지 않지만, 저런 형태는 반드시 완전수다. 예를 들면 소수 $(2^2 -1) = 3$ 에 대해 $2^{2-1}(2^2 -1) = 6$ 은 완전수다.완전수와 메르센 소수가 이러한 관계를 가지고 있음은 메르센 소수의 등비급수전개에서 어느정도 짐작을 할 수가 있었다. 유도 $2^{p}-1$ 이 소수이므로, $2^{p-1}(2^{p} - 1)$ 의 약수는 $$ 1,2, \cdots , 2^{p-1} \\ (2^{p}-1),</description>
    </item>
    
    <item>
      <title>정수론에서의 시그마 함수</title>
      <link>https://freshrimpsushi.github.io/posts/sigma-function-in-number-theory/</link>
      <pubDate>Thu, 24 May 2018 00:00:00 +0000</pubDate>
      
      <guid>https://freshrimpsushi.github.io/posts/sigma-function-in-number-theory/</guid>
      <description>정리 $\displaystyle \sigma (n) : = \sum_{d \mid n} d$ 에 대해 다음이 성립한다. [1]: 소수 $p$ 에 대해 $$\sigma( p^k ) = {{p^{k+1} - 1} \over {p-1}}$$ [2]: $\gcd (n , m ) = 1$ 이면 $$\sigma(nm) = \sigma(n) \sigma(m)$$ 설명 시그마 함수는 쉽게 말해 약수의 합으로, $6$ 을 예로 들자면 $\sigma(6) = 1 + 2 + 3 + 6 = 12$ 이다. 해석적 정수론에서는 디바이저 함수로 일반화된다. 한편 시그마 함수를 언급함으로써 완전수Perfect Number를 깔끔하게 정</description>
    </item>
    
    <item>
      <title>메르센 소수</title>
      <link>https://freshrimpsushi.github.io/posts/mersenne-prime/</link>
      <pubDate>Tue, 15 May 2018 00:00:00 +0000</pubDate>
      
      <guid>https://freshrimpsushi.github.io/posts/mersenne-prime/</guid>
      <description>정의 1 $M_{n} = 2^{n} - 1$ 가 소수면 $M_{n}$ 를 메르센 소수Mersenne Prime라 한다. 설명 메르센 소수의 발견은 $p=x^{n}-1$ 꼴이 소수인지에 대한 탐구로부터 시작된다. 수식을 보자마자 단박에 알아챌 수 있는 것은 $x$ 가 홀수인 경우 $p=2$ 를 제외하면 소수가 될 수 없다는 것이다. 또한 $$ x^{n}-1 = (x-1) ( x^{n-1} + x^{n-2} + \cdots + x^2 + x + 1 ) $$ 이므로, $( x^{n-1} + x^{n-2} + \cdots + x^2 + x + 1 )$ 이 무슨</description>
    </item>
    
    <item>
      <title>중국인의 나머지 정리 증명</title>
      <link>https://freshrimpsushi.github.io/posts/proof-of-chinese-remainder-theorem/</link>
      <pubDate>Wed, 28 Mar 2018 00:00:00 +0000</pubDate>
      
      <guid>https://freshrimpsushi.github.io/posts/proof-of-chinese-remainder-theorem/</guid>
      <description>정리 $\gcd(n,m) = 1$ 면 $\begin{cases} x \equiv b \pmod{n} \\ x \equiv c \pmod{m} \end{cases}$ 는 $1 \le x \le nm$ 에서 단 하나의 해를 갖는다. 설명 중국에서 서기 3세기에서 5세기에 쓰여졌다고 전해지는 한 수학서에는 이런 문제가 있었다고 한다. 어떤 수를 셋 씩 짝 지으면 둘이 남고, 다섯 씩 짝 지으면 셋이 남고, 일곱 씩 짝 지으면 둘이 남는다. 이 수는 무엇인가? - 손자산경 하권, 연습문제 26번 이를 현대적인 수학</description>
    </item>
    
    <item>
      <title>오일러의 토션트 합 공식 유도</title>
      <link>https://freshrimpsushi.github.io/posts/derivation-of-eulers-totient-summation-formula/</link>
      <pubDate>Tue, 27 Mar 2018 00:00:00 +0000</pubDate>
      
      <guid>https://freshrimpsushi.github.io/posts/derivation-of-eulers-totient-summation-formula/</guid>
      <description>공식 $n$ 의 약수를 $d_{1}, d_{2} , \cdots , d_{r}$ 이라고 하면 $$ n = \sum_{ i = 1 }^{r} \phi(d_{i}) = \phi(d_{1}) + \phi(d_{2}) + \cdots + \phi(d_{r}) $$ 설명 토션트 함수는 정의할 때부터 다소 부자연스러운 개념이라고 느낄 수 있다. 하지만 토션트 정리도 그렇고 이런 공식도 있는 걸 보면 수학의 진리 어딘가에 분명히 필요한 함수임을 인정할수밖에 없다. 예를 들어 $15$ 를 보면 $15$ 는 약수 $1,3,5,15$ 를 가진다. 실제로 계산해보면 다음과 같다</description>
    </item>
    
    <item>
      <title>오일러의 토션트 정리 증명</title>
      <link>https://freshrimpsushi.github.io/posts/proof-of-eulers-totient-theorem/</link>
      <pubDate>Mon, 26 Mar 2018 00:00:00 +0000</pubDate>
      
      <guid>https://freshrimpsushi.github.io/posts/proof-of-eulers-totient-theorem/</guid>
      <description>정리 1 $$ \gcd(a,m) = 1 \implies a^{ \phi (m) } \equiv 1 \pmod{m} $$ 설명 보자마자 페르마의 소정리를 일반화한 정리임을 알 수 있고, 실제로 증명법도 사실상 거의 똑같다. 증명 토션트 함수의 정의에 의해, $1 \le b_{i} \le m$ 중 $\gcd( b_{i} , m) =1$ 을 만족하는 $b_{i}$ 는 정확히 $\phi (m)$ 개 존재한다. 이들의 집합을 $$ B:= \left\{ b_{1}, b_{2}, \cdots , b_{\phi (m)} \right\} $$ 라고 하자. 그러면 $\gcd(a,m) = 1$ 이므로 $$ aB = \left\{ ab_{1}, ab_{2}, \cdots , ab_{\phi (m)} \right\} $$ 와 정확히 같</description>
    </item>
    
    <item>
      <title>토션트 함수의 곱셈적 성질 증명</title>
      <link>https://freshrimpsushi.github.io/posts/proof-of-totient-functions-multiplicativity/</link>
      <pubDate>Mon, 26 Feb 2018 00:00:00 +0000</pubDate>
      
      <guid>https://freshrimpsushi.github.io/posts/proof-of-totient-functions-multiplicativity/</guid>
      <description>정리 1 $$ \gcd (n , m) =1 \implies \phi ( n m ) = \phi (n) \phi (m) $$ 설명 토션트 함수에서 유도되는 여러가지 중요한 결과를 얻기 위해선 반드시 필요한 성질이다. 분명히 $\gcd (n , m) =1$ 라는 조건이 있으니 만능이라고 착각하진 말자. 증명 일반성을 잃지 않고, $$ nm = p_{1}^{{k}_{1}} p_{2}^{{k}_{2}} \cdots p_{r}^{{k}_{r}} \\ p_{1} &amp;lt; p_{2} &amp;lt; \cdots &amp;lt; p_{r} $$ 라고 하자. 가정에서 $\gcd (n , m ) = 1$ 이므로 $p_{i} \mid n$ 이거나 $p_{i} \mid m$ 이거나 둘 중 하나</description>
    </item>
    
    <item>
      <title>토션트 함수</title>
      <link>https://freshrimpsushi.github.io/posts/totient-fuction-phi-function/</link>
      <pubDate>Tue, 20 Feb 2018 00:00:00 +0000</pubDate>
      
      <guid>https://freshrimpsushi.github.io/posts/totient-fuction-phi-function/</guid>
      <description>같이보기 해석적 정수론에서의 토션트 함수 정의 1 다음과 같이 정의된 $\phi$ 를 오일러 토션트 함수라 한다. $$ \phi( m ) := \left| \left\{ a \ | \ 1 \le a \le m \land \gcd (a,m) = 1 \right\} \right| = m \prod_{p \mid m} \left( 1 - {{1} \over {p}} \right) $$ 설명 토션트Totient는 전체를 의미하는 Tot-al의 Tot-과 몫을 의미하는 Quo-tient에서 -tient가 붙어서 생긴 단어로 이해해도 무방하</description>
    </item>
    
    <item>
      <title>윌슨의 정리 증명</title>
      <link>https://freshrimpsushi.github.io/posts/proof-of-wilsons-theorem/</link>
      <pubDate>Tue, 13 Feb 2018 00:00:00 +0000</pubDate>
      
      <guid>https://freshrimpsushi.github.io/posts/proof-of-wilsons-theorem/</guid>
      <description>정리 1 2보다 큰 소수 $p$ 에 대해, $(p-1)! \equiv -1 \pmod{p}$ 설명 페르마의 소정리만큼은 아니더라도, 윌슨의 정리 역시 여기저기서 유용하게 쓰인다. 생긴 모양새부터가 연속되는 수들의 곱을 계산할 때 편리하게 생겼다. 증명 $\pmod{p}$ 에서 곱셈에 대한 역원의 존재성, 유일성을 이용한 증명1과 원시근Primitive root의 성질, 페르마의 소정리를 이용한 증명2 두가지</description>
    </item>
    
    <item>
      <title>페르마의 소정리 증명</title>
      <link>https://freshrimpsushi.github.io/posts/proof-of-fermats-little-theorem/</link>
      <pubDate>Mon, 12 Feb 2018 00:00:00 +0000</pubDate>
      
      <guid>https://freshrimpsushi.github.io/posts/proof-of-fermats-little-theorem/</guid>
      <description>정리 1 소수 $p$ 와 서로소인 정수 $a$ 에 대해, $a^{p-1} \equiv 1 \pmod{p}$ 설명 페르마의 소정리는 단순하지만 아주 많은 곳에 쓰이는 정리 중 하나다. 오일러에 의해 일반화된 정리도 있지만 페르마의 소정리로도 충분한 경우가 많기 때문이다. 특히 유한체에서의 거듭제곱을 많이 다루는 암호론 등에서는 필수적인 정리다. 증명 전략: 증명은 단순무식하지만 그만큼 간단하지는 않다.</description>
    </item>
    
    <item>
      <title>원시 피타고라스 수끼리는 서로소다</title>
      <link>https://freshrimpsushi.github.io/posts/pytagorean-triples-are-coprime/</link>
      <pubDate>Sun, 11 Feb 2018 00:00:00 +0000</pubDate>
      
      <guid>https://freshrimpsushi.github.io/posts/pytagorean-triples-are-coprime/</guid>
      <description>정리 $a^2 + b^2 = c^2$ 를 만족하는 세 자연수 $a,b,c$ 에 대해 $\gcd (a,b,c) = 1$ 면 $$ \gcd (a,b) = 1 \\ \gcd (b,c) = 1 \\ \gcd (c,a) = 1 $$ 설명 언뜻 피타고라스 수든 뭐든 당연해보이지만 공약수라는 걸 잘 생각해보면 그렇지만도 않다. 예로써 피타고라스 수라는 조건이 없으면 $\gcd (6,10,15) = 1$ 이지만 각 두 수끼리는 각자 공약수를 갖는다. 전략: 증명에는 아래의 두 보조정리가 기본적으로 전제된다. 피타고</description>
    </item>
    
    <item>
      <title>원시 피타고라스 트리플은 두 홀수만으로 표현할 수 있다</title>
      <link>https://freshrimpsushi.github.io/posts/primitive-pytagorean-triple-can-be-represented-by-2-odd-numbers/</link>
      <pubDate>Sat, 10 Feb 2018 00:00:00 +0000</pubDate>
      
      <guid>https://freshrimpsushi.github.io/posts/primitive-pytagorean-triple-can-be-represented-by-2-odd-numbers/</guid>
      <description>정리 1 $a^2 + b^2 = c^2$ 를 만족하는 세 자연수 $a,b,c$ 에 대해 $$ \begin{align*} a =&amp;amp; st \\ b =&amp;amp; {{s^2 - t^2 } \over {2}} \\ c =&amp;amp; {{s^2 + t^2 } \over {2}} \end{align*} $$ 를 만족하는 서로소인 두 홀수 $s&amp;gt;t$ 가 존재한다. 설명 이 정리에 따르면 피타고라스 트리플은 사실상 &amp;lsquo;트리플&amp;rsquo;이라고 부를 이유가 없어진다. 변수를 줄일 수 있다는 건 그것이 어떤 과목이든 가리지 않고 무조건 좋은 일이다. 증</description>
    </item>
    
    <item>
      <title>피타고리스 수 중 하나는 반드시 3의 배수여야한다</title>
      <link>https://freshrimpsushi.github.io/posts/one-of-pythagorean-triple-must-be-multiple-of-3/</link>
      <pubDate>Thu, 08 Feb 2018 00:00:00 +0000</pubDate>
      
      <guid>https://freshrimpsushi.github.io/posts/one-of-pythagorean-triple-must-be-multiple-of-3/</guid>
      <description>정의 1 자연수 $a,b,c$ 가 $a^2 + b^2 = c^2$ 를 만족할 때, $a$ 혹은 $b$ 는 $3$ 의 배수다. 설명 피타고라스 수 중 하나는 반드시 짝수일 뿐만이 아니라 적어도 하나는 $3$ 의 배수라는 이야기를 할 수 있다. 증명 어떤 자연수 $n$ 에 대해 자연수를 $3$ 으로 나눈 나머지 $1, 2, 0$ 에 따라 세가지로 나눠 생각해보자. Case 1. 나머지가 $1$ 인 경우 $$ \begin{align*} (3n+1)^2 &amp;amp;= 9 n^2 + 6n + 1 \\ =&amp;amp; 3( 3 n^2 + 2n) + 1 \end{align*} $$ 이므로</description>
    </item>
    
    <item>
      <title>피타고라스 트리플</title>
      <link>https://freshrimpsushi.github.io/posts/pythagorean-triple/</link>
      <pubDate>Wed, 07 Feb 2018 00:00:00 +0000</pubDate>
      
      <guid>https://freshrimpsushi.github.io/posts/pythagorean-triple/</guid>
      <description>정의 1 $a^2 + b^2 = c^2$ 를 만족하는 세 자연수의 순서쌍 $(a,b,c)$ 을 피타고라스 트리플이라 한다. 만약 세 자연수가 공약수를 가지지 않으면 원시 피타고라스 트리플Primitive Pytahgoras Triple라 한다. 설명 편의상 피타고라스 트리플에 포함된 수를 피타고라스 수라고 부르도록 하자. 피타고라스 트리플의 예로는 다들 잘 아는 것과 같이 $(3, 4, 5)$ 그리고 $(5, 12, 13)$ 등이 있</description>
    </item>
    
    <item>
      <title>피타고리스 수 중 하나는 반드시 짝수여야한다</title>
      <link>https://freshrimpsushi.github.io/posts/one-of-pythagorean-triple-must-be-even/</link>
      <pubDate>Wed, 07 Feb 2018 00:00:00 +0000</pubDate>
      
      <guid>https://freshrimpsushi.github.io/posts/one-of-pythagorean-triple-must-be-even/</guid>
      <description>정리 1 자연수 $a,b,c$ 가 $a^2 + b^2 = c^2$ 를 만족할 때, $a$ 혹은 $b$ 는 짝수다. 설명 흥미롭게도 피타고라스 수 중 하나는 반드시 짝수여야한다. 증명 짝수의 제곱은 짝수고 홀수의 제곱은 홀수이므로, $c^2$ 이 홀수면 $a^2$ 이 짝수거나 $b^2$ 여야만 한다. $c^2$ 이 짝수라고 가정하면 $a^2$ 과 $b^2$ 이 모두 홀수거나 짝수인데, 모두 홀수인 경우만 살펴보면 충분하다. 어떤 자연수 $x,y,z \in \mathbb{N}$ 에 대해 $a,b,c$</description>
    </item>
    
    <item>
      <title>산술의 기본정리 증명</title>
      <link>https://freshrimpsushi.github.io/posts/proof-of-fundamental-theorem-of-arithmetic/</link>
      <pubDate>Mon, 05 Feb 2018 00:00:00 +0000</pubDate>
      
      <guid>https://freshrimpsushi.github.io/posts/proof-of-fundamental-theorem-of-arithmetic/</guid>
      <description>정리 1 자연수 $n &amp;gt;2$ 은 유일한 소인수분해 $n = p_{1} p_{2} \cdots p_{r}$ 를 가진다. 이때 소수 $p_{1} , p_{2} , \cdots , p_{r}$ 의 순서는 무시한다. 설명 초등학교부터 자연스럽게 써오던 성질이니만큼 증명이 필요하다는 사실이 낯설겠지만 굉장히 중요하다. 어쩌면 이렇게나 쉽다는 것 자체가 기본정리라는 이름을 달만한 자격이 있다는 증거가 될 것이다. 증명 초등적 증명 Part 1. 존재성 $2=2$ 이고 $3=</description>
    </item>
    
    <item>
      <title>오일러의 증명: 소수는 무한히 존재한다</title>
      <link>https://freshrimpsushi.github.io/posts/eulers-proof-of-the-infinitude-of-primes/</link>
      <pubDate>Mon, 05 Feb 2018 00:00:00 +0000</pubDate>
      
      <guid>https://freshrimpsushi.github.io/posts/eulers-proof-of-the-infinitude-of-primes/</guid>
      <description>정리 소수는 무한히 많이 존재한다. 증명 전략: 어떤 방법을 사용하든 같은 결과에만 도달한다면야 상관은 없지만, 정말 특이하게 풀어냈다면 그 자체로 공부할 가치가 있다. 유클리드의 증명처럼 단순 명료 깔끔한 맛은 없지만 정수론의 문제를 해석적인 툴로 해결했다는 점이 매우 흥미롭다. 오일러가 남긴 많은 증명들이 그렇듯 한 번 보면 잊기 힘들 정도의 충격을 선</description>
    </item>
    
    <item>
      <title>소수 분해 원리</title>
      <link>https://freshrimpsushi.github.io/posts/prime-divisibility-property/</link>
      <pubDate>Sun, 04 Feb 2018 00:00:00 +0000</pubDate>
      
      <guid>https://freshrimpsushi.github.io/posts/prime-divisibility-property/</guid>
      <description>정리 1 소수 $p$ 가 자연수 $ n : = d_{1} d_{2} \cdots d_{r}$ 에 대해 $p \mid n$ 면 $p$ 는 $d_{1} , d_{2} , \cdots , d_{r}$ 중 적어도 하나를 나누어야한다. 설명 $p \mid n$ 은 $n$ 이 $p$ 의 배수, 즉 $p$ 가 $n$ 을 나눈다는 말이다. 언뜻 보면 당연한 소리 같지만 엄연히 증명이 필요한 소수만의 성질이다. 소수가 아니라도 위의 정리가 항상 성립하는지 생각해보자. 증명 일단은 $n$ 이 두 자연수의 곱, 즉 $n = ab$ 라 두고</description>
    </item>
    
    <item>
      <title>확장된 유클리드 정리 증명</title>
      <link>https://freshrimpsushi.github.io/posts/proof-of-extended-euclid-theorem/</link>
      <pubDate>Sun, 04 Feb 2018 00:00:00 +0000</pubDate>
      
      <guid>https://freshrimpsushi.github.io/posts/proof-of-extended-euclid-theorem/</guid>
      <description>정리 1 두 정수 $a,b$ 에 대해 $ax + by = \gcd (a,b)$ 는 반드시 정수해를 가진다. 설명 이 정리는 $\gcd (a,b)$ 가 $a$ 와 $b$ 의 일차Linear식으로 나타날 수 있다는 의미에서 선형 합동 정리Linear Congruence Theorem이라고도 불린다. 다소 복잡한 모양새고 존재성만 논하기 때문에 직접적으로 쓰이긴 어려울 것 같지만 의외로 굉장히 많이 사용한다. 구체적인 해 $(x,y)$ 를 찾아주는 건</description>
    </item>
    
    <item>
      <title>정수론에서의 합동</title>
      <link>https://freshrimpsushi.github.io/posts/congruence-in-number-theory/</link>
      <pubDate>Thu, 11 May 2017 00:00:00 +0000</pubDate>
      
      <guid>https://freshrimpsushi.github.io/posts/congruence-in-number-theory/</guid>
      <description>정의 1 $a \equiv b \pmod{m}$ $\iff$ 정수 $a$, $b$, $m$ 에 대해 $a = b + mk$ 를 만족하는 정수 $k$ 가 존재한다. 정리 $a_{1} \equiv b_{1} \pmod{m}$ 과 $a_{2} \equiv b_{2} \pmod{m}$ 이 성립한다고 하자. [1] 덧셈: $a_{1} + a_{2} \equiv b_{1} + b_{2} \pmod{m}$ [2] 뺄셈: $a_{1} - a_{2} \equiv b_{1} - b_{2} \pmod{m}$ [3] 곱셈: $a_{1} a_{2} \equiv b_{1} b_{2} \pmod{m}$ [4] 나눗셈: $\gcd ( c , m ) = 1$ 이면 $$ ac \equiv bc \pmod{m} \implies a \equiv b \pmod{m} $$ [5] 모듈로끼리의 곱: $\gcd ( m_{1} , m_{2} ) = 1$ 이면 $$ \begin{cases} a \equiv b \pmod{ m_{1} } \\ a = b \pmod{ m_{2} } \end{cases}</description>
    </item>
    
    <item>
      <title>유클리드 호제법 증명</title>
      <link>https://freshrimpsushi.github.io/posts/proof-of-euclidean-algorithm/</link>
      <pubDate>Thu, 20 Apr 2017 00:00:00 +0000</pubDate>
      
      <guid>https://freshrimpsushi.github.io/posts/proof-of-euclidean-algorithm/</guid>
      <description>알고리즘 두 정수 $a \ge b$ 에 대해 $\text{gcd}(a,b)$ 는 다음과 같이 구할 수 있다. Step 1. 초기화 $r_i, i=1,2,3,\cdots$ 에 대해 $a=r_0, b=r_1$ 이라고 두자. Step 2. 반복법 $$ r_{i-1} = r_i \cdot q_i + r_{i+1} \qquad , (r_i&amp;gt;r_{i+1}) $$ 이 성립하도록 $q_i$ 와 새로운 $r_{i+1}$를 계속 구한다. Step 3. $r_{i+1}=0$ 일 때까지 반복하면 $r_i=\text{gcd}(a,b)$ 이다. 설명 이른바 유클리드 호제법Euclidean Algorithm으로 알려진 이 알고리즘은 최대공약수를</description>
    </item>
    
    <item>
      <title>합동방정식에 대한 대수학의 기본정리 증명</title>
      <link>https://freshrimpsushi.github.io/posts/proof-of-fundamental-theorem-of-algebra-for-congruence/</link>
      <pubDate>Thu, 20 Apr 2017 00:00:00 +0000</pubDate>
      
      <guid>https://freshrimpsushi.github.io/posts/proof-of-fundamental-theorem-of-algebra-for-congruence/</guid>
      <description>정리 1 어떤 소수 $p$ 에 대해 $p\nmid a_{ 0 }$ 라 하면 모든 계수가 정수인 다항식 $$ f(x)=a_{ 0 }x^{ d }+a_{ 1 }x^{ d-1 }+ \cdots +a_{ d-1 }x+a_{ d } $$ 에 대해 방정식 $f(x)\equiv 0 \pmod{p}$ 는 많아도 $d$ 개의 합동이 아닌 해를 가진다. 설명 그냥 흔히들 아는 것처럼 실계수를 갖는 다항식에 대해서 말하자면, $n$차 방정식은 중근을 포함해 $n$개의 해를 갖는다는 정리다. 이를 정수론에서 생각해보면 $\pmod{p}$ 에서 정수 계</description>
    </item>
    
    <item>
      <title>유클리드의 증명: 소수는 무한히 존재한다</title>
      <link>https://freshrimpsushi.github.io/posts/euclids-proof-of-the-infinitude-of-primes/</link>
      <pubDate>Sat, 15 Apr 2017 00:00:00 +0000</pubDate>
      
      <guid>https://freshrimpsushi.github.io/posts/euclids-proof-of-the-infinitude-of-primes/</guid>
      <description>정리 1 소수는 무한히 많이 존재한다. 설명 소수가 무한하다는 것을 증명하는 방법은 여러가지가 있다. 그 중에서도 가장 간단한 유클리드의 방법을 소개하도록 하겠다. 이 증명은 단순할 뿐만 아니라 매우 아름답기로도 유명하다. 증명 소수가 $n$ 개만 존재한다고 가정하자. $n$ 개의 소수들을 각각 $p_1, p_2, \cdots , p_n$ 이라고 하고 $p_{n+1}=p_1 p_2 \cdots p_n + 1$ 에 대해 생각해보자. 만약 $p_{n+1}$</description>
    </item>
    
    <item>
      <title>11의 배수판정법 더 간단한 증명</title>
      <link>https://freshrimpsushi.github.io/posts/easy-proof-of-the-11-divisibility-rule/</link>
      <pubDate>Tue, 21 Mar 2017 00:00:00 +0000</pubDate>
      
      <guid>https://freshrimpsushi.github.io/posts/easy-proof-of-the-11-divisibility-rule/</guid>
      <description>빌드업 이 포스트에서는 진법에 대한 편의를 위해 다음과 같은 표기를 사용한다. $$ [a_{n} a_{n-1} &amp;hellip; a_{1} a_{0}] := a_{n} \cdot 10^{n} + a_{n-1} \cdot 10^{n-1} +&amp;hellip;+ a_{1} \cdot 10^{1} + a_{0} \cdot 10^{0} $$ 예를 들어 $5714$ 는 다음과 같이 나타낼 수 있다. $$ \begin{align*} [5714] =&amp;amp; 5000+700+10+4 \\ =&amp;amp; 5\cdot 10^{3} +7\cdot 10^{2} +1\cdot 10^{1} +4\cdot 10^{0} \end{align*} $$ 정리 $a_{n} - a_{n-1} + &amp;hellip; + a_{1} - a_{0}$ 이 $11$ 의 배수면 $[a_{n} a_{n-1} &amp;hellip; a_{1} a_{0}]$ 도 $11$ 의 배수다. 설명 물론 $7$ 의 배수 판정법 $13$ 의 배수 판정법에서 주어진 수가 $7$, $11$, $13$ 의 배</description>
    </item>
    
    <item>
      <title>3의 배수판정법과 9의 배수판정법의 증명</title>
      <link>https://freshrimpsushi.github.io/posts/proof-of-the-3-and-9-divisibility-rule/</link>
      <pubDate>Tue, 21 Mar 2017 00:00:00 +0000</pubDate>
      
      <guid>https://freshrimpsushi.github.io/posts/proof-of-the-3-and-9-divisibility-rule/</guid>
      <description>정리 각 자리 숫자를 모두 더해 $3$ 의 배수면 $3$ 의 배수, $9$ 의 배수면 $9$ 의 배수다. 설명 예로써 $8142$ 는 $8142=3 \cdot 2714$ 로 $3$의 배수고, 실제로 $8+1+4+2=15$ 는 $3$ 의 배수다. $1945125$ 는 $1945125=9 \cdot 216125$ 로 $9$의 배수고, 실제로 $1+9+4+5+1+2+5=27$ 은 $9$ 의 배수다. 배수 판정법은 현대에 와선 사실 별 의미가 없어졌지만 여전히 흥미로운 도구다. $2,4,5,8$ 의 배수는 판정하기가 아주 쉽지만 $3, 7, 9, 11$ 등의 수에 대해서는 별도</description>
    </item>
    
    <item>
      <title>7의 배수판정법과 13의 배수판정법의 증명</title>
      <link>https://freshrimpsushi.github.io/posts/proof-of-the-7-11-and-13-divisibility-rule/</link>
      <pubDate>Tue, 21 Mar 2017 00:00:00 +0000</pubDate>
      
      <guid>https://freshrimpsushi.github.io/posts/proof-of-the-7-11-and-13-divisibility-rule/</guid>
      <description>빌드업 이 포스트에서는 진법에 대한 편의를 위해 다음과 같은 표기를 사용한다. $$ [a_{n} a_{n-1} &amp;hellip; a_{1} a_{0}] := a_{n} \cdot 10^{n} + a_{n-1} \cdot 10^{n-1} +&amp;hellip;+ a_{1} \cdot 10^{1} + a_{0} \cdot 10^{0} $$ 예를 들어 $5714$ 는 다음과 같이 나타낼 수 있다. $$ \begin{align*} [5714] =&amp;amp; 5000+700+10+4 \\ =&amp;amp; 5\cdot 10^{3} +7\cdot 10^{2} +1\cdot 10^{1} +4\cdot 10^{0} \end{align*} $$ 정리 $$ a_{n} a_{n-1} a_{n-2} - a_{n-3} a_{n-4} a_{n-5} +&amp;hellip;+ a_{5} a_{4} a_{3} - a_{2} a_{1} a_{0} $$ 이 $7$ 의 배수면 $[a_{n} a_{n-1} &amp;hellip; a_{1} a_{0}]$ 도 $7$ 의 배수고, $$ a_{n} a_{n-1} a_{n-2} - a_{n-3} a_{n-4} a_{n-5} +&amp;hellip;+ a_{5} a_{4} a_{3} - a_{2} a_{1} a_{0} $$ 이 $13$ 의 배수</description>
    </item>
    
  </channel>
</rss>
