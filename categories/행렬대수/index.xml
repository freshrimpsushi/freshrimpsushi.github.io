<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>행렬대수 on 생새우초밥집</title>
    <link>https://freshrimpsushi.github.io/categories/%ED%96%89%EB%A0%AC%EB%8C%80%EC%88%98/</link>
    <description>Recent content in 행렬대수 on 생새우초밥집</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>ko</language>
    <lastBuildDate>Fri, 12 Feb 2021 00:00:00 +0000</lastBuildDate><atom:link href="https://freshrimpsushi.github.io/categories/%ED%96%89%EB%A0%AC%EB%8C%80%EC%88%98/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>에르미트 행렬</title>
      <link>https://freshrimpsushi.github.io/posts/definition-and-properties-hermite-matrix/</link>
      <pubDate>Fri, 12 Feb 2021 00:00:00 +0000</pubDate>
      
      <guid>https://freshrimpsushi.github.io/posts/definition-and-properties-hermite-matrix/</guid>
      <description>정의 $A$를 정사각 복소수 행렬이라고 하자. $A$가 아래의 식을 만족하면 에르미트 행렬Hermitian 혹은 자가 수반 행렬self-adjoint matrix이라 한다. $$ A^{\ast}=A $$ 이때 $A^{\ast}$는 $A$의 켤레 전치이다. $A$가 아래의 식을 만족하면 반 에르미트 행렬skew-Hermitian, anti-Herm</description>
    </item>
    
    <item>
      <title>직교행렬일 동치 조건</title>
      <link>https://freshrimpsushi.github.io/posts/equivalents-statements-for-orthogonal-matrix/</link>
      <pubDate>Wed, 10 Feb 2021 00:00:00 +0000</pubDate>
      
      <guid>https://freshrimpsushi.github.io/posts/equivalents-statements-for-orthogonal-matrix/</guid>
      <description>정리 $n \times n$ 실수 행렬 $A$에 대해서 아래의 명제는 모두 동치이다. (a) $A$가 직교행렬이다. (b) $A$의 행 벡터들의 집합은 $\mathbb{R}^n$의 정규직교집합이다. (c) $A$의 열 벡터들의 집합은 $\mathbb{R}^n$의 정규직교집합이다. (d) $A$가 내적을 보존한다. 즉 모든 $\mathbf{x},\mathbf{y}\in \mathbb{R}^{n}$에 대해</description>
    </item>
    
    <item>
      <title>직교행렬의 성질</title>
      <link>https://freshrimpsushi.github.io/posts/properties-of-orthogonal-matrix/</link>
      <pubDate>Sat, 06 Feb 2021 00:00:00 +0000</pubDate>
      
      <guid>https://freshrimpsushi.github.io/posts/properties-of-orthogonal-matrix/</guid>
      <description>성질1 직교행렬은 다음과 같은 성질을 갖는다. (a) 직교행렬의 전치도 직교행렬이다. (b) 직교행렬의 역행렬은 직교행렬이다. (c) 두 직교행렬의 곱은 직교행렬이다. (d) 직교행렬의 행렬식은 $1$이거나 $-1$이다. $$ \det(A)=\pm 1 $$ 증명 (a) $A$를 직교행렬이라고 하자. $B$를 $A$의 전치라고 하자. $$ B=A^{T} $$ 그러면 다음의 식이 성립한다. $$ B^{-1} = (A^{T})^{-1} = (A^{-1})^{-1}</description>
    </item>
    
    <item>
      <title>직교행렬</title>
      <link>https://freshrimpsushi.github.io/posts/orthogonal-matrix/</link>
      <pubDate>Tue, 02 Feb 2021 00:00:00 +0000</pubDate>
      
      <guid>https://freshrimpsushi.github.io/posts/orthogonal-matrix/</guid>
      <description>정의 $A$를 정사각 실수 행렬이라고 하자. $A$가 아래의 식을 만족하면 직교행렬orthogonal matrix이라 한다. $$ A^{-1} = A^{T} $$ 위 조건을 다르게 표현다음 아래와 같다. $$ AA^{T} = A^{T}A =I $$ 설명 정의를 말로 풀어서 쓰면, 직교행렬이란 각각의 행벡터 혹은 열벡터들이 서로 직교하는 단위 벡터인 행렬이다. 복소수 행렬으로 확장한 경우에는 유니타</description>
    </item>
    
    <item>
      <title>행렬의 내적</title>
      <link>https://freshrimpsushi.github.io/posts/inner-product-of-matrices/</link>
      <pubDate>Sun, 31 Jan 2021 00:00:00 +0000</pubDate>
      
      <guid>https://freshrimpsushi.github.io/posts/inner-product-of-matrices/</guid>
      <description>정의: 두 열벡터의 내적1 크기가 $n \times 1$인 두 열벡터 $\mathbf{u}$, $\mathbf{v}$ $\in \mathbb{R}^{n}$의 내적inner product을 다음과 같이 정의한다. $$ \begin{equation} \mathbf{u} \cdot \mathbf{v} := \mathbf{u}^{T}\mathbf{v}=u_{1}v_{1} + u_{2}v_{2} + \cdots + u_{n}v_{n} \label{EuclideanIP} \end{equation} $$ $\mathbf{u}$, $\mathbf{v}$ $\in \mathbb{C}^{n}$인 경우에는 다음과 같다. $$ \mathbf{u} \cdot \mathbf{v} := \mathbf{u}^{\ast}\mathbf{v}=u^{\ast}_{1}v_{1}^{\ } + u_{2}^{\ast}v_{2}^{\ } + \cdots + u_{n}^{\ast}v_{n}^{\ } $$ 이때 $\mathbf{u}$는 $\mathb</description>
    </item>
    
    <item>
      <title>켤레전치행렬</title>
      <link>https://freshrimpsushi.github.io/posts/conjugate-transpose/</link>
      <pubDate>Fri, 29 Jan 2021 00:00:00 +0000</pubDate>
      
      <guid>https://freshrimpsushi.github.io/posts/conjugate-transpose/</guid>
      <description>정의 $A$를 크기가 $m \times n $인 복소수 행렬이라고 하자. $\overline{A}$를 다음과 같이 정의하고 $A$의 켤레 행렬conjugate matrix이라고 한다. $$ \overline{A} :=\begin{bmatrix} \overline{a_{11}} &amp;amp; \overline{a_{12}} &amp;amp; \cdots &amp;amp; \overline{a_{1n}} \\ \overline{a_{21}} &amp;amp; \overline{a_{22}} &amp;amp; \cdots &amp;amp; \overline{a_{2n}} \\ \vdots &amp;amp; \vdots &amp;amp; \ddots &amp;amp; \vdots \\ \overline{a_{m1}} &amp;amp; \overline{a_{m2}} &amp;amp; \cdots &amp;amp; \overline{a_{mn}} \end{bmatrix} = \left[ \overline{a_{ij}} \right] $$ 이때 $\overline{a}$는 $a$의 켤레 복소수이다. 다시 말</description>
    </item>
    
    <item>
      <title>대칭행렬, 반대칭행렬</title>
      <link>https://freshrimpsushi.github.io/posts/definition-and-properties-of-symmetric-matrix-antisymmetric-matrix/</link>
      <pubDate>Wed, 27 Jan 2021 00:00:00 +0000</pubDate>
      
      <guid>https://freshrimpsushi.github.io/posts/definition-and-properties-of-symmetric-matrix-antisymmetric-matrix/</guid>
      <description>정의1 임의의 정사각행렬 $A$가 다음의 식을 만족하면 $A$를 대칭행렬symmetric matrix 이라고 한다. $$ A=A^{T} $$ 이때 $A^{T}$는 $A$의 전치행렬이다. $A$가 다음의 식을 만족하면 $A$를 반대칭행렬anti-symmetric matrix이라고 한다. $$ A =-A^{T} $$ 설명 전치행렬의 정의에 의해 정사각행렬이 아닌 행렬은 대칭행</description>
    </item>
    
    <item>
      <title>가역행렬일 동치 조건</title>
      <link>https://freshrimpsushi.github.io/posts/equivalent-statements-for-invertible-matrix/</link>
      <pubDate>Mon, 25 Jan 2021 00:00:00 +0000</pubDate>
      
      <guid>https://freshrimpsushi.github.io/posts/equivalent-statements-for-invertible-matrix/</guid>
      <description>정리1 $A$를 크기가 $n\times n$인 정사각행렬이라고 하자. 그러면 아래의 명제는 모두 동치이다. (a) $A$는 가역행렬이다. (b) 동차 선형 시스템 $A\mathbf{x}=\mathbf{0}$는 오직 자명해만을 갖는다. (c) $A$의 기약 행사다리꼴 이 $I_{n}$이다. (d) $A$는 기본행렬의 곱으로 표현가능하다. (e) $A\mathbf</description>
    </item>
    
    <item>
      <title>역행렬, 가역행렬</title>
      <link>https://freshrimpsushi.github.io/posts/definition-and-properties-of-inverse-matrix-invertible-matrix/</link>
      <pubDate>Sat, 23 Jan 2021 00:00:00 +0000</pubDate>
      
      <guid>https://freshrimpsushi.github.io/posts/definition-and-properties-of-inverse-matrix-invertible-matrix/</guid>
      <description>정의 $A$를 크기가 $n\times n$인 임의의 정사각행렬이라고 하자. $A$와 행렬 곱이 가능한 행렬 $L$이 다음의 식을 만족하면 $L$을 $A$의 좌 역행렬left inverse matrix라고 한다. $$ LA=I_{n} $$ 이때 $I_{n}$은 크기가 $n\times n$인 항등행렬이다. $A$와 행렬 곱이 가능한 행렬 $R$이 다음의 식을 만족하면 $R$을 $A$의 우 역행렬righ</description>
    </item>
    
    <item>
      <title>전치행렬</title>
      <link>https://freshrimpsushi.github.io/posts/definition-and-properties-of-transpose-matrix/</link>
      <pubDate>Thu, 21 Jan 2021 00:00:00 +0000</pubDate>
      
      <guid>https://freshrimpsushi.github.io/posts/definition-and-properties-of-transpose-matrix/</guid>
      <description>정의1 $A$를 크기가 $m\times n$인 행렬이라고 하자. $A$의 행과 열을 서로 바꾼 행렬을 $A$의 전치행렬transpose, 전치이라고 하고 $A^{T}$ 혹은 $A^{t}$라고 표기한다. 설명 정의에 따라 $A$가 $m \times n$ 행렬이면 $A^{T}$는 $n \times m$ 행렬이 된다. 또한 $A$의 $i$번째 행은 $A^{T}$의 $i$번째 열과 같고 그 반대도 마찬</description>
    </item>
    
    <item>
      <title>항등행렬, 영행렬</title>
      <link>https://freshrimpsushi.github.io/posts/identity-matrix-and-zero-matrix/</link>
      <pubDate>Tue, 19 Jan 2021 00:00:00 +0000</pubDate>
      
      <guid>https://freshrimpsushi.github.io/posts/identity-matrix-and-zero-matrix/</guid>
      <description>정의: 항등행렬 크기가 $n\times n$이고 대각 성분 모두 $1$인 대각행렬을 항등행렬identity matrix 혹은 단위 행렬unit matrix이라 하고 $I_{n}$혹은 $I_{n\times n}$이라 표기한다. $$ I_{n\times n}= \begin{bmatrix} 1 &amp;amp; 0 &amp;amp; \cdots &amp;amp; 0 \\ 0 &amp;amp; 1 &amp;amp; \cdots &amp;amp; 0 \\ \vdots &amp;amp; \vdots &amp;amp; \ddots &amp;amp; \vdots \\ 0 &amp;amp; 0 &amp;amp; \cdots &amp;amp; 1 \end{bmatrix} $$ 항등행렬은 행렬 곱에 대한 항등원이다. 즉 임의의 $n\times n$ 행렬 $A$에 대</description>
    </item>
    
    <item>
      <title>대각합</title>
      <link>https://freshrimpsushi.github.io/posts/defenition-and-properties-of-trace/</link>
      <pubDate>Mon, 18 Jan 2021 00:00:00 +0000</pubDate>
      
      <guid>https://freshrimpsushi.github.io/posts/defenition-and-properties-of-trace/</guid>
      <description>정의 $n\times n$ 행렬 $A$가 다음과 같이 주어졌다고 하자. $$ A= \begin{bmatrix} a_{11} &amp;amp; a_{12} &amp;amp; \cdots &amp;amp; a_{1n} \\ a_{21} &amp;amp; a_{22} &amp;amp; \cdots &amp;amp; a_{2n} \\ \vdots &amp;amp; \vdots &amp;amp; \ddots &amp;amp; \vdots \\ a_{n1} &amp;amp; a_{n2} &amp;amp; \cdots &amp;amp; a_{nn} \end{bmatrix} $$ $A$의 대각 성분들의 합을 $A$의 대각합trace 이라 정의하고 다음과 같이 표기한다. $$ \text{tr}(A)=\text{Tr}(A)=a_{11}+a_{22}+\cdots + a_{nn}=\sum \limits_{i=1}^{n} a_{ii} $$ 설명 다음과 같이 대각합을 함수로 생각할 수도 있다. $M_{n\times n}(\mathbb{R})$을 실수를 성분</description>
    </item>
    
    <item>
      <title>대각행렬, 삼각 행렬</title>
      <link>https://freshrimpsushi.github.io/posts/diagonal-matrix-and-triangular-matrix/</link>
      <pubDate>Sun, 17 Jan 2021 00:00:00 +0000</pubDate>
      
      <guid>https://freshrimpsushi.github.io/posts/diagonal-matrix-and-triangular-matrix/</guid>
      <description>대각행렬1 $A$를 크기가 $n\times n$인 정사각행렬이라고 하자. 행과 열의 번호가 같은 성분, 즉 $a_{11}$, $a_{22}$, $\dots$, $a_{nn}$들을 주대각성분main diagonal elements이라 한다. 주 대각 성분들을 이은 가상의 선을 주대각선main diagonal, principal diagonal 이라 한다. 주 대각 성분 $a_{11}$, $a_{22}$, $\dots$, $a_{nn}$을 제외한 모든 성분이 $0$이면 행렬 $A$를 대각행렬diag</description>
    </item>
    
    <item>
      <title>정사각행렬</title>
      <link>https://freshrimpsushi.github.io/posts/definition-and-properties-of-square-matrix/</link>
      <pubDate>Fri, 15 Jan 2021 00:00:00 +0000</pubDate>
      
      <guid>https://freshrimpsushi.github.io/posts/definition-and-properties-of-square-matrix/</guid>
      <description>정의 임의의 행렬 $A$의 행과 열의 수가 같으면 행렬 $A$를 정사각행렬square matrix이라고 한다. 설명 정방 행렬이라고도 한다. 정사각행렬은 다루기 쉽고 여러가지 좋은 성질들이 있지만 우리가 항상 정사각행렬만을 다루게 되는 것은 아니다. 예 항등행렬 가역행렬 기본행렬 대칭행렬 직교행렬 에르미트 행렬 유니타리 행렬</description>
    </item>
    
    <item>
      <title>행렬의 연산: 상수배, 덧셈, 곱셈</title>
      <link>https://freshrimpsushi.github.io/posts/operations-of-matrix-scalar-multiplication-sum-multiplication/</link>
      <pubDate>Wed, 13 Jan 2021 00:00:00 +0000</pubDate>
      
      <guid>https://freshrimpsushi.github.io/posts/operations-of-matrix-scalar-multiplication-sum-multiplication/</guid>
      <description>상수배 크기가 $m \times n$인 임의의 행렬 $A$와 상수 $k$의 곱은 $A$의 각 성분에 $k$를 곱하는 것으로 정의하고 다음과 같이 표기한다. $$ kA=k\begin{bmatrix} a_{11} &amp;amp; a_{12} &amp;amp; \cdots &amp;amp; a_{1n} \\ a_{21} &amp;amp; a_{22} &amp;amp; \cdots &amp;amp; a_{2n} \\ \vdots &amp;amp; \vdots &amp;amp; \ddots &amp;amp; \vdots \\ a_{m1} &amp;amp; a_{m2} &amp;amp; \cdots &amp;amp; a_{mn} \end{bmatrix} := \begin{bmatrix} ka_{11} &amp;amp; ka_{12} &amp;amp; \cdots &amp;amp; ka_{1n} \\ ka_{21} &amp;amp; ka_{22} &amp;amp; \cdots &amp;amp; ka_{2n} \\ \vdots &amp;amp; \vdots &amp;amp; \ddots &amp;amp; \vdots \\ a_{m1} &amp;amp; ka_{m2} &amp;amp; \cdots &amp;amp; ka_{mn} \end{bmatrix} $$ 정의에 의해 상수와 행렬의 곱은 교환 관계가 성립한</description>
    </item>
    
    <item>
      <title>행렬의 정의</title>
      <link>https://freshrimpsushi.github.io/posts/definition-of-matrix/</link>
      <pubDate>Sat, 09 Jan 2021 00:00:00 +0000</pubDate>
      
      <guid>https://freshrimpsushi.github.io/posts/definition-of-matrix/</guid>
      <description>정의1 수를 다음과 같이 직사각형의 모양으로 나열해놓은 것을 행렬matrix이라고 한다. $$ A=\begin{bmatrix} 10 &amp;amp; 0 &amp;amp; 3 \\ 0 &amp;amp; 8 &amp;amp; 22 \end{bmatrix} $$ 나열해놓은 각각의 수를 엔트리entry 혹은 성분element이라고 한다. 가로 줄을 행row이라고 하며, 세로 줄을 열column이라고 한다. 또한 임의의 행렬이 $m$개의 행과 $n$개의 열을 가지면 그 행렬의</description>
    </item>
    
    <item>
      <title>벡터의 정의</title>
      <link>https://freshrimpsushi.github.io/posts/definition-of-vector/</link>
      <pubDate>Fri, 08 Jan 2021 00:00:00 +0000</pubDate>
      
      <guid>https://freshrimpsushi.github.io/posts/definition-of-vector/</guid>
      <description>정의 수의 나열을 벡터 라고 한다. 설명 보통 교과과정에서 벡터는 &amp;lsquo;크기와 방향을 가진 기하학적 객체&amp;rsquo;로 배우게 된다. 아무래도 물리학에서 가장 먼저 접하게 되는 개념이다보니 다음과 같은 $3$차원 이하의 벡터에 친숙할수밖에 없다. $$ (3,4) = \begin{bmatrix} 3 \\ 4 \end{bmatrix} \\ (x,y,z) = \begin{bmatrix} x \\ y \\ z \end{bmatrix} $$ 그런데 사실 벡터는 그보다 더 많은 좌표에 대해 일</description>
    </item>
    
    <item>
      <title>타원의 일반화: 일립소이드</title>
      <link>https://freshrimpsushi.github.io/posts/ellipsoid-of-linear-transform/</link>
      <pubDate>Tue, 04 Feb 2020 00:00:00 +0000</pubDate>
      
      <guid>https://freshrimpsushi.github.io/posts/ellipsoid-of-linear-transform/</guid>
      <description>정의 선형 변환 $A \in \mathbb{R}^{m \times m}$ 에 대해 $m$차원 단위구 $N := \left\{ \mathbb{x} \in \mathbb{R}^{m} : \left\| \mathbb{x} \right\|_{2} = 1 \right\}$ 의 이미지 $AN$ 을 일립소이드 라고 한다. $A$ 의 아이겐 밸류 $\sigma_{1}^{2} &amp;gt; \cdots \ge \sigma_{m}^{2} \ge 0$ 와 그에 따른 단위 아이겐 벡터 $u_{1} , \cdots , u_{m}$ 에 대해 $\sigma_{i} u_{i}$ 를 일립소이드의 축Axis 라고 한다. 설명 $m$차원 단위구는 중심이 $\mathbb{0} \in \mathbb{R}^{m}$ 이고 반지름이 $1$ 인 점들을 모아놓은 집합으로, $m=2$ 일 때 우리가 흔히 알</description>
    </item>
    
    <item>
      <title>슈트라센 알고리즘 증명</title>
      <link>https://freshrimpsushi.github.io/posts/proof-of-strassen-algorithm/</link>
      <pubDate>Thu, 12 Sep 2019 00:00:00 +0000</pubDate>
      
      <guid>https://freshrimpsushi.github.io/posts/proof-of-strassen-algorithm/</guid>
      <description>알고리즘 $k \in \mathbb{N}$ 에 대해 $n=2^{k}$ 이라고 하자. $A, B \in \mathbb{R}^{n \times n}$ 에 대해 조던 블록 행렬 표현을 사용해 다음과 같은 8개의 ${{n} \over {2}} \times {{n} \over {2}}$ 행렬 $A_{i}$, $B_{i}$ 들을 생각해보자. $$ AB= \begin{bmatrix} A_{1} &amp;amp; A_{2} \\ A_{3} &amp;amp; A_{4} \end{bmatrix} \begin{bmatrix} B_{1} &amp;amp; B_{2} \\ B_{3} &amp;amp; B_{4} \end{bmatrix} = \begin{bmatrix} C_{1} &amp;amp; C_{2} \\ C_{3} &amp;amp; C_{4} \end{bmatrix} = C $$ $C = AB$ 를 구하기 위해 다음을 계산한다. $$ P_{1} = A_{1} ( B_{2} - B_{4} ) \\ P_{2} = ( A_{1} + A_{2} ) B_{4} \\ P_{3} = ( A_{3} + A_{4} ) B_{1} \\ P_{4} = A_{4} ( B_{3} - B_{1}</description>
    </item>
    
    <item>
      <title>삼중대각행렬의 행렬식 유도</title>
      <link>https://freshrimpsushi.github.io/posts/derivation-of-tridiagonal-matrixs-determinant/</link>
      <pubDate>Wed, 26 Dec 2018 00:00:00 +0000</pubDate>
      
      <guid>https://freshrimpsushi.github.io/posts/derivation-of-tridiagonal-matrixs-determinant/</guid>
      <description>공식 삼중대각행렬 $X_{n} := \begin{bmatrix} x &amp;amp; 1 &amp;amp; 0 &amp;amp; \cdots &amp;amp; 0 &amp;amp; 0 \\ 1 &amp;amp; x &amp;amp; 1 &amp;amp; \cdots &amp;amp; 0 &amp;amp; 0 \\ 0 &amp;amp; 1 &amp;amp; x &amp;amp; \cdots &amp;amp; 0 &amp;amp; 0 \\ \vdots &amp;amp; \vdots &amp;amp; \vdots &amp;amp; \ddots &amp;amp; \vdots &amp;amp; \vdots \\ 0 &amp;amp; 0 &amp;amp; 0 &amp;amp; \cdots &amp;amp; x &amp;amp; 1 \\ 0 &amp;amp; 0 &amp;amp; 0 &amp;amp; \cdots &amp;amp; 1 &amp;amp; x \end{bmatrix}$ 에 대해 $$ | x_{n}| = U_{n} \left( {{x} \over {2}} \right) $$ $U_{n}$ 은 $n$ 차 제2종 체비셰프 다항함수를 의미한다.물론 $X_{n}$ 은 일반적인 삼중대각행렬이 아니고 삼중대각 퇴플리츠Toepli</description>
    </item>
    
    <item>
      <title>방데르몽드 행렬의 행렬식 유도</title>
      <link>https://freshrimpsushi.github.io/posts/derivation-of-vandermonde-matrix-determinant/</link>
      <pubDate>Thu, 20 Dec 2018 00:00:00 +0000</pubDate>
      
      <guid>https://freshrimpsushi.github.io/posts/derivation-of-vandermonde-matrix-determinant/</guid>
      <description>정의 서로 다른 $1, x_{1} , x_{2 } , \cdots , x_{n}$ 에 대해 다음과 같이 정의된 행렬 $V_{n}$ 을 방데르몽드 행렬Vandermonde Matrix이라고 한다. $$ V_{n} := \begin{bmatrix} 1 &amp;amp; x_{1} &amp;amp; x_{1}^{2} &amp;amp; \cdots &amp;amp; x_{1}^{n-1} \\ 1 &amp;amp; x_{2} &amp;amp; x_{2}^{2} &amp;amp; \cdots &amp;amp; x_{2}^{n-1} \\ \vdots &amp;amp; \vdots &amp;amp; \vdots &amp;amp; \ddots &amp;amp; \vdots \\ 1 &amp;amp; x_{n} &amp;amp; x_{n}^{2} &amp;amp; \cdots &amp;amp; x_{n}^{n-1} \end{bmatrix} $$ 공식 $V_{n}$ 의 행렬식은 $$ \det V_{n} = \prod_{1 \le i &amp;lt; j \le n } (x_{j} - x_{i}) $$ 설명 방데르몽드 행렬은 특이하게 생겼지만 미분방</description>
    </item>
    
    <item>
      <title>크레이머 법칙 증명</title>
      <link>https://freshrimpsushi.github.io/posts/proof-of-cramer-rule/</link>
      <pubDate>Wed, 19 Dec 2018 00:00:00 +0000</pubDate>
      
      <guid>https://freshrimpsushi.github.io/posts/proof-of-cramer-rule/</guid>
      <description>개요 크레이머 공식Cramer Rule은 연립방정식을 제대로 풀어내는데에 효율적이라곤 할 수 없지만 $A_{j}$ 가 비가역행렬이라거나 $A$ 자체가 행렬식을 구하기 편리하도록 특정한 조건이 주어져있다면 필요한 답만 바로바로 구해내는데 충분히 유용하게 쓰일 수 있다. 정리 연립방정식 $A \mathbb{x} = \mathbb{b} $ 이 가역행렬 $$ A = \begin{bmatrix} a_{11} &amp;amp; a_{12} &amp;amp; \cdots &amp;amp; a_{1n} \\ a_{21} &amp;amp; a_{22} &amp;amp; \cdots &amp;amp; a_{2n} \\ \vdots &amp;amp;</description>
    </item>
    
    <item>
      <title>라플라스 전개</title>
      <link>https://freshrimpsushi.github.io/posts/laplace-expansion/</link>
      <pubDate>Wed, 28 Nov 2018 00:00:00 +0000</pubDate>
      
      <guid>https://freshrimpsushi.github.io/posts/laplace-expansion/</guid>
      <description>빌드업 정사각행렬 $A_{n \times n} = (a_{ij})$ 의 $i$ 번째 행과 $j$ 번째 행을 제거한 행렬의 행렬식 $M_{ij}$ 을 소행렬식Minor이라고 한다. 이에 대해 $C_{ij} := (-1)^{i + j} M_{ij} $ 를 여인자Cofactor라고 한다. 정리 [1] 선택된 $i$행 에 대해 $$ \det A = \sum_{j=1}^{n} a_{ij} C_{ij} $$ [2] 선택된 $j$열 에 대해 $$ \det A = \sum_{i=1}^{n} a_{ij} C_{ij} $$ 설명 라플라스 전개는 여인자 전개 로도 불리는 정리로써, 그 유용함이 이루 말</description>
    </item>
    
    <item>
      <title>특이값 분해를 통한 최소제곱법</title>
      <link>https://freshrimpsushi.github.io/posts/least-squares-using-sigular-value-decomposition/</link>
      <pubDate>Sat, 06 Jan 2018 00:00:00 +0000</pubDate>
      
      <guid>https://freshrimpsushi.github.io/posts/least-squares-using-sigular-value-decomposition/</guid>
      <description>알고리즘 $A \in \mathbb{C}^{m \times n}$ 과 벡터 $\mathbb{b} \in \mathbb{C}^{m}$ 에 대해 $\text{rank} A = n$ 이고 $A \mathbb{x} = \mathbb{b}$ 의 최소제곱해를 $\mathbb{x}_{\ast}$ 이라고 하자. Step 1. 특이값 분해 $A = \widehat{U} \widehat{\Sigma} V^{\ast}$ 를 만족하는 정규직교행렬 $\widehat{U}$ 과 대각행렬 $\widehat{\Sigma}$ 과 유니터리 행렬 $V$ 를 구한다. Step 2. 특이값 분해에서 얻은 $\widehat{U}$ 를 통해 정사영 $P : = \widehat{U} \widehat{U}^{\ast}$ 을 구한다.$A \mathbb{x}_{\ast} = P \mathbb{b}$ 이므로 $\widehat{U} \widehat{\Sigma} V^{\ast} \mathbb{x}_{\ast} = \widehat{U} \widehat{U}^{\ast} \mathbb{b}$ 이고 양변의 왼쪽에 $\widehat{U}^{\ast}$ 을 곱해 $\widehat{\Sigma} V^{\ast} \mathbb{x}_{\ast} = \widehat{U}^{\ast} \mathbb{b}$ 를 얻</description>
    </item>
    
    <item>
      <title>QR 분해를 통한 최소제곱법</title>
      <link>https://freshrimpsushi.github.io/posts/least-squares-using-qr-decomposition/</link>
      <pubDate>Fri, 05 Jan 2018 00:00:00 +0000</pubDate>
      
      <guid>https://freshrimpsushi.github.io/posts/least-squares-using-qr-decomposition/</guid>
      <description>알고리즘 $A \in \mathbb{C}^{m \times n}$ 과 벡터 $\mathbb{b} \in \mathbb{C}^{m}$ 에 대해 $\text{rank} A = n$ 이고 $A \mathbb{x} = \mathbb{b}$ 의 최소제곱해를 $\mathbb{x}_{\ast}$ 이라고 하자. Step 1. QR 분해 $A = \widehat{Q} \widehat{R}$을 만족하는 정규직교행렬 $\widehat{Q}$ 과 상삼각행렬 $\widehat{R}$ 을 구한다. Step 2. QR 분해에서 얻은 $\widehat{Q}$ 를 통해 정사영 $P : = \widehat{Q} \widehat{Q}^{\ast}$ 을 구한다. $A \mathbb{x}_{\ast} = P \mathbb{b}$ 이므로 $\widehat{Q} \widehat{R} \mathbb{x}_{\ast} = \widehat{Q} \widehat{Q}^{\ast} \mathbb{b}$ 이고 양변의 왼쪽에 $\widehat{Q}^{\ast}$ 을 곱해 $\widehat{R} \mathbb{x}_{\ast} = \widehat{Q}^{\ast} \mathbb{b}$ 를 얻는다. Step</description>
    </item>
    
    <item>
      <title>콜레스키 분해를 통한 최소제곱법</title>
      <link>https://freshrimpsushi.github.io/posts/least-squares-using-cholesky-decomposition/</link>
      <pubDate>Fri, 05 Jan 2018 00:00:00 +0000</pubDate>
      
      <guid>https://freshrimpsushi.github.io/posts/least-squares-using-cholesky-decomposition/</guid>
      <description>알고리즘 $A \in \mathbb{C}^{m \times n}$ 과 벡터 $\mathbb{b} \in \mathbb{C}^{m}$ 에 대해 $\text{rank} A = n$ 이고 $A \mathbb{x} = \mathbb{b}$ 의 최소제곱해를 $\mathbb{x}_{\ast}$ 이라고 하자. Step 1. 주어진 방정식의 양변에 $A^{\ast}$ 을 곱해 표준방정식 $A^{\ast} A \mathbb{x} = A^{\ast} \mathbb{b}$ 을 세운다.표준방정식의 해는 원래 방정식의 최소제곱해가 되므로, 표준방정식의 해 $\mathbb{x}$ 를 구하면 된다. Step 2. $\mathbb{y} := A^{\ast} \mathbb{b}$ 을 계산해 $A^{\ast} A \mathbb{x} = \mathbb{y}$ 을 얻는다. Step 3. 콜레스키 분해 $A^{\ast} A = L L^{\ast}$ 을 만족하</description>
    </item>
    
    <item>
      <title>최소제곱법</title>
      <link>https://freshrimpsushi.github.io/posts/the-method-of-least-square/</link>
      <pubDate>Thu, 04 Jan 2018 00:00:00 +0000</pubDate>
      
      <guid>https://freshrimpsushi.github.io/posts/the-method-of-least-square/</guid>
      <description>정의 행렬 $A \in \mathbb{C}^{m \times n}$ 와 벡터 $\mathbf{b} \in \mathbb{C}^{m}$ 에 대해 $\mathbf{b} \notin \mathcal{C} (A)$ 이면 방정식 $A\mathbf{x} = \mathbf{b}$ 는 해를 갖지 않으나, 대신 $\mathbf{x}_{\ast} = \text{argmin} \left\| \mathbf{b} - A \mathbf{x} \right\|_{2} $ 를 최소제곱해라고 정의한다. 설명 방정식의 해가 존재하지 않는 것은 안타깝지만 그렇다고 풀이 자체를 포기할 수는 없다. 사실 이 세상에 잘 풀리지 않는, 학계의 최전선에서 수학자들의 해법을 기다리고 있는 방정식들은 대개 그런 문제들이</description>
    </item>
    
    <item>
      <title>행렬의 QR 분해</title>
      <link>https://freshrimpsushi.github.io/posts/qr-decomposition-of-matrix/</link>
      <pubDate>Thu, 04 Jan 2018 00:00:00 +0000</pubDate>
      
      <guid>https://freshrimpsushi.github.io/posts/qr-decomposition-of-matrix/</guid>
      <description>개요 효율적인 행렬 분해에는 여러가지 조건이 필요하지만, 효율 이전에 분해 자체를 할 수 있느냐 없느냐가 중요할 수 있다. QR 분해는 정방행렬이라는 조건이 필요 없는 행렬 분해법이다. 정의 계수가 $n$ 인 행렬 $A := \begin{bmatrix} \mathbb{a}_{1} &amp;amp; \cdots &amp;amp; \mathbb{a}_{n} \end{bmatrix} \in \mathbb{C}^{m \times n}_{n}$ 에 대해 $i$ 번째까지의 열벡터로 생성된 부분공간 $$ S_{i} (A) := \text{sp} \left\{ \mathbb{a}_{1}, \cdots , \mathbb{a}_{i} \right\} $$ 을 정의하자. 벡터공간을 생성할 땐 $i$ 가 클수</description>
    </item>
    
    <item>
      <title>행렬대수에서 사영이란</title>
      <link>https://freshrimpsushi.github.io/posts/projection-in-matrix-algebra/</link>
      <pubDate>Wed, 03 Jan 2018 00:00:00 +0000</pubDate>
      
      <guid>https://freshrimpsushi.github.io/posts/projection-in-matrix-algebra/</guid>
      <description>🚧 이 포스트는 아직 이관 작업이 완료되지 않았습니다 🚧 정의 정방행렬 $P \in \mathbb{C}^{m \times m}$ 가 $P^2 = P$ 면 사영작용소Projector 라고 한다. 설명 대수학적인 용어로는 멱등원Idempotent 이라는 표현을 사용하고, 마찬가지로 $a^2 = a$ 와 같은 원소를 일컫는다. 한편 $P$ 가 사영이면 $(I-P)^2 = I - 2P + P^2 = I - 2P + P = (I-P)$ 이므로 $(I-P)$ 역시 사영임을 알 수 있다.</description>
    </item>
    
    <item>
      <title>콜레스키 분해의 유일성 증명</title>
      <link>https://freshrimpsushi.github.io/posts/proof-of-uniqueness-of-cholesky-decomposition/</link>
      <pubDate>Tue, 02 Jan 2018 00:00:00 +0000</pubDate>
      
      <guid>https://freshrimpsushi.github.io/posts/proof-of-uniqueness-of-cholesky-decomposition/</guid>
      <description>정리 $A&amp;gt;0$ 은 오직 하나의 콜레스키 분해를 가진다. 설명 고유값 대각화, 특이값 분해, 슈어 분해, LU 분해, LDU 분해 모두 유일성을 가지지 않는다는 공통점이 있다. 이 방법들은 모두 고유값과 고유벡터의 관계를 이용하거나 $1 = a \dfrac{1}{a}$ 이므로 $L$ 이나 $U$ 에 나눠줄 수 있기 때문이다. 하지만 콜레스키 분해는 고유값의 개념을 사용하지 않고 $A=LL^{T}$ 로 나타나므로 $1$을 둘로</description>
    </item>
    
    <item>
      <title>양의 정부호 행렬의 콜레스키 분해</title>
      <link>https://freshrimpsushi.github.io/posts/cholesky-decomposition/</link>
      <pubDate>Sat, 30 Dec 2017 00:00:00 +0000</pubDate>
      
      <guid>https://freshrimpsushi.github.io/posts/cholesky-decomposition/</guid>
      <description>개요 정칙행렬에서 대각행렬로 조건이 강화되면서 LDU 분해를 할 수 있었듯 양의 정부호 행렬로 조건이 강화되면 더욱 효율적인 행렬 분해인 콜레스키 분해Cholesky Decomposition를 할 수 있다. 빌드업 $m \times m$ 양의 정부호 행렬 $A : = \begin{bmatrix} a_{11} &amp;amp; \mathbb{w}^{T} \\ \mathbb{w} &amp;amp; K \end{bmatrix} &amp;gt; 0$을 생각해보면 $a_{11}$ 은 양수, $\mathbb{w} \in \mathbb{R}^{m-1}$ 이고 $ K \in \mathbb{R}^{(m-1) \times (m-1)}$ 이다. 만약 $a_{11} \le 0$ 이면 $\mathbb{e}_{1}</description>
    </item>
    
    <item>
      <title>대칭행렬의 LDU 분해</title>
      <link>https://freshrimpsushi.github.io/posts/ldu-decomposition-of-symmetric-matrix/</link>
      <pubDate>Fri, 29 Dec 2017 00:00:00 +0000</pubDate>
      
      <guid>https://freshrimpsushi.github.io/posts/ldu-decomposition-of-symmetric-matrix/</guid>
      <description>개요 $L^{T}$ 는 상삼각행렬이므로 $A = LU$ 에서의 $U$ 를 $U:= DL^{T}$ 으로 바꾼다고 보면 된다. 일반적인 LU 분해보다 조건이 까다로워진만큼 계산량은 많이 줄어든다. 정리 가역대칭행렬 $A$ 에 대해 $A = LDL^{T}$ 를 만족하는 하삼각행렬 $L$ 과 대각행렬 $D$ 가 존재한다. 증명 $A$ 는 가역행렬이므로 $A = L U$ 를 만족하는 하삼각행렬 $L$ 과 상삼각행렬 $U$ 가 존재한다. 한편 $A = A^{T}$ 이므로 $$ L</description>
    </item>
    
    <item>
      <title>정칙행렬의 LU 분해</title>
      <link>https://freshrimpsushi.github.io/posts/lu-decomposition-of-nonsingular-matrix/</link>
      <pubDate>Thu, 28 Dec 2017 00:00:00 +0000</pubDate>
      
      <guid>https://freshrimpsushi.github.io/posts/lu-decomposition-of-nonsingular-matrix/</guid>
      <description>빌드업 행렬 $A \in \mathbb{R}^{m \times m}$ 의 왼쪽에 곱해졌을 때 $(i, j)$ 성분을 $0$이 되도록 하는 행렬 $E_{ij}$ 를 $A$ 에 대한 $ij$-소거연산자라고 정의해보자. 구체적으로 정방행렬 $(a_{ij}) \in \mathbb{R}^{m \times m}$ 에 대한 $E_{ij}$ 는 대각성분이 $1$ 이고 $(i,j)$ 성분이 $\displaystyle -m_{ij} = -{{a_{ij}} \over {a_{jj}}}$, 나머지 성분이 $0$으로 구해진다. 이는 연립 방정식의 풀이에서 같은 변수끼리 계수를 맞춰서 소거하는 연산을 행렬로 나타낸 것</description>
    </item>
    
    <item>
      <title>스펙트럴 이론 증명</title>
      <link>https://freshrimpsushi.github.io/posts/proof-of-spectral-theory/</link>
      <pubDate>Wed, 27 Dec 2017 00:00:00 +0000</pubDate>
      
      <guid>https://freshrimpsushi.github.io/posts/proof-of-spectral-theory/</guid>
      <description>정리 정칙행렬 $A \in \mathbb{C}^{m \times m}$ 의 고유값 $\lambda_{i}$ 들로 구성된 대각행렬을 $\Lambda : = \text{diag} ( \lambda_{1} , \lambda_{2} , \cdots , \lambda_{m} ) $, 그 고유값들에 해당하는 정규직교 고유벡터 $\mathbb{q}_{i}$ 들로 구성된 정규직교행렬을 $Q$ 라고 하면 $$ A = A^{\ast} \iff A = Q \Lambda Q^{\ast} $$ 설명 $A^{\ast} = \left( \overline{A} \right)^{T}$ 는 $A$ 에 복소켤레를 취한 행렬의 전치 행렬로, 에르미트 행렬이라 부른다. 스펙트럴 이론Spectral Theory은 다음과 같</description>
    </item>
    
    <item>
      <title>정칙행렬의 슈어 분해</title>
      <link>https://freshrimpsushi.github.io/posts/schur-factorization-for-nonsingular-matrix/</link>
      <pubDate>Tue, 26 Dec 2017 00:00:00 +0000</pubDate>
      
      <guid>https://freshrimpsushi.github.io/posts/schur-factorization-for-nonsingular-matrix/</guid>
      <description>정의 어떤 유니터리 행렬 $Q$ 와 상삼각행렬 $T$ 에 대해, $A = Q T Q^{\ast}$ 이면 $A$ 는 슈어 분해Schur Factorization를 갖는다고 한다. 정리 모든 정칙행렬 $A \in \mathbb{C}^{ m \times m}$ 는 슈어 분해를 갖는다. 설명 고유값 대각화의 단점은 $A = S \Lambda S^{-1}$ 로 분해되었을 때 어쨌든 $S^{-1}$ 을 구하는 수고가 필요하다는 것이다. 거듭제곱을 구하는 시간이 획기적으로 줄어드는 것</description>
    </item>
    
    <item>
      <title>전체 특이값 분해의 존재성 증명</title>
      <link>https://freshrimpsushi.github.io/posts/proof-of-existence-of-fsvd/</link>
      <pubDate>Sun, 24 Dec 2017 00:00:00 +0000</pubDate>
      
      <guid>https://freshrimpsushi.github.io/posts/proof-of-existence-of-fsvd/</guid>
      <description>개요 고유값 대각화는 적용에 있어서 정방행렬이라는 제한이 있었지만 특이값 분해는 그러한 제약이 없었다.이렇게 쓸만한 분해법이 모든 행렬에 통하는지, 즉 분해의 존재성을 밝히는 것은 상당히 중요한 문제라고 할 수 있다. 정리 세 자연수 $m \ge n \ge r = \text{rank} A$ 에 대해 행렬 $A \in \mathbb{R}^{m \times n}$ 는 fSVD를 갖는다. 증명 임의의 벡터 $\mathbb{x} \ne \mathbb{0}$ 에 대해 $\mathbb{x}^{T} A^{T} A \mathbb{x} = || A \mathbb{x} || ^2</description>
    </item>
    
    <item>
      <title>행렬의 특이값 분해</title>
      <link>https://freshrimpsushi.github.io/posts/singular-value-decomposition-svd/</link>
      <pubDate>Sat, 23 Dec 2017 00:00:00 +0000</pubDate>
      
      <guid>https://freshrimpsushi.github.io/posts/singular-value-decomposition-svd/</guid>
      <description>개요 늘 고유값 대각화를 통해 행렬을 쪼갤 수 있다면 좋겠지만, 이 방법엔 아쉽게도 주어지는 행렬이 정방행렬이어야한다는 제한이 있다. 이에 대각화할 행렬을 정방행렬이 아닌 경우로 확장해서 분해하려고 한다. 빌드업 두 자연수 $m &amp;gt; n$ 에 대해 행렬 $A \in \mathbb{C}^{ m \times n}$ 의 계수가 $\text{rank} A = n $ 으로 주어진다고 하자. 그러면 $\dim C(A) = \dim C(A^{T}) = n $ 으로, 이들의 정규직교벡</description>
    </item>
    
    <item>
      <title>정칙행렬의 고유값 대각화</title>
      <link>https://freshrimpsushi.github.io/posts/diagonalization-of-nonsingular-matrix/</link>
      <pubDate>Mon, 18 Dec 2017 00:00:00 +0000</pubDate>
      
      <guid>https://freshrimpsushi.github.io/posts/diagonalization-of-nonsingular-matrix/</guid>
      <description>정의 $A \in \mathbb{C}^{ m \times m }$ 에 대해 $A = Q^{ * } \Lambda Q$ 를 만족하는 유니타리 행렬 $Q$ 와 대각행렬 $\lambda$ 가 존재하면, 행렬 $A$ 는 유니터리 대각화 가능하다 고 말한다. 정리 정칙행렬 $A \in \mathbb{R}^{m \times m}$ 의 일차독립인 고유벡터 $\mathbb{x}_{1}, \mathbb{x}_{2}, \cdots , \mathbb{x}_{m}$ 에 대해 $ S = \begin{bmatrix} \mathbb{x}_{1}, \mathbb{x}_{2}, \cdots , \mathbb{x}_{m} \end{bmatrix}$ 라 하면 $$ S^{-1} A S = \begin{bmatrix} \lambda_{1} &amp;amp; 0 &amp;amp; \cdots &amp;amp; 0 \\ 0 &amp;amp; \lambda_2 &amp;amp; \ddots &amp;amp; \vdots \\ \vdots &amp;amp; \ddots &amp;amp; \ddots &amp;amp; 0 \\ 0 &amp;amp; \cdots &amp;amp; 0 &amp;amp; \lambda_{m} \end{bmatrix} $$ 설명 가정에서</description>
    </item>
    
    <item>
      <title>고유값의 대수적 중복도는 기하적 중복도보다 크거나 같다</title>
      <link>https://freshrimpsushi.github.io/posts/the-algebraic-multiplicity-of-eigenvalues-is-greater-than-or-equal-to-the-geometric-multiplicity/</link>
      <pubDate>Tue, 21 Nov 2017 00:00:00 +0000</pubDate>
      
      <guid>https://freshrimpsushi.github.io/posts/the-algebraic-multiplicity-of-eigenvalues-is-greater-than-or-equal-to-the-geometric-multiplicity/</guid>
      <description>정리 행렬 $A \in \mathbb{C}^{ m \times m}$ 의 고유값 $\lambda$ 가 대수적 중복도 $a$ 를 갖고 기하적 중복도 $g$ 를 갖는다고 하면 $a \ge g$ 설명 고유값의 대수적 중복도와 기하적 중복도는 서로 같다는 보장이 없다. 만약 같았다면 애초에 다르게 정의하지도 않았을 것이다. 다만 한가지 확신할 수 있는 것은 대수적 중복도가 아무리 작아도 기하적 중복도보다는 크거나 같다는 사실이다. 증명 가정에 따</description>
    </item>
    
    <item>
      <title>행렬의 닮음과 고유값</title>
      <link>https://freshrimpsushi.github.io/posts/two-similar-matrices-have-same-eigenvalue/</link>
      <pubDate>Mon, 20 Nov 2017 00:00:00 +0000</pubDate>
      
      <guid>https://freshrimpsushi.github.io/posts/two-similar-matrices-have-same-eigenvalue/</guid>
      <description>정의 두 가역행렬 $A$ 와 $B$ 에 대해 $$ A = P^{-1} B P $$ 를 만족하는 가역행렬 $P$ 가 존재하면 $A$ 와 $B$ 는 서로 닮았다고 한다. 켤레 위에서 주어진 식을 $B$ 에 대해서 나타내면 $$ B = P^{-1} A P $$ 이므로 닮음 관계가 대칭적임을 쉽게 알 수 있다. 대수적으로는 $A$ 와 $B$ 가 $P$ 에 대한 켤레conjugate라고 말할 수 있겠다. 정리 두 행렬 $A,B$ 가 닮음이면 다음이 성립한다. $$ \det (A</description>
    </item>
    
    <item>
      <title>고유값의 대수적 중복도와 기하적 중복도</title>
      <link>https://freshrimpsushi.github.io/posts/multiplicity-of-eigen-value/</link>
      <pubDate>Sun, 19 Nov 2017 00:00:00 +0000</pubDate>
      
      <guid>https://freshrimpsushi.github.io/posts/multiplicity-of-eigen-value/</guid>
      <description>대수적 중복도 행렬 $A \in \mathbb{R}^{m \times m}$ 에 대해 고유값은 $\det (A - \lambda I ) =0$ 을 만족하는 $\lambda$ 로 정의된다. 특성방정식은 $\lambda$ 에 대한 $m$ 차 방정식, 즉 $$ \det (A - \lambda I ) = (-1)^m \lambda ^m + c_{m-1} \lambda ^{m-1} + \cdots + c_{1} \lambda + c_{0} = 0 $$ 으로 나타낼 수 있다. 대수학의 기본정리에 의해, 특성방정식은 복소수를 포함하여 정확히 $m$ 개의 근을 갖는다. 여기서 근은 중근을 포함하는데, 중근을 갖는다는 것</description>
    </item>
    
    <item>
      <title>연립방정식으로 이해하는 랭크와 무효차수</title>
      <link>https://freshrimpsushi.github.io/posts/rank-and-nullity/</link>
      <pubDate>Thu, 02 Nov 2017 00:00:00 +0000</pubDate>
      
      <guid>https://freshrimpsushi.github.io/posts/rank-and-nullity/</guid>
      <description>역사적 배경 역사적으로는 행렬이 고안된 배경 자체가 연립방정식을 보다 쉽고 편하게 표기하기 위함이었다. 예를 들어 연립방정식 $$ \begin{cases} 2x_{1} &amp;amp; + &amp;amp; x_{2} &amp;amp; + &amp;amp; x_{3} &amp;amp; = &amp;amp; 0 \\ &amp;amp; &amp;amp; x_{2} &amp;amp; &amp;amp; &amp;amp; = &amp;amp; 0 \end{cases} $$ 을 잘 보면, 같은 변수를 여러번 써야한다는 불편함이 있다. 이를 행렬로 나타내면 $$ \begin{bmatrix} 2 &amp;amp; 1 &amp;amp; 1 \\ 0 &amp;amp; 1 &amp;amp; 0 \end{bmatrix} \begin{bmatrix} x_{1} \\ x_{2} \\ x_{3} \end{bmatrix} = \begin{bmatrix} 0 \\ 0 \end{bmatrix} $$ 와 같이 각 잡힌 모</description>
    </item>
    
    <item>
      <title>랭크, 무효차수</title>
      <link>https://freshrimpsushi.github.io/posts/rank-and-nullity-of-matrix/</link>
      <pubDate>Wed, 04 Oct 2017 00:00:00 +0000</pubDate>
      
      <guid>https://freshrimpsushi.github.io/posts/rank-and-nullity-of-matrix/</guid>
      <description>정리1 행렬 $A$의 행공간과 열공간의 차원은 같다. 증명 $R$을 $A$의 행사다리꼴 행렬이라고 하자. 기본 행 연산은 $A$의 행공간의 차원과 열공간의 차원을 바꾸지 않으므로 다음의 식이 성립한다. $$ \begin{align*} \dim \big( \mathcal{R}(A) \big) &amp;amp;= \dim \big( \mathcal{R}(R) \big) \\ \dim \big( \mathcal{C}(A) \big) &amp;amp;= \dim \big( \mathcal{C}(R) \big) \end{align*} $$ 따라서 $R$의 행공간과 열공간의 차원이 같음을 보이면 충분하다. 그런데 $R$의 행공간은</description>
    </item>
    
    <item>
      <title>행공간, 열공간, 영공간</title>
      <link>https://freshrimpsushi.github.io/posts/row-space-column-space-null-space-of-matrix/</link>
      <pubDate>Tue, 03 Oct 2017 00:00:00 +0000</pubDate>
      
      <guid>https://freshrimpsushi.github.io/posts/row-space-column-space-null-space-of-matrix/</guid>
      <description>정의1 $m \times n$ 행렬 $A$에 대해서, $A$의 행으로 만들어지는 $\mathbb{R}^{n}$ 벡터들 $$ \begin{align*} \mathbf{r}_{1} &amp;amp;= \begin{bmatrix} a_{11} &amp;amp; a_{12} &amp;amp; \cdots &amp;amp; a_{1n} \end{bmatrix} \\ \mathbf{r}_{2} &amp;amp;= \begin{bmatrix} a_{21} &amp;amp; a_{22} &amp;amp; \cdots &amp;amp; a_{2n} \end{bmatrix} \\ &amp;amp;\vdots \\ \mathbf{r}_{m} &amp;amp;= \begin{bmatrix} a_{m1} &amp;amp; a_{m2} &amp;amp; \cdots &amp;amp; a_{mn} \end{bmatrix} \end{align*} $$ 을 $A$의 행벡터row vectors라고 한다. $A$의 열로 만들어지는 $\mathbb{R}^{m}$ 벡터들 $$ \mathbf{c}_{1} = \begin{bmatrix} a_{11} \\ a_{21} \\ \vdots \\ a_{m1} \end{bmatrix},\quad \mathbf{c}_{2} = \begin{bmatrix} a_{12} \\ a_{22} \\ \vdots \\ a_{m2} \end{bmatrix},\quad \dots,\quad \mathbf{c}_{n} = \begin{bmatrix} a_{1n} \\ a_{2n} \\ \vdots \\ a_{mn} \end{bmatrix} $$ 을 $A</description>
    </item>
    
  </channel>
</rss>
