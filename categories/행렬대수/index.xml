<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>행렬대수 on 생새우초밥집</title>
    <link>https://freshrimpsushi.github.io/categories/%ED%96%89%EB%A0%AC%EB%8C%80%EC%88%98/</link>
    <description>Recent content in 행렬대수 on 생새우초밥집</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>ko</language>
    <lastBuildDate>Sat, 23 Jan 2021 00:00:00 +0000</lastBuildDate><atom:link href="https://freshrimpsushi.github.io/categories/%ED%96%89%EB%A0%AC%EB%8C%80%EC%88%98/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>역행렬, 가역행렬</title>
      <link>https://freshrimpsushi.github.io/posts/definition-and-properties-of-inverse-matrix-invertible-matrix/</link>
      <pubDate>Sat, 23 Jan 2021 00:00:00 +0000</pubDate>
      
      <guid>https://freshrimpsushi.github.io/posts/definition-and-properties-of-inverse-matrix-invertible-matrix/</guid>
      <description>정의 $A$를 크기가 $n\times n$인 임의의 정사각 행렬이라고 하자. $A$와 행렬 곱이 가능한 행렬 $L$이 다음의 식을 만족하면 $L$을 $A$의 좌 역행렬left inverse matrix라고 한다. $$ LA=I_{n} $$ 이때 $I_{n}$은 크기가 $n\times n$인 항등 행렬이다. $A$와 행렬 곱이 가능한 행렬 $R$이 다음의 식을 만족하면 $R$을 $A$의 우 역행렬righ</description>
    </item>
    
    <item>
      <title>전치 행렬</title>
      <link>https://freshrimpsushi.github.io/posts/definition-and-properties-of-transpose-matrix/</link>
      <pubDate>Thu, 21 Jan 2021 00:00:00 +0000</pubDate>
      
      <guid>https://freshrimpsushi.github.io/posts/definition-and-properties-of-transpose-matrix/</guid>
      <description>정의1 $A$를 크기가 $m\times n$인 행렬이라고 하자. $A$의 행과 열을 서로 바꾼 행렬을 $A$의 전치 행렬transpose, 전치이라고 하고 $A^{T}$ 혹은 $A^{t}$라고 표기한다. 설명 정의에 따라 $A$가 $m \times n$ 행렬이면 $A^{T}$는 $n \times m$ 행렬이 된다. 또한 $A$의 $i$번째 행은 $A^{T}$의 $i$번째 열과 같고 그 반대도 마찬</description>
    </item>
    
    <item>
      <title>항등 행렬, 영 행렬</title>
      <link>https://freshrimpsushi.github.io/posts/identity-matrix-and-zero-matrix/</link>
      <pubDate>Tue, 19 Jan 2021 00:00:00 +0000</pubDate>
      
      <guid>https://freshrimpsushi.github.io/posts/identity-matrix-and-zero-matrix/</guid>
      <description>정의: 항등 행렬 크기가 $n\times n$이고 대각 성분이 모두 $1$인 대각 행렬을 항등행렬identity matrix이라 하고 $I_{n}$혹은 $I_{n\times n}$이라 표기한다. $$ I_{n\times n}= \begin{bmatrix} 1 &amp;amp; 0 &amp;amp; \cdots &amp;amp; 0 \\ 0 &amp;amp; 1 &amp;amp; \cdots &amp;amp; 0 \\ \vdots &amp;amp; \vdots &amp;amp; \ddots &amp;amp; \vdots \\ 0 &amp;amp; 0 &amp;amp; \cdots &amp;amp; 1 \end{bmatrix} $$ 설명 항등 행렬은 행렬 곱에 대한 항등원이다. 즉 임의의 $n\times n$ 행렬 $A$에 대해서 다음의 식이 성</description>
    </item>
    
    <item>
      <title>대각합</title>
      <link>https://freshrimpsushi.github.io/posts/defenition-and-properties-of-trace/</link>
      <pubDate>Mon, 18 Jan 2021 00:00:00 +0000</pubDate>
      
      <guid>https://freshrimpsushi.github.io/posts/defenition-and-properties-of-trace/</guid>
      <description>정의 $n\times n$행렬 $A$가 다음과 같이 주어졌다고 하자. $$ A= \begin{bmatrix} a_{11} &amp;amp; a_{12} &amp;amp; \cdots &amp;amp; a_{1n} \\ a_{21} &amp;amp; a_{22} &amp;amp; \cdots &amp;amp; a_{2n} \\ \vdots &amp;amp; \vdots &amp;amp; \ddots &amp;amp; \vdots \\ a_{n1} &amp;amp; a_{n2} &amp;amp; \cdots &amp;amp; a_{nn} \end{bmatrix} $$ $A$의 대각 성분들의 합을 $A$의 대각합trace 이라 정의하고 다음과 같이 표기한다. $$ \text{tr}(A)=\text{Tr}(A)=a_{11}+a_{22}+\cdots + a_{nn}=\sum \limits_{i=1}^{n} a_{ii} $$ 설명 다음과 같이 대각합을 함수로 생각할 수도 있다. $M_{n\times n}(\mathbb{R})$을 실수를 성</description>
    </item>
    
    <item>
      <title>대각 행렬</title>
      <link>https://freshrimpsushi.github.io/posts/definition-and-properties-of-diagonal-matrix/</link>
      <pubDate>Sun, 17 Jan 2021 00:00:00 +0000</pubDate>
      
      <guid>https://freshrimpsushi.github.io/posts/definition-and-properties-of-diagonal-matrix/</guid>
      <description>정의 $A$를 크기가 $n\times n$인 정사각 행렬이라고 하자. 행과 열의 번호가 같은 성분, 즉 $a_{11}$, $a_{22}$, $\dots$, $a_{nn}$들을 주 대각 성분main diagonal elements이라 한다. 주 대각 성분들을 이은 가상의 선을 주 대각선main diagonal, principal diagonal 이라 한다. 주 대각 성분 $a_{11}$, $a_{22}$, $\dots$, $a_{nn}$을 제외한 모든 성분이 $0$이면 행렬 $A$를 대각 행렬diagona</description>
    </item>
    
    <item>
      <title>정사각 행렬</title>
      <link>https://freshrimpsushi.github.io/posts/definition-and-properties-of-square-matrix/</link>
      <pubDate>Fri, 15 Jan 2021 00:00:00 +0000</pubDate>
      
      <guid>https://freshrimpsushi.github.io/posts/definition-and-properties-of-square-matrix/</guid>
      <description>정의 임의의 행렬 $A$의 행과 열의 수가 같으면 행렬 $A$를 정사각 행렬square matrix이라고 한다. 설명 정방 행렬이라고도 한다. 정사각 행렬은 다루기 쉽고 여러가지 좋은 성질들이 있지만 우리가 항상 정사각 행렬만을 다루게 되는 것은 아니다. 예 항등 행렬</description>
    </item>
    
    <item>
      <title>행렬의 연산: 상수배, 덧셈, 곱셈</title>
      <link>https://freshrimpsushi.github.io/posts/operations-of-matrix-scalar-multiplication-sum-multiplication/</link>
      <pubDate>Wed, 13 Jan 2021 00:00:00 +0000</pubDate>
      
      <guid>https://freshrimpsushi.github.io/posts/operations-of-matrix-scalar-multiplication-sum-multiplication/</guid>
      <description>상수배 크기가 $m \times n$인 임의의 행렬 $A$와 상수 $k$의 곱은 $A$의 각 성분에 $k$를 곱하는 것으로 정의하고 다음과 같이 표기한다. $$ kA=k\begin{bmatrix} a_{11} &amp;amp; a_{12} &amp;amp; \cdots &amp;amp; a_{1n} \\ a_{21} &amp;amp; a_{22} &amp;amp; \cdots &amp;amp; a_{2n} \\ \vdots &amp;amp; \vdots &amp;amp; \ddots &amp;amp; \vdots \\ a_{m1} &amp;amp; a_{m2} &amp;amp; \cdots &amp;amp; a_{mn} \end{bmatrix} := \begin{bmatrix} ka_{11} &amp;amp; ka_{12} &amp;amp; \cdots &amp;amp; ka_{1n} \\ ka_{21} &amp;amp; ka_{22} &amp;amp; \cdots &amp;amp; ka_{2n} \\ \vdots &amp;amp; \vdots &amp;amp; \ddots &amp;amp; \vdots \\ a_{m1} &amp;amp; ka_{m2} &amp;amp; \cdots &amp;amp; ka_{mn} \end{bmatrix} $$ 정의에 의해 상수와 행렬의 곱은 교환 관계가 성립한</description>
    </item>
    
    <item>
      <title>행렬의 정의</title>
      <link>https://freshrimpsushi.github.io/posts/definition-of-matrix/</link>
      <pubDate>Sat, 09 Jan 2021 00:00:00 +0000</pubDate>
      
      <guid>https://freshrimpsushi.github.io/posts/definition-of-matrix/</guid>
      <description>정의1 수를 다음과 같이 직사각형의 모양으로 나열해놓은 것을 행렬matrix이라고 한다. $$ A=\begin{bmatrix} 10 &amp;amp; 0 &amp;amp; 3 \\ 0 &amp;amp; 8 &amp;amp; 22 \end{bmatrix} $$ 나열해놓은 각각의 수를 엔트리entry 혹은 성분element이라고 한다. 가로 줄을 행row이라고 하며, 세로 줄을 열column이라고 한다. 또한 임의의 행렬이 $m$개의 행과 $n$개의 열을 가지면 그 행렬의</description>
    </item>
    
    <item>
      <title>벡터의 정의</title>
      <link>https://freshrimpsushi.github.io/posts/definition-of-vector/</link>
      <pubDate>Fri, 08 Jan 2021 00:00:00 +0000</pubDate>
      
      <guid>https://freshrimpsushi.github.io/posts/definition-of-vector/</guid>
      <description>정의 수의 나열을 벡터 라고 한다. 설명 보통 교과과정에서 벡터는 &amp;lsquo;크기와 방향을 가진 기하학적 객체&amp;rsquo;로 배우게 된다. 아무래도 물리학에서 가장 먼저 접하게 되는 개념이다보니 다음과 같은 $3$차원 이하의 벡터에 친숙할수밖에 없다. $$ (3,4) = \begin{bmatrix} 3 \\ 4 \end{bmatrix} \\ (x,y,z) = \begin{bmatrix} x \\ y \\ z \end{bmatrix} $$ 그런데 사실 벡터는 그보다 더 많은 좌표에 대해 일</description>
    </item>
    
    <item>
      <title>타원의 일반화 일립소이드</title>
      <link>https://freshrimpsushi.github.io/posts/ellipsoid-of-linear-transform/</link>
      <pubDate>Tue, 04 Feb 2020 00:00:00 +0000</pubDate>
      
      <guid>https://freshrimpsushi.github.io/posts/ellipsoid-of-linear-transform/</guid>
      <description>🚧 이 포스트는 아직 이관 작업이 완료되지 않았습니다 🚧 행렬의 특이값 분해 선형 변환 $A \in \mathbb{R}^{m \times m}$ 에 대해 $m$차원 단위구 $N := \left\{ \mathbb{x} \in \mathbb{R}^{m} : \left| \mathbb{x} \right|_{2} = 1 \right\}$ 의 이미지 $AN$ 을 일립소이드 라고 한다. $A$ 의 아이겐 밸류 $\sigma_{1}^{2} &amp;gt; \cdots \ge \sigma_{m}^{2} \ge 0$ 와 그에 따른 단위 아이겐 벡터 $u_{1} , \cdots , u_{m}$ 에 대해 $\sigma_{i} u_{i}$ 를 일립소이드의 축Axis 라고 한다. $m$차원 단위구는 중심이 $\mathbb{0} \in \mathbb{R}^{m}$ 이고</description>
    </item>
    
    <item>
      <title>행렬의 연속 미분 적분 지수행렬</title>
      <link>https://freshrimpsushi.github.io/posts/continuity-and-differentiability-of-matrix/</link>
      <pubDate>Sun, 29 Sep 2019 00:00:00 +0000</pubDate>
      
      <guid>https://freshrimpsushi.github.io/posts/continuity-and-differentiability-of-matrix/</guid>
      <description>🚧 이 포스트는 아직 이관 작업이 완료되지 않았습니다 🚧 미분 방정식에서는 실변수 $t$에 대한 함수들로 이루어진 벡터 혹은 행렬을 다뤄야할 때가 있다. 예를 들어 $$ \mathbf{x}(t) = \begin{pmatrix} x_1(t) \\ \vdots \\ x_n(t) \end{pmatrix},\quad \mathbf{A}(t) \begin{pmatrix} a_{11}(t) &amp;amp; \cdots &amp;amp; a_{1m}(t) \\ \vdots &amp;amp; &amp;amp; \vdots \\ a_{n1}(t) &amp;amp; \cdots &amp;amp; a_{nm}(t) \end{pmatrix} $$ 이를 $\mathrm{matrix\ function}$이라 한다. 읽는대로 번역하면 행렬 함수이지만 함수를 성분으로 가지는 행렬이라는 의미가 잘</description>
    </item>
    
    <item>
      <title>슈트라센 알고리즘 증명</title>
      <link>https://freshrimpsushi.github.io/posts/proof-of-strassen-algorithm/</link>
      <pubDate>Thu, 12 Sep 2019 00:00:00 +0000</pubDate>
      
      <guid>https://freshrimpsushi.github.io/posts/proof-of-strassen-algorithm/</guid>
      <description>🚧 이 포스트는 아직 이관 작업이 완료되지 않았습니다 🚧 $k \in \mathbb{N}$ 에 대해 $n=2^{k}$ 이라고 하자. $A, B \in \mathbb{R}^{n \times n}$ 에 대해 조던 블록 행렬 표현을 사용해 다음과 같은 8개의 ${{n} \over {2}} \times {{n} \over {2}}$ 행렬 $A_{i}$, $B_{i}$ 들을 생각해보자. $$ AB= \begin{bmatrix} A_{1} &amp;amp; A_{2} \\ A_{3} &amp;amp; A_{4} \end{bmatrix} \begin{bmatrix} B_{1} &amp;amp; B_{2} \\ B_{3} &amp;amp; B_{4} \end{bmatrix} = \begin{bmatrix} C_{1} &amp;amp; C_{2} \\ C_{3} &amp;amp; C_{4} \end{bmatrix} = C $$ $C = AB$ 를 구하기 위해 다음을 계산한다. $$ P_{1} = A_{1} ( B_{2} - B_{4} ) \\ P_{2} = ( A_{1} + A_{2}</description>
    </item>
    
    <item>
      <title>삼중대각행렬의 행렬식 유도</title>
      <link>https://freshrimpsushi.github.io/posts/derivation-of-tridiagonal-matrixs-determinant/</link>
      <pubDate>Wed, 26 Dec 2018 00:00:00 +0000</pubDate>
      
      <guid>https://freshrimpsushi.github.io/posts/derivation-of-tridiagonal-matrixs-determinant/</guid>
      <description>🚧 이 포스트는 아직 이관 작업이 완료되지 않았습니다 🚧 삼중대각행렬 $X_{n} := \begin{bmatrix} x &amp;amp; 1 &amp;amp; 0 &amp;amp; \cdots &amp;amp; 0 &amp;amp; 0 \\ 1 &amp;amp; x &amp;amp; 1 &amp;amp; \cdots &amp;amp; 0 &amp;amp; 0 \\ 0 &amp;amp; 1 &amp;amp; x &amp;amp; \cdots &amp;amp; 0 &amp;amp; 0 \\ \vdots &amp;amp; \vdots &amp;amp; \vdots &amp;amp; \ddots &amp;amp; \vdots &amp;amp; \vdots \\ 0 &amp;amp; 0 &amp;amp; 0 &amp;amp; \cdots &amp;amp; x &amp;amp; 1 \\ 0 &amp;amp; 0 &amp;amp; 0 &amp;amp; \cdots &amp;amp; 1 &amp;amp; x \end{bmatrix}$ 에 대해 $\displaystyle | x_{n}| = U_{n} \left( {{x} \over {2}} \right)$ $U_{n}$ 은 $n$ 차 제2종 체비셰프 다항함수를 의미한다.물론 $X_{n}$ 은 일반적인 삼중대각</description>
    </item>
    
    <item>
      <title>방데르몽드 행렬의 행렬식 유도</title>
      <link>https://freshrimpsushi.github.io/posts/derivation-of-vandermonde-matrixs-determinant/</link>
      <pubDate>Thu, 20 Dec 2018 00:00:00 +0000</pubDate>
      
      <guid>https://freshrimpsushi.github.io/posts/derivation-of-vandermonde-matrixs-determinant/</guid>
      <description>🚧 이 포스트는 아직 이관 작업이 완료되지 않았습니다 🚧 서로 다른 $1, x_{1} , x_{2 } , \cdots , x_{n}$ 에 대해 $V_{n} := \begin{bmatrix} 1 &amp;amp; x_{1} &amp;amp; x_{1}^{2} &amp;amp; \cdots &amp;amp; x_{1}^{n-1} \\ 1 &amp;amp; x_{2} &amp;amp; x_{2}^{2} &amp;amp; \cdots &amp;amp; x_{2}^{n-1} \\ \vdots &amp;amp; \vdots &amp;amp; \vdots &amp;amp; \ddots &amp;amp; \vdots \\ 1 &amp;amp; x_{n} &amp;amp; x_{n}^{2} &amp;amp; \cdots &amp;amp; x_{n}^{n-1} \end{bmatrix}$ 를 방데르몽드 행렬 이라고 한다. $V_{n}$ 의 행렬식은 $\displaystyle \det V_{n} = \prod_{1 \le i &amp;lt; j \le n } (x_{j} - x_{i})$ 방데르몽드 행렬은 특이하게 생겼지만 미분방정식의 수치적 풀이에서 등장하는</description>
    </item>
    
    <item>
      <title>크레이머 법칙 증명</title>
      <link>https://freshrimpsushi.github.io/posts/proof-of-cramer-rule/</link>
      <pubDate>Wed, 19 Dec 2018 00:00:00 +0000</pubDate>
      
      <guid>https://freshrimpsushi.github.io/posts/proof-of-cramer-rule/</guid>
      <description>🚧 이 포스트는 아직 이관 작업이 완료되지 않았습니다 🚧 연립방정식 $A \mathbb{x} = \mathbb{b} $ 은 가역행렬 $A = \begin{bmatrix} a_{11} &amp;amp; a_{12} &amp;amp; \cdots &amp;amp; a_{1n} \\ a_{21} &amp;amp; a_{22} &amp;amp; \cdots &amp;amp; a_{2n} \\ \vdots &amp;amp; \vdots &amp;amp; \ddots &amp;amp; \vdots \\ a_{n1} &amp;amp; a_{n2} &amp;amp; \cdots &amp;amp; a_{nn} \end{bmatrix}$ 과 두 벡터 $\mathbb{x} = \begin{bmatrix} x_{1} \\ x_{2} \\ \vdots \\ x_{n} \end{bmatrix}$, $\mathbb{b} = \begin{bmatrix} b_{1} \\ b_{2} \\ \vdots \\ b_{n} \end{bmatrix}$ 로 세워져있다. $A$ 의 $j$ 번째 열을 $\mathbb{b}$ 로 대체한 행렬을 $A_{j}$ 라고 하면 $\displaystyle x_{j} = {{ \det A_{j} } \over { \det A }} $ 크레이머 공식은 연립방정</description>
    </item>
    
    <item>
      <title>라플라스 전개</title>
      <link>https://freshrimpsushi.github.io/posts/laplace-expansion/</link>
      <pubDate>Wed, 28 Nov 2018 00:00:00 +0000</pubDate>
      
      <guid>https://freshrimpsushi.github.io/posts/laplace-expansion/</guid>
      <description>🚧 이 포스트는 아직 이관 작업이 완료되지 않았습니다 🚧 정사각행렬 $A_{n \times n} = (a_{ij})$ 의 $i$ 번째 행과 $j$ 번째 행을 제거한 행렬의 행렬식 $M_{ij}$ 을 소행렬식Minor 이라고 한다. 이에 대해 $C_{ij} := (-1)^{i + j} M_{ij} $ 를 여인자Cofactor 라고 한다. (1)** 선택된 $i$행 에 대해, $\displaystyle \det A = \sum_{j=1}^{n} a_{ij} C_{ij} $ (2)** 선택된 $j$열 에 대해, $\displaystyle \det A = \sum_{i=1}^{n} a_{ij} C_{ij} $ 라플라스 전개는 여인자 전개</description>
    </item>
    
    <item>
      <title>특이값 분해를 통한 최소제곱법</title>
      <link>https://freshrimpsushi.github.io/posts/least-squares-using-sigular-value-decomposition/</link>
      <pubDate>Sat, 06 Jan 2018 00:00:00 +0000</pubDate>
      
      <guid>https://freshrimpsushi.github.io/posts/least-squares-using-sigular-value-decomposition/</guid>
      <description>🚧 이 포스트는 아직 이관 작업이 완료되지 않았습니다 🚧 $A \in \mathbb{C}^{m \times n}$ 과 벡터 $\mathbb{b} \in \mathbb{C}^{m}$ 에 대해 $\text{rank} A = n$ 이고 $A \mathbb{x} = \mathbb{b}$ 의 최소제곱해를 $\mathbb{x}_{}$ 이라고 하자.Step 1. 특이값 분해$A = \widehat{U} \widehat{\Sigma} V^{ * }$ 를 만족하는 정규직교행렬 $\widehat{U}$ 과 대각행렬 $\widehat{\Sigma}$ 과 유니터리 행렬 $V$ 를 구한다.**Step 2. 특이값 분해에서 얻은 $\widehat{U}$ 를 통해 정사영 $P : = \widehat{U} \widehat{U}^{ * }$ 을 구한다.$A \mathbb{x}_{} = P</description>
    </item>
    
    <item>
      <title>QR 분해를 통한 최소제곱법</title>
      <link>https://freshrimpsushi.github.io/posts/least-squares-using-qr-decomposition/</link>
      <pubDate>Fri, 05 Jan 2018 00:00:00 +0000</pubDate>
      
      <guid>https://freshrimpsushi.github.io/posts/least-squares-using-qr-decomposition/</guid>
      <description>🚧 이 포스트는 아직 이관 작업이 완료되지 않았습니다 🚧 $A \in \mathbb{C}^{m \times n}$ 과 벡터 $\mathbb{b} \in \mathbb{C}^{m}$ 에 대해 $\text{rank} A = n$ 이고 $A \mathbb{x} = \mathbb{b}$ 의 최소제곱해를 $\mathbb{x}_{}$ 이라고 하자.Step 1. QR 분해$A = \widehat{Q} \widehat{R}$ 을 만족하는 정규직교행렬 $\widehat{Q}$ 과 상삼각행렬 $\widehat{R}$ 을 구한다.**Step 2. QR 분해에서 얻은 $\widehat{Q}$ 를 통해 정사영 $P : = \widehat{Q} \widehat{Q}^{ * }$ 을 구한다.$A \mathbb{x}_{} = P \mathbb{b}$ 이므로 $\widehat{Q} \widehat{R} \mathbb{x}_{} = \widehat{Q} \widehat{Q}^{ * } \mathbb{b}$ 이</description>
    </item>
    
    <item>
      <title>콜레스키 분해를 통한 최소제곱법</title>
      <link>https://freshrimpsushi.github.io/posts/least-squares-using-cholesky-decomposition/</link>
      <pubDate>Fri, 05 Jan 2018 00:00:00 +0000</pubDate>
      
      <guid>https://freshrimpsushi.github.io/posts/least-squares-using-cholesky-decomposition/</guid>
      <description>🚧 이 포스트는 아직 이관 작업이 완료되지 않았습니다 🚧 $A \in \mathbb{C}^{m \times n}$ 과 벡터 $\mathbb{b} \in \mathbb{C}^{m}$ 에 대해 $\text{rank} A = n$ 이고 $A \mathbb{x} = \mathbb{b}$ 의 최소제곱해를 $\mathbb{x}_{*}$ 이라고 하자.Step 1. 주어진 방정식의 양변에 $A^{ * }$ 을 곱해 표준방정식 $A^{ * } A \mathbb{x} = A^{ * } \mathbb{b}$ 을 세운다.표준방정식의 해는 원래 방정식의 최소제곱해가 되므로, 표준방정식의 해 $\mathbb{x}$ 를 구하면 된다.Step 2. $\mathbb{y} := A^{ *</description>
    </item>
    
    <item>
      <title>최소제곱법</title>
      <link>https://freshrimpsushi.github.io/posts/the-method-of-least-square/</link>
      <pubDate>Thu, 04 Jan 2018 00:00:00 +0000</pubDate>
      
      <guid>https://freshrimpsushi.github.io/posts/the-method-of-least-square/</guid>
      <description>🚧 이 포스트는 아직 이관 작업이 완료되지 않았습니다 🚧 행렬 $A \in \mathbb{C}^{m \times n}$ 와 벡터 $\mathbb{b} \in \mathbb{C}^{m}$ 에 대해 $\mathbb{b} \notin \mathcal{C} (A)$ 이면 방정식 $A\mathbb{x} = \mathbb{b}$ 는 해를 갖지 않고 $\mathbb{x}_{*} = \text{argmin} | \mathbb{b} - A \mathbb{x} |_{2} $ 를 최소제곱해 라고 정의한다. 방정식의 해가 존재하지 않는 것은 안타깝지만 그렇다고 풀이 자체를 포기할 수는 없다. 사실 이 세상에 잘 풀리지 않는, 학계의 최전선에서 수학자들의 해법을 기다리고</description>
    </item>
    
    <item>
      <title>행렬의 QR 분해 QR Decomposition of Matrix</title>
      <link>https://freshrimpsushi.github.io/posts/355/</link>
      <pubDate>Thu, 04 Jan 2018 00:00:00 +0000</pubDate>
      
      <guid>https://freshrimpsushi.github.io/posts/355/</guid>
      <description>🚧 이 포스트는 아직 이관 작업이 완료되지 않았습니다 🚧 계수가 $n$ 인 행렬 $A := \begin{bmatrix} \mathbb{a}_{1} &amp;amp; \cdots &amp;amp; \mathbb{a}_{n} \end{bmatrix} \in \mathbb{C}^{m \times n}_{n}$ 에 대해 $i$ 번째까지의 열벡터로 생성된 부분공간 $S_{i} (A) := \text{sp} \left\{ \mathbb{a}_{1}, \cdots , \mathbb{a}_{i} \right\}$ 을 정의하자.벡터공간을 생성할 땐 $i$ 가 클수록 많은 열벡터를 사용할 수 있으므로 $S_{1} (A) \subset S_{2} (A) \subset \cdots S_{n} (A)$ 가 성립할 것이다.물론 정규직교벡터로 이루어진 행렬 $\widehat{Q} : = \begin{bmatrix} \mathbb{q}_{1} &amp;amp; \cdots &amp;amp; \mathbb{q}_{n} \end{bmatrix} \in</description>
    </item>
    
    <item>
      <title>콜레스키 분해의 유일성 증명</title>
      <link>https://freshrimpsushi.github.io/posts/proof-of-uniqueness-of-cholesky-decomposition/</link>
      <pubDate>Tue, 02 Jan 2018 00:00:00 +0000</pubDate>
      
      <guid>https://freshrimpsushi.github.io/posts/proof-of-uniqueness-of-cholesky-decomposition/</guid>
      <description>🚧 이 포스트는 아직 이관 작업이 완료되지 않았습니다 🚧 $A&amp;gt;0$ 은 오직 하나의 콜레스키 분해를 가진다. 고유값 대각화, 특이값 분해, 슈어 분해, LU 분해, LDU 분해 모두 유일성을 가지지 않는다는 공통점이 있다.이 방법들은 모두 고유값과 고유벡터의 관계를 이용하거나 $\displaystyle 1 = a {{1} \over {a}} $ 이므로 $L$ 이나 $U$ 에 나눠줄 수 있기 때문이다.하지만 콜레스키 분해는 고유값</description>
    </item>
    
    <item>
      <title>양의 정부호 행렬의 콜레스키 분해</title>
      <link>https://freshrimpsushi.github.io/posts/cholesky-decomposition/</link>
      <pubDate>Sat, 30 Dec 2017 00:00:00 +0000</pubDate>
      
      <guid>https://freshrimpsushi.github.io/posts/cholesky-decomposition/</guid>
      <description>🚧 이 포스트는 아직 이관 작업이 완료되지 않았습니다 🚧 $m \times m$ 양의 정부호 행렬 $A : = \begin{bmatrix} a_{11} &amp;amp; \mathbb{w}^{T} \\ \mathbb{w} &amp;amp; K \end{bmatrix} &amp;gt; 0$ 을 생각해보면 $a_{11}$ 은 양수, $\mathbb{w} \in \mathbb{R}^{m-1}$ 이고 $ K \in \mathbb{R}^{(m-1) \times (m-1)}$ 이다.만약 $a_{11} \le 0$ 이면 $\mathbb{e}_{1} = (1, 0, \cdots , 0)$ 에 대해 $\mathbb{e}_{1}^{T} A \mathbb{e}_{1} = a_{11} \le 0$ 이므로 $A$ 는 양의 정부호가 될 수 없다.한편 임의의 벡터 $ \mathbb{0 } \ne \mathbb{x} \in \mathbb{R}^{m-1} $ 에 대해서 $ \mathbb{x}^{T} K \mathbb{x} = \begin{bmatrix} 0 &amp;amp; \mathbb{x}^{T} \end{bmatrix} \begin{bmatrix} a_{11} &amp;amp; \mathbb{w}^{T} \\ \mathbb{w} &amp;amp; K \end{bmatrix}</description>
    </item>
    
    <item>
      <title>대칭행렬의 LDU 분해와 R 코드 LDU Decomposition</title>
      <link>https://freshrimpsushi.github.io/posts/349/</link>
      <pubDate>Fri, 29 Dec 2017 00:00:00 +0000</pubDate>
      
      <guid>https://freshrimpsushi.github.io/posts/349/</guid>
      <description>🚧 이 포스트는 아직 이관 작업이 완료되지 않았습니다 🚧 가역대칭행렬 $A$ 에 대해 $A = LDL^{T}$ 를 만족하는 하삼각행렬 $L$ 과 대각행렬 $D$ 가 존재한다. $L^{T}$ 는 상삼각행렬이므로 $A = LU$ 에서의 $U$ 를 $U:= DL^{T}$ 으로 바꾼다고 보면 된다.일반적인 LU 분해보다 조건이 까다로워진만큼 계산량은 많이 줄어든다. 증명 $A$ 는 가역행렬이므로 $A = L U$ 를 만족하는 하삼각행렬 $L$ 과 상삼각</description>
    </item>
    
    <item>
      <title>정칙행렬의 LU 분해와 R 코드 LU Decomposition</title>
      <link>https://freshrimpsushi.github.io/posts/345/</link>
      <pubDate>Thu, 28 Dec 2017 00:00:00 +0000</pubDate>
      
      <guid>https://freshrimpsushi.github.io/posts/345/</guid>
      <description>🚧 이 포스트는 아직 이관 작업이 완료되지 않았습니다 🚧 행렬 $A \in \mathbb{R}^{m \times m}$ 의 왼쪽에 곱해졌을 때 $(i, j)$ 성분을 $0$이 되도록 하는 행렬 $E_{ij}$ 를 $A$ 에 대한 $ij$-소거연산자 라고 정의해보자.구체적으로 정방행렬 $(a_{ij}) \in \mathbb{R}^{m \times m}$ 에 대한 $E_{ij}$ 는 대각성분이 $1$ 이고 $(i,j)$ 성분이 $\displaystyle -m_{ij} = -{{a_{ij}} \over {a_{jj}}}$, 나머지 성분이 $0$으로 구해진다.이는 연립 방정식의 풀이에서 같은 변수끼리</description>
    </item>
    
    <item>
      <title>스펙트럴 이론 증명</title>
      <link>https://freshrimpsushi.github.io/posts/proof-of-spectral-theory/</link>
      <pubDate>Wed, 27 Dec 2017 00:00:00 +0000</pubDate>
      
      <guid>https://freshrimpsushi.github.io/posts/proof-of-spectral-theory/</guid>
      <description>🚧 이 포스트는 아직 이관 작업이 완료되지 않았습니다 🚧 정칙행렬 $A \in \mathbb{C}^{m \times m}$ 의 고유값 $\lambda_{i}$ 들로 구성된 대각행렬을 $\Lambda : = \text{diag} ( \lambda_{1} , \lambda_{2} , \cdots , \lambda_{m} ) $, 그 고유값들에 해당하는 정규직교 고유벡터 $\mathbb{q}_{i}$ 들로 구성된 정규직교행렬을 $Q$ 라고 하면 $$ A = A^{ * } \iff A = Q \Lambda Q^{ * } $$ * $A^{ * } = \left( \overline{A} \right)^{T}$ 는 $A$ 에 복소켤레를 취한 행렬의 전치 행렬로, 에르미트 행렬이라 부른다</description>
    </item>
    
    <item>
      <title>정칙행렬의 슈어 분해</title>
      <link>https://freshrimpsushi.github.io/posts/schur-factorization-for-nonsingular-matrix/</link>
      <pubDate>Tue, 26 Dec 2017 00:00:00 +0000</pubDate>
      
      <guid>https://freshrimpsushi.github.io/posts/schur-factorization-for-nonsingular-matrix/</guid>
      <description>🚧 이 포스트는 아직 이관 작업이 완료되지 않았습니다 🚧 모든 정칙행렬 $A \in \mathbb{C}^{ m \times m}$ 는 슈어 분해를 갖는다. 어떤 유니터리 행렬 $Q$ 와 상삼각행렬 $T$ 에 대해, $A = Q T Q^{ * }$ 이면 $A$ 는 슈어 분해를 갖는다 고 한다.고유값 대각화의 단점은 $A = S \Lambda S^{-1}$ 로 분해되었을 때 어쨌든 $S^{-1}$ 을 구하는 수고가 필요하다는 것이다. 거듭제곱을 구하는 시간이 획기적으로 줄어드는</description>
    </item>
    
    <item>
      <title>전체 특이값 분해의 존재성 증명</title>
      <link>https://freshrimpsushi.github.io/posts/proof-of-existence-of-fsvd/</link>
      <pubDate>Sun, 24 Dec 2017 00:00:00 +0000</pubDate>
      
      <guid>https://freshrimpsushi.github.io/posts/proof-of-existence-of-fsvd/</guid>
      <description>개요 고유값 대각화는 적용에 있어서 정방행렬이라는 제한이 있었지만 특이값 분해는 그러한 제약이 없었다.이렇게 쓸만한 분해법이 모든 행렬에 통하는지, 즉 분해의 존재성을 밝히는 것은 상당히 중요한 문제라고 할 수 있다. 정리 세 자연수 $m \ge n \ge r = \text{rank} A$ 에 대해 행렬 $A \in \mathbb{R}^{m \times n}$ 는 fSVD를 갖는다. 증명 임의의 벡터 $\mathbb{x} \ne \mathbb{0}$ 에 대해 $\mathbb{x}^{T} A^{T} A \mathbb{x} = || A \mathbb{x} || ^2</description>
    </item>
    
    <item>
      <title>행렬의 특이값 분해</title>
      <link>https://freshrimpsushi.github.io/posts/singular-value-decomposition-svd/</link>
      <pubDate>Sat, 23 Dec 2017 00:00:00 +0000</pubDate>
      
      <guid>https://freshrimpsushi.github.io/posts/singular-value-decomposition-svd/</guid>
      <description>개요 늘 고유값 대각화를 통해 행렬을 쪼갤 수 있다면 좋겠지만, 이 방법엔 아쉽게도 주어지는 행렬이 정방행렬이어야한다는 제한이 있다. 이에 대각화할 행렬을 정방행렬이 아닌 경우로 확장해서 분해하려고 한다. 빌드업 두 자연수 $m &amp;gt; n$ 에 대해 행렬 $A \in \mathbb{C}^{ m \times n}$ 의 계수가 $\text{rank} A = n $ 으로 주어진다고 하자. 그러면 $\dim C(A) = \dim C(A^{T}) = n $ 으로, 이들의 정규직교벡</description>
    </item>
    
    <item>
      <title>정칙행렬의 고유값 대각화</title>
      <link>https://freshrimpsushi.github.io/posts/diagonalization-of-nonsingular-matrix/</link>
      <pubDate>Mon, 18 Dec 2017 00:00:00 +0000</pubDate>
      
      <guid>https://freshrimpsushi.github.io/posts/diagonalization-of-nonsingular-matrix/</guid>
      <description>정의 $A \in \mathbb{C}^{ m \times m }$ 에 대해 $A = Q^{ * } \Lambda Q$ 를 만족하는 유니타리 행렬 $Q$ 와 대각행렬 $\lambda$ 가 존재하면, 행렬 $A$ 는 유니터리 대각화 가능하다 고 말한다. 정리 정칙행렬 $A \in \mathbb{R}^{m \times m}$ 의 일차독립인 고유벡터 $\mathbb{x}_{1}, \mathbb{x}_{2}, \cdots , \mathbb{x}_{m}$ 에 대해 $ S = \begin{bmatrix} \mathbb{x}_{1}, \mathbb{x}_{2}, \cdots , \mathbb{x}_{m} \end{bmatrix}$ 라 하면 $$ S^{-1} A S = \begin{bmatrix} \lambda_{1} &amp;amp; 0 &amp;amp; \cdots &amp;amp; 0 \\ 0 &amp;amp; \lambda_2 &amp;amp; \ddots &amp;amp; \vdots \\ \vdots &amp;amp; \ddots &amp;amp; \ddots &amp;amp; 0 \\ 0 &amp;amp; \cdots &amp;amp; 0 &amp;amp; \lambda_{m} \end{bmatrix} $$ 설명 가정에서</description>
    </item>
    
    <item>
      <title>양의 정부호 행렬이란</title>
      <link>https://freshrimpsushi.github.io/posts/positive-definite-matrix/</link>
      <pubDate>Wed, 13 Dec 2017 00:00:00 +0000</pubDate>
      
      <guid>https://freshrimpsushi.github.io/posts/positive-definite-matrix/</guid>
      <description>🚧 이 포스트는 아직 이관 작업이 완료되지 않았습니다 🚧 행렬 $A \in \mathbb{C}^{m \times m}$ 가 $A = A^{ * }$ 즉, 에르미트 행렬일 때 임의의 벡터 $\mathbb{x} \ne \mathbb{0}$ 에 대해 $\mathbb{x}^{ * } A \mathbb{x} &amp;gt; 0$ 면 $A$ 는 양의 정부호 라고 부르고 $A&amp;gt;0$ 로 쓴다. 행렬 $A \in \mathbb{R}^{m \times m}$ 에 대해서는 $A = A^{T}$ 즉, 대칭행렬이고 $\mathbb{x} \ne \mathbb{0}$ 에 대해 $\mathbb{x}^{T} A \mathbb{x} &amp;gt; 0$ 일 때 $A&amp;gt;0$ 로 정의한다. 이러한 정의는 깔끔하지만 많은 것이 생략되어 있어 머리로 따</description>
    </item>
    
    <item>
      <title>고유값의 대수적 중복도는 기하적 중복도보다 크거나 같음을 증명</title>
      <link>https://freshrimpsushi.github.io/posts/the-algebraic-multiplicity-of-eigenvalues-is-greater-than-or-equal-to-the-geometric-multiplicity/</link>
      <pubDate>Tue, 21 Nov 2017 00:00:00 +0000</pubDate>
      
      <guid>https://freshrimpsushi.github.io/posts/the-algebraic-multiplicity-of-eigenvalues-is-greater-than-or-equal-to-the-geometric-multiplicity/</guid>
      <description>🚧 이 포스트는 아직 이관 작업이 완료되지 않았습니다 🚧 행렬 $A \in \mathbb{C}^{ m \times m}$ 의 고유값 $\lambda$ 가 대수적 중복도 $a$ 를 갖고 기하적 중복도 $g$ 를 갖는다고 하면 $a \ge g$ 고유값의 대수적 중복도와 기하적 중복도는 서로 같다는 보장이 없다. (만약 같았다면 애초에 다르게 정의하지도 않았을 것이다.) 다만 한가지 확신할 수 있는 것은 대수적 중복도가 아무리 작아도 기하적 중복</description>
    </item>
    
    <item>
      <title>두 행렬이 서로 닮음이면 고유값이 같음을 증명</title>
      <link>https://freshrimpsushi.github.io/posts/two-similar-matrices-have-same-eigenvalue/</link>
      <pubDate>Mon, 20 Nov 2017 00:00:00 +0000</pubDate>
      
      <guid>https://freshrimpsushi.github.io/posts/two-similar-matrices-have-same-eigenvalue/</guid>
      <description>🚧 이 포스트는 아직 이관 작업이 완료되지 않았습니다 🚧 $A$ 와 $B$ 가 닮음이면 $\det (A - \lambda) = \det (B - \lambda) $ 두 가역행렬 $A$ 와 $B$ 에 대해, $A = P^{-1} B P$ 를 만족하는 가역행렬 $P$ 가 존재하면 $A$ 와 $B$ 는 서로 닮음 이라고 정의한다.위에서 주어진 식을 $B$ 에 대해서 나타내면 $B = P^{-1} A P$ 이므로 닮음 관계가 대칭적임을 쉽게 알 수 있다.대수적으로는 $A$ 와 $B$ 가 $P$ 에 대한 켤레con</description>
    </item>
    
    <item>
      <title>고유값의 대수적 중복도와 기하적 중복도</title>
      <link>https://freshrimpsushi.github.io/posts/multiplicity-of-eigen-value/</link>
      <pubDate>Sun, 19 Nov 2017 00:00:00 +0000</pubDate>
      
      <guid>https://freshrimpsushi.github.io/posts/multiplicity-of-eigen-value/</guid>
      <description>🚧 이 포스트는 아직 이관 작업이 완료되지 않았습니다 🚧 행렬 $A \in \mathbb{R}^{m \times m}$ 에 대해 고유값은 $\det (A - \lambda I ) =0$ 을 만족하는 $\lambda$ 로 정의된다. 특성방정식은 $\lambda$ 에 대한 $m$ 차 방정식, 즉 $$ \det (A - \lambda I ) = (-1)^m \lambda ^m + c_{m-1} \lambda ^{m-1} + \cdots + c_{1} \lambda + c_{0} = 0 $$ 으로 나타낼 수 있다. 대수학의 기본정리에 의해, 특성방정식은 복소수를 포함하여 정확히 $m$ 개의 근을 갖는다. 여기서 근은</description>
    </item>
    
    <item>
      <title>기하학적으로 이해하는 고유값의 정의</title>
      <link>https://freshrimpsushi.github.io/posts/definition-of-eigenvalues-understood-by-geometry/</link>
      <pubDate>Thu, 16 Nov 2017 00:00:00 +0000</pubDate>
      
      <guid>https://freshrimpsushi.github.io/posts/definition-of-eigenvalues-understood-by-geometry/</guid>
      <description>🚧 이 포스트는 아직 이관 작업이 완료되지 않았습니다 🚧 대칭행렬 $A \in \mathbb{R}^{ m \times m }$ 과 벡터 $\mathbb{x} \in \mathbb{R}^{m}$ 을 생각해보자.벡터 $\mathbb{x}$ 를 $A$ 로 변환한 $A \mathbb{x}$ 와 $\mathbb{x}$ 의 방향이 같다고 하면 어떤 실수 $\lambda$ 에 대해 $\lambda \mathbb{x} = A \mathbb{x} $ 이 성립할 것이다. 행렬 $A$ 는 본래 어떤 방향의 개념도 갖지 않지만, 이러한 벡터가 존재한다면 $A$ 가 어떤 고유한 방향을 가리킨다고 할 수 있을 것이다. 이러한 벡터</description>
    </item>
    
    <item>
      <title>여러가지 행렬들</title>
      <link>https://freshrimpsushi.github.io/posts/special-matrices/</link>
      <pubDate>Wed, 15 Nov 2017 00:00:00 +0000</pubDate>
      
      <guid>https://freshrimpsushi.github.io/posts/special-matrices/</guid>
      <description>🚧 이 포스트는 아직 이관 작업이 완료되지 않았습니다 🚧 특별한 모양을 가져서 혹은 특별한 성질을 가져서 이름이 붙은 행렬들을 소개하겠다.정사각행렬(정방행렬)$\mathrm{Square\ Matrix}$ 행와 열의 수가 같은 행렬. 임의의 자연수 $n$에 대하여 크기가 $n \times n$인 행렬. $A_{n \times n}$. 크기가 $n \times n$인 정사각행렬을 $n$차 정사각행렬이라고</description>
    </item>
    
    <item>
      <title>연립방정식으로 이해하는 계수와 퇴화차수</title>
      <link>https://freshrimpsushi.github.io/posts/rank-and-nullity/</link>
      <pubDate>Thu, 02 Nov 2017 00:00:00 +0000</pubDate>
      
      <guid>https://freshrimpsushi.github.io/posts/rank-and-nullity/</guid>
      <description>🚧 이 포스트는 아직 이관 작업이 완료되지 않았습니다 🚧 역사적으로는 행렬이 고안된 배경 자체가 연립방정식을 보다 쉽고 편하게 표기하기 위함이었다. 예를 들어 연립방정식 $\begin{cases} 2x_{1} &amp;amp; + &amp;amp; x_{2} &amp;amp; + &amp;amp; x_{3} &amp;amp; = &amp;amp; 0 \\ &amp;amp; &amp;amp; x_{2} &amp;amp; &amp;amp; &amp;amp; = &amp;amp; 0 \end{cases}$ 을 잘 보면, 같은 변수를 여러번 써야한다는 불편함이 있다. 이를 행렬로 나타내면 $\begin{bmatrix} 2 &amp;amp; 1 &amp;amp; 1 \\ 0 &amp;amp; 1 &amp;amp; 0 \end{bmatrix} \begin{bmatrix} x_{1} \\ x_{2} \\ x_{3}</description>
    </item>
    
    <item>
      <title>행공간 열공간 영공간 계수 퇴화차수</title>
      <link>https://freshrimpsushi.github.io/posts/row-space-column-space-null-space-rank-nullity/</link>
      <pubDate>Tue, 03 Oct 2017 00:00:00 +0000</pubDate>
      
      <guid>https://freshrimpsushi.github.io/posts/row-space-column-space-null-space-rank-nullity/</guid>
      <description>🚧 이 포스트는 아직 이관 작업이 완료되지 않았습니다 🚧 추상대수학에서의 핵 보러가기 행렬 $A \in \mathbb{R}^{m \times n}$이 아래와 같이 나타난다고 하자.$ \begin{eqnarray*} A &amp;amp;=&amp;amp; \begin{bmatrix} a_{11} &amp;amp; a_{12} &amp;amp; \cdots &amp;amp; a_{1n} \\ a_{21} &amp;amp; a_{22} &amp;amp; \cdots &amp;amp; a_{2n} \\ \vdots &amp;amp; \vdots &amp;amp; &amp;amp; \vdots \\ a_{m1} &amp;amp; a_{m2} &amp;amp; \cdots &amp;amp; a_{mn} \end{bmatrix} = \begin{bmatrix} \mathbb{r_{1}} \\ \mathbb{r_{2}} \\ \vdots \\ \mathbb{r_{m}} \end{bmatrix} \\ &amp;amp;=&amp;amp; \begin{bmatrix} \mathbb{c_{1}} &amp;amp; \mathbb{c_{2}} &amp;amp; \cdots \mathbb{c_{n}} \end{bmatrix} \end{eqnarray*}$ (1)** $\left\{ \mathbb{r_{1}} , \mathbb{r_{2}} , \cdots , \mathbb{r_{m}} \right\}$ 에 의해 생성되는 $\mathbb{R}^n$ 의 부분벡터공간을 $A$의 **행공</description>
    </item>
    
  </channel>
</rss>
