<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>파이썬 on 생새우초밥집</title>
    <link>https://freshrimpsushi.github.io/categories/%ED%8C%8C%EC%9D%B4%EC%8D%AC/</link>
    <description>Recent content in 파이썬 on 생새우초밥집</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>ko</language>
    <lastBuildDate>Tue, 31 Dec 2019 00:00:00 +0000</lastBuildDate><atom:link href="https://freshrimpsushi.github.io/categories/%ED%8C%8C%EC%9D%B4%EC%8D%AC/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>파이썬에서 is와 ==의 차이점 How Different is and == in Python</title>
      <link>https://freshrimpsushi.github.io/1444/</link>
      <pubDate>Tue, 31 Dec 2019 00:00:00 +0000</pubDate>
      
      <guid>https://freshrimpsushi.github.io/1444/</guid>
      <description>if type(150421) is int : print(&amp;quot;!&amp;quot;) else : print(&amp;quot;?&amp;quot;) x = [1,2] y = [1,2] x == y x is y 깃허브에서 파이썬 코드를 보다보면 간혹 is라는 게 보이기도 한다. 코드가 문장처럼 편안하게 읽히는 것은 둘째치더라도 ==와는 분명한 차이가 있어 적재적소에 사용하면 좋다 : ==는 단순하게 값을 비교한다. 우리에게 실제로 보이는 모습을 비교하기 때문에 직관적이다. is는 포인터가 가리키는 객체를</description>
    </item>
    
    <item>
      <title>파이썬에서 두 변수값 서로 바꾸는 법</title>
      <link>https://freshrimpsushi.github.io/how-to-swap-two-variables-in-python/</link>
      <pubDate>Sat, 28 Dec 2019 00:00:00 +0000</pubDate>
      
      <guid>https://freshrimpsushi.github.io/how-to-swap-two-variables-in-python/</guid>
      <description>변수끼리의 스왑은 흔히 아는 것처럼 임시 변수를 만들어서 옮기는 방식으로 쉽게 구현이 가능하지만, 여러가지 프로그래밍 언어를 다루는 입장에서 포인터를 주고받으면서 변수를 바인딩하는 파이썬의 특성상 이러한 방법이 잘 되는지 확신하기도 어렵고 일일이 변수를 스왑하는 함수를 작성하는 것 귀찮은 일이다. 다음과 같이 파이썬 문법 그 자체로 쉽게 해결해보자</description>
    </item>
    
    <item>
      <title>파이썬에서 큰 csv 파일 한번에 읽는 법 How to Read Big Data csv File in python</title>
      <link>https://freshrimpsushi.github.io/1403/</link>
      <pubDate>Fri, 29 Nov 2019 00:00:00 +0000</pubDate>
      
      <guid>https://freshrimpsushi.github.io/1403/</guid>
      <description>y_test=[] y_csv = open(&#39;y_test.csv&#39;, &#39;r&#39;, encoding=&#39;utf-8&#39;) rdr = csv.reader(y_csv) for line in rdr: y_test.append(line[0]) y_csv.close() 보통 csv 파일을 읽어들일 때는 위와 같이 파이썬 내장함수 open으로 열어서 한줄한줄 처리하지만, 반복문을 사용하는 시점에서 빅데이터의 처리에는 적합하지 않음을 짐작할 수 있다. 가령 700MB가 넘는 파일이라면 사실 별로 크지도 않은 편이지만 한줄한줄 읽어서는 끝이 없다.이런 데이터를 다룰 때는 pandas 패키지를 사용</description>
    </item>
    
    <item>
      <title>파이썬에서 pip로 cv2 PIL 패키지 설치하는 법 How to Install cv2 PIL Package in python using pip</title>
      <link>https://freshrimpsushi.github.io/1400/</link>
      <pubDate>Tue, 26 Nov 2019 00:00:00 +0000</pubDate>
      
      <guid>https://freshrimpsushi.github.io/1400/</guid>
      <description>openCV 패키지와 PIL 패키지는 이미지 처리에 유용한 패키지다. 문제는 보통 예제 코드에서 두 패키지를 불러들일 때 cv2, PIL라고 하는데 막상 파이썬에서 pip를 이용해서 설치하려고하면 에러를 낸다는 것이다. 이는 파이썬에서 불러들일때의 이름과 설치할 때의 이름이 다르기 때문이다.스크린샷에서 보이는 것과 같이 openCV를 설치하기 위해서는 cv2도</description>
    </item>
    
    <item>
      <title>윈도에서 파이썬 텐서플로우 설치하는 법</title>
      <link>https://freshrimpsushi.github.io/how-to-install-tensorflow-in-windows/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://freshrimpsushi.github.io/how-to-install-tensorflow-in-windows/</guid>
      <description>텐서플로우를 설치할 때 문제가 생기는 경우는 보통 파이썬을 잘못 설치했기 때문이다.시작하기 전에 파이썬을 삭제하고 처음부터 다시 시작하거나, 가능하다면 컴퓨터를 한 번 밀어두는 것을 추천한다.Step 1. 파이썬Step 1-1. 비트 확인제어판/모든 제어판 항목/시스템 혹은 내 PC(우클릭)-속성을 통해 시스템 정보를 확인하자.요즘은 대개 64</description>
    </item>
    
    <item>
      <title>파이썬에서 numpy array로 행병합 열병합하는 법 How to Bind in Row or Column numpy array</title>
      <link>https://freshrimpsushi.github.io/1409/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://freshrimpsushi.github.io/1409/</guid>
      <description>import numpy as np a = np.array([[1,2,3]]) b = np.array([[4,5,6]]) print(a) print(b) print(np.c_[a,b]) print(np.r_[a,b]) 파이썬의 numpy 패키지는 무척 편리한 기능을 많이 제공한다. 다음의 스크린샷에서 보이다시피 객체 numpy.c_와 numpy.r_는 대괄호 [] 안에 들어간 배열들을 각각 열(column)병합, 행(row)병합한 배열이다. 여기서 이들이 메서드가 아님을 분명히 하고 넘어가자. 마치 메서드처럼 쓰고 있지만 어디</description>
    </item>
    
    <item>
      <title>파이썬에서 리스트의 요소를 찾아서 위치를 반환하는 함수</title>
      <link>https://freshrimpsushi.github.io/which-function-in-python/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://freshrimpsushi.github.io/which-function-in-python/</guid>
      <description>R 에서는 이와 비슷한 역할을 하는 which 함수가 기본적으로 구현되어있다. 파이썬의 리스트에도 모듈로써 .index()가 있긴하지만, 가장 앞 요소의 위치만 가르쳐준다는 점에서 which()처럼 사용하기에 부족함이 있었다. 두번째 팩터인 item은 본래 리스트로 주는 것이 맞으나, 리스트가 아니더라도 어느정도는 대응하도록 구현되었다. 검색</description>
    </item>
    
    <item>
      <title>파이썬으로 웹 문서 크롤링하고 태그 제거하기</title>
      <link>https://freshrimpsushi.github.io/how-to-crawl-web-site-and-remove-html-tag-using-python/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://freshrimpsushi.github.io/how-to-crawl-web-site-and-remove-html-tag-using-python/</guid>
      <description>파이썬은 크롤링을 위한 패키지가 잘 갖춰져있어 쉽게 따라할 수 있다. import requests from bs4 import BeautifulSoup import re rq = requests.get(&amp;quot;https://ko.wikipedia.org/wiki/%EC%98%A4%EB%A7%88%EC%9D%B4%EA%B1%B8&amp;quot;) rqctnt = rq.content soup = BeautifulSoup(rqctnt,&amp;quot;html.parser&amp;quot;) OMG = str(soup.find_all(&amp;quot;p&amp;quot;)) OMG = re.sub(&#39;&amp;lt;.+?&amp;gt;&#39;, &#39;&#39;, OMG, 0).strip()[Colored by Color Scripter](http://colorscripter.com/info#e) 예제로 위키피디아에서 오마이걸 항목을 읽어와보도록 하자.필요한 패키지는 보이는대로 requests 와 bs4 가 있다.읽어들이기만 하고 출력해보면 위와 같이 html 태그가 덕지덕지 붙어있다.제거하기 위해서는 예제 코드에 나온 것처</description>
    </item>
    
  </channel>
</rss>
