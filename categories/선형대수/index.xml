<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>선형대수 on 생새우초밥집</title>
    <link>https://freshrimpsushi.github.io/categories/%EC%84%A0%ED%98%95%EB%8C%80%EC%88%98/</link>
    <description>Recent content in 선형대수 on 생새우초밥집</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>ko</language>
    <lastBuildDate>Mon, 28 Jun 2021 00:00:00 +0000</lastBuildDate><atom:link href="https://freshrimpsushi.github.io/categories/%EC%84%A0%ED%98%95%EB%8C%80%EC%88%98/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>선형변환의 놈</title>
      <link>https://freshrimpsushi.github.io/posts/the-norm-of-linear-transformations/</link>
      <pubDate>Mon, 28 Jun 2021 00:00:00 +0000</pubDate>
      
      <guid>https://freshrimpsushi.github.io/posts/the-norm-of-linear-transformations/</guid>
      <description>정의1 선형변환 $T \in L(\mathbb{R}^{n}, \mathbb{R}^{m})$의 놈을 다음과 같이 정의한다. $$ \| T \| := \sup \limits_{| \mathbf{x} | \le 1} | T ( \mathbf{x} ) | $$ 설명 (a) 를 보면 다음의 식이 성립하므로, $\| T \|$는 $T$가 $\mathbb{R}^{n}$의 원소를 $\mathbb{R}^{m}$으로 매핑할 때 크기가 변하는 비율이라는 것을 알 수 있다. 그러니까 크기</description>
    </item>
    
    <item>
      <title>선형변환의 합성과 역변환</title>
      <link>https://freshrimpsushi.github.io/posts/composition-and-inverse-of-linear-transformations/</link>
      <pubDate>Sat, 26 Jun 2021 00:00:00 +0000</pubDate>
      
      <guid>https://freshrimpsushi.github.io/posts/composition-and-inverse-of-linear-transformations/</guid>
      <description>정의1 선형변환 $T_{1} : X \to Y$과 $T_{2} : Y \to Z$가 주어졌다고 하자. 그러면 다음과 같이 정의되는 변환 $T_{2} \circ T_{1}$을 $T_{1}$과 $T_{2}$의 합성composition of $T_{2}$ with $T_{1}$이라 한다. $$ (T_{2} \circ T_{1})(\mathbf{x}) = T_{2}\left( T_{1}(\mathbf{x}) \right) \quad \mathbf{x} \in X $$ $T :X \to Y$가 선형변환이면 $T$의 치역 $R(T)$는 $Y$의 부분공간이다. $T$가 일</description>
    </item>
    
    <item>
      <title>선형변환의 성질</title>
      <link>https://freshrimpsushi.github.io/posts/properties-of-linear-transformations/</link>
      <pubDate>Thu, 24 Jun 2021 00:00:00 +0000</pubDate>
      
      <guid>https://freshrimpsushi.github.io/posts/properties-of-linear-transformations/</guid>
      <description>정리11 선형변환 $T: V \to W$에 대해서 다음의 두 명제는 동치이다. $T$가 일대일이다. $\mathrm{ker}(T) = \left\{ \mathbf{0} \right\}$ 설명 이는 $T$의 커널을 파악하는 것이 $T$가 일대일인지 아닌지를 판별하는 방법이라는 말이다. 위 정리에 의해서 선형변환이 일대일이라는 것은 다음의 조건과 동치이다. $$ \mathbf{x} \ne \mathbf{0} \implies T(\mathbf{x}) \ne \mathbf{0} $$ 증명 $(\Longrightarrow)$ $T$가 일대일이라고 가정하자. $T$가 선</description>
    </item>
    
    <item>
      <title>선형변환의 랭크, 무효차수, 차원정리</title>
      <link>https://freshrimpsushi.github.io/posts/rank-nullity-dimension-theorem-for-linear-transformaions/</link>
      <pubDate>Tue, 22 Jun 2021 00:00:00 +0000</pubDate>
      
      <guid>https://freshrimpsushi.github.io/posts/rank-nullity-dimension-theorem-for-linear-transformaions/</guid>
      <description>정의1 $T : V \to W$를 선형변환이라 하자. $T$ 치역 $W$가 유한차원이면, $W$의 차원을 $T$의 랭크rank라고 하고 다음과 같이 표기한다. $$ \mathrm{rank}(T) := \dim (W) $$ $T$의 커널이 유한차원이면, $\mathrm{ker}(T)$의 차원을 $T$의 무효차수nullity라고 하고 다음과 같이 표기한다. $$ \mathrm{nullity}(T) := \dim\left( \mathrm{ker}(T) \right) $$ 설명 행렬의 랭크, 무</description>
    </item>
    
    <item>
      <title>선형변환의 커널, 치역</title>
      <link>https://freshrimpsushi.github.io/posts/kernel-range-for-linear-transformations/</link>
      <pubDate>Sun, 20 Jun 2021 00:00:00 +0000</pubDate>
      
      <guid>https://freshrimpsushi.github.io/posts/kernel-range-for-linear-transformations/</guid>
      <description>정의1 $T : V \to W$를 선형변환이라 하자. $T$가 $\mathbf{0}$으로 매핑하는 $V$의 원소들의 집합을 커널kernel이라 하고 다음과 같이 표기한다. $$ \mathrm{ker}(T) := \left\{ \mathbf{v} \in V : T( \mathbf{v} ) = \mathbf{0} \right\} $$ 모든 $\mathbf{v} \in V$의 $T$에 의한 상의 집합을 $T$의 치역range라 하고 다음과 같이 표기한다. $$ R(T) := \left\{ T(\mathbf{v}) : \forall \mathbf{v} \in V \right\} $$ 설명 $T : V \to W</description>
    </item>
    
    <item>
      <title>기저벡터의 상으로부터 선형변환 찾기</title>
      <link>https://freshrimpsushi.github.io/posts/finding-linear-transformations-from-images-of-basis-vector/</link>
      <pubDate>Fri, 18 Jun 2021 00:00:00 +0000</pubDate>
      
      <guid>https://freshrimpsushi.github.io/posts/finding-linear-transformations-from-images-of-basis-vector/</guid>
      <description>정리1 선형변환 $T : V \to W$가 주어졌다고 하자. $V$가 유한차원이고, $S = \left\{ \mathbf{v}_{1}, \mathbf{v}_{2}, \dots, \mathbf{v}_{n} \right\}$를 $V$의 기저라고 하자. 그러면 임의의 $\mathbf{v} \in V$의 상은 다음가 같이 표현된다. $$ T(\mathbf{v}) = c_{1}T(\mathbf{v}_{1}) + c_{2}T(\mathbf{v}_{2}) + \cdots c_{n}T(\mathbf{v}_{n}) $$ 이때 $c_{i}$는 $\mathbf{v} = \sum c_{i}\mathbf{v}_{i}$를 만족하는 계수이다. 설명 선형변환 $T$에 대해서</description>
    </item>
    
    <item>
      <title>직교기저들에 상대적인 좌표</title>
      <link>https://freshrimpsushi.github.io/posts/coordinate/</link>
      <pubDate>Thu, 29 Apr 2021 00:00:00 +0000</pubDate>
      
      <guid>https://freshrimpsushi.github.io/posts/coordinate/</guid>
      <description>정의1 내적공간 $V$의 기저 $S$가 직교집합이면 $S$를 직교기저orthogonal basis라 한다. $S$가 정규직교집합이면 정규직교기저orthonormal basis라 한다. 정리 $S = \left\{ \mathbf{v}_{1}, \mathbf{v}_{2}, \dots, \mathbf{v}_{n} \right\}$가 내적공간 $V$의 직교기저이고, $\mathbf{u} \in V$라고 하자. 그러면 다음의 식이 성립한다. $$ \begin{equation} \begin{aligned} \mathbf{u} &amp;amp;= \dfrac{\langle</description>
    </item>
    
    <item>
      <title>기저의 더하기/빼기 정리</title>
      <link>https://freshrimpsushi.github.io/posts/plus-minus-theorem-for-basis/</link>
      <pubDate>Tue, 27 Apr 2021 00:00:00 +0000</pubDate>
      
      <guid>https://freshrimpsushi.github.io/posts/plus-minus-theorem-for-basis/</guid>
      <description>정리1 $S$를 벡터공간 $V$의 공집합이 아닌 부분집합이라고 하자. (a) 만약 $S$가 선형독립이고 $\mathbf{v} \in V$가 $\mathbf{v} \notin \text{span}(S)$이면, $S \cup \left\{ \mathbf{v} \right\}$는 여전히 선형독립니다. (b) 만약 $\mathbf{v} \in S$가 $S$의 다른 벡터들의 선형결합으로 나타나면, $S$와 $S \setminus \left\{ \mathbf{v} \right\}$는 같은 공간을 생성한다.</description>
    </item>
    
    <item>
      <title>직교성과 선형독립의 관계</title>
      <link>https://freshrimpsushi.github.io/posts/relationship-between-orthogonality-and-linear-independence/</link>
      <pubDate>Fri, 23 Apr 2021 00:00:00 +0000</pubDate>
      
      <guid>https://freshrimpsushi.github.io/posts/relationship-between-orthogonality-and-linear-independence/</guid>
      <description>정의1 내적공간 $V$의 두 벡터 $\mathbf{u}, \mathbf{v}$가 $\langle \mathbf{u}, \mathbf{v} \rangle$을 만족하면 서로 직교orthogonal한다고 한다. $V$의 원소들로 이루어진 집합에서 각각의 원소들이 다른 모든 원소와 서로 직교하면 그 집합을 직교집합orthogonal set이라 한다. 직교집합의 모든 원소의 놈이 $1$이면 정규직교집합or</description>
    </item>
    
    <item>
      <title>실벡터공간에서 내적이란?</title>
      <link>https://freshrimpsushi.github.io/posts/inner-product-in-real-vector-space/</link>
      <pubDate>Sat, 17 Apr 2021 00:00:00 +0000</pubDate>
      
      <guid>https://freshrimpsushi.github.io/posts/inner-product-in-real-vector-space/</guid>
      <description>정의1 $V$를 실벡터공간이라고 하자. $V$ 위의 내적inner product이란, 아래의 조건을 만족하면서, $V$ 내의 두 벡터를 하나의 실수 $\langle \mathbf{u}, \mathbf{v} \rangle$에 대응시키는 함수를 말한다. $\mathbf{u}, \mathbf{v}, \mathbf{w} \in V$이고 $k \in \mathbb{R}$일 때, $\langle \mathbf{u}, \mathbf{v} \rangle = \langle \mathbf{v}, \mathbf{u} \rangle$ $\langle \mathbf{u} + \mathbf{v}, \mathbf{w} \rangle = \langle \mathbf{u}, \mathbf{w} \rangle + \langle \mathbf{v}, \mathbf{w} \rangle$ $\langle k \mathbf{u}, \mathbf{v} \rangle = k \langle \mathbf{u}, \mathbf{v} \rangle$ $\langle \mathbf{v}, \mathbf{v} \rangle</description>
    </item>
    
    <item>
      <title>선형변환</title>
      <link>https://freshrimpsushi.github.io/posts/linear-transformations/</link>
      <pubDate>Thu, 15 Apr 2021 00:00:00 +0000</pubDate>
      
      <guid>https://freshrimpsushi.github.io/posts/linear-transformations/</guid>
      <description>정의1 함수 $T : V \to W$가 벡터공간에서 벡터공간으로의 사상일 때, 즉 $V$, $W$가 벡터공간일 때 $T$를 변환transformation이라고 한다. 변환 $T$가 선형 함수이면, 즉 모든 $\mathbf{v},\mathbf{u} \in V$와 상수 $k$에 대해서 다음의 두 조건을 만족하면 선형변환linear transformation이라고 한다. $T(k \mathbf{u}) = k T(\mathbf{u})$ $T(\mathbf{u} + \mathbf{v}) = T(\mathbf{u}) +</description>
    </item>
    
    <item>
      <title>유한차원 벡터공간에서 기저일 필요충분조건</title>
      <link>https://freshrimpsushi.github.io/posts/necessary-and-sufficient-condition-for-basis/</link>
      <pubDate>Sun, 11 Apr 2021 00:00:00 +0000</pubDate>
      
      <guid>https://freshrimpsushi.github.io/posts/necessary-and-sufficient-condition-for-basis/</guid>
      <description>정리1 $V$를 $n$차원 벡터공간이라고 하자. 부분집합 $S\subset V$가 $n$개의 원소를 갖는다고 하자. $S$가 $V$의 기저일 필요충분조건은 $V = \text{span}(S)$이거나 $S$가 선형독립인 것이다. 설명 벡터공간, 차원, 기저, 생성, 독립 등 선형대수에서 중요한 기초 개념이 모두 등장한다. 임의의 집합이 벡터공간의 기저가</description>
    </item>
    
    <item>
      <title>선형대수에서 사영정리</title>
      <link>https://freshrimpsushi.github.io/posts/projection-theorem-in-linear-algebra/</link>
      <pubDate>Wed, 07 Apr 2021 00:00:00 +0000</pubDate>
      
      <guid>https://freshrimpsushi.github.io/posts/projection-theorem-in-linear-algebra/</guid>
      <description>정리1 $W$가 유한차원 내적공간 $V$의 부분공간이면 모든 $\mathbf{u} \in V$는 다음과 같은 식으로 유일하게 표현된다. $$ \begin{equation} \mathbf{u} = \mathbf{w}_{1} + \mathbf{w}_{2} \label{thm1} \end{equation} $$ 이때 $\mathbf{w}_{1} \in W$이고 $\mathbf{w}_{2} \in W^{\perp}$ 이다. 설명 정리의 $\mathbf{w}_{1}$와 $\mathbf{w}_{2}$는 각각 다음과 같이 표기하기도 한다. $$ \mathbf{w}_{1} = \mathrm{proj}_{W} \mathbf{u} \quad \text{and} \quad \mathbf{w}_{2} = \mathrm{proj}_{W^{\perp}} \mathbf{u} $$ 또한 이러한 $\mathbf{w}_{1}$, $\ma</description>
    </item>
    
    <item>
      <title>벡터공간의 기저</title>
      <link>https://freshrimpsushi.github.io/posts/basis-of-vector-space/</link>
      <pubDate>Thu, 18 Mar 2021 00:00:00 +0000</pubDate>
      
      <guid>https://freshrimpsushi.github.io/posts/basis-of-vector-space/</guid>
      <description>정의1 $S = \left\{ \mathbf{v}_{1}, \mathbf{v}_{2}, \dots, \mathbf{v}_{r} \right\}$를 벡터공간 $V$의 부분집합이라고 하자. $S$가 아래의 두 조건을 만족시키면 $S$를 $V$의 기저basis라 한다. $S$가 $V$를 생성한다. $$ V = \text{span}(S) $$ $S$가 선형독립이다. 설명 기저는 그 이름에서 짐작할 수 있듯 &amp;lsquo;벡터공간을 만들어낼 수 있는 가장 작은 것&amp;rsquo;의</description>
    </item>
    
    <item>
      <title>벡터 공간에서 볼록 집합 컨벡스 셋</title>
      <link>https://freshrimpsushi.github.io/posts/convex-set-in-vector-space/</link>
      <pubDate>Fri, 11 Dec 2020 00:00:00 +0000</pubDate>
      
      <guid>https://freshrimpsushi.github.io/posts/convex-set-in-vector-space/</guid>
      <description>정의 벡터 공간 $V$의 부분 집합 $M$에 대해서 다음의 식이 성립하면 $M$을 볼록 집합convex set 이라고 한다. $$ \lambda x +(1-\lambda)y \in M,\quad \forall \lambda\in[0,1],\ \forall x,y \in M $$ 설명 위 수식을 말로 풀면 &#39;$M$이 컨벡스 셋이라는 말은 $M$에 포함된 어떤 두 벡터 사이에 있는 모든 벡터들도 다 $M$에 속한다&#39; 이다. 또한 $M$이 부분 공간이라면 덧셈과 스칼라곱에 대해서 닫혀있</description>
    </item>
    
    <item>
      <title>컨볼루션의 일반적인 정의</title>
      <link>https://freshrimpsushi.github.io/posts/generalized-definition-of-convolution/</link>
      <pubDate>Sat, 31 Oct 2020 00:00:00 +0000</pubDate>
      
      <guid>https://freshrimpsushi.github.io/posts/generalized-definition-of-convolution/</guid>
      <description>정의 적분 변환 $J$와 두 함수 $f$, $g$가 주어졌다고 하자. 아래의 조건을 만족하는 함수 $f \ast g$를 $J$에 대한 $f$와 $g$의 컨볼루션이라 정의 한다. $$ J(f \ast g)=(Jf)(Jg) $$ 종류 푸리에 변환 $$ (f \ast g)(x) =\int _{-\infty} ^{\infty}f(y)g(x-y)dy $$ 보통 아무 설명없이 컨볼루션이라 함은 위의 정의를 말한다. 라플라스 변환 $$ (f \ast g)(x) = \int_{0}^{x}f(x-y)g(y)dy $$ 멜린 변환 $$ ( f\times g)(x)=\int _{0} ^{\infty} f(y)g \left( \frac{x}{y} \right)\frac{dy}{y} $$</description>
    </item>
    
    <item>
      <title>적분 변환이란</title>
      <link>https://freshrimpsushi.github.io/posts/integral-transform/</link>
      <pubDate>Fri, 30 Oct 2020 00:00:00 +0000</pubDate>
      
      <guid>https://freshrimpsushi.github.io/posts/integral-transform/</guid>
      <description>정의 함수공간에서 함수공간으로의 매핑 $J$가 아래와 같이 적분으로 정의되면 $J$를 적분변환integral transform이라 한다. $$ (Jf) (s) = \int_{a}^{b} K(x,t)f(t)dt $$ 이때 $K$를 $J$의 커널kernel이라 한다. $Jf$를 다시 $f$로 매핑하는 함수가 존재하면 이를 $J^{-1}$로 표기하고 역변환inverse transform</description>
    </item>
    
    <item>
      <title>쌍선형 형식 이차 형식 에르메트 형식</title>
      <link>https://freshrimpsushi.github.io/posts/bilinear-quadratic-and-hermitian-forms/</link>
      <pubDate>Tue, 26 May 2020 00:00:00 +0000</pubDate>
      
      <guid>https://freshrimpsushi.github.io/posts/bilinear-quadratic-and-hermitian-forms/</guid>
      <description>🚧 이 포스트는 아직 이관 작업이 완료되지 않았습니다 🚧 쌍선형 형식$(\mathrm{bilinear\ form})$ 행렬 $\quad A=\begin{pmatrix} a_{11} &amp;amp; a_{12} &amp;amp;\cdots &amp;amp; a_{1n} \\ a_{21} &amp;amp; a_{22} &amp;amp;\cdots &amp;amp; a_{2n} \\ \vdots &amp;amp; \vdots &amp;amp; \ddots &amp;amp; \vdots \\ a_{n1} &amp;amp; a_{n2} &amp;amp; \cdots &amp;amp; a_{nn} \end{pmatrix}\in \mathbb{R}^{n\times n}$와 $\mathbf{x}=\begin{pmatrix} x_{1} \\ x_{2} \\ \vdots \\ x_{n} \end{pmatrix},\mathbf{u}=\begin{pmatrix} u_{1} &amp;amp; u_{2} &amp;amp; \cdots &amp;amp; x_{n} \end{pmatrix}\in \mathbb{R}^{n}$에 대해서, 행렬 $A$에 대응하는 쌍선형 형식 을 다음과 같이 정의한다.</description>
    </item>
    
    <item>
      <title>민코프스키 부등식</title>
      <link>https://freshrimpsushi.github.io/posts/proof-of-minkowskis-inequality/</link>
      <pubDate>Mon, 05 Nov 2018 00:00:00 +0000</pubDate>
      
      <guid>https://freshrimpsushi.github.io/posts/proof-of-minkowskis-inequality/</guid>
      <description>정리 두 벡터 $\mathbf{x}= (x_{1} , x_{2} , \dots , x_{n} )$ , $\mathbf{y} = (y_{1} , y_{2} , \dots , y_{n} )$ 와 $1$보다 큰 실수 $p$ 에 대해 다음의 식이 성립한다. $$ \left( \sum_{k=1}^{n} | x_{k} + y_{k} |^{p} \right)^{{1} \over {p}} \le \left( \sum_{k=1}^{n} |x_{k}|^{p} \right)^{{1} \over {p}} + \left( \sum_{k=1}^{n} |y_{k}|^{p} \right)^{{1} \over {p}} $$ 이를 민코프스키 부등식Minkowski&amp;rsquo;s inequality이라 한다. 설명 민코프스키 부등식은 $p$-놈의 정의에서 삼각부등식에 해당한다. 어떤</description>
    </item>
    
    <item>
      <title>노름 놈의 동치관계</title>
      <link>https://freshrimpsushi.github.io/posts/equivalent-relation-of-norm/</link>
      <pubDate>Sun, 28 Oct 2018 00:00:00 +0000</pubDate>
      
      <guid>https://freshrimpsushi.github.io/posts/equivalent-relation-of-norm/</guid>
      <description>정의 벡터공간 $V$ 상에서 정의된 두 놈 $\left\| \cdot \right\|_{\alpha}, \left\| \cdot \right\|_{\beta}$과 임의의 벡터 $\mathbf{v} \in V$ 에 대해 $$ c \left\| \mathbf{v} \right\|_{\alpha} \le \left\| \mathbf{v} \right\|_{\beta} \le C \left\| \mathbf{v} \right\|_{\alpha} $$ 를 만족하는 $c , C &amp;gt;0$ 이 존재하면 두 놈은 서로 동치라 정의한다. 설명 두 놈이 서로 동치라는 것은 놈을 이용한 부등식을 다룰 때 서로 다른 놈을 사용해도 문제가 없다는 말이다. 당연히 사용하기 어려운 놈을 사용</description>
    </item>
    
    <item>
      <title>직교여공간</title>
      <link>https://freshrimpsushi.github.io/posts/orthogonal-complement/</link>
      <pubDate>Sat, 27 Oct 2018 00:00:00 +0000</pubDate>
      
      <guid>https://freshrimpsushi.github.io/posts/orthogonal-complement/</guid>
      <description>정의1 벡터공간 $V$ 의 부분공간 $W$ 에 대해서 집합 $$ W^{\perp} = \left\{ \mathbf{v} \in V \ : \left\langle \mathbf{v} , \mathbf{w} \right\rangle = 0,\quad \forall \mathbf{w} \in W \right\} $$ 를 $W$ 의 직교여공간orthogonal complement이라한다. 이때 $\langle , \rangle$ 는 내적이다. 설명 다시말해 $W^{\perp}$은 $W$ 의 모든 원소와 수직인 벡터를 모아놓은 집합이다. 기호 $^{\perp}$ 는 perpendicular를 줄여서 per</description>
    </item>
    
    <item>
      <title>횔더 부등식</title>
      <link>https://freshrimpsushi.github.io/posts/proof-of-hoelders-inequality/</link>
      <pubDate>Thu, 25 Oct 2018 00:00:00 +0000</pubDate>
      
      <guid>https://freshrimpsushi.github.io/posts/proof-of-hoelders-inequality/</guid>
      <description>정의 $\dfrac{1}{p} + \dfrac{1}{q} = 1$ 을 만족하고 1보다 큰 두 상수 $p, q$ 와 $\mathbf{u}, \mathbf{v} \in \mathbb{C}^n$에 대해 다음의 부등식이 성립한다. $$ | \left\langle \mathbf{u}, \mathbf{v} \right\rangle | = |\mathbf{u} ^{\ast} \mathbf{v}| \le ||\mathbf{u}||_{p} ||\mathbf{v}||_{q} $$ 이를 횔더 부등식Hoelder&amp;rsquo;s inequality이라 한다. 설명 원래는 Hölder&amp;rsquo;s inequality로 써야하지만 움라우트가 있어 대체표</description>
    </item>
    
    <item>
      <title>선형대수학에서 노름 혹은 놈이란</title>
      <link>https://freshrimpsushi.github.io/posts/norm-in-linear-algebra/</link>
      <pubDate>Sat, 06 Oct 2018 00:00:00 +0000</pubDate>
      
      <guid>https://freshrimpsushi.github.io/posts/norm-in-linear-algebra/</guid>
      <description>정의 $V$를 $\mathbb{F}$ 상에서의 벡터공간이라고 하자. $\left\| \cdot \right\| : V \to \mathbb{F}$ 가 $\mathbf{u}, \mathbf{v} \in V$와 $k \in \mathbb{F}$ 에 대해서 다음 세 조건을 만족시키면 $\left\| \cdot \right\|$ 을 $V$ 상에서의 놈이라고 정의한다. (i) 정부호: $\left\| \mathbf{u} \right\| \ge 0$ 이고 $\mathbf{u} = \mathbb{0} \iff \left\| \mathbf{u} \right\| = 0$ (ii) 동질성: $\left\|k \mathbf{u} \right\| = | k | \left\| \mathbf{u} \right\| $ (iii) 삼각부등식: $\left\| \mathbf{u} + \mathbf{v}\right\| \le \left\|\mathbf{v} \right\| + \left\| \mathbf{u} \right\|$ 설명 Norm은 절댓값에서 출발해 추상화된 개념으로,</description>
    </item>
    
    <item>
      <title>론스키안의 정의와 독립종속 판별</title>
      <link>https://freshrimpsushi.github.io/posts/definition-of-wronskian/</link>
      <pubDate>Sat, 31 Mar 2018 00:00:00 +0000</pubDate>
      
      <guid>https://freshrimpsushi.github.io/posts/definition-of-wronskian/</guid>
      <description>정의1 $S=\left\{ f_{1}, f_{2}, \dots, f_{n} \right\}$가 $n-1$번까지 미분가능한 함수들의 집합이라 하자. 이의 론스키언Wronskian $W$를 다음과 같은 행렬식으로 정의한다. $$ W(x) = W(f_{1}, f_{2}, \dots, f_{n}) := \begin{vmatrix} f_{1} &amp;amp; f_{2} &amp;amp; \cdots &amp;amp; f_{n} \\ f_1’ &amp;amp; f_2’ &amp;amp; \cdots &amp;amp; f_n’ \\ \vdots &amp;amp; \vdots &amp;amp; \ddots &amp;amp; \vdots \\ f_{1}^{(n-1)} &amp;amp; f_{2}^{(n-1)} &amp;amp; \cdots &amp;amp; f_{n}^{(n-1)} \end{vmatrix} $$ 설명 미분 가능한 함수들의 집합 역시 벡터공간이 되는 함</description>
    </item>
    
    <item>
      <title>그램-슈미트 직교화</title>
      <link>https://freshrimpsushi.github.io/posts/gram-schmidt-orthogonalization/</link>
      <pubDate>Wed, 24 Jan 2018 00:00:00 +0000</pubDate>
      
      <guid>https://freshrimpsushi.github.io/posts/gram-schmidt-orthogonalization/</guid>
      <description>정리 모든 유한차원 내적공간은 정규직교기저를 갖는다. 설명 존재성 증명이라는 게 대개 그렇듯 길지도 않고 별것도 아닌것 같아보이지만 엄청나게 중요한 정리다. 선형대수학을 지탱하는 수많은 논리가 바로 이 정규직교기저가 존재한다는데에 의존하고 있기 때문이다. 증명 내적공간 $(V, \left\langle \cdot , \cdot \right\rangle)$을 생성하는 기저 중 하나를 $\left\{</description>
    </item>
    
    <item>
      <title>선형대수학에서 정사영이란</title>
      <link>https://freshrimpsushi.github.io/posts/orthogonal-projection-in-linear-algebra/</link>
      <pubDate>Wed, 03 Jan 2018 00:00:00 +0000</pubDate>
      
      <guid>https://freshrimpsushi.github.io/posts/orthogonal-projection-in-linear-algebra/</guid>
      <description>정의 사영 $P \in \mathbb{C}^{m \times m}$ 가 $\mathcal{C} (P) ^{\perp} = \mathcal{N} (P)$ 를 만족하면 $P$ 를 정사영이라 한다. 설명 사영의 성질 $\mathbb{C}^{m } = \mathcal{C} (P) \oplus \mathcal{N} (P)$ 에 따라 $P$ 는 $\mathbb{C}^{m}$ 을 정확히 두 개의 부분공간 $\mathcal{C} (P)$ 과 $\mathcal{N} (P)$ 으로 분할함을 알 수 있다. 이 분할에서 조건 $\mathcal{N} (P) = \mathcal{C} (P) ^{\perp}$ 을 만족한다는 것은 일차변환 $P$ 의 영공간 $\mathcal{N} (P)$ 가 열공간 $\mathcal{C} (P)$ 의 직교여공간이라는 뜻이므로 그냥 분할이 아니라 수직성이 포함되는 분할임을</description>
    </item>
    
    <item>
      <title>벡터공간에서 직합이란</title>
      <link>https://freshrimpsushi.github.io/posts/direct-sum-of-vector-space/</link>
      <pubDate>Tue, 02 Jan 2018 00:00:00 +0000</pubDate>
      
      <guid>https://freshrimpsushi.github.io/posts/direct-sum-of-vector-space/</guid>
      <description>정의 벡터공간 $S$ 의 두 부분공간 $S_{1}$과 $S_{2}$ 에 대해 다음을 만족하면 $S$를 $S_{1}$과 $S_{2}$ 의 직합direct sum이라 하고, $S = S_{1} \oplus S_{2}$와 같이 표기한다. (i) 존재성: 임의의 $\mathbf{s} \in S$ 에 대해 $\mathbf{s} = \mathbf{s}_{1} + \mathbf{s}_{2}$ 을 만족하는 $\mathbf{s}_{1} \in S_{1}$ 과 $\mathbf{s}_{2} \in S_{2}$ 가 존재한다. (ii) 배타성: $S_{1} \cap S_{2} = \left\{ \mathbf{0} \right\}$ (iii) 유일성: 주어진 $\mathbf{s}$ 에 대해 $\mathbf{s} = \mathbf{s}_{1} + \mathbf{s}_{2}$ 을 만족하</description>
    </item>
    
    <item>
      <title>벡터공간의 차원</title>
      <link>https://freshrimpsushi.github.io/posts/dimension-of-vector-space/</link>
      <pubDate>Wed, 08 Nov 2017 00:00:00 +0000</pubDate>
      
      <guid>https://freshrimpsushi.github.io/posts/dimension-of-vector-space/</guid>
      <description>정의1 벡터공간 $V$의 기저의 벡터 개수를 $V$의 차원dimension이라고 정의하고 다음과 같이 표기한다. $$ \dim (V) $$ 설명 이러한 차원의 일반화는 단순히 벡터공간에 대한 탐구를 넘어서서 이 사회를 떠받치는 여러가지 기술에 접목되고 있다. 세상이 $3$차원이고 그림으로도 못 그리는 $4$차원이 무슨 소용인가 싶겠지만 딱히 유클리드공간만</description>
    </item>
    
    <item>
      <title>선형 독립과 선형 종속</title>
      <link>https://freshrimpsushi.github.io/posts/linearly-independent-and-linearly-dependent/</link>
      <pubDate>Thu, 02 Nov 2017 00:00:00 +0000</pubDate>
      
      <guid>https://freshrimpsushi.github.io/posts/linearly-independent-and-linearly-dependent/</guid>
      <description>정의1 $S = \left\{ \mathbf{v}_{1}, \mathbf{v}_{2}, \dots, \mathbf{v}_{r} \right\}$를 벡터공간 $V$ 의 공집합이 아닌 부분집합이라고 하자. 상수 $k_{1}, k_{2}, \dots, k_{r}$들에 대해서 다음의 방정식 $$ k_{1} \mathbf{v}_{1} + k_{2} \mathbf{v}_{2} + \dots + k_{r} \mathbf{v}_{r} = \mathbf{0} $$ 은 적어도 하나의 해 $$ k_{1} = 0,\ k_{2} = 0,\ \dots,\ k_{r} = 0 $$ 를 갖는다. 이를 자명해trivial solution라고 한다. 오직 자명해만이 유일한 해이면 벡터 $\mathbf{v}_{1}, \mathbf{v}_{2}, \dots, \mat</description>
    </item>
    
    <item>
      <title>선형 결합, 생성</title>
      <link>https://freshrimpsushi.github.io/posts/linear-combination-and-span/</link>
      <pubDate>Mon, 30 Oct 2017 00:00:00 +0000</pubDate>
      
      <guid>https://freshrimpsushi.github.io/posts/linear-combination-and-span/</guid>
      <description>정의: 선형결합1 $\mathbf{w}$를 벡터공간 $V$의 벡터라고 하자. 만약 $w$를 $V$의 벡터 $\mathbf{v}_{1},\mathbf{v}_{2},\cdots ,\mathbf{v}_{r}$와 임의의 상수 $k_{1}, k_{2}, \cdots, k_{r}$에 대해 다음과 같이 표현할 수 있으면 $\mathbf{w}$를 $\mathbf{v}_{1},\mathbf{v}_{2},\cdots ,\mathbf{v}_{r}$들의 선형결합linear combination 혹은 일차결합이라 한다. $$</description>
    </item>
    
    <item>
      <title>부분공간</title>
      <link>https://freshrimpsushi.github.io/posts/subspace-of-vector-space/</link>
      <pubDate>Fri, 27 Oct 2017 00:00:00 +0000</pubDate>
      
      <guid>https://freshrimpsushi.github.io/posts/subspace-of-vector-space/</guid>
      <description>정의1 $W$를 벡터공간 $V$의 공집합이 아닌 부분 집합이라고 하자. $W$가 $V$ 에서 정의된 덧셈과 상수배에 대하여 벡터공간의 정의를 만족 시킬 때 $W$를 벡터공간 $V$의 부분공간subspace이라고 하고 다음과 같이 표기한다. $$ W \le V $$ 벡터공간의 정의 $\mathbf{u}, \mathbf{v}, \mathbf{w} \in V$이고, $k, l \in \mathbb{R}$에 대해서 (A1) $\mathbf{u}, \mathb</description>
    </item>
    
    <item>
      <title>벡터공간의 정의</title>
      <link>https://freshrimpsushi.github.io/posts/definition-of-vector-space/</link>
      <pubDate>Tue, 24 Oct 2017 00:00:00 +0000</pubDate>
      
      <guid>https://freshrimpsushi.github.io/posts/definition-of-vector-space/</guid>
      <description>정의1 vector space이라고 하고 $V$의 원소를 **벡터**vector 라고 한다. --- 공집합이 아닌 집합 $V$의 원소들이 두 연산 덧셈과 상수배에 대해서 아래와 같은 10가지의 규칙을 만족할 때 $V$를 체 $\mathbb{F}$2에 대한 벡터공간vector space 혹은 $\mathbb{F}$-벡터공간이라고 하고 $V$의 원소를 벡터</description>
    </item>
    
  </channel>
</rss>
