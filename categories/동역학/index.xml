<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>동역학 on 생새우초밥집</title>
    <link>https://freshrimpsushi.github.io/categories/%EB%8F%99%EC%97%AD%ED%95%99/</link>
    <description>Recent content in 동역학 on 생새우초밥집</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>ko</language>
    <lastBuildDate>Sat, 06 Feb 2021 00:00:00 +0000</lastBuildDate><atom:link href="https://freshrimpsushi.github.io/categories/%EB%8F%99%EC%97%AD%ED%95%99/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>혁신과 모방 바스 확산 모델</title>
      <link>https://freshrimpsushi.github.io/posts/bass-diffusion-model/</link>
      <pubDate>Sat, 06 Feb 2021 00:00:00 +0000</pubDate>
      
      <guid>https://freshrimpsushi.github.io/posts/bass-diffusion-model/</guid>
      <description>🚧 이 포스트는 아직 이관 작업이 완료되지 않았습니다 🚧 모델 바스 확산 모델 12 $$ N&#39; = \left( p + q {{ N } \over { K }} \right) \left( 1 - {{ N } \over { K }} \right) $$ 변수 $N(t)$: $t$ 시점에서 집단의 개체수를 나타낸다. 파라메터 $K$: 환경 용량(Carrying Capacity) 으로, 집단을 수용할 수 있는 환경의 크기를 묘사한다. 개체수는 환경 용량을 넘어서 성장할 수 없다. $p$: 혁신 계수(Coef</description>
    </item>
    
    <item>
      <title>시간에 따른 성장 지연 곰페르츠 성장 모델</title>
      <link>https://freshrimpsushi.github.io/posts/gompertz-growth-mode/</link>
      <pubDate>Fri, 05 Feb 2021 00:00:00 +0000</pubDate>
      
      <guid>https://freshrimpsushi.github.io/posts/gompertz-growth-mode/</guid>
      <description>🚧 이 포스트는 아직 이관 작업이 완료되지 않았습니다 🚧 모델 곰페르츠 성장 모델 1 $$ {{ d N } \over { dt }} = r e^{ - \alpha t} N \qquad, \alpha 0 $$ 변수 $N(t)$: $t$ 시점에서 집단의 개체수를 나타낸다. 파라메터 $r&amp;gt;0$ : 고유 성장률(Intrinsic Rate of Increase) 이다. $\alpha&amp;gt;0$: 일종의 감쇠율 을 나타내는 상수로, 클수록 성장세도 빠르게 꺾인다. 멜서스 성장 모델 $\displaystyle {{ d N } \over { dt }} = r N</description>
    </item>
    
    <item>
      <title>수리생물학에서의 알리 효과</title>
      <link>https://freshrimpsushi.github.io/posts/allee-efect-in-mathematical-biology/</link>
      <pubDate>Thu, 04 Feb 2021 00:00:00 +0000</pubDate>
      
      <guid>https://freshrimpsushi.github.io/posts/allee-efect-in-mathematical-biology/</guid>
      <description>🚧 이 포스트는 아직 이관 작업이 완료되지 않았습니다 🚧 모델 ** 알리 효과** 1 개체군의 밀도가 낮을 때 인구수가 감소하는 효과를 **알리 효과** 라 한다. 수식적으로는 다음과 같이 모델에서 $N$ 에 대한 함수 $a: \mathbb{R} \to \mathbb{R}$ 를 위로 볼록한 컨벡스 함수로 두어 표현한다. $$ N&#39; = a(N) N $$ 변수 $N(t)$: $t$ 시점에서 집단의 개체수를 나타낸다. 알리 이펙트는 예로써 함수 $a$ 를 다</description>
    </item>
    
    <item>
      <title>로지스틱 성장 모델의 시각적 이해</title>
      <link>https://freshrimpsushi.github.io/posts/visual-interpretation-of-logistic-growth-model/</link>
      <pubDate>Wed, 03 Feb 2021 00:00:00 +0000</pubDate>
      
      <guid>https://freshrimpsushi.github.io/posts/visual-interpretation-of-logistic-growth-model/</guid>
      <description>🚧 이 포스트는 아직 이관 작업이 완료되지 않았습니다 🚧 로지스틱 성장 모델 유도 본 시뮬레이션은 속도와 시각화 양면으로 유리하고 코딩도 쉬운 줄리아로 구현되어 있다. 가장 좋은 공부는 깃허브에서 줄리아 코드를 받아 직접 실행해보는 것이지만, 줄리아가 낯설다면 그냥 시뮬레이션을 어떻게 하는건지 읽고 이해만 해도 충분할 수 있다. 구현 자체에 있어 어떤 언어</description>
    </item>
    
    <item>
      <title>일제사격 전투 모델</title>
      <link>https://freshrimpsushi.github.io/posts/salvo-combat-model/</link>
      <pubDate>Wed, 03 Feb 2021 00:00:00 +0000</pubDate>
      
      <guid>https://freshrimpsushi.github.io/posts/salvo-combat-model/</guid>
      <description>이 포스트는 4월 22일로 재발행되어야합니다. 개요 란체스터 법칙이 근대전과 현대전의 양상을 묘사하는 모델이라면, 일제사격 전투 모델은 현대전 중에서도 특히 스케일이 큰 함대전을 묘사한다. 함대전에서 공격의 수단은 미사일과 같이 크고 강력한 것들이 많으며, 반대로 이런 미사일을 요격하는 미사일도 있다는 점이 다르다. 모델1 $$ \begin{align*} \Delta A &amp;amp;= - { { 1</description>
    </item>
    
    <item>
      <title>격자 모델 시뮬레이션에서의 확산</title>
      <link>https://freshrimpsushi.github.io/posts/diffusion-in-lattice-model-simulation/</link>
      <pubDate>Tue, 02 Feb 2021 00:00:00 +0000</pubDate>
      
      <guid>https://freshrimpsushi.github.io/posts/diffusion-in-lattice-model-simulation/</guid>
      <description>🚧 이 포스트는 아직 이관 작업이 완료되지 않았습니다 🚧 본 시뮬레이션은 속도와 시각화 양면으로 유리하고 코딩도 쉬운 줄리아로 구현되어 있다. 가장 좋은 공부는 깃허브에서 줄리아 코드를 받아 직접 실행해보는 것이지만, 줄리아가 낯설다면 그냥 시뮬레이션을 어떻게 하는건지 읽고 이해만 해도 충분할 수 있다. 구현 자체에 있어 어떤 언어를 사용하느냐는 본질적</description>
    </item>
    
    <item>
      <title>란체스터 법칙</title>
      <link>https://freshrimpsushi.github.io/posts/lanchester-laws/</link>
      <pubDate>Tue, 02 Feb 2021 00:00:00 +0000</pubDate>
      
      <guid>https://freshrimpsushi.github.io/posts/lanchester-laws/</guid>
      <description>이 포스트는 4월 18일로 재발행되어야합니다. 법칙 제1법칙 근대전 혹은 근접전투에서 전투력은 부대 규모에 비례한다. 제2법칙 현대전 혹은 원거리전투에서는 전투력은 부대 규모의 제곱에 비례한다. 설명 란체스터 법칙Lanchester&amp;rsquo;s Laws은 두 집단의 전투에서 사상자의 수에 대한 법칙으로, 제1법칙(선형 법칙)과 제</description>
    </item>
    
    <item>
      <title>격자 모델 시뮬레이션 첫걸음 히트맵으로 나타내기</title>
      <link>https://freshrimpsushi.github.io/posts/tutorial-on-lattice-model-simulation/</link>
      <pubDate>Mon, 01 Feb 2021 00:00:00 +0000</pubDate>
      
      <guid>https://freshrimpsushi.github.io/posts/tutorial-on-lattice-model-simulation/</guid>
      <description>🚧 이 포스트는 아직 이관 작업이 완료되지 않았습니다 🚧 본 시뮬레이션은 속도와 시각화 양면으로 유리하고 코딩도 쉬운 줄리아로 구현되어 있다. 가장 좋은 공부는 깃허브에서 줄리아 코드를 받아 직접 실행해보는 것이지만, 줄리아가 낯설다면 그냥 시뮬레이션을 어떻게 하는건지 읽고 이해만 해도 충분할 수 있다. 구현 자체에 있어 어떤 언어를 사용하느냐는 본질적</description>
    </item>
    
    <item>
      <title>집단 성장의 한계 로지스틱 성장 모델</title>
      <link>https://freshrimpsushi.github.io/posts/logistic-growth-model/</link>
      <pubDate>Sat, 23 Jan 2021 00:00:00 +0000</pubDate>
      
      <guid>https://freshrimpsushi.github.io/posts/logistic-growth-model/</guid>
      <description>🚧 이 포스트는 아직 이관 작업이 완료되지 않았습니다 🚧 로지스틱 성장 모델의 시각적 이해 모델 로지스틱 성장 모델 12 $$ N&#39; = {{ r } \over { K }} N ( K - N) $$ 변수 $N(t)$: $t$ 시점에서 집단의 개체수를 나타낸다. 파라메터 $r$ : 고유 성장률(Intrinsic Rate of Increase) 로써, $0$보다 크면 성장하고 $0$보다 작으면 쇠퇴한다. $K$ : 환경 용량(Carrying</description>
    </item>
    
    <item>
      <title>멜서스 성장 모델의 시각적 이해</title>
      <link>https://freshrimpsushi.github.io/posts/visual-interpretation-of-malthusian-growth-model/</link>
      <pubDate>Wed, 20 Jan 2021 00:00:00 +0000</pubDate>
      
      <guid>https://freshrimpsushi.github.io/posts/visual-interpretation-of-malthusian-growth-model/</guid>
      <description>🚧 이 포스트는 아직 이관 작업이 완료되지 않았습니다 🚧 멜서스 성장 모델의 이론적 이해 본 시뮬레이션은 속도와 시각화 양면으로 유리하고 코딩도 쉬운 줄리아로 구현되어 있다. 가장 좋은 공부는 깃허브에서 줄리아 코드를 받아 직접 실행해보는 것이지만, 줄리아가 낯설다면 그냥 시뮬레이션을 어떻게 하는건지 읽고 이해만 해도 충분할 수 있다. 구현 자체에 있어 어</description>
    </item>
    
    <item>
      <title>에이전트 기반 모델 시뮬레이션에서의 사망</title>
      <link>https://freshrimpsushi.github.io/posts/death-in-agent-based-simulation-model/</link>
      <pubDate>Sat, 16 Jan 2021 00:00:00 +0000</pubDate>
      
      <guid>https://freshrimpsushi.github.io/posts/death-in-agent-based-simulation-model/</guid>
      <description>🚧 이 포스트는 아직 이관 작업이 완료되지 않았습니다 🚧 본 시뮬레이션은 속도와 시각화 양면으로 유리하고 코딩도 쉬운 줄리아로 구현되어 있다. 가장 좋은 공부는 깃허브에서 줄리아 코드를 받아 직접 실행해보는 것이지만, 줄리아가 낯설다면 그냥 시뮬레이션을 어떻게 하는건지 읽고 이해만 해도 충분할 수 있다. 구현 자체에 있어 어떤 언어를 사용하느냐는 본질적</description>
    </item>
    
    <item>
      <title>에이전트 기반 모델 시뮬레이션에서의 번식</title>
      <link>https://freshrimpsushi.github.io/posts/reproduction-in-agent-based-simulation-model/</link>
      <pubDate>Tue, 12 Jan 2021 00:00:00 +0000</pubDate>
      
      <guid>https://freshrimpsushi.github.io/posts/reproduction-in-agent-based-simulation-model/</guid>
      <description>🚧 이 포스트는 아직 이관 작업이 완료되지 않았습니다 🚧 본 시뮬레이션은 속도와 시각화 양면으로 유리하고 코딩도 쉬운 줄리아로 구현되어 있다. 가장 좋은 공부는 깃허브에서 줄리아 코드를 받아 직접 실행해보는 것이지만, 줄리아가 낯설다면 그냥 시뮬레이션을 어떻게 하는건지 읽고 이해만 해도 충분할 수 있다. 구현 자체에 있어 어떤 언어를 사용하느냐는 본질적</description>
    </item>
    
    <item>
      <title>에이전트 기반 시뮬레이션 첫걸음 산점도로 나타내기</title>
      <link>https://freshrimpsushi.github.io/posts/tutorial-on-agent-based-simulation/</link>
      <pubDate>Fri, 08 Jan 2021 00:00:00 +0000</pubDate>
      
      <guid>https://freshrimpsushi.github.io/posts/tutorial-on-agent-based-simulation/</guid>
      <description>🚧 이 포스트는 아직 이관 작업이 완료되지 않았습니다 🚧 본 시뮬레이션은 속도와 시각화 양면으로 유리하고 코딩도 쉬운 줄리아로 구현되어 있다. 가장 좋은 공부는 깃허브에서 줄리아 코드를 받아 직접 실행해보는 것이지만, 줄리아가 낯설다면 그냥 시뮬레이션을 어떻게 하는건지 읽고 이해만 해도 충분할 수 있다. 구현 자체에 있어 어떤 언어를 사용하느냐는 본질적</description>
    </item>
    
    <item>
      <title>동역학적 모델 시뮬레이션</title>
      <link>https://freshrimpsushi.github.io/posts/dynamical-model-simulation/</link>
      <pubDate>Mon, 04 Jan 2021 00:00:00 +0000</pubDate>
      
      <guid>https://freshrimpsushi.github.io/posts/dynamical-model-simulation/</guid>
      <description>🚧 이 포스트는 아직 이관 작업이 완료되지 않았습니다 🚧 (멜서스 성장 모델에 대한 에이전트 기반 시뮬레이션) 시뮬레이션 이란 현상을 설명하는 모델을 가상으로 구현해 실험하는 것을 말하며, 동역학적 모델 이라는 맥락에서 시뮬레이션은 흔히 다음과 같은 방법들을 말한다: 1. Agent based Model: 에이전트 기반 모델 은 거시세계를 모방하는 모델을 각 행위자(에이전트)의</description>
    </item>
    
    <item>
      <title>이상적인 집단 성장 맬서스 성장 모델</title>
      <link>https://freshrimpsushi.github.io/posts/malthusian-growth-model/</link>
      <pubDate>Thu, 31 Dec 2020 00:00:00 +0000</pubDate>
      
      <guid>https://freshrimpsushi.github.io/posts/malthusian-growth-model/</guid>
      <description>🚧 이 포스트는 아직 이관 작업이 완료되지 않았습니다 🚧 멜서스 성장 모델의 시각적 이해 모델 멜서스 성장 모델 1 $$ N &#39; = rN $$ 변수 $N(t)$: $t$ 시점에서 집단의 개체수를 나타낸다. 파라메터 $r \in \mathbb{R}$ : 고유 성장률(Intrinsic Rate of Increase) 로써, $0$ 보다 크면 성장하고 $0$ 보다 작으면 쇠퇴한다. 번식률(Birth Rate) $b$ 와 사망률(Death Rate) $d$ 의 차 $r:=b-d$ 로 정의</description>
    </item>
    
    <item>
      <title>라살 불변 원리 증명</title>
      <link>https://freshrimpsushi.github.io/posts/proof-of-lasalle-invariance-principle/</link>
      <pubDate>Sat, 05 Dec 2020 00:00:00 +0000</pubDate>
      
      <guid>https://freshrimpsushi.github.io/posts/proof-of-lasalle-invariance-principle/</guid>
      <description>🚧 이 포스트는 아직 이관 작업이 완료되지 않았습니다 🚧 라살 불변 원리 1공간 $X$ 와 함수 $f : X \to X$ 에 대해 다음과 같은 벡터 필드가 미분 방정식으로 주어져 있다고 하자. $$ x&#39; = f(x) $$ 플로우 $\phi_t \left( \cdot \right)$ 하에서의 컴팩트 양불변집합을 $\mathcal{M} \subset \mathbb{R}^{n}$ 이라 하자. $\mathcal{M}$ 에서 랴푸노프 함수 $V : \mathcal{M} \to \mathbb{R}$ 가 정의되어 있다고 할 때, 다음의 두 집합을 생각해보자. $$ E := \left\{ x \in \mathcal{M} : V&#39;(x)</description>
    </item>
    
    <item>
      <title>어트랙팅 셋의 베이신</title>
      <link>https://freshrimpsushi.github.io/posts/basin-of-attracting-set/</link>
      <pubDate>Fri, 04 Dec 2020 00:00:00 +0000</pubDate>
      
      <guid>https://freshrimpsushi.github.io/posts/basin-of-attracting-set/</guid>
      <description>정의 1 공간 $X$ 와 함수 $f,g : X \to X$ 에 대해 벡터 필드, 맵이 다음과 같이 표현된다고 하자. $$ x&#39; = f(x) \\ x \mapsto g(x) $$ $\phi(t, \cdot)$ 은 벡터 필드 $x&#39; = f(x)$ 의 플로우, $g^{n}$ 는 맵 $g$ 를 $n$ 번 취한 맵을 나타내도록 하자.다음과 같이 정의된 집합들을 어트랙팅 셋 $A$ 의 베이신Basin이라고 한다. Vector Field $$\displaystyle \bigcup_{t \le 0} \phi ( t, U )$$ Map $$\displaystyle \bigcup_{n \le 0} g^{n} ( U )$$ 설명 베이신은 우리에게 익숙한 단어가 아</description>
    </item>
    
    <item>
      <title>동역학에서의 어트랙터</title>
      <link>https://freshrimpsushi.github.io/posts/attractor-in-dynamics/</link>
      <pubDate>Tue, 01 Dec 2020 00:00:00 +0000</pubDate>
      
      <guid>https://freshrimpsushi.github.io/posts/attractor-in-dynamics/</guid>
      <description>빌드업 공간 $X$ 와 함수 $f,g : X \to X$ 에 대해 벡터 필드, 맵이 다음과 같이 표현된다고 하자. $$ x&#39; = f(x) \\ x \mapsto g(x) $$ $\phi(t, \cdot)$ 은 벡터 필드 $x&#39; = f(x)$ 의 플로우, $g^{n}$ 는 맵 $g$ 를 $n$ 번 취한 맵을 나타내도록 하자. 넌원더링의 정의1 넌원더링Nonwandering한 점 $x_{0} \in X$ 이 다음의 조건을 만족하면 넌원더링 포인트라 하고, 그 집합을 넌원더링 셋 이라고 한다. (V): $x_{0}$ 의 모</description>
    </item>
    
    <item>
      <title>자율 시스템의 오메가 리미트 셋</title>
      <link>https://freshrimpsushi.github.io/posts/omega-limit-set-of-autonomous-system/</link>
      <pubDate>Fri, 27 Nov 2020 00:00:00 +0000</pubDate>
      
      <guid>https://freshrimpsushi.github.io/posts/omega-limit-set-of-autonomous-system/</guid>
      <description>🚧 이 포스트는 아직 이관 작업이 완료되지 않았습니다 🚧 거리 공간 $X$ 와 함수 $f : X \to X$ 에 대해 다음과 같은 벡터 필드가 미분 방정식으로 주어져 있다고 하자. $$ x&#39; = f(x) $$ 이 벡터 필드의 플로우 $\phi ( t, x )$ 와 한 점 $x_{0} \in X$ 에 대해, $t_{i} \to \infty$ 일 때 $$ \phi \left( t_{i} , x_{0} \right) \to x $$ 을 만족하는 시간의 시퀀스 $\left\{ t_{i} \right\} \subset \mathbb{R}$ 이 존재하면 $ x \in X$ 를 $x_{0}$ 의 오메가 리미트 포인트 라고 한다</description>
    </item>
    
    <item>
      <title>푸앙카레 재귀 정리 증명</title>
      <link>https://freshrimpsushi.github.io/posts/proof-of-poincare-recurrence-theorem/</link>
      <pubDate>Sat, 21 Nov 2020 00:00:00 +0000</pubDate>
      
      <guid>https://freshrimpsushi.github.io/posts/proof-of-poincare-recurrence-theorem/</guid>
      <description>🚧 이 포스트는 아직 이관 작업이 완료되지 않았습니다 🚧 푸앙카레 재귀 정리 1유클리드 공간에서 정의된 다차원 맵 $g : \mathbb{R}^{n} \to \mathbb{R}^{n}$ 이 단사면서 연속이고 $D \subset \mathbb{R}^{n}$ 이 컴팩트 불변 집합, 다시 말해 $g(D) = D$ 라고 하자. 임의의 $\overline{x} \in D$ 의 임의의 근방을 $U$ 라고 하면 어떤 $n \in $ 에 대해 $g^{n} (x) \in U$ 가 되게끔 하는 $x \in U$ 가 존재한다. 스테이트먼트는 단순한데, $D$ 가 컴팩트 불변 집</description>
    </item>
    
    <item>
      <title>동역학에서의 리우빌 정리 증명</title>
      <link>https://freshrimpsushi.github.io/posts/proof-of-liouvilles-theorem-in-dynamics/</link>
      <pubDate>Tue, 17 Nov 2020 00:00:00 +0000</pubDate>
      
      <guid>https://freshrimpsushi.github.io/posts/proof-of-liouvilles-theorem-in-dynamics/</guid>
      <description>🚧 이 포스트는 아직 이관 작업이 완료되지 않았습니다 🚧 복소해석에서의 리우빌 정리 유클리드 공간 $\mathbb{R}^{n}$ 과 함수 $f : \mathbb{R}^{n} \to \mathbb{R}^{n}$ 에 대해 다음과 같은 벡터 필드가 미분 방정식으로 주어져 있다고 하자. $$ x&#39; = f(x) $$ 이 벡터 필드의 플로우 $\phi_t ( \cdot )$ 과 영역 $D_{0} \subset \mathbb{R}^{n}$ 에 대해 $D_{t} := \phi_{t} \left( D_{0} \right)$ 를 플로우에 따라 시간 $t$가 지나 옮겨진 영역, 그 볼륨을 $V(t) \equiv V \left( D_{t} \right)$ 와 같이 나타내자</description>
    </item>
    
    <item>
      <title>자율 시스템의 보존량</title>
      <link>https://freshrimpsushi.github.io/posts/conservation-in-autonomous-system/</link>
      <pubDate>Fri, 13 Nov 2020 00:00:00 +0000</pubDate>
      
      <guid>https://freshrimpsushi.github.io/posts/conservation-in-autonomous-system/</guid>
      <description>🚧 이 포스트는 아직 이관 작업이 완료되지 않았습니다 🚧 **시스템의 보존량 공간 $X$ 와 함수 $f : X \to X$ 에 대해 다음과 같은 벡터 필드가 미분 방정식으로 주어져 있다고 하자. $$ x&#39; = f(x) $$ 주어진 시스템에 종속된 상수함수 $h : X \to \mathbb{R}$ 가 존재하면 이를 보존량 이라 한다. 물리학적, 즉 역학적인(mechanical) 센스에 익숙하다면 보존량이라는 개념은</description>
    </item>
    
    <item>
      <title>2차원 자율 시스템에선 혼돈이 일어나지 않는다  푸앙카레-벤딕슨 정리 증명</title>
      <link>https://freshrimpsushi.github.io/posts/proof-of-poincare-bendixson-theorem/</link>
      <pubDate>Tue, 03 Nov 2020 00:00:00 +0000</pubDate>
      
      <guid>https://freshrimpsushi.github.io/posts/proof-of-poincare-bendixson-theorem/</guid>
      <description>🚧 이 포스트는 아직 이관 작업이 완료되지 않았습니다 🚧 **푸앙카레-벤딕슨 정리 $2$ 차원 매니폴드 $\mathcal{P}$ 와 함수 $f,g \in C^{r} \left( \mathcal{P} \right)$ 에 대해 다음과 같은 벡터 필드가 미분 방정식으로 주어져 있다고 하자. $$ x&#39; = f(x,y) \\ y&#39; = g(x,y) $$ $\mathcal{M}$ 이 벡터 필드의 유한한 수의 고정점을 가지는 양불변집합이라고 하면, $p \in \mathcal{M}$ 의 오메가 리미트 셋 $\omega (p)$ 은 다음 세가지 중 하나를 만족한다: (1) $\omega</description>
    </item>
    
    <item>
      <title>2차원 자율 시스템에서 피리어딕 오빗의 부재성</title>
      <link>https://freshrimpsushi.github.io/posts/nonexistence-of-periodic-orbit-of-2-dimensional-autonomous-system/</link>
      <pubDate>Fri, 30 Oct 2020 00:00:00 +0000</pubDate>
      
      <guid>https://freshrimpsushi.github.io/posts/nonexistence-of-periodic-orbit-of-2-dimensional-autonomous-system/</guid>
      <description>🚧 이 포스트는 아직 이관 작업이 완료되지 않았습니다 🚧 보통 자율 시스템에서 피리어딕 오빗이 존재하는지에 대한 질문은 상당히 까다로운데, $1,2$차원 공간이라면 비교적 간단하게 그 부재성에 대해서 논할 수 있다. 공간 $X = \mathbb{R}$ 혹은 $X = \mathbb{R}^{2}$ 와 함수 $f : X \to X$ 에 대해 다음과 같은 벡터 필드가 미분 방정식으로 주어져 있다고 하자. $$ x&#39; = f(x) $$ (1)** $1$차원</description>
    </item>
    
    <item>
      <title>벤딕슨 판정법</title>
      <link>https://freshrimpsushi.github.io/posts/bendixsons-criterion/</link>
      <pubDate>Mon, 26 Oct 2020 00:00:00 +0000</pubDate>
      
      <guid>https://freshrimpsushi.github.io/posts/bendixsons-criterion/</guid>
      <description>🚧 이 포스트는 아직 이관 작업이 완료되지 않았습니다 🚧 **벤딕슨 판정법 공간 $\mathbb{R}^{2}$ 와 함수 $f,g \in C^{1} \left( \mathbb{R}^{2} \right)$ 에 대해 다음과 같은 벡터 필드가 미분 방정식으로 주어져 있다고 하자. $$ x&#39; = f(x,y) \\ y&#39; = g(x,y) $$ 단순 연결 영역 $D \subset \mathbb{R}^{2}$ 에서 $$ {{ \partial f } \over { \partial x }} + {{ \partial g } \over { \partial y }} \ne 0 $$ 의 부호가 바뀌지 않는다면, 주어진 $2$차 벡터 필드는 $D$ 내부에서 닫힌 오빗을 갖</description>
    </item>
    
    <item>
      <title>불변 매니폴드의 안정성</title>
      <link>https://freshrimpsushi.github.io/posts/stability-of-manifold/</link>
      <pubDate>Thu, 22 Oct 2020 00:00:00 +0000</pubDate>
      
      <guid>https://freshrimpsushi.github.io/posts/stability-of-manifold/</guid>
      <description>🚧 이 포스트는 아직 이관 작업이 완료되지 않았습니다 🚧 **벡터 필드의 매니폴드1 공간 $\mathbb{R}^{n}$ 와 함수 $f : \mathbb{R}^{n} \to \mathbb{R}^{n}$ 에 대해 다음과 같은 벡터 필드가 미분 방정식으로 주어져 있다고 하자. $$ x&#39; = f(x) $$ 위와 같은 자율 시스템의 고정점 $\overline{x}$ 이 주어져 있다고 할 때, 선형화 행렬 $A := D f \left( \overline{x} \right)$ 의 각 고유값 $\lambda$ 들에 대응되는 고유벡터 $e$ 들을 실수부 $\Re (\lambda)$ 에 따라 다음과 분류하고</description>
    </item>
    
    <item>
      <title>동역학에서의 불변 집합</title>
      <link>https://freshrimpsushi.github.io/posts/invariant-set-in-dynamics/</link>
      <pubDate>Sun, 18 Oct 2020 00:00:00 +0000</pubDate>
      
      <guid>https://freshrimpsushi.github.io/posts/invariant-set-in-dynamics/</guid>
      <description>🚧 이 포스트는 아직 이관 작업이 완료되지 않았습니다 🚧 **불변 집합1 공간 $X$ 와 함수 $f,g : X \to X$ 에 대해 벡터 필드, 맵이 다음과 같이 표현된다고 하자. $$ x&#39; = f(x) \\ x \mapsto g(x) $$ $S \subset X$ 라고 하자.V. $\forall x_{0} \in S$ 가 모든 $t \in \mathbb{R}$ 에 대해 다음을 만족하면 벡터 필드 $x&#39;=f(x)$ 하에서의 불변 집합 이라 한다. $$ x(t,x_{0}) \in S $$ M. $\forall x_{0} \in S$ 가 모든 $n \in \mathbb{Z}$ 에 대해 다음을 만족하면 맵 $x \mapsto</description>
    </item>
    
    <item>
      <title>랴푸노프 함수</title>
      <link>https://freshrimpsushi.github.io/posts/liapunov-function/</link>
      <pubDate>Wed, 14 Oct 2020 00:00:00 +0000</pubDate>
      
      <guid>https://freshrimpsushi.github.io/posts/liapunov-function/</guid>
      <description>🚧 이 포스트는 아직 이관 작업이 완료되지 않았습니다 🚧 **랴푸노프 함수의 정의1 공간 $X$ 와 함수 $f : X \to X$ 에 대해 다음과 같은 벡터 필드가 미분 방정식으로 주어져 있다고 하자. $$ x&#39; = f(x) $$ 위와 같은 자율 시스템의 한 점 $x_{0} \in X$ 이 주어져 있다고 할 때, $x_{0}$ 의 네이버후드 $\mathcal{N} \left( x_{0} \right)$ 에서 정의된 스칼라 함수 $V \in C^{1} \left( \mathcal{N} (x_{0}) , \mathbb{R} \right)$ 가 다음의 조건을 만족하면 랴푸노프</description>
    </item>
    
    <item>
      <title>자율 시스템에서 고정점의 분류</title>
      <link>https://freshrimpsushi.github.io/posts/classification-of-fixed-point/</link>
      <pubDate>Sat, 10 Oct 2020 00:00:00 +0000</pubDate>
      
      <guid>https://freshrimpsushi.github.io/posts/classification-of-fixed-point/</guid>
      <description>🚧 이 포스트는 아직 이관 작업이 완료되지 않았습니다 🚧 **하이퍼볼릭 고정점1과 일립틱 고정점2 공간 $X$ 와 함수 $f \in C^{1}(X,X)$ 에 대해 다음과 같은 벡터 필드가 미분 방정식으로 주어져 있다고 하자. $$ x&#39; = f(x) $$ $\overline{x}$ 가 이 자율 시스템의 한 고정점이라 하고 $D f \left( \overline{x} \right)$ 의 아이겐 밸류들을 $\lambda_{1} , \cdots , \lambda_{m}$ 이라 하자. Hyperbolic** : $D f \left( \overline{x} \right)$ 의 모든 아이겐 밸류들의 실수부가 $0$ 이 아니</description>
    </item>
    
    <item>
      <title>더핑 오실레이터</title>
      <link>https://freshrimpsushi.github.io/posts/duffing-oscillator/</link>
      <pubDate>Tue, 06 Oct 2020 00:00:00 +0000</pubDate>
      
      <guid>https://freshrimpsushi.github.io/posts/duffing-oscillator/</guid>
      <description>🚧 이 포스트는 아직 이관 작업이 완료되지 않았습니다 🚧 **더핑 방정식1 $$ x&#39;&#39; + \delta x&#39; + \alpha x + \beta x^{3} = \gamma \cos \left( \omega t \right) $$ 변수 $t$ : 시간 을 나타낸다.$x$ : $1$ 차원 상에서 (이를 테면 입자의) 위치 를 나타낸다.$x&#39;$ : (입자의) 속도 를 나타낸다.$x&#39;&#39;$ : (입자의) 가속도 를 나타낸다.파라메터 $\delta$ : 감쇠(Damping) 를 제어하며,</description>
    </item>
    
    <item>
      <title>랴푸노프 안정성과 오빗 안정성</title>
      <link>https://freshrimpsushi.github.io/posts/liapunov-stability-and-orbit-stability/</link>
      <pubDate>Fri, 02 Oct 2020 00:00:00 +0000</pubDate>
      
      <guid>https://freshrimpsushi.github.io/posts/liapunov-stability-and-orbit-stability/</guid>
      <description>🚧 이 포스트는 아직 이관 작업이 완료되지 않았습니다 🚧 **랴푸노프 안정성1 거리 공간 $\left( X , \left\| \cdot \right\| \right)$ 과 함수 $f : X \to X$ 에 대해 다음과 같은 벡터 필드가 미분 방정식으로 주어져 있다고 하자. $$ x&#39; = f(x) $$ 1.** $t_{0} \in \mathbb{R}$ 이라 하자. 주어진 미분 방정식의 솔루션 $\overline{x}(t)$ 가 $\varepsilon &amp;gt; 0$ 이 주어질 때마다 $$ \left\| \overline{x} \left( t_{0} \right) - y \left( t_{0} \right) \right\| &amp;lt; \delta \implies \left\| \overline{x}(t) - y(t) \right\| &amp;lt; \varepsilon \qquad , t &amp;gt; t_{0} $$ 를 만족</description>
    </item>
    
    <item>
      <title>비선형 시스템의 선형화</title>
      <link>https://freshrimpsushi.github.io/posts/linearization-of-nonlinear-system/</link>
      <pubDate>Mon, 28 Sep 2020 00:00:00 +0000</pubDate>
      
      <guid>https://freshrimpsushi.github.io/posts/linearization-of-nonlinear-system/</guid>
      <description>🚧 이 포스트는 아직 이관 작업이 완료되지 않았습니다 🚧 공간 $\left( X, \left\| \cdot \right\| \right)$ 와 함수 $f : X \to X$ 에 대해 다음과 같은 벡터 필드가 미분 방정식으로 주어져 있다고 하자. $$ x&#39; = f(x) $$ 위와 같은 자율 시스템의 고정점 $\overline{x}$ 이 주어져 있다고 할 때, 그 근방의 안정성을 파악하기 위해서는 선형화라는 방법이 필수적으로 동원된다. 시스템을 전체적으로 보았을 땐 고정점 근처에</description>
    </item>
    
    <item>
      <title>자율 시스템의 오빗</title>
      <link>https://freshrimpsushi.github.io/posts/orbit-of-autonomous-system/</link>
      <pubDate>Tue, 22 Sep 2020 00:00:00 +0000</pubDate>
      
      <guid>https://freshrimpsushi.github.io/posts/orbit-of-autonomous-system/</guid>
      <description>🚧 이 포스트는 아직 이관 작업이 완료되지 않았습니다 🚧 **오빗의 정의1와 피리어딕 오빗의 정의2 공간 $X$ 와 함수 $f : X \to X$ 에 대해 다음과 같은 벡터 필드가 미분 방정식으로 주어져 있다고 하자. $$ x&#39; = f(x) $$ 위와 같은 자율 시스템의 플로우를 $x(t,t_{0},x_{0})$ 와 같이 나타낸다고 하자. 1.** 그러면 $x_{0} \in X$ 를 지나는 **오빗** $O(x_{0})$ 을 다음과 같이 나타낸다. $$ O(x_{0}) := \left\{ x \in X :</description>
    </item>
    
    <item>
      <title>자율 시스템의 플로우와 타임-T 맵 Flow and Time-</title>
      <link>https://freshrimpsushi.github.io/posts/t-map-of-autonomous-system/</link>
      <pubDate>Sun, 15 Mar 2020 00:00:00 +0000</pubDate>
      
      <guid>https://freshrimpsushi.github.io/posts/t-map-of-autonomous-system/</guid>
      <description>🚧 이 포스트는 아직 이관 작업이 완료되지 않았습니다 🚧 공간 $X$ 와 함수 $f : X \to X$ 에 대해 다음과 같은 벡터 필드가 미분 방정식으로 주어져 있다고 하자. $$ x&#39; = f(x) $$ 시간 변수 $t$ 와 초기값 $x_{0}$ 에 대한 자율 미분 방정식의 해를 플로우 라고 하고 $F(t, x_{0})$ 와 같이 나타낸다. 픽스된 단위 시간 $t = T$ 에 대해 $F_{T}(x) := F(T,x)$ 를 타임-$T$ 맵 이라고 한다. 플로우Flow 는 궤적Tr</description>
    </item>
    
    <item>
      <title>동역학에서 자율 시스템과 평형점</title>
      <link>https://freshrimpsushi.github.io/posts/autonomous-system-and-equilibrium-in-dynamics/</link>
      <pubDate>Wed, 11 Mar 2020 00:00:00 +0000</pubDate>
      
      <guid>https://freshrimpsushi.github.io/posts/autonomous-system-and-equilibrium-in-dynamics/</guid>
      <description>🚧 이 포스트는 아직 이관 작업이 완료되지 않았습니다 🚧 공간 $V$ 와 함수 $f : V \to V$ 에 대해 다음과 같은 벡터 필드가 미분 방정식으로 주어져 있다고 하자. $$ v&#39; = f(v) $$ 1.** 변수 $t$ 를 포함하는 미분 방정식에서 $t$ 가 명시적으로Explicitly 드러나지 않으면 **자율 미분 방정식**Automonous Differential Equation 이라고 한다. 2.** 상수 함수 $f_{0} (v)$ 가 자율 미분 방</description>
    </item>
    
    <item>
      <title>어트랙터의 카오스</title>
      <link>https://freshrimpsushi.github.io/posts/chaotic-attractor/</link>
      <pubDate>Sat, 07 Mar 2020 00:00:00 +0000</pubDate>
      
      <guid>https://freshrimpsushi.github.io/posts/chaotic-attractor/</guid>
      <description>빌드업 공간 $X = \left( \mathbb{R}^{n} , \left\| \cdot \right\| \right)$ 와 함수 $f,g : X \to X$ 에 대해 벡터 필드, 맵이 다음과 같이 표현된다고 하자. $$ x&#39; = f(x) \\ x \mapsto g(x) $$ $\phi(t, \cdot)$ 은 벡터 필드 $x&#39; = f(x)$ 의 플로우, $g^{n}$ 는 맵 $g$ 를 $n$ 번 취한 맵을 나타내고, $\Lambda \subset X$ 가 $\phi(t, \cdot)$ 혹은 $g(\cdot)$ 하에서 불변 컴팩트 집합이라고 하자. $\phi(t,x)$ 혹은 $g(x)$ 가 $\Lambda$ 에서 초기값에 민감하다Sensitive Dependence on Initial Conditions는 것</description>
    </item>
    
    <item>
      <title>다차원 맵의 카오스</title>
      <link>https://freshrimpsushi.github.io/posts/chaos-of-multi-dimensional-map/</link>
      <pubDate>Fri, 14 Feb 2020 00:00:00 +0000</pubDate>
      
      <guid>https://freshrimpsushi.github.io/posts/chaos-of-multi-dimensional-map/</guid>
      <description>정의1 맵 $f : \mathbb{R}^{m} \to \mathbb{R}^{m}$ 의 바운디드 오빗 $\left\{ \mathbb{v}_{0}, \mathbb{v}_{1}, \cdots \right\}$ 이 다음을 만족하면 이 오빗을 캐어릭Chaotic하다고 한다. (i): 어심토티컬리 피리어딕이 아니다. (ii): 모든 $i = 1,\cdots , m$ 에 대해 $h_{i} ( \mathbb{v}_{0} ) \ne 0 $ (iii): $h_{1} ( \mathbb{v}_{0}) &amp;gt; 0$ 오빗이 바운디드라는 말은 모든 $n \in \mathbb{N}_{0}$ 에 대해 $ \left\| \mathbb{v}_{n} \right\| &amp;lt; M$ 을 만족하는 $M \in \mathbb{R}$ 이 존재한다는 뜻이다. $h_{i}(\mathbb{v}_{0})$ 은 랴푸노프 지수를 의미한다. 설명 $1</description>
    </item>
    
    <item>
      <title>다차원 맵의 랴푸노프 수와 그 수치적 계산법</title>
      <link>https://freshrimpsushi.github.io/posts/lyapunov-number-of-multi-dimensional-map/</link>
      <pubDate>Thu, 06 Feb 2020 00:00:00 +0000</pubDate>
      
      <guid>https://freshrimpsushi.github.io/posts/lyapunov-number-of-multi-dimensional-map/</guid>
      <description>정의 1 스무스 맵 $\mathbb{f} : \mathbb{R}^{m} \to \mathbb{R}^{m}$ 과 초기값 $\mathbb{v}_{0} \in \mathbb{R}^{m}$ 에 대해 $J_{n} := D \mathbb{f}^{n} ( \mathbb{v}_{0}) \in \mathbb{R}^{m \times m}$ 이라고 하자. $k = 1 , \cdots , m$ 에 대해 $m$차원 단위구 $N := \left\{ \mathbb{x} \in \mathbb{R}^{m} : \left\| \mathbb{x} \right\|_{2} = 1 \right\}$ 의 일립소이드 $J_{n} N$ 의 축의 길이 중 $k$ 번째로 긴 축의 길이를 $r_{k}^{(n)}$ 이라고 두자. 이제 $\mathbb{v}_{0}$ 의 $k$ 번째 랴푸노프 수 $L_{k}$ 를 다음과 같이 정의한다. $$ L_{k} := \lim_{n\to\infty} \left( r_{k}^{(n)} \right)^{1/n} $$ $\mathbb{v}_{0}$ 의 $k$ 번째 랴푸노프 지수 는 $h_{k} := \ln L_{k}$ 와 같</description>
    </item>
    
    <item>
      <title>다차원 비선형 맵</title>
      <link>https://freshrimpsushi.github.io/posts/multi-dimensional-nonlinear-map/</link>
      <pubDate>Fri, 24 May 2019 00:00:00 +0000</pubDate>
      
      <guid>https://freshrimpsushi.github.io/posts/multi-dimensional-nonlinear-map/</guid>
      <description>비선형 맵의 정의 맵 $\mathbb{f} : \mathbb{R}^{m} \to \mathbb{R}^{m}$ 이 선형이 아니면 비선형 이라고 한다. 빌드업 1 어떤 맵이 선형인지 보이는 것은 어렵지만 비선형임을 보이는 것은 쉽고, 선형 문제는 쉽지만 비선형 문제는 어렵다. 이 우주의 거의 모든 것은 비선형이며 비선형은 어렵기 때문에 인간들은 비선형을 선형으로 바꿀 궁리부터 한다. 위 그림에서 주어진 곡선은 분명 휘어있긴 하지만, 아주</description>
    </item>
    
    <item>
      <title>다차원 선형 맵</title>
      <link>https://freshrimpsushi.github.io/posts/multi-dimensional-linear-map/</link>
      <pubDate>Mon, 20 May 2019 00:00:00 +0000</pubDate>
      
      <guid>https://freshrimpsushi.github.io/posts/multi-dimensional-linear-map/</guid>
      <description>정의 1 맵 $T_{A} : \mathbb{R}^{m} \to \mathbb{R}^{m}$ 가 모든 $a,b \in \mathbb{R}$ 과 $\mathbb{x}, \mathbb{y} \in \mathbb{R}^{m}$ 에 대해 $$ T_{A} ( a \mathbb{x} + b \mathbb{y} ) = a T_{A} ( \mathbb{x} ) + b T_{A} ( \mathbb{y} ) $$ 를 만족하면 $T_{A}$ 가 선형Linear이라고 한다. $A$ 의 아이겐 밸류들을 $\lambda_{1} , \cdots , \lambda_{m}$ 이라고 하자. $| \lambda_{1} | \ne 1, \cdots , | \lambda_{m} | \ne 1$ 이면 $A$ 가 하이퍼볼릭Hyperbolic 하다고 한다. 하이퍼볼릭 $A$ 에 대해 $\begin{cases} | \lambda_{i} | &amp;gt;1 \\ | \lambda_{j} | &amp;lt;1 \end{cases}$ 를 만족하는 $i,j$ 가</description>
    </item>
    
    <item>
      <title>카오틱 트랜지션</title>
      <link>https://freshrimpsushi.github.io/posts/chaotic-transition/</link>
      <pubDate>Thu, 02 May 2019 00:00:00 +0000</pubDate>
      
      <guid>https://freshrimpsushi.github.io/posts/chaotic-transition/</guid>
      <description>정의 시스템이 파라매터의 변화에 따라 카오틱해지거나 카오틱해지지 않는 등의 현상을 카오틱 트랜지션 이라고 한다. 예시 예로써 로지스틱 패밀리를 생각해보면 $g_{a} = ax (1-x)$ 로 만들어지는 시스템은 파라매터 $a$ 에 따라 달라지는 모습을 보이다가 $a=4$ 일 때 카오틱 오빗을 가짐을 확인할 수 있다. 그러면 그 다음 질문은 바로 &amp;lsquo;$a&amp;gt;4$ 일 때는 어떻게 될 것인가&amp;rsquo;다.</description>
    </item>
    
    <item>
      <title>네츄럴 인베리언트 메져</title>
      <link>https://freshrimpsushi.github.io/posts/natural-invariant-measure/</link>
      <pubDate>Mon, 29 Apr 2019 00:00:00 +0000</pubDate>
      
      <guid>https://freshrimpsushi.github.io/posts/natural-invariant-measure/</guid>
      <description>정의 1 카오틱한 동역학계에서 충분히 시간이 지난 뒤의 스테이트를 확률적으로 나타낸 분포함수를 네츄럴 (인베리언트) 메져 라고 한다. 예시 1 예로써 로지스틱 맵 $g_{4} (x) = 4 x (1 -x)$ 를 생각해보면 카오틱한 시스템이기 때문에 초기값 $x_{0} \in [0,1]$ 만 가지고는 충분히 큰 $N$ 에 대해 $x_{N} = g_{4}^{N} (x_{0})$ 을 전혀 예측할 수 없다. 하지만 이렇게 카오틱한 오빗이 반드시 $[0,1]$ 의 모든 지점에</description>
    </item>
    
    <item>
      <title>바이퍼케이션 다이어그램</title>
      <link>https://freshrimpsushi.github.io/posts/bifurcation-diagram/</link>
      <pubDate>Sat, 27 Apr 2019 00:00:00 +0000</pubDate>
      
      <guid>https://freshrimpsushi.github.io/posts/bifurcation-diagram/</guid>
      <description>정의 동역학계에서 파라매터의 변화에 따라 나타나는 오빗을 표현한 그림을 바이퍼케이션 다이어그램 이라고 한다. 예시1 예로써 로지스틱 패밀리를 생각해보면 파라매터 $a$ 의 변화에 따라 충분히 큰 $N$ 에 대해 $x_{N}$ 의 값은 다음 바이퍼케이션 다이어그램의 검은색 범위 안에 포함된다고 예상할 수 있다. $1&amp;lt;a&amp;lt;3$ 일 때는 하나의 선인 것을 보아 $x_N$ 은 하나의 고정점에서 머무르고</description>
    </item>
    
    <item>
      <title>슈발치언 도함수</title>
      <link>https://freshrimpsushi.github.io/posts/schwarzian-derivative/</link>
      <pubDate>Wed, 17 Apr 2019 00:00:00 +0000</pubDate>
      
      <guid>https://freshrimpsushi.github.io/posts/schwarzian-derivative/</guid>
      <description>정의1 $p$ 가 스무스한 맵 $f : \mathbb{R} \to \mathbb{R}$ 의 고정점 혹은 피리어딕 포인트라고 하자. $f&#39;(c) = 0$ 인 $c$ 를 $f$ 의 크리티컬 포인트Critical Point 라고 한다. $p$ 의 베이신이 길이가 무한한 인터벌을 포함하면 인피닛 베이신Infinite Basin 이라고 한다. $\displaystyle S(f)(x) := {{f&#39;&#39;&#39;(x) } \over { f&#39;(x) }} - {{3} \over {2}} \left( {{f&#39;&#39;&#39;(x) } \over { f&#39;(x) }} \right)^2$ 를 $f$ 의 슈발치언 도함수 라고 한다. $f&#39;(x) \ne 0$ 인 모든 $x$ 에 대해 $S(f)(x)</description>
    </item>
    
    <item>
      <title>카오스 이론에서 맵들의 컨쥬게이트</title>
      <link>https://freshrimpsushi.github.io/posts/conjugate-of-maps-in-chaos-theory/</link>
      <pubDate>Tue, 09 Apr 2019 00:00:00 +0000</pubDate>
      
      <guid>https://freshrimpsushi.github.io/posts/conjugate-of-maps-in-chaos-theory/</guid>
      <description>개요 카오스 이론에서 맵의 컨쥬게이트는 일종의 아이소메트리, 아이소멀피즘, 호메오몰피즘과 비슷한 개념이며, 완전히 같지는 않더라도 용도는 정확히 같다. 수학에서 하는 일이 다 그렇듯, 계산이 쉬운 곳에서 어떤 성질이 있음을 확인한 후 실제로 증명이 필요한 곳으로 그 성질을 보존 시키는 것이다. 정의1 $X$ 에서 정의된 두 맵 $f, g : X \to X$ 에 대해 $C \circ f =</description>
    </item>
    
    <item>
      <title>로지스틱 패밀리</title>
      <link>https://freshrimpsushi.github.io/posts/logistic-family/</link>
      <pubDate>Sun, 07 Apr 2019 00:00:00 +0000</pubDate>
      
      <guid>https://freshrimpsushi.github.io/posts/logistic-family/</guid>
      <description>정의 1 $a \ge 0$ 에 대해 $g_{a} (x) = a x ( 1 - x )$ 를 로지스틱 맵Logistic Map이라고 하고 $\left\{ g_{a} \mid a &amp;gt; 0 \right\} $ 을 로지스틱 패밀리Logistic Family라고 한다. 성질 [1]: $x \in [0,1] \iff g_{a} (x) \ge 0$ [2]: $g&#39;_{a} (x) = a ( 1 - 2x)$ [3]: $1 &amp;lt; a \le 4$ 이면 $\displaystyle x_{1} = {{ a - 1} \over { a }}$ 는 $g_{a} (x)$ 의 고정점이다. [4]: $1 &amp;lt; a &amp;lt; 3$ 이면 $$ \lim_{ k \to \infty} f^{k} (x) = x_{1} = {{a-1} \over {a}} $$ 설명 로</description>
    </item>
    
    <item>
      <title>샤르코우스키 정리</title>
      <link>https://freshrimpsushi.github.io/posts/sharkovskiis-theorem/</link>
      <pubDate>Sat, 06 Apr 2019 00:00:00 +0000</pubDate>
      
      <guid>https://freshrimpsushi.github.io/posts/sharkovskiis-theorem/</guid>
      <description>정리 1 $$ 3 \prec 5 \prec 7 \prec 9 \prec \cdots \prec \\ 2\cdot 3 \prec 2 \cdot 5 \prec \cdots \prec \\ 2^2 3 \prec 2^2 5 \prec \cdots \prec \\ 2^3 3 \prec 2^3 5^2 \prec \cdots \prec \\ 2^3 \prec 2^2 \prec 2^1 \prec 2^0 $$ 추이적 관계 $\prec$ 에 대해 위와 같은 순서를 샤르코우스키 오더링 이라고 한다. 연속 맵 $f : \mathbb{R} \to \mathbb{R}$ 이 피리어딕-$p$ 오빗을 갖는다고 하자. $p \prec q$ 면 $f$ 는 피리어딕-$q$ 오빗을 갖는다. 설명 샤르코우스키 정리Sharkovski</description>
    </item>
    
    <item>
      <title>리-요크 정리 증명</title>
      <link>https://freshrimpsushi.github.io/posts/proof-of-li-yorke-theorem/</link>
      <pubDate>Fri, 05 Apr 2019 00:00:00 +0000</pubDate>
      
      <guid>https://freshrimpsushi.github.io/posts/proof-of-li-yorke-theorem/</guid>
      <description>정리 연속 맵 $f: [a,b] \to [a,b]$ 의 피리어딕-$3$ 오빗이 존재하면 $f$ 는 캐어릭하다. 설명 리-요크 정리Li-Yorke Theorem는 삼주기 정리Period-$3$ Theorem 라고도 불리며, 피리어딕-$3$ 가 혼돈을 야기한다는 스테이트먼트 자체로도 많이 언급된다. 물론 이 정리만 보면 $1$차원 맵에 한정되어 있지만 고작 피리어딕-$3$ 오빗의 존</description>
    </item>
    
    <item>
      <title>1차원 맵의 혼돈, 카오스</title>
      <link>https://freshrimpsushi.github.io/posts/chaos-of-one-dimensional-map/</link>
      <pubDate>Thu, 04 Apr 2019 00:00:00 +0000</pubDate>
      
      <guid>https://freshrimpsushi.github.io/posts/chaos-of-one-dimensional-map/</guid>
      <description>정의 캐어릭 오빗1 맵 $f : \mathbb{R} \to \mathbb{R}$ 의 바운디드 오빗 $\left\{ x_{1} , x_{2} , \cdots \right\} $ 이 다음을 만족하면 이 오빗을 캐어릭Chaotic하다고 한다. (i) 어심토티컬리 피리어딕이 아니다. (ii) $h (x_{1} ) &amp;gt; 0$ 바운디드 오빗이란 모든 $n \in \mathbb{N}$ 에 대해 $|x_{n} | &amp;lt; M$ 을 만족하는 $M \in \mathbb{R}$ 이 존재한다는 뜻이다. $h(x_{1} )$ 은 랴푸노프 지수를 말한다. 캐어릭 맵 모든 $n \in \mathbb{N}$ 에 대해 피리어딕-$n</description>
    </item>
    
    <item>
      <title>1차원 맵의 랴푸노프 수</title>
      <link>https://freshrimpsushi.github.io/posts/lyapunov-number-of-one-dimensional-map/</link>
      <pubDate>Wed, 03 Apr 2019 00:00:00 +0000</pubDate>
      
      <guid>https://freshrimpsushi.github.io/posts/lyapunov-number-of-one-dimensional-map/</guid>
      <description>정의1 스무스한 $1$차원 맵 $f : \mathbb{R} \to \mathbb{R}$ 의 한 오빗 $\left\{ x_{1} , x_{2} , x_{3} , \cdots \right\} $ 에 대해 $$L ( x_{1} ) : = \lim_{ n \to \infty } \left( \prod_{i = 1}^{n} | f&#39; (x_{i} ) | \right)^{1/n}$$ 을 랴푸노프 수Lyapunov Number 라고 하고 $$ h ( x_{1} ) := \lim_{n \to \infty } {{1} \over {n}} \sum_{i=1}^{n} \ln | f&#39; (x_{i} ) |$$ 을 랴푸노프 지수Lyapunov Exponent 라고 한다. 설명 싱크와 소스의 개념을 다시금 생각해보면 싱크란 가까운 곳의 점이 모여드는 일</description>
    </item>
    
    <item>
      <title>맵 시스템의 오빗</title>
      <link>https://freshrimpsushi.github.io/posts/orbit-of-map-system/</link>
      <pubDate>Tue, 02 Apr 2019 00:00:00 +0000</pubDate>
      
      <guid>https://freshrimpsushi.github.io/posts/orbit-of-map-system/</guid>
      <description>정의1 맵 $ f : X \to X$ 와 $p \in X$ 에 대해 $f^{k} (p) = p$ 를 만족하는 가장 작은 자연수가 $k \in \mathbb{N}$ 라고 하자. 맵 $f : X \to X$ 와 점 $x \in X$ 에 대해 집합 $\left\{ x , f(x) , f^{2} , \cdots \right\} $ 를 $f$ 하에서 $x$ 의 오빗Orbit 이라고 한다. 이 때 $x$ 를 오빗의 초기값Initial Value 이라고 한다. 초기값 $p$ 를 가지는 오빗 $\left\{ p , f (p) , f^{2} (p) , \cdots \right\}$ 을 피리어딕-$k$ 오빗 이라 하고, $p$</description>
    </item>
    
    <item>
      <title>1차원 맵의 싱크와 소스 판정법</title>
      <link>https://freshrimpsushi.github.io/posts/sink-and-source-of-one-dimensional-map/</link>
      <pubDate>Mon, 01 Apr 2019 00:00:00 +0000</pubDate>
      
      <guid>https://freshrimpsushi.github.io/posts/sink-and-source-of-one-dimensional-map/</guid>
      <description>정리1 스무스한 맵 $f : \mathbb{R} \to \mathbb{R}$ 에 대해 어떤 $p \in \mathbb{R} $ 가 고정점이라고 하자. [1] $| f&#39; (p) | &amp;lt; 1$ 이면 $p$ 는 싱크다. [2] $| f&#39; (p) | &amp;gt; 1$ 이면 $p$ 는 소스다. 예시 $1$차원 맵의 예로써 $f(x) = x^3$ 을 생각해보면 $f&#39;(x) = 3x^{2}$ 이므로 고정점 $f(0) = 0$ 은 싱크, $f(1) = 1$ 은 소스임을 쉽게 확인할 수 있다. 증명 정리 [1]의 증명 $a \in \left( | f&#39;(p) | , 1 \right) $ 이라고 하자. $$ \lim_{x \to p} {{ | f(x) -</description>
    </item>
    
    <item>
      <title>로렌츠 끌개</title>
      <link>https://freshrimpsushi.github.io/posts/lorenz-attractor/</link>
      <pubDate>Tue, 19 Feb 2019 00:00:00 +0000</pubDate>
      
      <guid>https://freshrimpsushi.github.io/posts/lorenz-attractor/</guid>
      <description>개요 로렌츠 방정식Lorenz Equation이란 대기의 대류를 연립 상미분 방정식으로써 표현하는 수학적 모델이다. 시스템 $$ \begin{align*} {{dx} \over {dt}} &amp;amp;= - \sigma x + \sigma y \\ {{dy} \over {dt}} &amp;amp;= - xz + \rho x - y \\ {{dz} \over {dt}} &amp;amp;= xy - \beta z \end{align*} $$ 변수 $x(t)$: $t$ 시점에서 입자의 $x$ 좌표를 나타낸다. $y(t)$: $t$ 시점에서 입자의 $y$ 좌표를 나타낸다. $z(t)$: $t$ 시점에서 입자의 $z$ 좌표를 나타낸다. 파라메</description>
    </item>
    
    <item>
      <title>동역학계와 맵과 고정점</title>
      <link>https://freshrimpsushi.github.io/posts/dynamic-system-map-fixed-point/</link>
      <pubDate>Sat, 09 Feb 2019 00:00:00 +0000</pubDate>
      
      <guid>https://freshrimpsushi.github.io/posts/dynamic-system-map-fixed-point/</guid>
      <description>정의1 정의역과 공역이 같은 함수 $f : X \to X$ 를 맵Map이라고 한다. $f$ 를 $k$ 번 합성한 맵을 $f^{k}$ 와 같이 나타낸다. $f(p) = p$ 를 만족하는 $p \in X$ 를 고정점Fixed Point이라고 한다. 모든 $x \in N_{ \epsilon } ( p ) $ 에 대해 $\displaystyle \lim_{k \to \infty} f^{k} (x) = p$ 를 만족하는 $\epsilon &amp;gt; 0$ 이 존재하면 고정점 $p$ 를 싱크Sink 라고 한다. $p$ 를 제외한 모든 $x \in N_{\epsilon } (p)$ 에 대해 $f^{ \infty } (x) \notin</description>
    </item>
    
  </channel>
</rss>
