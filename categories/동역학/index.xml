<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>동역학 on 생새우초밥집</title>
    <link>https://freshrimpsushi.github.io/categories/%EB%8F%99%EC%97%AD%ED%95%99/</link>
    <description>Recent content in 동역학 on 생새우초밥집</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>ko</language>
    <lastBuildDate>Mon, 30 Aug 2021 00:00:00 +0000</lastBuildDate><atom:link href="https://freshrimpsushi.github.io/categories/%EB%8F%99%EC%97%AD%ED%95%99/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>페이즈 포트레이트</title>
      <link>https://freshrimpsushi.github.io/posts/phase-portrait/</link>
      <pubDate>Mon, 30 Aug 2021 00:00:00 +0000</pubDate>
      
      <guid>https://freshrimpsushi.github.io/posts/phase-portrait/</guid>
      <description>정의 1 $$ O \left( x_{0} \right) := \left\{ x \in X : x = \varphi^{t} x_{0} , \forall t \in T \right\} $$ 동역학계 $\left( T, X, \varphi^{t} \right)$ 에서 $x_{0} \in X$ 의 오빗Orbit을 위와 같이 나타낸다고 하자. 오빗들로 이루어진 $X$ 의 분할을 동역학계의 페이즈 포트레이트Phase Portrait라 한다. 설명 Phase Portrait를 어거지로 번역하면 위상 초상 정도가 될 수 있겠으나 의미전달이 안 되고 용례가 없어도</description>
    </item>
    
    <item>
      <title>동역학계의 엄밀한 정의</title>
      <link>https://freshrimpsushi.github.io/posts/definition-of-dynamic-system/</link>
      <pubDate>Tue, 24 Aug 2021 00:00:00 +0000</pubDate>
      
      <guid>https://freshrimpsushi.github.io/posts/definition-of-dynamic-system/</guid>
      <description>정의 1 (상태) 공간 $X$ 와 시점 $t \in T$ 에 대해 오퍼레이터 $\varphi^{t}$ 를 플로우Flow라 한다. 플로우의 집합 $F := \left\{ \varphi^{t} \right\}_{t \in T}$ 이 함수합성 연산 $\circ$ 에 대해 $\left( F , \circ \right)$ 가 다음을 만족시키는 그룹이면 트리플 $\left( T, X, \varphi^{t} \right)$ 를 동역학계Dynamic System라 한다. $$ \begin{align*} \varphi^{0} =&amp;amp; \text{id} \\ \varphi^{t+s} =&amp;amp; \varphi^{t} \circ \varphi^{s} \end{align*} $$ 설명 주로 $T = \mathbb{Z}$ 일 때는 맵, $T = \mathbb{R}$ 일 때는 미분방정식으로 표현될</description>
    </item>
    
    <item>
      <title>수학에서의 질량 작용 법칙</title>
      <link>https://freshrimpsushi.github.io/posts/law-of-mass-action/</link>
      <pubDate>Wed, 21 Jul 2021 00:00:00 +0000</pubDate>
      
      <guid>https://freshrimpsushi.github.io/posts/law-of-mass-action/</guid>
      <description>법칙 1 화학반응의 정도는 반응에 관여하는 각종 분자수에 같은 힘을 야기하는 물질의 농도에 비례한다. 설명 2 수리적 모델링에서 질량 작용 법칙Law of Mass Action은 법칙이라는 이름이 무색하지 않을만큼 일상적으로 사용된다. 가령 두가지 물질 $A$, $B$ 가 만나 $k$ 만큼의 반응속도로 작용해 $C$ 가 생겨난다고 생각해보자. $$ A + B \overset{k}{\to} C $$ 질량 작용 법칙에 따</description>
    </item>
    
    <item>
      <title>에이즈 전염 모델</title>
      <link>https://freshrimpsushi.github.io/posts/aids-infection-model/</link>
      <pubDate>Sat, 17 Jul 2021 00:00:00 +0000</pubDate>
      
      <guid>https://freshrimpsushi.github.io/posts/aids-infection-model/</guid>
      <description>개요 에이즈AIDS, 후천면역결핍증후군은 바이러스인 HIV에 의해 발병하며 수십년간 인류를 괴롭혀오고 있는 전염병이다. 에이즈의 전파 경로는 동성애, 이성애, 약물 사용 등으로 다양하며 그에 대한 수학적 모델링은 전체 인구의 구조를 포함하지 않을 수가 없다. 그러나 우선은 가장 단순하게 카스티요Castillo, 카베즈Chavez 등에 의</description>
    </item>
    
    <item>
      <title>푸앙카레 맵</title>
      <link>https://freshrimpsushi.github.io/posts/poincare-map/</link>
      <pubDate>Thu, 01 Jul 2021 00:00:00 +0000</pubDate>
      
      <guid>https://freshrimpsushi.github.io/posts/poincare-map/</guid>
      <description>정의 1 유클리드 공간 $\mathbb{R}^{n}$ 와 오픈 셋 $U \subset \mathbb{R}^{n}$ 에서 $r$번 미분가능한 함수 $f : U \to \mathbb{R}^{n}$ 에 대해 다음과 같은 벡터 필드가 미분 방정식으로 주어져 있다고 하자. $$ x&#39; = f(x) $$ 그 플로우를 $\phi_t \left( \cdot \right)$ 와 같이 나타내고 벡터 필드를 가로지르는 $n-1$차원 곡면 $\Sigma$ 를 생각해보자. 오픈 셋 $V \subset \Sigma$ 에 대해 다음과 같은 맵 $P$ 를 푸앙카레 맵Poincaré Map이라 한다.</description>
    </item>
    
    <item>
      <title>종간 전염 모델: 3개 집단 간의 질병 전파</title>
      <link>https://freshrimpsushi.github.io/posts/host-vector-host-model/</link>
      <pubDate>Mon, 07 Jun 2021 00:00:00 +0000</pubDate>
      
      <guid>https://freshrimpsushi.github.io/posts/host-vector-host-model/</guid>
      <description>개요 종간 장벽Species Barrier이란 감염원이 종래의 숙주에서 다른 종에 전염되기 어려운 현상을 말한다. 이러한 종간 장벽을 뛰어넘어 병이 전염되는 것을 종간 전염Cross-species Transmission이라 부르는데, 이를 수학적으로 모델링한 호스트-벡터-호스트 모델Host-vector-host mode</description>
    </item>
    
    <item>
      <title>성병 모델: 2개 집단 간의 질병 전파</title>
      <link>https://freshrimpsushi.github.io/posts/venereal-disease-model/</link>
      <pubDate>Thu, 03 Jun 2021 00:00:00 +0000</pubDate>
      
      <guid>https://freshrimpsushi.github.io/posts/venereal-disease-model/</guid>
      <description>개요 쿡Cooke과 요크Yorke에 의해 제안된 성병 전파의 수학적 모델에 대해 알아본다. 레퍼런스에서는 성병의 구체적인 예로써 임질Gonorrhea을 고려했다. 모델 1 $$ \begin{align*} {{d S_{1}} \over {d t}} =&amp;amp; - \beta_{12} S_{1} I_{2} + \gamma_{1} I_{1} \\ {{d I_{1}} \over {d t}} =&amp;amp; \beta_{12} S_{1} I_{2} - \gamma_{1} I_{1} \\ {{d S_{2}} \over {d t}} =&amp;amp; - \beta_{21} S_{2} I_{1} + \gamma_{2} I_{2} \\ {{d I_{2}} \over {d t}} =&amp;amp; \beta_{21} S_{2} I_{1} - \gamma_{2} I_{2} \end{align*} $$ 변수 $S_{k}(t)$: $t$ 시점에서 병에 걸릴 수 있는S</description>
    </item>
    
    <item>
      <title>SIS 모델: 재감염과 고질병</title>
      <link>https://freshrimpsushi.github.io/posts/sis-model-reinfection-and-endemic/</link>
      <pubDate>Sun, 30 May 2021 00:00:00 +0000</pubDate>
      
      <guid>https://freshrimpsushi.github.io/posts/sis-model-reinfection-and-endemic/</guid>
      <description>개요 SIS 모델은 전염이나 정보의 확산에서 면역, 무관심 등을 고려하지 않는 모델이다. 주로 유행병Epidemic이 아닌 풍토병Endemic, 예를 들어 감기, 독감, 성병, 말라리아 등이 SIS 로 모델링될 수 있다. 모델 1 $$ \begin{align*} {{d S} \over {d t}} =&amp;amp; - {{ \beta } \over { N }} I S + \gamma I \\ {{d I} \over {d t}} =&amp;amp; {{ \beta } \over { N }} S I - \gamma I \end{align*} $$ 변수 $S(t)$: $t$ 시점에서 병에 걸릴 수</description>
    </item>
    
    <item>
      <title>SIR 모델: 가장 기본적인 확산 모델</title>
      <link>https://freshrimpsushi.github.io/posts/sir-model-most-basic-epdemic-spreading-model/</link>
      <pubDate>Mon, 24 May 2021 00:00:00 +0000</pubDate>
      
      <guid>https://freshrimpsushi.github.io/posts/sir-model-most-basic-epdemic-spreading-model/</guid>
      <description>개요 SIR 모델은 가장 간단하고 수많은 변형이 있는 역학 구획 모델로써, 질병이나 정보 등의 확산 자체를 간단하면서도 직관적으로 잘 설명한다. 모델 1 $$ \begin{align*} {{d S} \over {d t}} =&amp;amp; - {{ \beta } \over { N }} I S \\ {{d I} \over {d t}} =&amp;amp; {{ \beta } \over { N }} S I - \mu I \\ {{d R} \over {d t}} =&amp;amp; \mu I \end{align*} $$ 변수 $S(t)$: $t$ 시점에서 병에 걸릴 수 있는Susceptible 집단의 개체수를 나타낸다. $I(t)$: $t$</description>
    </item>
    
    <item>
      <title>전염병 확산 모델에서 기초감염재생산수란?</title>
      <link>https://freshrimpsushi.github.io/posts/what-is-basic-reproduction-number-in-epidemic-spreading-model/</link>
      <pubDate>Thu, 20 May 2021 00:00:00 +0000</pubDate>
      
      <guid>https://freshrimpsushi.github.io/posts/what-is-basic-reproduction-number-in-epidemic-spreading-model/</guid>
      <description>정의 기초감염재생산수Basic Reproduction Number $\mathcal{R}_{0}$ 는 전염병이 확산되는 속도를 나타낸 값으로써, 기본적으로 한 명의 감염자가 얼마나 감염시킬지에 대한 기대값로 표현된다. 역학 구획 모델 1 미분방정식으로 표현된 동역학계에서는 자코비안 행렬의 실수부가 가장 큰 고유값을 $\mathcal{R}_{0}$ 이라 한다. 설명 정의만 읽어보면 무슨 소린지 이해하기 어렵지만 구체적인 값으로 생각해</description>
    </item>
    
    <item>
      <title>역학 구획 모델</title>
      <link>https://freshrimpsushi.github.io/posts/compartmental-model-in-epidemiology/</link>
      <pubDate>Wed, 12 May 2021 00:00:00 +0000</pubDate>
      
      <guid>https://freshrimpsushi.github.io/posts/compartmental-model-in-epidemiology/</guid>
      <description>개요 1 역학 구획 모델은 전염병의 창궐에 대한 모델로써, 인구 동역학에 전염병을 가미하고 &amp;lsquo;인구&amp;rsquo;을 몇가지 구획Compartmental으로 나눈다. 역학疫學, Epidemiology이란 전염병을 다루는 학문으로써, 생새우초밥집에서 다루는 역학力學, Mechanics과는 관계가 없다. 설명 커맥Ke</description>
    </item>
    
    <item>
      <title>일제사격 전투 모델</title>
      <link>https://freshrimpsushi.github.io/posts/salvo-combat-model/</link>
      <pubDate>Thu, 22 Apr 2021 00:00:00 +0000</pubDate>
      
      <guid>https://freshrimpsushi.github.io/posts/salvo-combat-model/</guid>
      <description>개요 란체스터 법칙이 근대전과 현대전의 양상을 묘사하는 모델이라면, 일제사격 전투 모델은 현대전 중에서도 특히 스케일이 큰 함대전을 묘사한다. 함대전에서 공격의 수단은 미사일과 같이 크고 강력한 것들이 많으며, 반대로 이런 미사일을 요격하는 미사일도 있다는 점이 다르다. 모델1 $$ \begin{align*} \Delta A =&amp;amp; - { { 1 } \over { H_{A} } } \left( O_{B} B - D_{A} A \right) \\ \Delta B =&amp;amp; - { { 1</description>
    </item>
    
    <item>
      <title>란체스터 법칙</title>
      <link>https://freshrimpsushi.github.io/posts/lanchester-laws/</link>
      <pubDate>Sun, 18 Apr 2021 00:00:00 +0000</pubDate>
      
      <guid>https://freshrimpsushi.github.io/posts/lanchester-laws/</guid>
      <description>법칙 제1법칙 근대전 혹은 근접전투에서 전투력은 부대 규모에 비례한다. 제2법칙 현대전 혹은 원거리전투에서는 전투력은 부대 규모의 제곱에 비례한다. 설명 란체스터 법칙Lanchester&amp;rsquo;s Laws은 두 집단의 전투에서 사상자의 수에 대한 법칙으로, 제1법칙(선형 법칙)과 제2법칙(제곱 법칙)으로 서술된다. 선형 법칙:</description>
    </item>
    
    <item>
      <title>메이-레너드 경쟁 모델</title>
      <link>https://freshrimpsushi.github.io/posts/may-leonard-competition-model/</link>
      <pubDate>Mon, 12 Apr 2021 00:00:00 +0000</pubDate>
      
      <guid>https://freshrimpsushi.github.io/posts/may-leonard-competition-model/</guid>
      <description>개요 메이-레너드 경쟁 모델은 세 가지 집단이 포함된 경쟁 상태에서의 인구 동역학 모델로, 세 집단이 서로 먹고 먹히는 삼각 관계를 묘사한다. 세 개의 당이나 기업, 혹은 실제로 상성이 있는 경쟁이 될 수도 있다. 모델1 $$ \begin{align*} x_{1}&#39; =&amp;amp; x_{1} \left( 1 - x_{1} - b x_{2} - a x_{3} \right) \\ x_{2}&#39; =&amp;amp; x_{2} \left( 1 - a x_{1} - x_{2} - b x_{3} \right) \\ x_{3}&#39; =&amp;amp; x_{3} \left( 1 - b x_{1} - a x_{2} - x_{3} \right) \end{align*} $$ 변수 $x_{1}(t)$: $t$ 시점에서 집단 $x_{1}$ 의</description>
    </item>
    
    <item>
      <title>롯카-볼테라 경쟁 모델</title>
      <link>https://freshrimpsushi.github.io/posts/competitive-lotka-volterra-equations/</link>
      <pubDate>Sun, 04 Apr 2021 00:00:00 +0000</pubDate>
      
      <guid>https://freshrimpsushi.github.io/posts/competitive-lotka-volterra-equations/</guid>
      <description>개요 롯카-볼테라 경쟁 모델은 두 집단 사이의 경쟁적 배제 원리Principle of Competitive Exclusion을 설명할 수 있는 모델로써, 특히 두 집단이 서로를 견제하는 상황을 묘사한다. 이를테면 같은 목초지를 공유하는 토끼와 양의 관계나 두 라이벌 부족의 살육전 등에 대해 적용될 수 있다. 모델1 $$ \begin{align*} x_{1}&#39; =&amp;amp; r_{1} x_{1} {{ K_{1} - x_{1} - \beta_{12} x_{2} } \over { K_{1} }} \\ x_{2}&#39; =&amp;amp; r_{2} x_{2} {{ K_{2}</description>
    </item>
    
    <item>
      <title>롯카-볼테라 포식자-피식자 모델</title>
      <link>https://freshrimpsushi.github.io/posts/lotka-volterra-predator-prey-model/</link>
      <pubDate>Wed, 31 Mar 2021 00:00:00 +0000</pubDate>
      
      <guid>https://freshrimpsushi.github.io/posts/lotka-volterra-predator-prey-model/</guid>
      <description>개요 롯카-볼테라 포식자-식식자 모델은 종간의 상호작용을 시스템으로써 모델링하며, 특히 포식자-피식자 모델은 두 종의 포식관계를 나타낸다. 두 종에 대해서만 다루면 그 확장은 끝이 없기 때문에 먹이사슬을 표현하기엔 충분하다. 모델1 $$ \begin{align*} x&#39; =&amp;amp; a x - b y \cdot x \\ y&#39; =&amp;amp; c x \cdot y - d y \end{align*} $$ 변수 $x(t)$: $t$ 시점에서 피식자 집단 $x$ 의 개체수를 나타낸다. $y(t)$:</description>
    </item>
    
    <item>
      <title>바스 확산 모델: 혁신과 모방</title>
      <link>https://freshrimpsushi.github.io/posts/bass-diffusion-model/</link>
      <pubDate>Sat, 06 Feb 2021 00:00:00 +0000</pubDate>
      
      <guid>https://freshrimpsushi.github.io/posts/bass-diffusion-model/</guid>
      <description>모델 12 $$ N&#39; = \left( p + q {{ N } \over { K }} \right) \left( 1 - {{ N } \over { K }} \right) $$ 변수 $N(t)$: $t$ 시점에서 집단의 개체수를 나타낸다. 파라메터 $K$: 환경 용량Carrying Capacity으로, 집단을 수용할 수 있는 환경의 크기를 묘사한다. 개체수는 환경 용량을 넘어서 성장할 수 없다. $p$: 혁신 계수Coefficient of Innovation 혹은 전역 성장률Global Growth R</description>
    </item>
    
    <item>
      <title>곰페르츠 성장 모델: 시간에 따른 성장 지연</title>
      <link>https://freshrimpsushi.github.io/posts/gompertz-growth-mode/</link>
      <pubDate>Fri, 05 Feb 2021 00:00:00 +0000</pubDate>
      
      <guid>https://freshrimpsushi.github.io/posts/gompertz-growth-mode/</guid>
      <description>모델 1 $$ {{ d N } \over { dt }} = r e^{ - \alpha t} N \qquad, \alpha 0 $$ 변수 $N(t)$: $t$ 시점에서 집단의 개체수를 나타낸다. 파라메터 $r \in \mathbb{R}$ : 고유 성장률Intrinsic Rate of Increase로써, $0$ 보다 크면 성장하고 $0$ 보다 작으면 쇠퇴한다. 번식률Birth Rate $b$ 와 사망률Death Rate $d$ 의 차 $r:=b-d$ 로 정의되기도 한다. $\alpha&amp;gt;0$: 일종의 감쇠율 을 나타내는 상수로, 클수록</description>
    </item>
    
    <item>
      <title>수리생물학에서의 알리 효과</title>
      <link>https://freshrimpsushi.github.io/posts/allee-efect-in-mathematical-biology/</link>
      <pubDate>Thu, 04 Feb 2021 00:00:00 +0000</pubDate>
      
      <guid>https://freshrimpsushi.github.io/posts/allee-efect-in-mathematical-biology/</guid>
      <description>알리 효과란? 1 개체군의 밀도가 낮을 때 인구수가 감소하는 효과를 알리 효과Allee Efect라 한다. 수식적으로는 다음과 같이 모델에서 $N$ 에 대한 함수 $a: \mathbb{R} \to \mathbb{R}$ 를 위로 볼록한 컨벡스 함수로 두어 표현한다. $$ N&#39; = a(N) N $$ 변수 $N(t)$: $t$ 시점에서 집단의 개체수를 나타낸다. 예시 알리 이펙트는 예로써 함수 $a$ 를 다음과 같은 이차함수로 두어서 가정할 수 있다</description>
    </item>
    
    <item>
      <title>격자 모델 시뮬레이션에서의 확산</title>
      <link>https://freshrimpsushi.github.io/posts/diffusion-in-lattice-model-simulation/</link>
      <pubDate>Tue, 02 Feb 2021 00:00:00 +0000</pubDate>
      
      <guid>https://freshrimpsushi.github.io/posts/diffusion-in-lattice-model-simulation/</guid>
      <description>시뮬레이션 이 포스트에서는 격자 공간에서 어떤 성분(Ingredient)의 확산 현상을 모방하려고 한다. 이는 그 동시에 SI 질병 확산 모델의 시뮬레이션이기도 하며, 공간이 제한되어 있다는 점에서 SIR 모델로도 볼 수 있다. 변수 $t$: 현재 턴을 의미한다. $I(t) \in \mathbb{N}$: $t$ 턴에서 확산되고 있는 성분(Ingredient)의 양을 나타낸다. $S(t) \in \mathbb{N}$: $t$ 턴에서</description>
    </item>
    
    <item>
      <title>격자 모델 시뮬레이션 첫걸음: 히트맵으로 나타내기</title>
      <link>https://freshrimpsushi.github.io/posts/tutorial-on-lattice-model-simulation/</link>
      <pubDate>Mon, 01 Feb 2021 00:00:00 +0000</pubDate>
      
      <guid>https://freshrimpsushi.github.io/posts/tutorial-on-lattice-model-simulation/</guid>
      <description>시뮬레이션 코드 리뷰 Step 1. 격자 공간 생성 julia&amp;gt; colormap\_SI = [colorant&amp;quot;#EEEEEE&amp;quot;, colorant&amp;quot;#111111&amp;quot;] julia&amp;gt; row\_size = 5 5 julia&amp;gt; column\_size = 5 5 julia&amp;gt; Random.seed!(3); julia&amp;gt; stage\_lattice = rand([&#39;S&#39;], row\_size, column\_size) 5×5 Array{Char,2}: &#39;S&#39; &#39;S&#39; &#39;S&#39; &#39;S&#39; &#39;S&#39; &#39;S&#39; &#39;S&#39; &#39;S&#39; &#39;S&#39; &#39;S&#39; &#39;S&#39; &#39;S&#39; &#39;S&#39; &#39;S&#39; &#39;S&#39; &#39;S&#39; &#39;S&#39; &#39;S&#39; &#39;S&#39; &#39;S&#39; &#39;S&#39; &#39;S&#39; &#39;S&#39; &#39;S&#39; &#39;S&#39; 위의 코드는 $5 \times 5$ 크기의 빈 격자 공간을 만들고 랜덤한 위치 두 곳을 채운 것이다. 빈 공간은 문자 &#39;S&#39;, 채운 공간은 &#39;I&#39;로 표시되어있다. Step 2. 히트맵으로 플로팅 stage\_lattice[rand(1:row\_size), rand(1:column\_size)] = &#39;I&#39;; stage\_lattice figure = heatmap(reverse(stage\_lattice,dims=1), color=colormap\_SI, xaxis=false,yaxis=false,axis=nothing, size = [400,400], legend</description>
    </item>
    
    <item>
      <title>로지스틱 성장 모델: 집단 성장의 한계</title>
      <link>https://freshrimpsushi.github.io/posts/logistic-growth-model/</link>
      <pubDate>Sat, 23 Jan 2021 00:00:00 +0000</pubDate>
      
      <guid>https://freshrimpsushi.github.io/posts/logistic-growth-model/</guid>
      <description>모델 $$ N&#39; = {{ r } \over { K }} N ( K - N) $$ 변수 $N(t)$: $t$ 시점에서 집단의 개체수를 나타낸다. 파라메터 $r \in \mathbb{R}$ : 고유 성장률Intrinsic Rate of Increase로써, $0$ 보다 크면 성장하고 $0$ 보다 작으면 쇠퇴한다. 번식률Birth Rate $b$ 와 사망률Death Rate $d$ 의 차 $r:=b-d$ 로 정의되기도 한다. $K$: 환경 용량Carrying Capacity으로,</description>
    </item>
    
    <item>
      <title>에이전트 기반 모델 시뮬레이션에서의 사망</title>
      <link>https://freshrimpsushi.github.io/posts/death-in-agent-based-simulation-model/</link>
      <pubDate>Sat, 16 Jan 2021 00:00:00 +0000</pubDate>
      
      <guid>https://freshrimpsushi.github.io/posts/death-in-agent-based-simulation-model/</guid>
      <description>시뮬레이션 이 포스트에서는 생성된 에이전트가 사망하는 액션을 주어 거시적인 관점에서 집단의 역성장을 모방하려고 한다. 이 시뮬레이션에서 공간이나 이동에 관련된 모든 것들은 단지 시각화를 위한 것이며, 실제 목적과는 아무런 관계가 없다. 변수 $t$: 현재 턴을 의미한다. $N(t)$: $t$ 턴에서 에이전트의 수를 나타낸다. 파라메터 $N_{0} \in \mathbb{N}$: 시뮬레이션이 시작할 때 에이</description>
    </item>
    
    <item>
      <title>에이전트 기반 모델 시뮬레이션에서의 번식</title>
      <link>https://freshrimpsushi.github.io/posts/reproduction-in-agent-based-simulation-model/</link>
      <pubDate>Tue, 12 Jan 2021 00:00:00 +0000</pubDate>
      
      <guid>https://freshrimpsushi.github.io/posts/reproduction-in-agent-based-simulation-model/</guid>
      <description>시뮬레이션 이 포스트에서는 생성된 에이전트에게 스스로 복제하는 액션을 주어 거시적인 관점에서 집단의 성장을 모방하려고 한다. 이 시뮬레이션에서 공간이나 이동에 관련된 모든 것들은 단지 시각화를 위한 것이며, 실제 목적과는 아무런 관계가 없다. 변수 $t$: 현재 턴을 의미한다. $N(t)$: $t$ 턴에서 에이전트의 수를 나타낸다. 파라메터 $N_{0} \in \mathbb{N}$: 시뮬레이션이 시작할</description>
    </item>
    
    <item>
      <title>에이전트 기반 시뮬레이션 첫걸음: 산점도로 나타내기</title>
      <link>https://freshrimpsushi.github.io/posts/tutorial-on-agent-based-simulation/</link>
      <pubDate>Fri, 08 Jan 2021 00:00:00 +0000</pubDate>
      
      <guid>https://freshrimpsushi.github.io/posts/tutorial-on-agent-based-simulation/</guid>
      <description>시뮬레이션 코드 리뷰 Step 1. 패키지 로드, 초기값 설정 julia&amp;gt; cd(@\_\_DIR\_\_) # 파일 저장 경로cd(@\_\_DIR\_\_) # 파일 저장 경로 julia&amp;gt; @time using Plots 19.989912 seconds (31.16 M allocations: 1.628 GiB, 4.49% gc Time) julia&amp;gt; @time using Random 0.034412 seconds (33.81 k allocations: 1.722 MiB) julia&amp;gt; @time using Distributions 3.436091 seconds (2.74 M allocations: 156.074 MiB, 0.90% gc Time) julia&amp;gt; @time using LinearAlgebra 0.009646 seconds (1.23 k allocations: 77.531 KiB) julia&amp;gt; N0 = 10 # 초기 인구수 10 julia&amp;gt; gaussian2 = MvNormal([0.0; 0.0], 0.02I) # 2차원 정규분포 IsoNormal( dim: 2 μ: [0.0, 0.0] Σ: [0.02 0.0; 0.0 0.02] ) 위의 코드는 패키</description>
    </item>
    
    <item>
      <title>동역학적 모델 시뮬레이션</title>
      <link>https://freshrimpsushi.github.io/posts/dynamical-model-simulation/</link>
      <pubDate>Mon, 04 Jan 2021 00:00:00 +0000</pubDate>
      
      <guid>https://freshrimpsushi.github.io/posts/dynamical-model-simulation/</guid>
      <description>설명 위의 움짤은 멜서스 성장 모델을 에이전트 기반 시뮬레이션으로 시각화한 것이다. 시뮬레이션Simulation이란 현상을 설명하는 모델을 가상으로 구현해 실험하는 것을 말하며, 동역학적 모델이라는 맥락에서 시뮬레이션은 흔히 다음과 같은 방법들을 말한다: Agent based Model: 에이전트 기반 모델은 거시세계를 모방하는 모델을 각 행위자(에이전트)의 미</description>
    </item>
    
    <item>
      <title>맬서스 성장 모델: 이상적인 집단 성장</title>
      <link>https://freshrimpsushi.github.io/posts/malthusian-growth-model/</link>
      <pubDate>Thu, 31 Dec 2020 00:00:00 +0000</pubDate>
      
      <guid>https://freshrimpsushi.github.io/posts/malthusian-growth-model/</guid>
      <description>모델 $$ N &#39; = rN $$ 변수 $N(t)$: $t$ 시점에서 집단의 개체수를 나타낸다. 파라메터 $r \in \mathbb{R}$ : 고유 성장률Intrinsic Rate of Increase로써, $0$ 보다 크면 성장하고 $0$ 보다 작으면 쇠퇴한다. 번식률Birth Rate $b$ 와 사망률Death Rate $d$ 의 차 $r:=b-d$ 로 정의되기도 한다. 설명 인구 동역학Population Dynamics은 동역학이 수리생물</description>
    </item>
    
    <item>
      <title>라살 불변 원리 증명</title>
      <link>https://freshrimpsushi.github.io/posts/proof-of-lasalle-invariance-principle/</link>
      <pubDate>Sat, 05 Dec 2020 00:00:00 +0000</pubDate>
      
      <guid>https://freshrimpsushi.github.io/posts/proof-of-lasalle-invariance-principle/</guid>
      <description>원리 빌드업 공간 $X$ 와 함수 $f : X \to X$ 에 대해 다음과 같은 벡터 필드가 미분 방정식으로 주어져 있다고 하자. $$ x&#39; = f(x) $$ 플로우 $\phi_t \left( \cdot \right)$ 하에서의 컴팩트 양불변집합을 $\mathcal{M} \subset \mathbb{R}^{n}$ 이라 하자. $\mathcal{M}$ 에서 랴푸노프 함수 $V : \mathcal{M} \to \mathbb{R}$ 가 정의되어 있다고 할 때, 다음의 두 집합을 생각해보자. $$ E := \left\{ x \in \mathcal{M} : V&#39;(x) = 0 \right\} $$ 이 $E$ 에 대해 다음과 같이 정의된 집합 $M$ 을 양불변부</description>
    </item>
    
    <item>
      <title>어트랙팅 셋의 베이신</title>
      <link>https://freshrimpsushi.github.io/posts/basin-of-attracting-set/</link>
      <pubDate>Fri, 04 Dec 2020 00:00:00 +0000</pubDate>
      
      <guid>https://freshrimpsushi.github.io/posts/basin-of-attracting-set/</guid>
      <description>정의 1 공간 $X$ 와 함수 $f,g : X \to X$ 에 대해 벡터 필드, 맵이 다음과 같이 표현된다고 하자. $$ x&#39; = f(x) \\ x \mapsto g(x) $$ $\phi(t, \cdot)$ 은 벡터 필드 $x&#39; = f(x)$ 의 플로우, $g^{n}$ 는 맵 $g$ 를 $n$ 번 취한 맵을 나타내도록 하자.다음과 같이 정의된 집합들을 어트랙팅 셋 $A$ 의 베이신Basin이라고 한다. Vector Field $$\displaystyle \bigcup_{t \le 0} \phi ( t, U )$$ Map $$\displaystyle \bigcup_{n \le 0} g^{n} ( U )$$ 설명 베이신은 우리에게 익숙한 단어가 아</description>
    </item>
    
    <item>
      <title>동역학에서의 어트랙터</title>
      <link>https://freshrimpsushi.github.io/posts/attractor-in-dynamics/</link>
      <pubDate>Tue, 01 Dec 2020 00:00:00 +0000</pubDate>
      
      <guid>https://freshrimpsushi.github.io/posts/attractor-in-dynamics/</guid>
      <description>빌드업 공간 $X$ 와 함수 $f,g : X \to X$ 에 대해 벡터 필드, 맵이 다음과 같이 표현된다고 하자. $$ x&#39; = f(x) \\ x \mapsto g(x) $$ $\phi(t, \cdot)$ 은 벡터 필드 $x&#39; = f(x)$ 의 플로우, $g^{n}$ 는 맵 $g$ 를 $n$ 번 취한 맵을 나타내도록 하자. 넌원더링의 정의1 넌원더링Nonwandering한 점 $x_{0} \in X$ 이 다음의 조건을 만족하면 넌원더링 포인트라 하고, 그 집합을 넌원더링 셋이라 한다. (V): $x_{0}$ 의 모든</description>
    </item>
    
    <item>
      <title>자율 시스템의 오메가 리미트 셋</title>
      <link>https://freshrimpsushi.github.io/posts/omega-limit-set-of-autonomous-system/</link>
      <pubDate>Fri, 27 Nov 2020 00:00:00 +0000</pubDate>
      
      <guid>https://freshrimpsushi.github.io/posts/omega-limit-set-of-autonomous-system/</guid>
      <description>정의 거리 공간 $X$ 와 함수 $f : X \to X$ 에 대해 다음과 같은 벡터 필드가 미분 방정식으로 주어져 있다고 하자. $$ x&#39; = f(x) $$ 이 벡터 필드의 플로우 $\phi ( t, x )$ 와 한 점 $x_{0} \in X$ 에 대해, $t_{i} \to \infty$ 일 때 $$ \phi \left( t_{i} , x_{0} \right) \to x $$ 을 만족하는 시간의 시퀀스 $\left\{ t_{i} \right\} \subset \mathbb{R}$ 이 존재하면 $ x \in X$ 를 $x_{0}$ 의 오메가 리미트 포인트라 한다. $x_{0}$ 의 오메가 리미트 포인트의 집합을 $x_{0}$ 의 오메가 리</description>
    </item>
    
    <item>
      <title>푸앙카레 재귀 정리 증명</title>
      <link>https://freshrimpsushi.github.io/posts/proof-of-poincare-recurrence-theorem/</link>
      <pubDate>Sat, 21 Nov 2020 00:00:00 +0000</pubDate>
      
      <guid>https://freshrimpsushi.github.io/posts/proof-of-poincare-recurrence-theorem/</guid>
      <description>정리 유클리드 공간에서 정의된 다차원 맵 $g : \mathbb{R}^{n} \to \mathbb{R}^{n}$ 이 단사면서 연속이고 $D \subset \mathbb{R}^{n}$ 이 컴팩트 불변 집합, 다시 말해 $g(D) = D$ 라고 하자. 임의의 $\overline{x} \in D$ 의 임의의 근방을 $U$ 라고 하면 어떤 $n \in $ 에 대해 $g^{n} (x) \in U$ 가 되게끔 하는 $x \in U$ 가 존재한다. 설명 스테이트먼트는 단순한데, $D$ 가 컴팩트 불변 집합이면 그 안에서 $U$ 를 잡았을 때 $U$ 에서 잠깐은 벗어날 수 없어도 결국</description>
    </item>
    
    <item>
      <title>동역학에서의 리우빌 정리 증명</title>
      <link>https://freshrimpsushi.github.io/posts/proof-of-liouvilles-theorem-in-dynamics/</link>
      <pubDate>Tue, 17 Nov 2020 00:00:00 +0000</pubDate>
      
      <guid>https://freshrimpsushi.github.io/posts/proof-of-liouvilles-theorem-in-dynamics/</guid>
      <description>정리 유클리드 공간 $\mathbb{R}^{n}$ 과 함수 $f : \mathbb{R}^{n} \to \mathbb{R}^{n}$ 에 대해 다음과 같은 벡터 필드가 미분 방정식으로 주어져 있다고 하자. $$ x&#39; = f(x) $$ 이 벡터 필드의 플로우 $\phi_t ( \cdot )$ 과 영역 $D_{0} \subset \mathbb{R}^{n}$ 에 대해 $D_{t} := \phi_{t} \left( D_{0} \right)$ 를 플로우에 따라 시간 $t$가 지나 옮겨진 영역, 그 볼륨을 $V(t) \equiv V \left( D_{t} \right)$ 와 같이 나타내자. 만약 $\nabla \cdot f = 0$ 면 모든 $D_{0} \subset \mathbb{R}^{n}$ 와 $t \in \mathbb{R}$ 에 대해 다음이 성립한다. $$ V \left( D_{t}</description>
    </item>
    
    <item>
      <title>자율 시스템의 보존량</title>
      <link>https://freshrimpsushi.github.io/posts/conservation-in-autonomous-system/</link>
      <pubDate>Fri, 13 Nov 2020 00:00:00 +0000</pubDate>
      
      <guid>https://freshrimpsushi.github.io/posts/conservation-in-autonomous-system/</guid>
      <description>정의 공간 $X$ 와 함수 $f : X \to X$ 에 대해 다음과 같은 벡터 필드가 미분 방정식으로 주어져 있다고 하자. $$ x&#39; = f(x) $$ 주어진 시스템에 종속된 상수함수 $h : X \to \mathbb{R}$ 가 존재하면 이를 보존량이라 한다. 설명 물리학적, 즉 역학적인(mechanical) 센스에 익숙하다면 보존량이라는 개념은 전혀 낯설지 않을 것이다. 가령 이상적인 상황에서 연직 방향 반대로</description>
    </item>
    
    <item>
      <title>2차원 자율 시스템에선 혼돈이 일어나지 않는다  푸앙카레-벤딕슨 정리 증명</title>
      <link>https://freshrimpsushi.github.io/posts/proof-of-poincare-bendixson-theorem/</link>
      <pubDate>Tue, 03 Nov 2020 00:00:00 +0000</pubDate>
      
      <guid>https://freshrimpsushi.github.io/posts/proof-of-poincare-bendixson-theorem/</guid>
      <description>정리 $2$차원 매니폴드 $\mathcal{P}$ 와 함수 $f,g \in C^{r} \left( \mathcal{P} \right)$ 에 대해 다음과 같은 벡터 필드가 미분 방정식으로 주어져 있다고 하자. $$ x&#39; = f(x,y) \\ y&#39; = g(x,y) $$ $\mathcal{M}$ 이 벡터 필드의 유한한 수의 고정점을 가지는 양불변집합이라고 하면, $p \in \mathcal{M}$ 의 오메가 리미트 셋 $\omega (p)$ 은 다음 세가지 중 하나를 만족한다: (1): $\omega (p)$ 는 홑원소 집합이다. 즉, 단 하나의 고정점만을 포함한다. (2): $\omega (p)$ 는 닫</description>
    </item>
    
    <item>
      <title>2차원 자율 시스템에서 피리어딕 오빗의 부재성</title>
      <link>https://freshrimpsushi.github.io/posts/nonexistence-of-periodic-orbit-of-2-dimensional-autonomous-system/</link>
      <pubDate>Fri, 30 Oct 2020 00:00:00 +0000</pubDate>
      
      <guid>https://freshrimpsushi.github.io/posts/nonexistence-of-periodic-orbit-of-2-dimensional-autonomous-system/</guid>
      <description>피리어딕 오빗에 대한 고찰 보통 자율 시스템에서 피리어딕 오빗이 존재하는지에 대한 질문은 상당히 까다로운데, $1,2$차원 공간이라면 비교적 간단하게 그 부재성에 대해서 논할 수 있다. 공간 $X = \mathbb{R}$ 혹은 $X = \mathbb{R}^{2}$ 와 함수 $f : X \to X$ 에 대해 다음과 같은 벡터 필드가 미분 방정식으로 주어져 있다고 하자. $$ x&#39; = f(x) $$ 1차원 $1$차원 자율 시스템에서는 피리</description>
    </item>
    
    <item>
      <title>벤딕슨 판정법</title>
      <link>https://freshrimpsushi.github.io/posts/bendixsons-criterion/</link>
      <pubDate>Mon, 26 Oct 2020 00:00:00 +0000</pubDate>
      
      <guid>https://freshrimpsushi.github.io/posts/bendixsons-criterion/</guid>
      <description>벤딕슨 판정법 공간 $\mathbb{R}^{2}$ 와 함수 $f,g \in C^{1} \left( \mathbb{R}^{2} \right)$ 에 대해 다음과 같은 벡터 필드가 미분 방정식으로 주어져 있다고 하자. $$ x&#39; = f(x,y) \\ y&#39; = g(x,y) $$ 단순 연결 영역 $D \subset \mathbb{R}^{2}$ 에서 $$ {{ \partial f } \over { \partial x }} + {{ \partial g } \over { \partial y }} \ne 0 $$ 의 부호가 바뀌지 않는다면, 주어진 $2$차 벡터 필드는 $D$ 내부에서 닫힌 오빗을 갖지 않는다. $D \subset \mathbb{R}^{2}$ 이 단순 연결 영역이라는 것은 $D$ 의 테두리</description>
    </item>
    
    <item>
      <title>불변 매니폴드의 안정성</title>
      <link>https://freshrimpsushi.github.io/posts/stability-of-manifold/</link>
      <pubDate>Thu, 22 Oct 2020 00:00:00 +0000</pubDate>
      
      <guid>https://freshrimpsushi.github.io/posts/stability-of-manifold/</guid>
      <description>정의 벡터 필드의 매니폴드1 공간 $\mathbb{R}^{n}$ 와 함수 $f : \mathbb{R}^{n} \to \mathbb{R}^{n}$ 에 대해 다음과 같은 벡터 필드가 미분 방정식으로 주어져 있다고 하자. $$ x&#39; = f(x) $$ 위와 같은 자율 시스템의 고정점 $\overline{x}$ 이 주어져 있다고 할 때, 선형화 행렬 $A := D f \left( \overline{x} \right)$ 의 각 고유값 $\lambda$ 들에 대응되는 고유벡터 $e$ 들을 실수부 $\Re (\lambda)$ 에 따라 다음과 분류하고, 그 생성 $\text{span}$ 을 다음과 같이 나타내자. $$ E^{s} := \text{span} \left\{ e :</description>
    </item>
    
    <item>
      <title>동역학에서의 불변 집합</title>
      <link>https://freshrimpsushi.github.io/posts/invariant-set-in-dynamics/</link>
      <pubDate>Sun, 18 Oct 2020 00:00:00 +0000</pubDate>
      
      <guid>https://freshrimpsushi.github.io/posts/invariant-set-in-dynamics/</guid>
      <description>정의1 공간 $X$ 와 함수 $f,g : X \to X$ 에 대해 벡터 필드, 맵이 다음과 같이 표현된다고 하자. $$ x&#39; = f(x) \\ x \mapsto g(x) $$ $S \subset X$ 라고 하자. (V): $\forall x_{0} \in S$ 가 모든 $t \in \mathbb{R}$ 에 대해 다음을 만족하면 벡터 필드 $x&#39;=f(x)$ 하에서의 불변 집합이라 한다. $$ x(t,x_{0}) \in S $$ (M): $\forall x_{0} \in S$ 가 모든 $n \in \mathbb{Z}$ 에 대해 다음을 만족하면 맵 $x \mapsto g(x)$ 하에서의 불변 집합이라 한다. $$ g^{n} (x_{0}) \in S $$ 불변 집합Inva</description>
    </item>
    
    <item>
      <title>랴푸노프 함수</title>
      <link>https://freshrimpsushi.github.io/posts/liapunov-function/</link>
      <pubDate>Wed, 14 Oct 2020 00:00:00 +0000</pubDate>
      
      <guid>https://freshrimpsushi.github.io/posts/liapunov-function/</guid>
      <description>정의1 공간 $X$ 와 함수 $f : X \to X$ 에 대해 다음과 같은 벡터 필드가 미분 방정식으로 주어져 있다고 하자. $$ x&#39; = f(x) $$ 위와 같은 자율 시스템의 한 점 $x_{0} \in X$ 이 주어져 있다고 할 때, $x_{0}$ 의 네이버후드 $\mathcal{N} \left( x_{0} \right)$ 에서 정의된 스칼라 함수 $V \in C^{1} \left( \mathcal{N} (x_{0}) , \mathbb{R} \right)$ 가 다음의 조건을 만족하면 랴푸노프 함수Liapunov Function라고 한다. (i): $V(x_{0}) = 0$ 이고, $x \ne</description>
    </item>
    
    <item>
      <title>자율 시스템에서 고정점의 분류</title>
      <link>https://freshrimpsushi.github.io/posts/classification-of-fixed-point/</link>
      <pubDate>Sat, 10 Oct 2020 00:00:00 +0000</pubDate>
      
      <guid>https://freshrimpsushi.github.io/posts/classification-of-fixed-point/</guid>
      <description>정의 공간 $X$ 와 함수 $f \in C^{1}(X,X)$ 에 대해 다음과 같은 벡터 필드가 미분 방정식으로 주어져 있다고 하자. $$ x&#39; = f(x) $$ $\overline{x}$ 가 이 자율 시스템의 한 고정점이라 하고 $D f \left( \overline{x} \right)$ 의 아이겐 밸류들을 $\lambda_{1} , \cdots , \lambda_{m}$ 이라 하자. 하이퍼볼릭: 쌍곡 고정점1 Hyperbolic: $D f \left( \overline{x} \right)$ 의 모든 아이겐 밸류들의 실수부가 $0$ 이 아니면 $\overline{x}$ 가 하이퍼볼릭하다고 말한다. $$ \Re \left( \lambda_{1} \right) \ne 0 , \cdots , \Re \left( \lambda_{m} \right)</description>
    </item>
    
    <item>
      <title>더핑 오실레이터</title>
      <link>https://freshrimpsushi.github.io/posts/duffing-oscillator/</link>
      <pubDate>Tue, 06 Oct 2020 00:00:00 +0000</pubDate>
      
      <guid>https://freshrimpsushi.github.io/posts/duffing-oscillator/</guid>
      <description>더핑 방정식1 $$ x&#39;&#39; + \delta x&#39; + \alpha x + \beta x^{3} = \gamma \cos \left( \omega t \right) $$ 변수 $t$: 시간을 나타낸다. $x$: $1$차원 상에서 (이를 테면 입자의) 위치를 나타낸다. $x&#39;$: (입자의) 속도 를 나타낸다 $x&#39;&#39;$: (입자의) 가속도 를 나타낸다. 파라메터 $\delta$: 감쇠(Damping) 를 제어하며, 마찰(Friction)과 비슷한 역할을 한다. $\alpha$: 강성(Stiffness) 를 제</description>
    </item>
    
    <item>
      <title>랴푸노프 안정성과 오빗 안정성</title>
      <link>https://freshrimpsushi.github.io/posts/liapunov-stability-and-orbit-stability/</link>
      <pubDate>Fri, 02 Oct 2020 00:00:00 +0000</pubDate>
      
      <guid>https://freshrimpsushi.github.io/posts/liapunov-stability-and-orbit-stability/</guid>
      <description>정의 랴푸노프 안정성 1 거리 공간 $\left( X , \left\| \cdot \right\| \right)$ 과 함수 $f : X \to X$ 에 대해 다음과 같은 벡터 필드가 미분 방정식으로 주어져 있다고 하자. $$ x&#39; = f(x) $$ $t_{0} \in \mathbb{R}$ 이라 하자. 주어진 미분 방정식의 솔루션 $\overline{x}(t)$ 가 $\varepsilon &amp;gt; 0$ 이 주어질 때마다 $$ \left\| \overline{x} \left( t_{0} \right) - y \left( t_{0} \right) \right\| &amp;lt; \delta \implies \left\| \overline{x}(t) - y(t) \right\| &amp;lt; \varepsilon \qquad , t &amp;gt; t_{0} $$ 를 만족시키는 다른 모든 솔루션 $y(t)$ 에 대해 $\delta ( \varepsilon ) &amp;gt; 0$ 가 존재하</description>
    </item>
    
    <item>
      <title>비선형 시스템의 선형화</title>
      <link>https://freshrimpsushi.github.io/posts/linearization-of-nonlinear-system/</link>
      <pubDate>Mon, 28 Sep 2020 00:00:00 +0000</pubDate>
      
      <guid>https://freshrimpsushi.github.io/posts/linearization-of-nonlinear-system/</guid>
      <description>비선형 시스템의 선형화란? 공간 $\left( X, \left\| \cdot \right\| \right)$ 와 함수 $f : X \to X$ 에 대해 다음과 같은 벡터 필드가 미분 방정식으로 주어져 있다고 하자. $$ x&#39; = f(x) $$ 위와 같은 자율 시스템의 고정점 $\overline{x}$ 이 주어져 있다고 할 때, 그 근방의 안정성을 파악하기 위해서는 선형화라는 방법이 필수적으로 동원된다. 시스템을 전체적으로 보았을 땐 고정점 근처에서는 선형으로 보고 분석하</description>
    </item>
    
    <item>
      <title>자율 시스템의 오빗</title>
      <link>https://freshrimpsushi.github.io/posts/orbit-of-autonomous-system/</link>
      <pubDate>Tue, 22 Sep 2020 00:00:00 +0000</pubDate>
      
      <guid>https://freshrimpsushi.github.io/posts/orbit-of-autonomous-system/</guid>
      <description>정의 공간 $X$ 와 함수 $f : X \to X$ 에 대해 다음과 같은 벡터 필드가 미분 방정식으로 주어져 있다고 하자. $$ x&#39; = f(x) $$ 위와 같은 자율 시스템의 플로우를 $x(t,t_{0},x_{0})$ 와 같이 나타낸다고 하자. 그러면 $x_{0} \in X$ 를 지나는 오빗Orbit$O(x_{0})$ 을 다음과 같이 나타낸다. 1 $$ O(x_{0}) := \left\{ x \in X : x = x(t, t_{0} , x_{0}) \right\} $$ 2. 오빗이 모든 $t \in \mathbb{R}$ 에 대해 다음을 만족시키는 $T &amp;gt;</description>
    </item>
    
    <item>
      <title>자율 시스템의 플로우와 타임-T 맵</title>
      <link>https://freshrimpsushi.github.io/posts/t-map-of-autonomous-system/</link>
      <pubDate>Sun, 15 Mar 2020 00:00:00 +0000</pubDate>
      
      <guid>https://freshrimpsushi.github.io/posts/t-map-of-autonomous-system/</guid>
      <description>정의 1 공간 $X$ 와 함수 $f : X \to X$ 에 대해 다음과 같은 벡터 필드가 미분 방정식으로 주어져 있다고 하자. $$ x&#39; = f(x) $$ 시간 변수 $t$ 와 초기값 $x_{0}$ 에 대한 자율 미분 방정식의 해를 플로우라 하고 $F(t, x_{0})$ 와 같이 나타낸다. 픽스된 단위 시간 $t = T$ 에 대해 $F_{T}(x) := F(T,x)$ 를 타임-$T$ 맵이라 한다. 설명 플로우Flow는 궤적Trajectory 혹은 위상 공간Phase S</description>
    </item>
    
    <item>
      <title>미분방정식으로 표현되는 동역학계와 평형점</title>
      <link>https://freshrimpsushi.github.io/posts/autonomous-system-and-equilibrium-in-dynamics/</link>
      <pubDate>Wed, 11 Mar 2020 00:00:00 +0000</pubDate>
      
      <guid>https://freshrimpsushi.github.io/posts/autonomous-system-and-equilibrium-in-dynamics/</guid>
      <description>정의 1 공간 $V$ 와 함수 $f : V \to V$ 에 대해 다음과 같은 벡터 필드가 미분 방정식으로 주어져 있다고 하자. $$ v&#39; = f(v) $$ 변수 $t$ 를 포함하는 미분 방정식에서 $t$ 가 명시적으로Explicitly 드러나지 않으면 자율 미분 방정식Automonous Differential Equation이라 한다. 상수 함수 $f_{0} (v)$ 가 자율 미분 방정식 $v &#39; = f(v)$ 의 솔루션이면 $f_{0}$ 를 평형점Equ</description>
    </item>
    
    <item>
      <title>어트랙터의 카오스</title>
      <link>https://freshrimpsushi.github.io/posts/chaotic-attractor/</link>
      <pubDate>Sat, 07 Mar 2020 00:00:00 +0000</pubDate>
      
      <guid>https://freshrimpsushi.github.io/posts/chaotic-attractor/</guid>
      <description>빌드업 공간 $X = \left( \mathbb{R}^{n} , \left\| \cdot \right\| \right)$ 와 함수 $f,g : X \to X$ 에 대해 벡터 필드, 맵이 다음과 같이 표현된다고 하자. $$ x&#39; = f(x) \\ x \mapsto g(x) $$ $\phi(t, \cdot)$ 은 벡터 필드 $x&#39; = f(x)$ 의 플로우, $g^{n}$ 는 맵 $g$ 를 $n$ 번 취한 맵을 나타내고, $\Lambda \subset X$ 가 $\phi(t, \cdot)$ 혹은 $g(\cdot)$ 하에서 불변 컴팩트 집합이라고 하자. $\phi(t,x)$ 혹은 $g(x)$ 가 $\Lambda$ 에서 초기값에 민감하다Sensitive Dependence on Initial Conditions는 것</description>
    </item>
    
    <item>
      <title>다차원 맵의 카오스</title>
      <link>https://freshrimpsushi.github.io/posts/chaos-of-multi-dimensional-map/</link>
      <pubDate>Fri, 14 Feb 2020 00:00:00 +0000</pubDate>
      
      <guid>https://freshrimpsushi.github.io/posts/chaos-of-multi-dimensional-map/</guid>
      <description>정의1 맵 $f : \mathbb{R}^{m} \to \mathbb{R}^{m}$ 의 바운디드 오빗 $\left\{ \mathbb{v}_{0}, \mathbb{v}_{1}, \cdots \right\}$ 이 다음을 만족하면 이 오빗을 캐어릭Chaotic하다고 한다. (i): 어심토티컬리 피리어딕이 아니다. (ii): 모든 $i = 1,\cdots , m$ 에 대해 $h_{i} ( \mathbb{v}_{0} ) \ne 0$ (iii): $h_{1} ( \mathbb{v}_{0}) &amp;gt; 0$ 오빗이 바운디드라는 말은 모든 $n \in \mathbb{N}_{0}$ 에 대해 $\left\| \mathbb{v}_{n} \right\| &amp;lt; M$ 을 만족하는 $M \in \mathbb{R}$ 이 존재한다는 뜻이다. $h_{i}(\mathbb{v}_{0})$ 은 랴푸노프 지수를 의미한다. 설명 $1$차</description>
    </item>
    
    <item>
      <title>다차원 맵의 랴푸노프 수와 그 수치적 계산법</title>
      <link>https://freshrimpsushi.github.io/posts/lyapunov-number-of-multi-dimensional-map/</link>
      <pubDate>Thu, 06 Feb 2020 00:00:00 +0000</pubDate>
      
      <guid>https://freshrimpsushi.github.io/posts/lyapunov-number-of-multi-dimensional-map/</guid>
      <description>정의 1 스무스 맵 $\mathbb{f} : \mathbb{R}^{m} \to \mathbb{R}^{m}$ 과 초기값 $\mathbb{v}_{0} \in \mathbb{R}^{m}$ 에 대해 $J_{n} := D \mathbb{f}^{n} ( \mathbb{v}_{0}) \in \mathbb{R}^{m \times m}$ 이라고 하자. $k = 1 , \cdots , m$ 에 대해 $m$차원 단위구 $N := \left\{ \mathbb{x} \in \mathbb{R}^{m} : \left\| \mathbb{x} \right\|_{2} = 1 \right\}$ 의 일립소이드 $J_{n} N$ 의 축의 길이 중 $k$ 번째로 긴 축의 길이를 $r_{k}^{(n)}$ 이라고 두자. 이제 $\mathbb{v}_{0}$ 의 $k$ 번째 랴푸노프 수 $L_{k}$ 를 다음과 같이 정의한다. $$ L_{k} := \lim_{n\to\infty} \left( r_{k}^{(n)} \right)^{1/n} $$ $\mathbb{v}_{0}$ 의 $k$ 번째 랴푸노프 지수 는 $h_{k} := \ln L_{k}$ 와 같</description>
    </item>
    
    <item>
      <title>다차원 비선형 맵</title>
      <link>https://freshrimpsushi.github.io/posts/multi-dimensional-nonlinear-map/</link>
      <pubDate>Fri, 24 May 2019 00:00:00 +0000</pubDate>
      
      <guid>https://freshrimpsushi.github.io/posts/multi-dimensional-nonlinear-map/</guid>
      <description>비선형 맵의 정의 맵 $\mathbb{f} : \mathbb{R}^{m} \to \mathbb{R}^{m}$ 이 선형이 아니면 비선형이라 한다. 빌드업 1 어떤 맵이 선형인지 보이는 것은 어렵지만 비선형임을 보이는 것은 쉽고, 선형 문제는 쉽지만 비선형 문제는 어렵다. 이 우주의 거의 모든 것은 비선형이며 비선형은 어렵기 때문에 인간들은 비선형을 선형으로 바꿀 궁리부터 한다. 위 그림에서 주어진 곡선은 분명 휘어있긴 하지만, 아주 작</description>
    </item>
    
    <item>
      <title>다차원 선형 맵</title>
      <link>https://freshrimpsushi.github.io/posts/multi-dimensional-linear-map/</link>
      <pubDate>Mon, 20 May 2019 00:00:00 +0000</pubDate>
      
      <guid>https://freshrimpsushi.github.io/posts/multi-dimensional-linear-map/</guid>
      <description>정의 1 맵 $T_{A} : \mathbb{R}^{m} \to \mathbb{R}^{m}$ 가 모든 $a,b \in \mathbb{R}$ 과 $\mathbb{x}, \mathbb{y} \in \mathbb{R}^{m}$ 에 대해 $$ T_{A} ( a \mathbb{x} + b \mathbb{y} ) = a T_{A} ( \mathbb{x} ) + b T_{A} ( \mathbb{y} ) $$ 를 만족하면 $T_{A}$ 가 선형Linear이라고 한다. $A$ 의 아이겐 밸류들을 $\lambda_{1} , \cdots , \lambda_{m}$ 이라고 하자. 2. $| \lambda_{1} | \ne 1, \cdots , | \lambda_{m} | \ne 1$ 이면 $A$ 가 하이퍼볼릭Hyperbolic하다고 한다. 3. 하이퍼볼릭 $A$ 에 대해 $\begin{cases} | \lambda_{i} | &amp;gt;1 \\ | \lambda_{j} | &amp;lt;1 \end{cases}$ 를 만족하는</description>
    </item>
    
    <item>
      <title>카오틱 트랜지션</title>
      <link>https://freshrimpsushi.github.io/posts/chaotic-transition/</link>
      <pubDate>Thu, 02 May 2019 00:00:00 +0000</pubDate>
      
      <guid>https://freshrimpsushi.github.io/posts/chaotic-transition/</guid>
      <description>정의 시스템이 파라매터의 변화에 따라 카오틱해지거나 카오틱해지지 않는 등의 현상을 카오틱 트랜지션이라 한다. 예시 예로써 로지스틱 패밀리를 생각해보면 $g_{a} = ax (1-x)$ 로 만들어지는 시스템은 파라매터 $a$ 에 따라 달라지는 모습을 보이다가 $a=4$ 일 때 카오틱 오빗을 가짐을 확인할 수 있다. 그러면 그 다음 질문은 바로 &amp;lsquo;$a&amp;gt;4$ 일 때는 어떻게 될 것인가&amp;rsquo;다. 우</description>
    </item>
    
    <item>
      <title>네츄럴 인베리언트 메져</title>
      <link>https://freshrimpsushi.github.io/posts/natural-invariant-measure/</link>
      <pubDate>Mon, 29 Apr 2019 00:00:00 +0000</pubDate>
      
      <guid>https://freshrimpsushi.github.io/posts/natural-invariant-measure/</guid>
      <description>정의 1 카오틱한 동역학계에서 충분히 시간이 지난 뒤의 스테이트를 확률적으로 나타낸 분포함수를 네츄럴 (인베리언트) 메져라 한다. 예시 1 예로써 로지스틱 맵 $g_{4} (x) = 4 x (1 -x)$ 를 생각해보면 카오틱한 시스템이기 때문에 초기값 $x_{0} \in [0,1]$ 만 가지고는 충분히 큰 $N$ 에 대해 $x_{N} = g_{4}^{N} (x_{0})$ 을 전혀 예측할 수 없다. 하지만 이렇게 카오틱한 오빗이 반드시 $[0,1]$ 의 모든 지점에서</description>
    </item>
    
    <item>
      <title>바이퍼케이션 다이어그램</title>
      <link>https://freshrimpsushi.github.io/posts/bifurcation-diagram/</link>
      <pubDate>Sat, 27 Apr 2019 00:00:00 +0000</pubDate>
      
      <guid>https://freshrimpsushi.github.io/posts/bifurcation-diagram/</guid>
      <description>정의 동역학계에서 파라매터의 변화에 따라 나타나는 오빗을 표현한 그림을 바이퍼케이션 다이어그램이라 한다. 예시1 예로써 로지스틱 패밀리를 생각해보면 파라매터 $a$ 의 변화에 따라 충분히 큰 $N$ 에 대해 $x_{N}$ 의 값은 다음 바이퍼케이션 다이어그램의 검은색 범위 안에 포함된다고 예상할 수 있다. $1&amp;lt;a&amp;lt;3$ 일 때는 하나의 선인 것을 보아 $x_N$ 은 하나의 고정점에서 머무르고,</description>
    </item>
    
    <item>
      <title>슈발치언 도함수</title>
      <link>https://freshrimpsushi.github.io/posts/schwarzian-derivative/</link>
      <pubDate>Wed, 17 Apr 2019 00:00:00 +0000</pubDate>
      
      <guid>https://freshrimpsushi.github.io/posts/schwarzian-derivative/</guid>
      <description>정의1 $p$ 가 스무스한 맵 $f : \mathbb{R} \to \mathbb{R}$ 의 고정점 혹은 피리어딕 포인트라고 하자. $f&#39;(c) = 0$ 인 $c$ 를 $f$ 의 크리티컬 포인트Critical Point라 한다. $p$ 의 베이신이 길이가 무한한 인터벌을 포함하면 인피닛 베이신Infinite Basin이라 한다. $\displaystyle S(f)(x) := {{f&#39;&#39;&#39;(x) } \over { f&#39;(x) }} - {{3} \over {2}} \left( {{f&#39;&#39;&#39;(x) } \over { f&#39;(x) }} \right)^2$ 를 $f$ 의 슈발치언 도함수라 한다. $f&#39;(x) \ne 0$ 인 모든</description>
    </item>
    
    <item>
      <title>카오스 이론에서 맵들의 컨쥬게이트</title>
      <link>https://freshrimpsushi.github.io/posts/conjugate-of-maps-in-chaos-theory/</link>
      <pubDate>Tue, 09 Apr 2019 00:00:00 +0000</pubDate>
      
      <guid>https://freshrimpsushi.github.io/posts/conjugate-of-maps-in-chaos-theory/</guid>
      <description>개요 카오스 이론에서 맵의 컨쥬게이트는 일종의 아이소메트리, 아이소멀피즘과 비슷하며, 사실 더 일반적인 동역학의 맥락에서는 호메오멀피즘 그 자체다. 1 교재에 따라 완전히 같지는 않을 수 있지만 용도는 정확히 같다. 수학에서 하는 일이 다 그렇듯, 계산이 쉬운 곳에서 어떤 성질이 있음을 확인한 후 실제로 증명이 필요한 곳으로 그 성질을 보존 시키는 것이다</description>
    </item>
    
    <item>
      <title>로지스틱 패밀리</title>
      <link>https://freshrimpsushi.github.io/posts/logistic-family/</link>
      <pubDate>Sun, 07 Apr 2019 00:00:00 +0000</pubDate>
      
      <guid>https://freshrimpsushi.github.io/posts/logistic-family/</guid>
      <description>정의 1 $a \ge 0$ 에 대해 $g_{a} (x) = a x ( 1 - x )$ 를 로지스틱 맵Logistic Map이라고 하고 $\left\{ g_{a} \mid a &amp;gt; 0 \right\}$ 을 로지스틱 패밀리Logistic Family라고 한다. 성질 [1]: $x \in [0,1] \iff g_{a} (x) \ge 0$ [2]: $g&#39;_{a} (x) = a ( 1 - 2x)$ [3]: $1 &amp;lt; a \le 4$ 이면 $\displaystyle x_{1} = {{ a - 1} \over { a }}$ 는 $g_{a} (x)$ 의 고정점이다. [4]: $1 &amp;lt; a &amp;lt; 3$ 이면 $$ \lim_{ k \to \infty} f^{k} (x) = x_{1} = {{a-1} \over {a}} $$ 설명 로지</description>
    </item>
    
    <item>
      <title>샤르코우스키 정리</title>
      <link>https://freshrimpsushi.github.io/posts/sharkovskiis-theorem/</link>
      <pubDate>Sat, 06 Apr 2019 00:00:00 +0000</pubDate>
      
      <guid>https://freshrimpsushi.github.io/posts/sharkovskiis-theorem/</guid>
      <description>정리 1 $$ 3 \prec 5 \prec 7 \prec 9 \prec \cdots \prec \\ 2\cdot 3 \prec 2 \cdot 5 \prec \cdots \prec \\ 2^2 3 \prec 2^2 5 \prec \cdots \prec \\ 2^3 3 \prec 2^3 5^2 \prec \cdots \prec \\ 2^3 \prec 2^2 \prec 2^1 \prec 2^0 $$ 추이적 관계 $\prec$ 에 대해 위와 같은 순서를 샤르코우스키 오더링이라 한다. 연속 맵 $f : \mathbb{R} \to \mathbb{R}$ 이 피리어딕-$p$ 오빗을 갖는다고 하자. $p \prec q$ 면 $f$ 는 피리어딕-$q$ 오빗을 갖는다. 설명 샤르코우스키 정리Sharkovskii</description>
    </item>
    
    <item>
      <title>리-요크 정리 증명</title>
      <link>https://freshrimpsushi.github.io/posts/proof-of-li-yorke-theorem/</link>
      <pubDate>Fri, 05 Apr 2019 00:00:00 +0000</pubDate>
      
      <guid>https://freshrimpsushi.github.io/posts/proof-of-li-yorke-theorem/</guid>
      <description>정리 연속 맵 $f: [a,b] \to [a,b]$ 의 피리어딕-$3$ 오빗이 존재하면 $f$ 는 캐어릭하다. 설명 리-요크 정리Li-Yorke Theorem는 삼주기 정리Period-$3$ Theorem라도 불리며, 피리어딕-$3$ 가 혼돈을 야기한다는 스테이트먼트 자체로도 많이 언급된다. 물론 이 정리만 보면 $1$차원 맵에 한정되어 있지만 고작 피리어딕-$3</description>
    </item>
    
    <item>
      <title>1차원 맵의 혼돈, 카오스</title>
      <link>https://freshrimpsushi.github.io/posts/chaos-of-one-dimensional-map/</link>
      <pubDate>Thu, 04 Apr 2019 00:00:00 +0000</pubDate>
      
      <guid>https://freshrimpsushi.github.io/posts/chaos-of-one-dimensional-map/</guid>
      <description>정의 캐어릭 오빗1 맵 $f : \mathbb{R} \to \mathbb{R}$ 의 바운디드 오빗 $\left\{ x_{1} , x_{2} , \cdots \right\}$ 이 다음을 만족하면 이 오빗을 캐어릭Chaotic하다고 한다. (i) 어심토티컬리 피리어딕이 아니다. **(ii): $h (x_{1} ) &amp;gt; 0$ 바운디드 오빗이란 모든 $n \in \mathbb{N}$ 에 대해 $|x_{n} | &amp;lt; M$ 을 만족하는 $M \in \mathbb{R}$ 이 존재한다는 뜻이다. $h(x_{1} )$ 은 랴푸노프 지수를 말한다. 캐어릭 맵 모든 $n \in \mathbb{N}$ 에 대해 피리어딕-$n$</description>
    </item>
    
    <item>
      <title>1차원 맵의 랴푸노프 수</title>
      <link>https://freshrimpsushi.github.io/posts/lyapunov-number-of-one-dimensional-map/</link>
      <pubDate>Wed, 03 Apr 2019 00:00:00 +0000</pubDate>
      
      <guid>https://freshrimpsushi.github.io/posts/lyapunov-number-of-one-dimensional-map/</guid>
      <description>정의1 스무스한 $1$차원 맵 $f : \mathbb{R} \to \mathbb{R}$ 의 한 오빗 $\left\{ x_{1} , x_{2} , x_{3} , \cdots \right\}$ 에 대해 $$L ( x_{1} ) : = \lim_{ n \to \infty } \left( \prod_{i = 1}^{n} | f&#39; (x_{i} ) | \right)^{1/n}$$ 을 랴푸노프 수Lyapunov Number라 하고 $$ h ( x_{1} ) := \lim_{n \to \infty } {{1} \over {n}} \sum_{i=1}^{n} \ln | f&#39; (x_{i} ) |$$ 을 랴푸노프 지수Lyapunov Exponent라 한다. 설명 싱크와 소스의 개념을 다시금 생각해보면 싱크란 가까운</description>
    </item>
    
    <item>
      <title>맵 시스템의 오빗</title>
      <link>https://freshrimpsushi.github.io/posts/orbit-of-map-system/</link>
      <pubDate>Tue, 02 Apr 2019 00:00:00 +0000</pubDate>
      
      <guid>https://freshrimpsushi.github.io/posts/orbit-of-map-system/</guid>
      <description>정의1 맵 $f : X \to X$ 와 $p \in X$ 에 대해 $f^{k} (p) = p$ 를 만족하는 가장 작은 자연수가 $k \in \mathbb{N}$ 라고 하자. 맵 $f : X \to X$ 와 점 $x \in X$ 에 대해 집합 $\left\{ x , f(x) , f^{2} , \cdots \right\}$ 를 $f$ 하에서 $x$ 의 오빗Orbit이라 한다. 이 때 $x$ 를 오빗의 초기값Initial Value이라 한다. 초기값 $p$ 를 가지는 오빗 $\left\{ p , f (p) , f^{2} (p) , \cdots \right\}$ 을 피리어딕-$k$ 오빗이라 하고, $p$</description>
    </item>
    
    <item>
      <title>1차원 맵의 싱크와 소스 판정법</title>
      <link>https://freshrimpsushi.github.io/posts/sink-and-source-of-one-dimensional-map/</link>
      <pubDate>Mon, 01 Apr 2019 00:00:00 +0000</pubDate>
      
      <guid>https://freshrimpsushi.github.io/posts/sink-and-source-of-one-dimensional-map/</guid>
      <description>정리1 스무스한 맵 $f : \mathbb{R} \to \mathbb{R}$ 에 대해 어떤 $p \in \mathbb{R}$ 가 고정점이라고 하자. [1] $| f&#39; (p) | &amp;lt; 1$ 이면 $p$ 는 싱크다. [2] $| f&#39; (p) | &amp;gt; 1$ 이면 $p$ 는 소스다. 예시 $1$차원 맵의 예로써 $f(x) = x^3$ 을 생각해보면 $f&#39;(x) = 3x^{2}$ 이므로 고정점 $f(0) = 0$ 은 싱크, $f(1) = 1$ 은 소스임을 쉽게 확인할 수 있다. 증명 정리 [1]의 증명 $a \in \left( | f&#39;(p) | , 1 \right)$ 이라고 하자. $$ \lim_{x \to p} {{ | f(x) - f(p) |</description>
    </item>
    
    <item>
      <title>로렌츠 끌개</title>
      <link>https://freshrimpsushi.github.io/posts/lorenz-attractor/</link>
      <pubDate>Tue, 19 Feb 2019 00:00:00 +0000</pubDate>
      
      <guid>https://freshrimpsushi.github.io/posts/lorenz-attractor/</guid>
      <description>개요 로렌츠 방정식Lorenz Equation이란 대기의 대류를 연립 상미분 방정식으로써 표현하는 수학적 모델이다. 시스템 $$ \begin{align*} {{dx} \over {dt}} =&amp;amp; - \sigma x + \sigma y \\ {{dy} \over {dt}} =&amp;amp; - xz + \rho x - y \\ {{dz} \over {dt}} =&amp;amp; xy - \beta z \end{align*} $$ 변수 $x(t)$: $t$ 시점에서 입자의 $x$ 좌표를 나타낸다. $y(t)$: $t$ 시점에서 입자의 $y$ 좌표를 나타낸다. $z(t)$: $t$ 시점에서 입자의 $z$ 좌표를 나타낸다. 파라메</description>
    </item>
    
    <item>
      <title>맵으로 표현되는 동역학계와 고정점</title>
      <link>https://freshrimpsushi.github.io/posts/dynamic-system-map-fixed-point/</link>
      <pubDate>Sat, 09 Feb 2019 00:00:00 +0000</pubDate>
      
      <guid>https://freshrimpsushi.github.io/posts/dynamic-system-map-fixed-point/</guid>
      <description>정의1 정의역과 공역이 같은 함수 $f : X \to X$ 를 맵Map이라고 한다. $f$ 를 $k$ 번 합성한 맵을 $f^{k}$ 와 같이 나타낸다. 2. $f(p) = p$ 를 만족하는 $p \in X$ 를 고정점Fixed Point이라고 한다. 모든 $x \in N_{ \epsilon } ( p )$ 에 대해 $\displaystyle \lim_{k \to \infty} f^{k} (x) = p$ 를 만족하는 $\epsilon &amp;gt; 0$ 이 존재하면 고정점 $p$ 를 싱크Sink라 한다. $p$ 를 제외한 모든 $x \in N_{\epsilon } (p)$ 에 대해 $f^{ \infty } (x) \notin N_{\epsilon</description>
    </item>
    
  </channel>
</rss>
