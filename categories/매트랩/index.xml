<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>매트랩 on 생새우초밥집</title>
    <link>https://freshrimpsushi.github.io/categories/%EB%A7%A4%ED%8A%B8%EB%9E%A9/</link>
    <description>Recent content in 매트랩 on 생새우초밥집</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>ko</language><atom:link href="https://freshrimpsushi.github.io/categories/%EB%A7%A4%ED%8A%B8%EB%9E%A9/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>매트랩에서 2차원 배열을 히트맵 이미지로 출력하고 저장하는 방법</title>
      <link>https://freshrimpsushi.github.io/how-to-plot-and-save-arrays-as-heatmap-images-in-matlab/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://freshrimpsushi.github.io/how-to-plot-and-save-arrays-as-heatmap-images-in-matlab/</guid>
      <description>줄리아에서 Imagesc imagesc 함수를 쓰면 2차원 배열을 히트맵으로 출력할 수 있다. colorbar는 스케일을 보여주는 컬러바를 같이 출력하는 설정이다. N=2^8; p=phantom(&amp;lsquo;Modified Shepp-Logan&amp;rsquo;,N); figure() imagesc(p) colorbar ![img](2020-12-31164537.png#center) ## 저장 1 `saveas` 함수를 써서 위에서 띄운 figure를 저장할 수 있다. 이때 설정 `gcf`는 현재 figure를 의미한다. 그러면 아래의 그림이 저장된다. &amp;lt;code class=&amp;quot;matlab&amp;quot;&amp;gt;N=2^8; p=phantom(&#39;Modified Shepp-Logan&#39;,N); figure() imagesc(p) colorbar saveas(gcf,&#39;phantom.png&#39;) 저장 2 아래 사</description>
    </item>
    
    <item>
      <title>매트랩에서 3차원 구 좌표계 미소 부피 그리는 코드</title>
      <link>https://freshrimpsushi.github.io/1756/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://freshrimpsushi.github.io/1756/</guid>
      <description>3차원 구 좌표계에서 미소 부피위와 같은 3차원 구 좌표계의 미소 부피의 그래프를 매트랩에서 그리는 코드는 아래와 같다. r=1; dr=0.7; phi=deg2rad(39); dphi=2*phi; theta=pi/6; dtheta=theta+theta/2; n=50; m=22; pi2=pi/2; R=zeros(n,m); Phi=zeros(n,m); Theta=zeros(n,m); X=zeros(n,m); Y=zeros(n,m); Z=zeros(n,m); Rv=linspace(0,r,n); dRv=linspace(dr,r,n); Pv=linspace(phi,dphi,n); Tv1=linspace(0,pi2,n); Tv2=linspace(0,theta,n); dTv=linspace(theta,dtheta,n); %검은 점선 R(:,1)=Rv; Phi(:,1)=phi; Theta(:,1)=pi2; R(:,2)=Rv; Phi(:,2)=dphi; Theta(:,2)=pi2; R(:,3)=r; Phi(:,3)=Pv; Theta(:,3)=pi2; R(:,4)=r; Phi(:,4)=phi; Theta(:,4)=Tv1; R(:,5)=r; Phi(:,5)=dphi; Theta(:,5)=Tv1; R(:,6)=Rv; Phi(:,6)=phi; Theta(:,6)=theta; R(:,7)=Rv; Phi(:,7)=dphi; Theta(:,7)=theta; R(:,8)=Rv; Phi(:,8)=phi; Theta(:,8)=dtheta; R(:,9)=Rv; Phi(:,9)=dphi; Theta(:,9)=dtheta; R(:,10)=dr; Phi(:,10)=dphi; Theta(:,10)=dTv; R(:,11)=dr; Phi(:,11)=Pv; Theta(:,11)=theta; R(:,12)=r; Phi(:,12)=dphi; Theta(:,12)=Tv2; %검은 실선 R(:,13)=dr; Phi(:,13)=phi; Theta(:,13)=dTv; R(:,14)=dRv; Phi(:,14)=phi; Theta(:,14)=dtheta; R(:,15)=dRv; Phi(:,15)=dphi; Theta(:,15)=dtheta; R(:,16)=dr; Phi(:,16)=Pv; Theta(:,16)=dtheta; R(:,17)=r; Phi(:,17)=Pv; Theta(:,17)=dtheta; R(:,18)=r; Phi(:,18)=dphi; Theta(:,18)=dTv; %초록선 R(:,19)=dRv; Phi(:,19)=phi; Theta(:,19)=theta; %파란선 R(:,20)=r; Phi(:,20)=phi; Theta(:,20)=dTv;</description>
    </item>
    
    <item>
      <title>매트랩에서 3차원 원통 좌표계 미소 부피 그리는 코드</title>
      <link>https://freshrimpsushi.github.io/1760/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://freshrimpsushi.github.io/1760/</guid>
      <description>원통 좌표계에서 미소 부피매트랩에서 위와 같은 그래프는 그리는 코드는 아래와 같다. r=1; dr=0.7; theta=pi/6; dtheta=2*theta; z=2; dz=1.3; n=50; m=22; pi2=pi/2; R=zeros(n,m); Theta=zeros(n,m); Z=zeros(n,m); X=zeros(n,m); Y=zeros(n,m); Rv=linspace(0,r,n); dRv=linspace(dr,r,n); Tv=linspace(0,pi2,n); dTv=linspace(theta,dtheta,n); Zv=linspace(0,z,n); dZv=linspace(dz,z,n); %검은 점선 R(:,1)=Rv ;Theta(:,1)=theta ;Z(:,1)=0; R(:,2)=Rv ;Theta(:,2)=dtheta ;Z(:,2)=0 ; R(:,3)=dr ;Theta(:,3)=dTv ;Z(:,3)=0 ; R(:,4)=dr ;Theta(:,4)=theta ;Z(:,4)=Zv ; R(:,5)=r ;Theta(:,5)=theta ;Z(:,5)=Zv ; R(:,6)=r ;Theta(:,6)=dtheta ;Z(:,6)=Zv ; R(:,7)=dr ;Theta(:,7)=dtheta ;Z(:,7)=Zv ; R(:,8)=dr ;Theta(:,8)=dTv ;Z(:,8)=dz ; R(:,9)=dRv ;Theta(:,9)=dtheta ;Z(:,9)=dz ; R(:,10)=Rv ;Theta(:,10)=theta ;Z(:,10)=z ; R(:,11)=Rv ;Theta(:,11)=dtheta ;Z(:,11)=z ; %검은 실선 R(:,12)=dr ;Theta(:,12)=theta ;Z(:,12)=dZv ; R(:,13)=dr ;Theta(:,13)=dTv ;Z(:,13)=z ; R(:,14)=dRv ;Theta(:,14)=dtheta ;Z(:,14)=z ; R(:,15)=r ;Theta(:,15)=dTv ;Z(:,15)=z ; R(:,16)=dRv ;Theta(:,16)=theta ;Z(:,16)=z ; R(:,17)=r ;Theta(:,17)=dtheta ;Z(:,17)=dZv ; %초록선 R(:,18)=dRv ;Theta(:,18)=theta ;Z(:,18)=dz ; R(:,19)=dRv ;Theta(:,19)=theta ;Z(:,19)=0 ; %파란선 R(:,20)=r</description>
    </item>
    
    <item>
      <title>매트랩에서 계산한 데이터를 엑셀파일로 저장하는 방법</title>
      <link>https://freshrimpsushi.github.io/1150/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://freshrimpsushi.github.io/1150/</guid>
      <description>매트랩에서 엑셀의 데이터를 불러오는 방법 MATLAB에서 계산한 데이터를 엑셀로 정리하고 싶을 때 데이터양이 얼마되지 않는 다면 직접 복사+붙여넣기를 하는 것이 가능하다. 그런데 위의 사진처럼 128128 행렬의 데이터는 그런식으로 할 수 없다. 이 때 데이터를 엑셀파일로 저장해주는 xlswrite를 사용하면 된다.위 사진과 비교했을 때 마지막줄에xl</description>
    </item>
    
    <item>
      <title>매트랩에서 그래프 색 선 종류 마커 종류 지정하는 방법</title>
      <link>https://freshrimpsushi.github.io/1330/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://freshrimpsushi.github.io/1330/</guid>
      <description>사용하는 방법은 예제 코드를 보면 쉽게 알 수 있을 것이다. 모르겠으면 덧글 달아라. 그래프 색 마커 종류 선의 형태 빨강 r .(점) . 실선 - 초록 g *(별표) * 점선 : 파랑 b x x 점단선 -. 검정 k ○(원) o (알파벳 오) 단선 &amp;ndash; 노랑 y + + 선 없음 자홍 m □ s 하양 w ◇ d 청록 c ☆(오각별) p ▽ v △ ^ ◁ &amp;lt; ▷ (육각별) h 마커 없음 x=1:20; y=x.^3+3.*x.^2+3.*x+1; figure() plot(x,y,&#39;ro&#39;) title(&#39;ro&#39;) figure() plot(x,y,&#39;g-&#39;) title(&#39;g-&#39;) figure()</description>
    </item>
    
    <item>
      <title>매트랩에서 그래프에 사용 가능한 특수기호 일람</title>
      <link>https://freshrimpsushi.github.io/1191/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://freshrimpsushi.github.io/1191/</guid>
      <description>매트랩에서 각각의 축이 무엇을 의미하는지 나타내기 위해서 그래프에 라벨을 붙일 경우 xlabel , ylabel 을 사용하면 된다. 특수기호를 사용할 수도 있고 볼드체, 이탤릭체 등도 사용할 수 있다.예시 1 x=-3*pi:0.2:3* pi; y=sin(x-pi/6); plot(x,y); xlabel(&#39;\beta&#39;), ylabel(&#39;\nabla f(x)&#39;),; 예시 2 x=-3*pi:0.2:3* pi; y=sin(x-pi/6); plot(x,y); xlabel(&#39;진폭{\bf Volt}&#39;), ylabel(&#39;시간{\it sec}{\sl sec}{\rm sec}&#39;); 코드에 따른 결과가 위와 같이 나타난다는 것을 보여주기 위한</description>
    </item>
    
    <item>
      <title>매트랩에서 극 좌표계의 미소 면적 그래프 그리는 코드</title>
      <link>https://freshrimpsushi.github.io/1759/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://freshrimpsushi.github.io/1759/</guid>
      <description>극 좌표에서 미소 면적매트랩에서 위와 같은 그래프를 그리는 코드는 아래와 같다. r=1; dr=0.77; theta=deg2rad(36); dtheta=deg2rad(56); n=50; m=8; pi2=pi/2; R=zeros(n,m); Theta=zeros(n,m); Rv=linspace(0,r,n); dRv=linspace(dr,r,n); Tv=linspace(0,pi2,n); dTv=linspace(theta,dtheta,n); %검은 점선 R(:,1)=dr; Theta(:,1)=Tv; R(:,2)=r; Theta(:,2)=Tv; R(:,3)=Rv; Theta(:,3)=dtheta; R(:,4)=Rv; Theta(:,4)=theta; %검은 실선 R(:,5)=dr; Theta(:,5)=dTv; R(:,6)=dRv; Theta(:,6)=dtheta; %초록선 R(:,7)=dRv; Theta(:,7)=theta; %파란선 R(:,8)=r; Theta(:,8)=dTv; X=zeros(n,m); Y=zeros(n,m); for i=1:n for j=1:m X(i,j)=R(i,j)*cos(Theta(i,j)); Y(i,j)=R(i,j)*sin(Theta(i,j)); end end X1=X(:,1:4); Y1=Y(:,1:4); X2=X(:,5:6); Y2=Y(:,5:6); figure() plot(X1,Y1,&#39;k--&#39;,&#39;Linewidth&#39;,2); %점선 hold on plot(X2,Y2,&#39;k&#39;,&#39;Linewidth&#39;,4); %실선 plot(X(:,7),Y(:,7),&#39;Linewidth&#39;,4,&#39;Color&#39;,&#39;#70AD47&#39;); %초록선 plot(X(:,8),Y(:,8),&#39;Linewidth&#39;,4,&#39;Color&#39;,&#39;#4472C4&#39;); %파란선 axis([0 1.2 0 1.2]);</description>
    </item>
    
    <item>
      <title>매트랩에서 두 행렬을 성분별로 연산하는 방법</title>
      <link>https://freshrimpsushi.github.io/1326/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://freshrimpsushi.github.io/1326/</guid>
      <description>times() , .* : 두 행렬의 각 성분을 곱해서 그 결과를 반환한다. 두 행렬의 크기가 완전히 같거나, 한 쪽이 스칼라이거나, 행의 크기가 같은 행벡터, 열의 크기가 같은 열벡터일 경우에만 연산이 가능하다. 크기가 다른 경우에 작은 행렬이 큰 행렬과 같은 크기의 행렬인 것 처럼 계산되는데 이 때 빈 자리는 똑같은 값으로 채워진다. 예를 들어 스칼라는 모든 성분이 같은 값을 가</description>
    </item>
    
    <item>
      <title>매트랩에서 등간격의 행벡터를 생성하는 방법</title>
      <link>https://freshrimpsushi.github.io/1376/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://freshrimpsushi.github.io/1376/</guid>
      <description>줄리아에서 벡터를 생성하는 방법linspace(a,b,n) : 구간 $[a,b]$를 $n$개의 등간격으로 나눈 행벡터를 반환한다. 성분개수를 입력하지 않으면 $1\times 100$ 벡터를 반환한다. 간격의 길이가 아닌 간격의 개수가 중요할 때 쓰인다. a:m:b : 구간 $[a,b]$를 등간격 $m$으로 나눈 행벡터를 반환한다. 간격을 입력하지 않으면 간격이 $</description>
    </item>
    
    <item>
      <title>매트랩에서 엑셀의 데이터를 불러오는 방법</title>
      <link>https://freshrimpsushi.github.io/1163/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://freshrimpsushi.github.io/1163/</guid>
      <description>매트랩에서 계산한 데이터를 엑셀파일로 저장하는 방법 매트랩에는 엑셀의 데이터를 불러올 수 있는 기능이 있다. 우선 홈 메뉴에서 데이터 가져오기를 클릭한다.가져올 데이터가 저장된 엑셀 파일을 선택한다.그러면 가져올 데이터를 선택할 수 있는데 처음에 알아서 선택이돼있다. 확인하고 &amp;lsquo;선택 항목 가져오기&amp;rsquo;를 누르면 된다.</description>
    </item>
    
    <item>
      <title>매트랩에서 여러 그림 한 페이지에 출력하는 방법</title>
      <link>https://freshrimpsushi.github.io/1247/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://freshrimpsushi.github.io/1247/</guid>
      <description>subplot()함수를 사용하면 여러 그림을 한 페이지에 출력할 수 있다. 첫번째, 두번째 변수는 각각 이미지를 출력할 바둑판의 행과 열을 나타내며 그림을 어떤 모양으로 배치할지를 결정한다. 세번째 변수는 해당그림을 몇 번에 배치할지 결정한다.아래는 코드와 실제로 출력된 결과이다. X1=Phantom(); X2=radon(X1); X3=fft(X2); X4=iradon(X2,0:179); subplot(2,2,1) imagesc(X1) title(&amp;quot;Phantom&amp;quot;); subplot(2,2,2) imagesc(X2) title(&amp;quot;radon&amp;quot;); subplot(2,2,3) imagesc(abs(X3)) title(&amp;quot;fft&amp;quot;); subplot(2,2,4) imagesc(X4) title(&amp;quot;iradon&amp;quot;);</description>
    </item>
    
    <item>
      <title>매트랩에서 이미지 크기 조절하는 방법</title>
      <link>https://freshrimpsushi.github.io/how-to-resize-a-image-in-a-matlab/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://freshrimpsushi.github.io/how-to-resize-a-image-in-a-matlab/</guid>
      <description>줄리아에서 이미지 크기 조절하는 방법imresize(A,scale) : A의 크기를 scale배만큼 조정하여 새로운 이미지를 반환한다. A가 10x10이미지일 때 scale에 0.5를 입력하면 5x5 이미지를 반환한다. 아래와 같이 직접 크기를 조절할 수도 있다.imresize(A,[m n]) : m개의 행과 n개의 열을 가진 이미지를 반환</description>
    </item>
    
    <item>
      <title>매트랩에서 이미지를 회전시키는 방법</title>
      <link>https://freshrimpsushi.github.io/1328/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://freshrimpsushi.github.io/1328/</guid>
      <description>줄리아에서 이미지 회전하는방법imrotate(I,angle,method,bbox)I : 회전할 영상, 이미지이다. angle : 회전할 각도이며 단위는 도이다.method : 보간 방법이다. &amp;lsquo;nearest&amp;rsquo;, &amp;lsquo;bilinear&amp;rsquo;, &amp;lsquo;bicubic&amp;rsquo;이 있다. 아무것도 입력하지 않으면 &amp;lsquo;nearet&amp;rsquo;가 적용된다</description>
    </item>
    
    <item>
      <title>매트랩에서 작업공간 초기화 모든 변수 제거하는 방법</title>
      <link>https://freshrimpsushi.github.io/1758/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://freshrimpsushi.github.io/1758/</guid>
      <description>R에서 작업공간 초기화, 모든 변수 제거하는 방법1. clear 명령어 명령창에 clear를 입력하면 작업 공간이 초기화 된다.2. 작업 공간 지우기(Alt+T+O) 작업 공간 창을 마우스 우클릭하면 &amp;lsquo;작업 공간 지우기(O)&amp;lsquo;를 선택할 수 있다. 누르면 작업 공간이 초기화된다. 이는 단축키 Alt+T+O로도 실행할 수 있으</description>
    </item>
    
    <item>
      <title>매트랩에서 코드 실행 시간 재는 법 벤치마크하는 법</title>
      <link>https://freshrimpsushi.github.io/1467/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://freshrimpsushi.github.io/1467/</guid>
      <description>R tic X1=rand(2^7); X2=rand(2^8); X3=rand(2^9); X4=rand(2^10); X5=rand(2^11); toc Y1=imrotate(X1,45,&#39;bicubic&#39;,&#39;crop&#39;); toc Y2=imrotate(X2,45,&#39;bicubic&#39;,&#39;crop&#39;); toc Y3=imrotate(X3,45,&#39;bicubic&#39;,&#39;crop&#39;); toc Y4=imrotate(X4,45,&#39;bicubic&#39;,&#39;crop&#39;); toc Y5=imrotate(X5,45,&#39;bicubic&#39;,&#39;crop&#39;); toc tic : 실행 시간을 측정하기 위한 스톱워치를 실행한다.toc : 스톱워치의 현재 시간을 반환한다. toc과 toc사이의 시간을 재는 것이 아님에 주의하자. 위의 예제코드에서 Y1~Y6을 계산하는 시간을 각각 재고싶다면 아래와 같이 코드를 입력해야한다. tic X1=rand(2^7); X2=rand(2^8); X3=rand(2^9); X4=rand(2^10); X5=rand(2^11); toc tic Y1=imrotate(X1,45,&#39;bicubic&#39;,&#39;crop&#39;); toc tic Y2=imrotate(X2,45,&#39;bicubic&#39;,&#39;crop&#39;); toc tic Y3=imrotate(X3,45,&#39;bicubic&#39;,&#39;crop&#39;); toc tic Y4=imrotate(X4,45,&#39;bicubic&#39;,&#39;crop&#39;); toc tic Y5=imrotate(X5,45,&#39;bicubic&#39;,&#39;crop&#39;); toc</description>
    </item>
    
    <item>
      <title>매트랩에서 특수한 행렬을 만드는 함수</title>
      <link>https://freshrimpsushi.github.io/1327/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://freshrimpsushi.github.io/1327/</guid>
      <description>zeros() : 영행렬을 반환한다. zeros(n) : $n\times n$ 영행렬을 반환한다. zeros(m,n) : $n\times m$ 영행렬을 반환한다. zeros(size(A)) : 행렬 A와 같은 크기의 영행렬을 반화한다. ones() : 모든 원소가 1인 행렬을 반환한다. 다만 두 행렬 사이의 연산을 위해서는 그냥 1을 쓰는게 편하다. 누가 봐도 예제 코드 중에서 아래의 코드가 훨씬 간단하다. ones(n) : 모든 원소가 1인 $n\times n$ 행렬을 반환한다. ones(m,n) : 모든 원소가</description>
    </item>
    
    <item>
      <title>매트랩에서 한꺼번에 여러줄 주석처리주석해제 하는 방법</title>
      <link>https://freshrimpsushi.github.io/1149/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://freshrimpsushi.github.io/1149/</guid>
      <description>코드를 짤 때 어느 특정한 부분이 실행되지 않았으면 할 때가 있다. 그럴 때 주석으로 처리하면 실행되지 않는데 주석처리를 하고자 모든 줄 앞에 일일이 %를 입력하면 너무 비효율적이다.이때 주석처리하고 싶은 부분을 드래그한 뒤 Ctrl+R를 입력하면 드래그한 부분 전체를 주석처리할 수 있다. 반대로 되돌릴 때는 똑같이 드래그하고 Ctrl+T를 입력하면</description>
    </item>
    
    <item>
      <title>매트랩에서 행렬의 길이 크기와 관련된 함수</title>
      <link>https://freshrimpsushi.github.io/1323/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://freshrimpsushi.github.io/1323/</guid>
      <description>size() : 행렬의 행, 열의 길이를 성분으로 갖는 행 벡터를 반환한다. 다루고 있는 행렬과 크기가 같은 영행렬을 만들 때 유용하다. zeros(size(A))는 A와 크기가 같은 영행렬을 반환한다. length() : 행과 열 중에서 더 큰 숫자를 반환한다. 행벡터, 열벡터의 경우에는 성분의 개수와 같으므로 numel() 과 같다. 또한 size()는 행과 열의 크기를 반환하므로 l</description>
    </item>
    
    <item>
      <title>매트랩에서 행렬의 특정한 행 열을 선택하는 방법</title>
      <link>https://freshrimpsushi.github.io/1362/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://freshrimpsushi.github.io/1362/</guid>
      <description>$m \times n$ 행렬로된 데이터가 있고 이를 $A$라고 하자. 행렬 $A$의 특정한 부분만을 이용하고 싶다면 아래와 같은 방법을 사용하면 된다. B=A(a:b,c:d) 위와 같은 코드를 실행시키면 $B$는 행렬 $A$의 $a$행~$b$행, $c$열~$d$열의 데이터를 가진 $(b-a) \times (d-c)$행렬이 된다. 아래는 예제 코드와 실행 결과이다. for k=1:9 for l=1:9 A(k,l)=10*k+l; end end A a1=A(3:7,4:9); a1 a2=A(2:5,1:6); a2 : :</description>
    </item>
    
  </channel>
</rss>
