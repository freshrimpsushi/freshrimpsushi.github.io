<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>매트랩 on 생새우초밥집</title>
    <link>https://freshrimpsushi.github.io/categories/%EB%A7%A4%ED%8A%B8%EB%9E%A9/</link>
    <description>Recent content in 매트랩 on 생새우초밥집</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>ko</language>
    <lastBuildDate>Mon, 11 Jan 2021 00:00:00 +0000</lastBuildDate><atom:link href="https://freshrimpsushi.github.io/categories/%EB%A7%A4%ED%8A%B8%EB%9E%A9/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>매트랩에서 2차원 배열을 히트맵 이미지로 출력하고 저장하는 방법</title>
      <link>https://freshrimpsushi.github.io/posts/how-to-plot-and-save-arrays-as-heatmap-images-in-matlab/</link>
      <pubDate>Mon, 11 Jan 2021 00:00:00 +0000</pubDate>
      
      <guid>https://freshrimpsushi.github.io/posts/how-to-plot-and-save-arrays-as-heatmap-images-in-matlab/</guid>
      <description>Imagesc imagesc 함수를 쓰면 2차원 배열을 히트맵으로 출력할 수 있다. colorbar는 스케일을 보여주는 컬러바를 같이 출력하는 설정이다. N=2^8; p=phantom(&amp;#39;Modified Shepp-Logan&amp;#39;,N); figure() imagesc(p) colorbar 저장 방법1 saveas 함수를 써서 위에서 띄운 figure를 저장할 수 있다. 이때 설정 gcf는 현재 figure를 의미한다. 그러면 아래의 그림이 저장된다. N=2^8; p=phantom(&amp;#39;Modified Shepp-Logan&amp;#39;,N); figure() imagesc(p) colorbar saveas(gcf,&amp;#39;phantom.png&amp;#39;) 방법2 아래 사진과 같이 figu</description>
    </item>
    
    <item>
      <title>매트랩에서 작업공간 초기화, 모든 변수 제거하는 방법</title>
      <link>https://freshrimpsushi.github.io/posts/work-space-clear-in-matlab/</link>
      <pubDate>Sun, 06 Sep 2020 00:00:00 +0000</pubDate>
      
      <guid>https://freshrimpsushi.github.io/posts/work-space-clear-in-matlab/</guid>
      <description>방법 clear 명령어 명령창에 clear를 입력하면 작업 공간이 초기화 된다. 작업 공간 지우기(Alt+T+O) 작업 공간 창을 마우스 우클릭하면 &amp;lsquo;작업 공간 지우기(O)&amp;rsquo; 를 선택할 수 있다. 누르면 작업 공간이 초기화된다. 이는 단축키 Alt+T+O로도 실행할 수 있으며 편집기를 띄워놓은 상태에서는 안된다. 직접 선택해</description>
    </item>
    
    <item>
      <title>매트랩에서 코드 실행 시간 재는 법</title>
      <link>https://freshrimpsushi.github.io/posts/calculating-running-time-of-code-in-matlab/</link>
      <pubDate>Fri, 03 Jan 2020 00:00:00 +0000</pubDate>
      
      <guid>https://freshrimpsushi.github.io/posts/calculating-running-time-of-code-in-matlab/</guid>
      <description>방법 tic X1=rand(2^7); X2=rand(2^8); X3=rand(2^9); X4=rand(2^10); X5=rand(2^11); toc Y1=imrotate(X1,45,&amp;#39;bicubic&amp;#39;,&amp;#39;crop&amp;#39;); toc Y2=imrotate(X2,45,&amp;#39;bicubic&amp;#39;,&amp;#39;crop&amp;#39;); toc Y3=imrotate(X3,45,&amp;#39;bicubic&amp;#39;,&amp;#39;crop&amp;#39;); toc Y4=imrotate(X4,45,&amp;#39;bicubic&amp;#39;,&amp;#39;crop&amp;#39;); toc Y5=imrotate(X5,45,&amp;#39;bicubic&amp;#39;,&amp;#39;crop&amp;#39;); toc tic: 실행 시간을 측정하기 위한 스톱워치를 실행한다. toc: 스톱워치의 현재 시간을 반환한다. toc과 toc사이의 시간을 재는 것이 아님에 주의하자. 위의 예제코드에서 Y1~Y6을 계산하는 시간을 각각 재고싶다면 아래와 같이 코드를 입력해야한다. tic X1=rand(2^7); X2=rand(2^8); X3=rand(2^9); X4=rand(2^10); X5=rand(2^11); toc tic Y1=imrotate(X1,45,&amp;#39;bicubic&amp;#39;,&amp;#39;crop&amp;#39;); toc tic Y2=imrotate(X2,45,&amp;#39;bicubic&amp;#39;,&amp;#39;crop&amp;#39;); toc tic Y3=imrotate(X3,45,&amp;#39;bicubic&amp;#39;,&amp;#39;crop&amp;#39;); toc tic Y4=imrotate(X4,45,&amp;#39;bicubic&amp;#39;,&amp;#39;crop&amp;#39;); toc tic Y5=imrotate(X5,45,&amp;#39;bicubic&amp;#39;,&amp;#39;crop&amp;#39;); toc 타언어</description>
    </item>
    
    <item>
      <title>매트랩에서 이미지 크기 조절하는 방법</title>
      <link>https://freshrimpsushi.github.io/posts/how-to-resize-a-image-in-a-matlab/</link>
      <pubDate>Thu, 02 Jan 2020 00:00:00 +0000</pubDate>
      
      <guid>https://freshrimpsushi.github.io/posts/how-to-resize-a-image-in-a-matlab/</guid>
      <description>방법 imresize(A,scale): A의 크기를 scale배만큼 조정하여 새로운 이미지를 반환한다. A가 10x10이미지일 때 scale에 0.5를 입력하면 5x5 이미지를 반환한다. 아래와 같이 직접 크기를 조절할 수도 있다. imresize(A,[m n]): m개의 행과 n개의 열을 가진 이미지를 반환한다. 아래는 예제 코드와 그 결과이다. X=imread(&amp;#39;test\_image.jpg&amp;#39;); figure() imshow(X) saveas(gcf,&amp;#39;X.png&amp;#39;) title(&amp;#39;X&amp;#39;) Y1=imresize(X,0.5); Y2=imresize(X,[500 500]); Y3=imresize(X,[700 500]); Y4=imresize(X,[500,700]); figure() imshow(Y1) saveas(gcf,&amp;#39;Y1.png&amp;#39;) title(&amp;#39;Y1=imresize(X,0.5)&amp;#39;) figure() imshow(Y2) saveas(gcf,&amp;#39;Y2.png&amp;#39;) title(&amp;#39;Y2=imresize(X,[500 500])&amp;#39;) figure() imshow(Y3) saveas(gcf,&amp;#39;Y3.png&amp;#39;) title(&amp;#39;Y3=imresize(X,[700 500])&amp;#39;) figure() imshow(Y4)</description>
    </item>
    
    <item>
      <title>매트랩에서 등간격의 행벡터를 생성하는 방법</title>
      <link>https://freshrimpsushi.github.io/posts/linspace-in-matlab/</link>
      <pubDate>Tue, 08 Oct 2019 00:00:00 +0000</pubDate>
      
      <guid>https://freshrimpsushi.github.io/posts/linspace-in-matlab/</guid>
      <description>방법 linspace(a,b,n): 구간 $[a,b]$를 $n$개의 등간격으로 나눈 행벡터를 반환한다. 성분개수를 입력하지 않으면 $1\times 100$ 벡터를 반환한다. 간격의 길이가 아닌 간격의 개수가 중요할 때 쓰인다. a: m :b : 구간 $[a,b]$를 등간격 $m$으로 나눈 행벡터를 반환한다. 간격을 입력하지 않으면 간격이 $1$로 설정된다. 간격의 개수가 아니라 간격의 길이가 주요</description>
    </item>
    
    <item>
      <title>매트랩에서 행렬의 특정한 행, 열을 선택하는 방법</title>
      <link>https://freshrimpsushi.github.io/posts/row-vector-column-vector-in-matlab/</link>
      <pubDate>Mon, 30 Sep 2019 00:00:00 +0000</pubDate>
      
      <guid>https://freshrimpsushi.github.io/posts/row-vector-column-vector-in-matlab/</guid>
      <description>방법 $m \times n$ 행렬로된 데이터가 있고 이를 $A$라고 하자. 행렬 $A$의 특정한 부분만을 이용하고 싶다면 아래와 같은 방법을 사용하면 된다. B=A(a:b, c:d) 위와 같은 코드를 실행시키면 $B$는 행렬 $A$의 $a$행~$b$행, $c$열~$d$열의 데이터를 가진 $(b-a) \times (d-c)$행렬이 된다. 아래는 예제 코드와 실행 결과이다. for k=1:9 for l=1:9 A(k,l)=10*k+l; end end A a1=A(3:7,4:9) a2=A(2:5,1:6) ::</description>
    </item>
    
    <item>
      <title>매트랩에서 그래프 색, 선 종류, 마커 종류 지정하는 방법</title>
      <link>https://freshrimpsushi.github.io/posts/plot-option-in-matlab/</link>
      <pubDate>Thu, 26 Sep 2019 00:00:00 +0000</pubDate>
      
      <guid>https://freshrimpsushi.github.io/posts/plot-option-in-matlab/</guid>
      <description>표 그래프 색 마커 선의 형태 빨강 r 점 . 실선 - 초록 g 별표 * 점선 : 파랑 b x x 점단선 -. 검정 k 원 o(알파벳 오) 단선 -- 노랑 y + + 선 없음 자홍 m □ s 하양 w ◇ d 청록 c ☆ p ▽ v △ ^ ◁ &amp;lt; ▷ &amp;gt; 육각별 h 마커 없음 예제 x=1:20; y=x.^3+3.*x.^2+3.*x+1; figure() plot(x,y,&amp;#39;ro&amp;#39;) title(&amp;#39;ro&amp;#39;) figure() plot(x,y,&amp;#39;g-&amp;#39;) title(&amp;#39;g-&amp;#39;) figure() plot(x,y,&amp;#39;mo&amp;#39;) title(&amp;#39;mo&amp;#39;) figure() plot(x,y,&amp;#39;c:&amp;#39;) title(&amp;#39;c:&amp;#39;) figure() plot(x,y,&amp;#39;k--&amp;#39;) title(&amp;#39;k--&amp;#39;)</description>
    </item>
    
    <item>
      <title>매트랩에서 이미지를 회전시키는 방법</title>
      <link>https://freshrimpsushi.github.io/posts/image-rotation-in-matlab/</link>
      <pubDate>Wed, 25 Sep 2019 00:00:00 +0000</pubDate>
      
      <guid>https://freshrimpsushi.github.io/posts/image-rotation-in-matlab/</guid>
      <description>방법 imrotate(I,angle,method,bbox) I: 회전할 영상, 이미지이다. angle : 회전할 각도이며 단위는 도이다. method : 보간 방법이다. &amp;rsquo;nearest&amp;rsquo;, &amp;lsquo;bilinear&amp;rsquo;, &amp;lsquo;bicubic&amp;rsquo;이 있다. 아무것도 입력하지 않으면 &amp;rsquo;nearet&amp;rsquo;가 적용된다. X = phantom(&amp;#39;Modified Shepp-Logan&amp;#39;,64); figure() imagesc(X) title(&amp;#39;X&amp;#39;) Y1=imrotate(X,30,&amp;#39;nearest&amp;#39;,&amp;#39;crop&amp;#39;); Y2=imrotate(X,30,&amp;#39;bilinear&amp;#39;,&amp;#39;crop&amp;#39;); Y3=imrotate(X,30,&amp;#39;bicubic&amp;#39;,&amp;#39;crop&amp;#39;); figure() subplot(1,3,1) imagesc(Y1) title(&amp;#39;Y1 - nearest&amp;#39;) subplot(1,3,2) imagesc(Y2) title(&amp;#39;Y2 - bilinear&amp;#39;) subplot(1,3,3) imagesc(Y3) title(&amp;#39;Y3 - bicubic&amp;#39;) bbox : 출력 이미지의 크기를 지정해준다. &amp;r</description>
    </item>
    
    <item>
      <title>매트랩에서 특수한 행렬을 만드는 함수</title>
      <link>https://freshrimpsushi.github.io/posts/special-matrices-in-matlab/</link>
      <pubDate>Tue, 24 Sep 2019 00:00:00 +0000</pubDate>
      
      <guid>https://freshrimpsushi.github.io/posts/special-matrices-in-matlab/</guid>
      <description>영행렬 zeros(): 영행렬을 반환한다. zeros(n): $n\times n$ 영행렬을 반환한다. zeros(m,n): $n\times m$ 영행렬을 반환한다. zeros(size(A)): 행렬 A와 같은 크기의 영행렬을 반화한다. 모든 원소가 1인 행렬 ones(): 모든 원소가 1인 행렬을 반환한다. 다만 두 행렬 사이의 연산을 위해서는 그냥 1을 쓰는게 편하다. 누가 봐도 예제 코드 중에서 아래의 코드가 훨씬 간단하다. ones(n): 모든 원소가 1인 $n\times n$ 행렬을 반환한다. ones(m,n):</description>
    </item>
    
    <item>
      <title>매트랩에서 두 행렬을 성분별로 연산하는 방법</title>
      <link>https://freshrimpsushi.github.io/posts/elementwise-operation-of-matrix-in-matlab/</link>
      <pubDate>Mon, 23 Sep 2019 00:00:00 +0000</pubDate>
      
      <guid>https://freshrimpsushi.github.io/posts/elementwise-operation-of-matrix-in-matlab/</guid>
      <description>곱셈 times() , .*: 두 행렬의 각 성분을 곱해서 그 결과를 반환한다. 두 행렬의 크기가 완전히 같거나, 한 쪽이 스칼라이거나, 행의 크기가 같은 행벡터, 열의 크기가 같은 열벡터일 경우에만 연산이 가능하다. 크기가 다른 경우에 작은 행렬이 큰 행렬과 같은 크기의 행렬인 것 처럼 계산되는데 이 때 빈 자리는 똑같은 값으로 채워진다. 예를 들어 스칼라는 모든 성분이 같은 값을</description>
    </item>
    
    <item>
      <title>매트랩에서 행렬의 길이 크기와 관련된 함수</title>
      <link>https://freshrimpsushi.github.io/posts/matrix-operator-in-matlab/</link>
      <pubDate>Sat, 21 Sep 2019 00:00:00 +0000</pubDate>
      
      <guid>https://freshrimpsushi.github.io/posts/matrix-operator-in-matlab/</guid>
      <description>함수 size(): 행렬의 행, 열의 길이를 성분으로 갖는 행 벡터를 반환한다. 다루고 있는 행렬과 크기가 같은 영행렬을 만들 때 유용하다. zeros(size(A)): A와 크기가 같은 영행렬을 반환한다. length(): 행과 열 중에서 더 큰 숫자를 반환한다. 행벡터, 열벡터의 경우에는 성분의 개수와 같으므로 numel()과 같다. 또한 size()는 행과 열의 크기를 반환하므로 length(A)</description>
    </item>
    
    <item>
      <title>매트랩에서 여러 그림 한 페이지에 출력하는 방법</title>
      <link>https://freshrimpsushi.github.io/posts/subplot-in-matlab/</link>
      <pubDate>Sat, 17 Aug 2019 00:00:00 +0000</pubDate>
      
      <guid>https://freshrimpsushi.github.io/posts/subplot-in-matlab/</guid>
      <description>방법 subplot() 함수를 사용하면 여러 그림을 한 페이지에 출력할 수 있다. 첫번째, 두번째 변수는 각각 이미지를 출력할 바둑판의 행과 열을 나타내며 그림을 어떤 모양으로 배치할지를 결정한다. 세번째 변수는 해당그림을 몇 번에 배치할지 결정한다. 아래는 코드와 실제로 출력된 결과이다. X1=Phantom(); X2=radon(X1); X3=fft(X2); X4=iradon(X2,0:179); subplot(2,2,1) imagesc(X1) title(&amp;#34;Phantom&amp;#34;); subplot(2,2,2) imagesc(X2) title(&amp;#34;radon&amp;#34;); subplot(2,2,3) imagesc(abs(X3)) title(&amp;#34;fft&amp;#34;); subplot(2,2,4) imagesc(X4) title(&amp;#34;iradon&amp;#34;);</description>
    </item>
    
    <item>
      <title>매트랩에서 그래프에 사용 가능한 특수기호 일람</title>
      <link>https://freshrimpsushi.github.io/posts/available-special-character-in-matlab/</link>
      <pubDate>Wed, 17 Jul 2019 00:00:00 +0000</pubDate>
      
      <guid>https://freshrimpsushi.github.io/posts/available-special-character-in-matlab/</guid>
      <description>방법 매트랩에서 각각의 축이 무엇을 의미하는지 나타내기 위해서 그래프에 라벨을 붙일 경우 xlabel, ylabel 을 사용하면 된다. 특수기호를 사용할 수도 있고 볼드체, 이탤릭체 등도 사용할 수 있다. x=-3*pi:0.2:3* pi; y=sin(x-pi/6); plot(x,y); xlabel(&amp;#39;\beta&amp;#39;), ylabel(&amp;#39;\nabla f(x)&amp;#39;),; x=-3*pi:0.2:3* pi; y=sin(x-pi/6); plot(x,y); xlabel(&amp;#39;진폭{\bf Volt}&amp;#39;), ylabel(&amp;#39;시간{\it sec}{\sl sec}{\rm sec}&amp;#39;); 기호 코드 이름 기호 코드 이름 기호 코드 이름 $\alpha$ \alpha 알파</description>
    </item>
    
    <item>
      <title>매트랩에서 엑셀의 데이터를 불러오는 방법</title>
      <link>https://freshrimpsushi.github.io/posts/load-excel-file-in-matlab/</link>
      <pubDate>Fri, 28 Jun 2019 00:00:00 +0000</pubDate>
      
      <guid>https://freshrimpsushi.github.io/posts/load-excel-file-in-matlab/</guid>
      <description>방법 매트랩에는 엑셀의 데이터를 불러올 수 있는 기능이 있다. 우선 홈 메뉴에서 데이터 가져오기를 클릭한다. 가져올 데이터가 저장된 엑셀 파일을 선택한다. 그러면 가져올 데이터를 선택할 수 있는데 처음에 알아서 선택이돼있다. 확인하고 &amp;lsquo;선택 항목 가져오기&amp;rsquo;를 누르면 된다. &amp;lsquo;선택 항목 가져오기&amp;rsquo</description>
    </item>
    
    <item>
      <title>매트랩에서 계산한 데이터를 엑셀파일로 저장하는 방법</title>
      <link>https://freshrimpsushi.github.io/posts/save-matlab-data-as-excel-file/</link>
      <pubDate>Sun, 23 Jun 2019 00:00:00 +0000</pubDate>
      
      <guid>https://freshrimpsushi.github.io/posts/save-matlab-data-as-excel-file/</guid>
      <description>방법 MATLAB에서 계산한 데이터를 엑셀로 정리하고 싶을 때 데이터양이 얼마되지 않는 다면 직접 복사+붙여넣기를 하는 것이 가능하다. 그런데 위의 사진처럼 128*128 행렬의 데이터는 그런식으로 할 수 없다. 이 때 데이터를 엑셀파일로 저장해주는 xlswrite를 사용하면 된다. 위 사진과 비교했을 때 마지막줄에 xlswrite(&#39;test&#39;, Y)가 추가됐다. Y의 데이터가 tes</description>
    </item>
    
    <item>
      <title>매트랩에서 한꺼번에 여러줄 주석처리, 주석해제 하는 방법</title>
      <link>https://freshrimpsushi.github.io/posts/multiline-annotation-in-matlab/</link>
      <pubDate>Sat, 22 Jun 2019 00:00:00 +0000</pubDate>
      
      <guid>https://freshrimpsushi.github.io/posts/multiline-annotation-in-matlab/</guid>
      <description>방법 주석처리하고 싶은 부분을 드래그한 뒤 Ctrl+R을 입력하면 드래그한 부분 전체를 주석처리할 수 있다. 반대로 되돌릴 때는 똑같이 드래그하고 Ctrl+T를 입력하면 각 줄의 %가 사라진다.</description>
    </item>
    
  </channel>
</rss>
