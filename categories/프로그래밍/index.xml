<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>프로그래밍 on 생새우초밥집</title>
    <link>https://freshrimpsushi.github.io/categories/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%B0%8D/</link>
    <description>Recent content in 프로그래밍 on 생새우초밥집</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>ko</language>
    <lastBuildDate>Tue, 21 Jan 2020 00:00:00 +0000</lastBuildDate><atom:link href="https://freshrimpsushi.github.io/categories/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%B0%8D/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>메타 프로그래밍</title>
      <link>https://freshrimpsushi.github.io/posts/what-is-meta-programming/</link>
      <pubDate>Tue, 21 Jan 2020 00:00:00 +0000</pubDate>
      
      <guid>https://freshrimpsushi.github.io/posts/what-is-meta-programming/</guid>
      <description>메타 프로그래밍 이란 간단히 말해 프로그램이 코드를 수정하도록 하는 프로그래밍이라고 볼 수 있다. 정확하게 어떤 기법이라기보다는 그러한 개념 전반을 메타 프로그래밍이라고 부르는데, 어떤 프로그램이 다른 언어로 작성된 코드를 열어 &amp;lsquo;문자열&amp;rsquo;을 고치듯이 코드를 수정하거나 같은 언어끼리, 심지어는 스스로가 수정해도 모두</description>
    </item>
    
    <item>
      <title>scp로 서버에 파일 업로드하고 서버에서 다운로드 받는 법</title>
      <link>https://freshrimpsushi.github.io/posts/how-to-use-scp-command/</link>
      <pubDate>Sun, 19 Jan 2020 00:00:00 +0000</pubDate>
      
      <guid>https://freshrimpsushi.github.io/posts/how-to-use-scp-command/</guid>
      <description>scp는 아마도 s erver c &amp;lt;sup&amp;gt;op y의 줄임말로, ssh 서버를 사용할 때 업로드와 다운로드를 하는 커맨드다. 띄어쓰기와 @, :의 위치에 주의하도록 하자.서버의 계정을 serverACC, 서버의 주소를 serverADD, 서버 내에서 파일을 업로드 하거나 다운로드 받을 디렉터리를 serverDIR, 내가 전송하고자 하는 파일 혹은 디렉터리를 Object, 다운로드 받을 때 내가 다운로드 받고자 하는 디렉터리를 localDI</description>
    </item>
    
    <item>
      <title>윈도에서 명령 프롬프트로 파일 목록 얻는 법</title>
      <link>https://freshrimpsushi.github.io/posts/how-to-get-file-list-using-cmd-in-windows/</link>
      <pubDate>Thu, 30 May 2019 00:00:00 +0000</pubDate>
      
      <guid>https://freshrimpsushi.github.io/posts/how-to-get-file-list-using-cmd-in-windows/</guid>
      <description>복수의 데이터를 취합하는 프로그램을 짤 때 파일이 너무 많아서 문제가 될 수 있다. 물론 어느 프로그래밍 언어이든 이를 해결하는 방법은 각자 있겠지만, 반복할 필요가 없거나 너무 다양한 언어를 사용하는 경우 임시적인 해결법이 큰 도움이 된다. 윈도의 명령 프롬프트를 통해 쉽고 빠르게 해보자.Step 1. 주소 복사파일 목록이 필요한 폴더로 들어가 주소를 복사</description>
    </item>
    
    <item>
      <title>리눅스 포트란 컴파일 후 aout 실행법 How to execute aout file after fortran complie</title>
      <link>https://freshrimpsushi.github.io/posts/865/</link>
      <pubDate>Wed, 23 Jan 2019 00:00:00 +0000</pubDate>
      
      <guid>https://freshrimpsushi.github.io/posts/865/</guid>
      <description>확장자가 .f90인 파일 exameple.f90 을 컴파일하려면 콘솔창에서gfortran example.f90을 입력하면 된다. 실행하고 나면 같은 디렉터리에 a.out 라는 파일이 생긴다. 콘솔창에서./a.out을 입력하면 콘솔창에서 프로그램이 실행되는 것을 확인할 수 있다.</description>
    </item>
    
    <item>
      <title>지프의 법칙</title>
      <link>https://freshrimpsushi.github.io/posts/zipfs-law/</link>
      <pubDate>Sat, 19 May 2018 00:00:00 +0000</pubDate>
      
      <guid>https://freshrimpsushi.github.io/posts/zipfs-law/</guid>
      <description>코퍼스에서 $k$ 번째로 자주 나타나는 단어의 상대빈도를 $f_{k}$ 라고 하면 $\displaystyle f_{k} = {{C} \over {k}}$ 여기서 $C$ 는 $\displaystyle \sum_{k} f_{k} = 1$ 이 되도록하는 정규화계수다.히스토그램으로 나타내보면 대략 위와 같은 모양이되 넓이의 합이 정확하게 $1$ 이 되도록 스케일을 조정해준 것이다.오른쪽에 생기는 두꺼운 꼬리 모양을 롱테일이라고 부른다.힙스의 법칙과 마찬가지로 경험적으로 얻어진 법</description>
    </item>
    
    <item>
      <title>힙스의 법칙</title>
      <link>https://freshrimpsushi.github.io/posts/heaps-law/</link>
      <pubDate>Fri, 18 May 2018 00:00:00 +0000</pubDate>
      
      <guid>https://freshrimpsushi.github.io/posts/heaps-law/</guid>
      <description>코퍼스에서 어휘의 갯수를 $M$, 토큰의 갯수를 $T$ 라고 하면 $M = kT^{b}$ 코퍼스가 영어일 경우 보통 상수 $k,b$ 는 $10 \le k \le 100$, 그리고 $b = 0.5$ 정도로 나타난다고 한다.힙스의 법칙은 수학적인 근거를 두고 유도된 것이 아니라 경험적으로 얻어진 법칙이다.언뜻 굉장히 복잡해 보이지만 양변에 로그를 취하면 $\log M = \log k + b \log T$ 가 되고, 선형적인 관계를 갖는다.그림으로 그려</description>
    </item>
    
    <item>
      <title>n-그램과 자카드 계수</title>
      <link>https://freshrimpsushi.github.io/posts/n-gram-and-jaccard-coefficient/</link>
      <pubDate>Sat, 28 Apr 2018 00:00:00 +0000</pubDate>
      
      <guid>https://freshrimpsushi.github.io/posts/n-gram-and-jaccard-coefficient/</guid>
      <description>n-그램n-gram 이란 어떠한 문자열을 n개씩 끊어서 자른 것을 말한다.예를 들어 &amp;lsquo;오마이갓&amp;rsquo;이라는 문자열의 바이그램bi-gram이라면 &amp;lsquo;오마&amp;rsquo;, &amp;lsquo;마이&amp;rsquo;, &amp;lsquo;이갓&amp;rsquo; 이 된다.자카드 계수Jaccard Coefficient 란 두 집합이 얼마</description>
    </item>
    
    <item>
      <title>정수와 실수의 포맷 코드에 d f를 쓰는 이유 Why Format Codes uses d f for Integer and Real Number</title>
      <link>https://freshrimpsushi.github.io/posts/523/</link>
      <pubDate>Thu, 26 Apr 2018 00:00:00 +0000</pubDate>
      
      <guid>https://freshrimpsushi.github.io/posts/523/</guid>
      <description>점프 투 파이썬C 나 파이썬 등에서 문자열의 입출력에 사용하는 포맷 코드로 %s, %c, %d, %f 등이 있다. 알다시피 %s 은 문자열String을 나타내고 %c 는 문자Character를 나타낸다. 그런데 이렇게 머릿글자에서 따온 것과 달리 정수, 실수를 쓸 땐 %i 와 %r 이 아닌 %d 와 %f 를 사용한다.그 이유는 %d 가 그냥 정수가 아니라 10진법D ecimal을, %f 가 부</description>
    </item>
    
    <item>
      <title>리눅스에서 gcc 컴파일러로 c 코드 컴파일 하는 법 How to Compile c Code using gcc in linux</title>
      <link>https://freshrimpsushi.github.io/posts/1653/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://freshrimpsushi.github.io/posts/1653/</guid>
      <description>보통 C/C++을 이용한 프로그램 개발은 윈도우에서 비주얼 스튜디오를 쓰는 것이 권장되나, 간단한 테스트나 수치계산, 시뮬레이션 등을 리눅스로 진행할 때는 리눅스 특유의 가벼움이 큰 장점으로 다가올 때가 있다.가령 infection_modified_200428.c 이라는 c 소스코드가 있다면, 터미널에서 해당 경로로 이동한 뒤 다음과 같이 입력해보자.gcc -o infection infection_modified_200428.c -lm그러면 같은 경로에 i</description>
    </item>
    
    <item>
      <title>윈도우에서 ssh 서버 구축하는 법 How to construct ssh server in windows</title>
      <link>https://freshrimpsushi.github.io/posts/1445/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://freshrimpsushi.github.io/posts/1445/</guid>
      <description>윈도우는 10 버전에 들어 파워쉘PowerShell을 비롯하여 리눅스 특유의 편의 기능을 많이 제공하게 되었다. ssh 서버의 경우 GUI를 통해 아주 간단하게 설치할 수 있다.Step 1. 앱 및 기능Win+S 를 눌러 프로그램 추가/제거 나 앱 및 기능 을 찾아 선택적 기능 을 클릭한다.Step 2. OpenSSH 서버 설치기능 추가를 클릭하고 OpenSSH 서버 를 설치한다.Ste</description>
    </item>
    
    <item>
      <title>프로그래밍에서의 일급 객체</title>
      <link>https://freshrimpsushi.github.io/posts/first-class-object-in-programming/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://freshrimpsushi.github.io/posts/first-class-object-in-programming/</guid>
      <description>프로그래밍에서 일급 객체는 다음의 조건을 만족하는 요소를 말한다. (i)** 함수의 실제 매개변수가 될 수 있다. (ii)** 함수의 반환 값이 될 수 있다. (iii)** 할당 명령문의 대상이 될 수 있다. (iv)** 동일 비교의 대상이 될 수 있다. 쉽게 말해 보통 수처럼 다룰 수 있는 것을 일급 객체라고 하는데, 이는 자명하게도 &amp;lsquo;보통 수&amp;rsquo;라는 것이 일급 객체기 때문이다</description>
    </item>
    
    <item>
      <title>프로그래밍에서의 타입</title>
      <link>https://freshrimpsushi.github.io/posts/type-in-programming/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://freshrimpsushi.github.io/posts/type-in-programming/</guid>
      <description>(1) 타입의 탄생** : 변수를 선언할 때 타입을 지정해야하는 언어를 써본 적이 있다면 거의 확실히 띠꺼움도 함께 느껴봤을 것이다. 어떤 언어들은 굳이 타입이 뭔지 정해주지 않더라도 알아서 계산을 해주는데, 굳이 지저분하고 의미 없어 보이는 코드를 쓰는 것이 시간과 에너지의 낭비처럼 느껴지는 것이다.타입이 없던 시기의 프로그래밍 환경을 상상해보자. 컴퓨</description>
    </item>
    
  </channel>
</rss>
