<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>프로그래밍 on 생새우초밥집</title>
    <link>https://freshrimpsushi.github.io/categories/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%B0%8D/</link>
    <description>Recent content in 프로그래밍 on 생새우초밥집</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>ko</language>
    <lastBuildDate>Thu, 23 Sep 2021 00:00:00 +0000</lastBuildDate><atom:link href="https://freshrimpsushi.github.io/categories/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%B0%8D/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>리눅스에서 스왑 메모리 초기화하는 법</title>
      <link>https://freshrimpsushi.github.io/posts/how-to-initialize-swap-memory-in-linux/</link>
      <pubDate>Thu, 23 Sep 2021 00:00:00 +0000</pubDate>
      
      <guid>https://freshrimpsushi.github.io/posts/how-to-initialize-swap-memory-in-linux/</guid>
      <description>가이드 sudo swapoff -a sudo swapon -a 메모리가 부족한 문제를 스왑 메모리로 당장은 넘어갈 수 있지만, 관련된 작업이 끝났을 때 스왑 메모리를 비워주지 않으면 매우 버벅이는 현상이 있다. 스왑 메모리를 끌 때는 엔터 한 번에 사라지지 않고 조금씩 줄어드는 게 정상이니 시간이 걸려도 기다리도록 하자. 환경 Ubuntu 20.04 LTS</description>
    </item>
    
    <item>
      <title>matplotlib에서 Fail to create pixmap with TK_GetPixmap in TKImgPhotoInstanceSetSize 오류 해결하는 법</title>
      <link>https://freshrimpsushi.github.io/posts/solution-for-fail-to-create-pixmap-with-tk_getpixmap-in-tkimgphotoinstancesetsize-error/</link>
      <pubDate>Sun, 01 Aug 2021 00:00:00 +0000</pubDate>
      
      <guid>https://freshrimpsushi.github.io/posts/solution-for-fail-to-create-pixmap-with-tk_getpixmap-in-tkimgphotoinstancesetsize-error/</guid>
      <description>문제 import matplotlib.pyplot as plt import numpy as np for i in range(400): fig = plt.figure(figsize=(12, 12)) plt.plot(np.random.rand(10)) plt.savefig(&amp;quot;./plt_test/no_%d&amp;quot; %i) print(&amp;quot;test_%d&amp;quot; %i) 위와 같이 파이썬에서 matplotlib.pyplot로 그래프를 그려서 그것을 저장하는 코드를 실행중이라고 해보자. 369번째 figure를 생성하는 순간 출력창에서 다음과 같은 오류가 난다. test_366 test_367 test_368 Fail to create pixmap with TK_GetPixmap in TKImgPhotoInstanceSetSize 이는 Colob에서 실행할 때는 나타나지 않고 로컬에서 실행할 때</description>
    </item>
    
    <item>
      <title>2차원 배열의 행우선과 열우선</title>
      <link>https://freshrimpsushi.github.io/posts/row-major-and-column-major/</link>
      <pubDate>Sun, 02 May 2021 00:00:00 +0000</pubDate>
      
      <guid>https://freshrimpsushi.github.io/posts/row-major-and-column-major/</guid>
      <description>개요 1 행렬 혹은 2차원 배열의 행우선row-major, 열우선column-major에 대해 설명한다. 행우선이냐 열우선이냐는 쉽게 말해 배열을 참조하면서 어떤 반향으로 읽느냐를 선호하는지를 말한다. 차이점 위키피디아에 따르면 어떤 프로그래밍 언어와 라이브러리들은 다음과 같이 네이티브Native한 행/렬우선이 정해져있다고 한</description>
    </item>
    
    <item>
      <title>RGB 색상 치트 시트</title>
      <link>https://freshrimpsushi.github.io/posts/rgb-color-cheat-sheet/</link>
      <pubDate>Wed, 28 Apr 2021 00:00:00 +0000</pubDate>
      
      <guid>https://freshrimpsushi.github.io/posts/rgb-color-cheat-sheet/</guid>
      <description>개요 자주 사용되는 RGB색상표다. 코드 000000 R - 000 G - 000 B - 000 333333 R - 051 G - 051 B - 051 666666 R - 102 G - 102 B - 102 999999 R - 153 G - 153 B - 153 CCCCCC R - 204 G - 204 B - 204 FFFFFF R - 255 G - 255 B - 255 000033 R - 000 G - 000 B - 051 333300 R - 051 G - 051 B - 000 666600 R - 102 G - 102 B - 000 999900 R - 153 G - 153 B - 000 CCCC00 R - 204 G - 204 B - 000 FFFF00 R - 255 G - 255 B - 000 000066 R - 000 G - 000 B - 102 333366 R</description>
    </item>
    
    <item>
      <title>git warning: LF will be replaced by LF in … 해결법</title>
      <link>https://freshrimpsushi.github.io/posts/how-to-fix-warning-lf-will-be-replaced-by-lf-in/</link>
      <pubDate>Fri, 16 Apr 2021 00:00:00 +0000</pubDate>
      
      <guid>https://freshrimpsushi.github.io/posts/how-to-fix-warning-lf-will-be-replaced-by-lf-in/</guid>
      <description>명령 git config --global core.safecrlf false 리눅스랑 윈도우 차이 때문에 나오는 경고인데 무시하면 된다. 위와 같이 입력하면 된다.</description>
    </item>
    
    <item>
      <title>git 비밀번호 저장하는 법</title>
      <link>https://freshrimpsushi.github.io/posts/how-to-save-git-password/</link>
      <pubDate>Mon, 29 Mar 2021 00:00:00 +0000</pubDate>
      
      <guid>https://freshrimpsushi.github.io/posts/how-to-save-git-password/</guid>
      <description>명령 git config credential.helper store 위와 같이 입력하면 된다.</description>
    </item>
    
    <item>
      <title>줄리아, 매트랩, 파이썬, R에서 동등한 코드들</title>
      <link>https://freshrimpsushi.github.io/posts/equivalent-codes-in-julia-python-matlab-r/</link>
      <pubDate>Thu, 18 Feb 2021 00:00:00 +0000</pubDate>
      
      <guid>https://freshrimpsushi.github.io/posts/equivalent-codes-in-julia-python-matlab-r/</guid>
      <description>파이썬에 대해서 다음과 같은 환경이라고 하자. import numpy as np 일반 줄리아 매트랩 파이썬 R 주석 #comment %comment #comment #comment 2차원 그리드 [X,Y] = meshgrid(x,y) X,Y = np.meshgrid(x,y) 플래튼 y = vec(x) y = x(:) y = np.ravel(x) y = c(x) 영행렬 y = zeros(4,2) y = zeros(4,2) y = np.zeros([4,2]) y = matrix(0,4,2) 푸리에 변환 줄리아에 대해서 다음과 같은 환경이라고 하자. using FFTW 줄리아 매트랩 파이썬 R 푸리에 변환 y = fft(x) y = fft(x) y = np.fft.fft(x) y = fft(x) 역변환 변환 x = ifft(y) x = ifft(y) x</description>
    </item>
    
    <item>
      <title>리눅스에서 gcc 컴파일러로 c 코드 컴파일 하는 법 </title>
      <link>https://freshrimpsushi.github.io/posts/how-to-compile-c-code-using-gcc-in-linux/</link>
      <pubDate>Tue, 08 Sep 2020 00:00:00 +0000</pubDate>
      
      <guid>https://freshrimpsushi.github.io/posts/how-to-compile-c-code-using-gcc-in-linux/</guid>
      <description>가이드 보통 C/C++을 이용한 프로그램 개발은 윈도우에서 비주얼 스튜디오를 쓰는 것이 권장되나, 간단한 테스트나 수치계산, 시뮬레이션 등을 리눅스로 진행할 때는 리눅스 특유의 가벼움이 큰 장점으로 다가올 때가 있다. 가령 infection\_modified\_200428.c이라는 c 소스코드가 있다면, 터미널에서 해당 경로로 이동</description>
    </item>
    
    <item>
      <title>메타 프로그래밍</title>
      <link>https://freshrimpsushi.github.io/posts/what-is-meta-programming/</link>
      <pubDate>Tue, 21 Jan 2020 00:00:00 +0000</pubDate>
      
      <guid>https://freshrimpsushi.github.io/posts/what-is-meta-programming/</guid>
      <description>메타프로그래밍이란? 간단히 말해 프로그램이 코드를 수정하도록 하는 프로그래밍이라고 볼 수 있다. 정확하게 어떤 기법이라기보다는 그러한 개념 전반을 메타 프로그래밍이라고 부르는데, 어떤 프로그램이 다른 언어로 작성된 코드를 열어 &amp;lsquo;문자열&amp;rsquo;을 고치듯이 코드를 수정하거나 같은 언어끼리, 심지어는 스스로가 수정해도 모</description>
    </item>
    
    <item>
      <title>scp로 서버에 파일 업로드하고 서버에서 다운로드 받는 법</title>
      <link>https://freshrimpsushi.github.io/posts/how-to-use-scp-command/</link>
      <pubDate>Sun, 19 Jan 2020 00:00:00 +0000</pubDate>
      
      <guid>https://freshrimpsushi.github.io/posts/how-to-use-scp-command/</guid>
      <description>명령어 scp는 아마도 server copy의 줄임말로, ssh 서버를 사용할 때 업로드와 다운로드를 하는 커맨드다. 띄어쓰기와 @, :의 위치에 주의하도록 하자. 서버의 계정을 serverACC, 서버의 주소를 serverADD, 서버 내에서 파일을 업로드 하거나 다운로드 받을 디렉터리를 serverDIR, 내가 전송하고자 하는 파일 혹은 디렉터리를 Object, 다운로드 받을 때 내가 다운로드 받고자 하는 디렉터리를 loca</description>
    </item>
    
    <item>
      <title>윈도우에서 ssh 서버 구축하는 법</title>
      <link>https://freshrimpsushi.github.io/posts/how-to-construct-ssh-server-in-windows/</link>
      <pubDate>Wed, 01 Jan 2020 00:00:00 +0000</pubDate>
      
      <guid>https://freshrimpsushi.github.io/posts/how-to-construct-ssh-server-in-windows/</guid>
      <description>개요 윈도우는 10 버전에 들어 파워쉘PowerShell을 비롯하여 리눅스 특유의 편의 기능을 많이 제공하게 되었다. ssh 서버의 경우 GUI를 통해 아주 간단하게 설치할 수 있다. 가이드 **Step 1. 앱 및 기능 Win+S 를 눌러 프로그램 추가/제거 나 앱 및 기능 을 찾아 선택적 기능 을 클릭한다. Step 2. OpenSSH 서버 설치 기능 추가를 클릭하고 OpenSSH 서버 를 설치한다. Step 3. PowerShell Power</description>
    </item>
    
    <item>
      <title>파이썬에서 is와 ==의 차이점</title>
      <link>https://freshrimpsushi.github.io/posts/how-different-is-and-in-python/</link>
      <pubDate>Tue, 31 Dec 2019 00:00:00 +0000</pubDate>
      
      <guid>https://freshrimpsushi.github.io/posts/how-different-is-and-in-python/</guid>
      <description>코드 if type(150421) is int : print(&amp;quot;!&amp;quot;) else : print(&amp;quot;?&amp;quot;) x = [1,2] y = [1,2] x == y x is y 설명 깃허브에서 파이썬 코드를 보다보면 간혹 is라는 게 보이기도 한다. 코드가 문장처럼 편안하게 읽히는 것은 둘째치더라도 ==와는 분명한 차이가 있어 적재적소에 사용하면 좋다: ==는 단순하게 값을 비교한다. 우리에게 실제로 보이는 모습을 비교하기 때문에 직관적이다. is는 포인터가 가리키</description>
    </item>
    
    <item>
      <title>파이썬에서 두 변수값 서로 바꾸는 법</title>
      <link>https://freshrimpsushi.github.io/posts/how-to-swap-two-variables-in-python/</link>
      <pubDate>Sat, 28 Dec 2019 00:00:00 +0000</pubDate>
      
      <guid>https://freshrimpsushi.github.io/posts/how-to-swap-two-variables-in-python/</guid>
      <description>코드 변수끼리의 스왑은 흔히 아는 것처럼 임시 변수를 만들어서 옮기는 방식으로 쉽게 구현이 가능하지만, 여러가지 프로그래밍 언어를 다루는 입장에서 포인터를 주고받으면서 변수를 바인딩하는 파이썬의 특성상 이러한 방법이 잘 되는지 확신하기도 어렵고 일일이 변수를 스왑하는 함수를 작성하는 것 귀찮은 일이다. 다음과 같이 파이썬 문법 그 자체로 쉽게 해결해</description>
    </item>
    
    <item>
      <title>파이썬에서 numpy array로 행병합 열병합하는 법</title>
      <link>https://freshrimpsushi.github.io/posts/how-to-bind-in-row-or-column-numpy-array/</link>
      <pubDate>Mon, 02 Dec 2019 00:00:00 +0000</pubDate>
      
      <guid>https://freshrimpsushi.github.io/posts/how-to-bind-in-row-or-column-numpy-array/</guid>
      <description>코드 import numpy as np a = np.array([[1,2,3]]) b = np.array([[4,5,6]]) print(a) print(b) print(np.c_[a,b]) print(np.r_[a,b]) 파이썬의 numpy 패키지는 무척 편리한 기능을 많이 제공한다. 다음의 스크린샷에서 보이다시피 객체 numpy.c_와 numpy.r_는 대괄호 [] 안에 들어간 배열들을 각각 열(column)병합, 행(row)병합한 배열이다. 여기서 이들이 메서드가 아님을 분명히 하고 넘어가자. 마치 메서드처럼 쓰고 있지만</description>
    </item>
    
    <item>
      <title>파이썬에서 큰 csv 파일 한번에 읽는 법</title>
      <link>https://freshrimpsushi.github.io/posts/how-to-read-big-data-csv-file-in-python/</link>
      <pubDate>Fri, 29 Nov 2019 00:00:00 +0000</pubDate>
      
      <guid>https://freshrimpsushi.github.io/posts/how-to-read-big-data-csv-file-in-python/</guid>
      <description>코드 y_test=[] y_csv = open(&#39;y_test.csv&#39;, &#39;r&#39;, encoding=&#39;utf-8&#39;) rdr = csv.reader(y_csv) for line in rdr: y_test.append(line[0]) y_csv.close() 보통 csv 파일을 읽어들일 때는 위와 같이 파이썬 내장함수 open으로 열어서 한줄한줄 처리하지만, 반복문을 사용하는 시점에서 빅데이터의 처리에는 적합하지 않음을 짐작할 수 있다. 가령 700MB가 넘는 파일이라면 사실 별로 크지도 않은 편이지만 한줄한줄 읽어서는 끝이 없다. pandas 패키지 이런 데이터를 다룰 때는 pandas</description>
    </item>
    
    <item>
      <title>파이썬에서 pip로 cv2 PIL 패키지 설치하는 법</title>
      <link>https://freshrimpsushi.github.io/posts/how-to-install-cv2-pil-package-in-python-using-pip/</link>
      <pubDate>Tue, 26 Nov 2019 00:00:00 +0000</pubDate>
      
      <guid>https://freshrimpsushi.github.io/posts/how-to-install-cv2-pil-package-in-python-using-pip/</guid>
      <description>가이드 openCV 패키지와 PIL 패키지는 이미지 처리에 유용한 패키지다. 문제는 보통 예제 코드에서 두 패키지를 불러들일 때 cv2, PIL라고 하는데 막상 파이썬에서 pip를 이용해서 설치하려고하면 에러를 낸다는 것이다. 이는 파이썬에서 불러들일때의 이름과 설치할 때의 이름이 다르기 때문이다. openCV 스크린샷에서 보이는 것과 같이 openCV를 설치하기 위해서는</description>
    </item>
    
    <item>
      <title>프로그래밍에서의 일급 객체</title>
      <link>https://freshrimpsushi.github.io/posts/first-class-object-in-programming/</link>
      <pubDate>Sat, 09 Nov 2019 00:00:00 +0000</pubDate>
      
      <guid>https://freshrimpsushi.github.io/posts/first-class-object-in-programming/</guid>
      <description>정의 프로그래밍에서 일급 객체First Class Object는 다음의 조건을 만족하는 요소를 말한다. (i) 함수의 실제 매개변수가 될 수 있다. (ii) 함수의 반환 값이 될 수 있다. (iii) 할당 명령문의 대상이 될 수 있다. (iv) 동일 비교의 대상이 될 수 있다. 예시 쉽게 말해 보통 수처럼 다룰 수 있는 것을 일급 객체라고 하는데, 이는 자명하게도 &amp;lsquo;보통 수&amp;rsq</description>
    </item>
    
    <item>
      <title>프로그래밍에서의 타입</title>
      <link>https://freshrimpsushi.github.io/posts/type-in-programming/</link>
      <pubDate>Thu, 07 Nov 2019 00:00:00 +0000</pubDate>
      
      <guid>https://freshrimpsushi.github.io/posts/type-in-programming/</guid>
      <description>타입의 탄생 변수를 선언할 때 타입을 지정해야하는 언어를 써본 적이 있다면 거의 확실히 띠꺼움도 함께 느껴봤을 것이다. 어떤 언어들은 굳이 타입이 뭔지 정해주지 않더라도 알아서 계산을 해주는데, 굳이 지저분하고 의미 없어 보이는 코드를 쓰는 것이 시간과 에너지의 낭비처럼 느껴지는 것이다.타입이 없던 시기의 프로그래밍 환경을 상상해보자. 컴퓨터가 이해</description>
    </item>
    
    <item>
      <title>프로그래밍 패러다임</title>
      <link>https://freshrimpsushi.github.io/posts/programming-paradigm/</link>
      <pubDate>Tue, 05 Nov 2019 00:00:00 +0000</pubDate>
      
      <guid>https://freshrimpsushi.github.io/posts/programming-paradigm/</guid>
      <description>정의 프로그래밍 패러다임Programming Paradigm이란 주어진 문제를 해결하는 프로그램을 작성할 때의 관점 내지 방법론을 말한다. 어떠한 패러다임에 알맞는 프로그래밍 언어는 그러한 프로그래밍 패러다임을 갖는다고 말하며, 대개의 언어는 하나의 패러다임을 갖는다. 여러 패러다임을 갖는 언어를 멀티 패러다임 언어라고 한다. 언어가</description>
    </item>
    
    <item>
      <title>윈도에서 명령 프롬프트로 파일 목록 얻는 법</title>
      <link>https://freshrimpsushi.github.io/posts/how-to-get-file-list-using-cmd-in-windows/</link>
      <pubDate>Thu, 30 May 2019 00:00:00 +0000</pubDate>
      
      <guid>https://freshrimpsushi.github.io/posts/how-to-get-file-list-using-cmd-in-windows/</guid>
      <description>개요 복수의 데이터를 취합하는 프로그램을 짤 때 파일이 너무 많아서 문제가 될 수 있다. 물론 어느 프로그래밍 언어이든 이를 해결하는 방법은 각자 있겠지만, 반복할 필요가 없거나 너무 다양한 언어를 사용하는 경우 임시적인 해결법이 큰 도움이 된다. 윈도의 명령 프롬프트를 통해 쉽고 빠르게 해보자. 가이드 **Step 1. 주소 복사 파일 목록이 필요한 폴더로 들어가 주소를</description>
    </item>
    
    <item>
      <title>윈도에서 파이썬 텐서플로우 설치하는 법</title>
      <link>https://freshrimpsushi.github.io/posts/how-to-install-tensorflow-in-windows/</link>
      <pubDate>Thu, 04 Apr 2019 00:00:00 +0000</pubDate>
      
      <guid>https://freshrimpsushi.github.io/posts/how-to-install-tensorflow-in-windows/</guid>
      <description>가이드 텐서플로우를 설치할 때 문제가 생기는 경우는 보통 파이썬을 잘못 설치했기 때문이다. 시작하기 전에 파이썬을 삭제하고 처음부터 다시 시작하거나, 가능하다면 컴퓨터를 한 번 밀어두는 것을 추천한다. **Step 1. 파이썬 **Step 1-1. 비트 확인 제어판/모든 제어판 항목/시스템 혹은 내 PC(우클릭)-속성을 통해 시스템 정보를 확인하자.요즘은 대개 64비트기</description>
    </item>
    
    <item>
      <title>리눅스 포트란 컴파일 후 aout 실행법</title>
      <link>https://freshrimpsushi.github.io/posts/how-to-execute-aout-file-after-fortran-complie/</link>
      <pubDate>Wed, 23 Jan 2019 00:00:00 +0000</pubDate>
      
      <guid>https://freshrimpsushi.github.io/posts/how-to-execute-aout-file-after-fortran-complie/</guid>
      <description>가이드 확장자가 .f90인 파일 exameple.f90 을 컴파일하려면 콘솔창에서 gfortran example.f90 을 입력하면 된다. 실행하고 나면 같은 디렉터리에 a.out 라는 파일이 생긴다. 콘솔창에서 ./a.out 을 입력하면 콘솔창에서 프로그램이 실행되는 것을 확인할 수 있다.</description>
    </item>
    
    <item>
      <title>파이썬으로 웹 문서 크롤링하고 태그 제거하기</title>
      <link>https://freshrimpsushi.github.io/posts/how-to-crawl-web-site-and-remove-html-tag-using-python/</link>
      <pubDate>Tue, 29 May 2018 00:00:00 +0000</pubDate>
      
      <guid>https://freshrimpsushi.github.io/posts/how-to-crawl-web-site-and-remove-html-tag-using-python/</guid>
      <description>개요 파이썬은 크롤링을 위한 패키지가 잘 갖춰져있어 쉽게 따라할 수 있다. 웹 페이지를 읽어들이고 html 태그를 제거해보자. 예제 코드 import requests from bs4 import BeautifulSoup import re rq = requests.get(&amp;quot;https://ko.wikipedia.org/wiki/%EC%98%A4%EB%A7%88%EC%9D%B4%EA%B1%B8&amp;quot;) rqctnt = rq.content soup = BeautifulSoup(rqctnt,&amp;quot;html.parser&amp;quot;) OMG = str(soup.find\_all(&amp;quot;p&amp;quot;)) OMG = re.sub(&#39;&amp;lt;.+?&amp;gt;&#39;, &#39;&#39;, OMG, 0).strip() 결과 예제로 위키피디아에서 오마이걸 항목을 읽어와보도록 하자. 필요한 패키지는 보이는대로 requests와 bs4가 있다. 읽어들이기만 하고 출력해보면</description>
    </item>
    
    <item>
      <title>정수와 실수의 포맷 코드에 d, f를 쓰는 이유</title>
      <link>https://freshrimpsushi.github.io/posts/why-format-codes-uses-d-f-for-integer-and-real-number/</link>
      <pubDate>Thu, 26 Apr 2018 00:00:00 +0000</pubDate>
      
      <guid>https://freshrimpsushi.github.io/posts/why-format-codes-uses-d-f-for-integer-and-real-number/</guid>
      <description>왜 하필 d와 f인가 1 C 나 파이썬 등에서 문자열의 입출력에 사용하는 포맷 코드로 %s, %c, %d, %f 등이 있다. 알다시피 %s 은 문자열String을 나타내고 %c 는 문자Character를 나타낸다. 그런데 이렇게 머릿글자에서 따온 것과 달리 정수, 실수를 쓸 땐 %i 와 %r 이 아닌 %d 와 %f 를 사용한다. 그 이유는 %d 가 그냥 정수가 아니라 10진법Decimal을,</description>
    </item>
    
  </channel>
</rss>
