<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>그래프 이론 on 생새우초밥집</title>
    <link>https://freshrimpsushi.github.io/categories/%EA%B7%B8%EB%9E%98%ED%94%84-%EC%9D%B4%EB%A1%A0/</link>
    <description>Recent content in 그래프 이론 on 생새우초밥집</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>ko</language><atom:link href="https://freshrimpsushi.github.io/categories/%EA%B7%B8%EB%9E%98%ED%94%84-%EC%9D%B4%EB%A1%A0/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>4색 지도 문제</title>
      <link>https://freshrimpsushi.github.io/four-color-map-problem/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://freshrimpsushi.github.io/four-color-map-problem/</guid>
      <description>4색 지도 문제 란 어떤 지도든 이웃된 구역이 서로 구별되도록 채색하는데 4가지 색이면 충분한지 묻는 문제다. 지도가 복잡할수록 색은 많아져야할 것 같지만, 바로 옆이랑만 다르면 되기 때문에 생각보다 많은 색이 필요하지는 않다. 예를 들어 다음은 세계지도를 단 $4$가지 색으로 칠한 것이다.역사적으로 4색 지도 문제는 1852년 영국의 식물학자 프랜시</description>
    </item>
    
    <item>
      <title>5색 정리 증명</title>
      <link>https://freshrimpsushi.github.io/proof-of-five-color-theorem/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://freshrimpsushi.github.io/proof-of-five-color-theorem/</guid>
      <description>모든 심플 평면 그래프는 $5$-채색가능하다.이 정리는 4색 문제와 구분하는 의미에서 5색 정리 라는 이름이 붙었다. 역사적으로는 4색 정리를 증명하려고 했지만 증명에 번번히 실패했고, 대신 조금 완화된 팩트로써 증명되었다.Strategy : 수학적 귀납법을 사용한다. $n-1$ 개의 버텍스를 가진 심플 평면 그래프가 모두 $5$-채색가능하다고 가</description>
    </item>
    
    <item>
      <title>그래프 이론에서의 디락 정리 증명</title>
      <link>https://freshrimpsushi.github.io/proof-of-diracs-theorem/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://freshrimpsushi.github.io/proof-of-diracs-theorem/</guid>
      <description>$G$ 가 $n ( \ge 3)$ 개의 버텍스를 가진 심플 그래프라고 하자.[1] 디락 정리 : $G$ 의 모든 버텍스 $v$ 에 대해 $\deg (v) \ge n / 2$ 면 $G$ 는 해밀톤 그래프다.[2] 오레 정리 : $G$ 의 모든 인접하지 않은 두 버텍스의 쌍 $(v ,w)$ 에 대해 $\deg (v) + \deg(w) \ge n$ 면 $G$ 는 해밀톤 그래프다.디락 정리 는 해밀톤 그래프의 동치조건까지는 아니지만 어떤 경우에 충분히 해밀톤 그래프인지를 판별해내</description>
    </item>
    
    <item>
      <title>그래프 이론에서의 워크 트레일 패스 사이클</title>
      <link>https://freshrimpsushi.github.io/walk-trail-path-cycle/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://freshrimpsushi.github.io/walk-trail-path-cycle/</guid>
      <description>그래프 $G$ 가 주어져 있다고 하자.1. 에지의 유한 시퀀스를 워크 라고 하고 다음과 같이 나타낸다. $$ v_{0} v_{1} , v_{1} v_{2} , \cdots , v_{m-1} v_{m} \\ v_{0} \rightarrow v_{1} \rightarrow v_{2} \rightarrow \cdots \rightarrow v_{m-1} \rightarrow v_{m} $$ 이 때 $v_{0}$ 을 **시점**Initial Vertex , $v_{m}$ 을 **종점**Final Vertex 이라 하고 $m$ 을 **길이**Length 라 부른다.**2.** 워크의 에지가 모두 다르면 **트레일** 이라고 한다</description>
    </item>
    
    <item>
      <title>그래프 이론에서의 지도</title>
      <link>https://freshrimpsushi.github.io/map-of-graph-theory/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://freshrimpsushi.github.io/map-of-graph-theory/</guid>
      <description>1. $3$-연결 평면 그래프를 지도 라 정의한다.2. 같은 에지를 사이에 두고 이웃한 페이스끼리 다른 색이 되도록 $k$ 개의 색을 칠할 수 있는 지도를 $k$-페이스 채색가능 지도 라고 한다.3. 기존의 $k$-채색가능 그래프를 $k$-버텍스 채색가능 그래프 라고 한다. * 평면 그래프가 그려지면서 평면 상에서 구분되는 영역들을 페이스 라고 부른다.1</description>
    </item>
    
    <item>
      <title>그래프 이론에서의 차수</title>
      <link>https://freshrimpsushi.github.io/degree-in-graph-theory/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://freshrimpsushi.github.io/degree-in-graph-theory/</guid>
      <description>그래프 $G$ 가 주어져있다고 하자.1. $G$ 가 유향 그래프라 하자. 에지 $vw$ 가 존재하면 에지가 $v$ 에서 나가고 $w$ 로 들어간다 고 말한다.1-1. 버텍스 $v$ 로 들어오는 에지의 수를 입력 차수Indegree 라 하고 $\deg^{-} (v)$ 와 같이 나타낸다.1-2. 버텍스 $v$ 에서 나가는 에지의 수를 출력 차수Outdegree 라 하고 $\deg^{+}(v)$ 와 같이 나타낸다.1-3. $\deg^{-} (v) = 0$ 인</description>
    </item>
    
    <item>
      <title>그래프 컬러링과 브룩스 정리</title>
      <link>https://freshrimpsushi.github.io/graph-coloring-and-brooks-theorem/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://freshrimpsushi.github.io/graph-coloring-and-brooks-theorem/</guid>
      <description>루프가 없는 그래프 $G$ 에 대해 다음과 같은 함수 $f : V(G) \to [k]$ 를 $G$ 의 $k$-컬러링 이라고 한다. $$ u \sim v \implies f(u) \ne f(v) $$ 그래프 $G$ 가 $k$-컬러링을 가지면 $k$-채색가능 이라고도 한다. 만약 $k$-채색가능인데 $(k-1)$-채색가능하지 않으면 그 $k$ 를 $G$ 의 크로마틱 수Chromatic Number 라 부르고 $\chi(G) = k$ 와 같이 나타낸다. 크로마틱 수가</description>
    </item>
    
    <item>
      <title>그래프 컴플리먼트</title>
      <link>https://freshrimpsushi.github.io/complement-of-graph/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://freshrimpsushi.github.io/complement-of-graph/</guid>
      <description>심플 그래프 $G$ 에 대해 다음을 만족하는 그래프 $\overline{G}$ 를 $G$ 의 컴플리먼트 라고 한다. $$ V \left( \overline{G} \right) = V(G) \\ vw \in E \left( \overline{G} \right) \iff vw \notin E(G) $$ 보통의 수학에서 컴플리먼트Complement 가 그러하듯 그래프의 컴플리먼트는 補(도울 보)의 개념을 의미한다. 한국어 순화로는 여그래프Complement Graph 가 될텐데, 다 마음에 들지 않아서 그냥 컴플리먼트라 쓴다</description>
    </item>
    
    <item>
      <title>그래프에서의 거리 네이버후드 지름 둘레</title>
      <link>https://freshrimpsushi.github.io/distance-neighborhood-diameter-girth-in-graph/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://freshrimpsushi.github.io/distance-neighborhood-diameter-girth-in-graph/</guid>
      <description>그래프 $G$ 에서 시점이 $v \in V(G)$ 고 종점이 $w \in V(G)$ 인 패스의 집합을 $P(v,w)$ 이라 하고 $v \in V(G) $ 를 포함하는 사이클의 집합을 $C(v)$ 라 하자. 그리고 워크 $x$ 의 길이를 $l(x)$ 과 같이 나타내자.1. 두 버텍스 $v,w \in V(G)$ 사이의 거리 $d$ 는 $v$ 가 시점이고 $w$ 가 종점인 패스의 길이 중 가장 작은 값으로 정의된다. 다시 말해, $$ d(v,w) := \min_{v,w \in V(G)} \left\{ l(x) : x \in P(v,w) \right\} $$ **2.** 버텍스 $v \in V(G)$ 에 대해 $v$ 와의 거리</description>
    </item>
    
    <item>
      <title>그래프의 k-연결성과 멩거 정리 k-connected and Menger Theorem</title>
      <link>https://freshrimpsushi.github.io/1576/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://freshrimpsushi.github.io/1576/</guid>
      <description>주어진 그래프 $G$ 에 대해 컴포넌트의 수를 $\text{comp} (G)$ 라고 나타내자.1-1. 다음을 만족하는 에지의 집합 $D \subset E(G)$ 를 $G$ 의 단절 집합Disconnecting Set 이라 한다. $$ \text{comp} \left( G \setminus D \right) &amp;gt; \text{comp}(G) $$ 1-2. $G$ 단절 집합 중 단절 집합이 아닌 진부분집합을 갖지 않는 단절 집합을 $G$ 의 컷셋Cutset 이라고 부른다.1-3. $G$ 가 연결 그래프라고 할 때, (에지) 컷셋의</description>
    </item>
    
    <item>
      <title>그래프의 아이소멀피즘</title>
      <link>https://freshrimpsushi.github.io/isomorphism-of-graphs/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://freshrimpsushi.github.io/isomorphism-of-graphs/</guid>
      <description>추상대수학에서의 아이소멀피즘그래프 호메오멀피즘두 그래프 $G_{1}$ 와 $G_{2}$ 가 주어져 있다고 하자. $V(G_{1})$ 과 $V(G_{2})$ 사이에 전단사가 존재하고 $G_{1}$ 의 버텍스끼리의 에지의 수와 그에 대응하는 $G_{2}$ 의 버텍스끼리의 에지의 수가 같으면 그 전단사를 **아이소멀피즘** 이라 하고 두 그래프가 **아이소멀픽** 하다고 한다. 다시 말해, 다음을 만족하는 전단사 $\phi : G_{1} \to G_{2}$ 를 아</description>
    </item>
    
    <item>
      <title>그래프의 오리엔테이션</title>
      <link>https://freshrimpsushi.github.io/orientation-of-graph/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://freshrimpsushi.github.io/orientation-of-graph/</guid>
      <description>유향 그래프 $D$ 가 주어져 있다고 하자.1. 아크의 유한 시퀀스를 유향 워크Directed Walk 라고 하고 다음과 같이 나타낸다. $$ v_{0} v_{1} , v_{1} v_{2} , \cdots , v_{m-1} v_{m} \\ v_{0} \rightarrow v_{1} \rightarrow v_{2} \rightarrow \cdots \rightarrow v_{m-1} \rightarrow v_{m} $$ 이 때 $v_{0}$ 을 **시점**Initial Vertex , $v_{m}$ 을 **종점**Final Vertex 이라 하고 $m$ 을 **길이**Length 라 부른다.**2.** 유향 워크의 아크가 모두</description>
    </item>
    
    <item>
      <title>그래프의 집합 표현</title>
      <link>https://freshrimpsushi.github.io/set-representation-of-graph/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://freshrimpsushi.github.io/set-representation-of-graph/</guid>
      <description>두 그래프 $G_{1}$ 과 $G_{2}$ 에 대해 $V(G_{1}) \cap V(G_{2}) = \emptyset$ 이라고 하자. 그러면 두 그래프의 **유니언**Union $G = G_{1} \cup G_{2}$ 은 버텍스 셋 $V(G_{1}) \cup V(G_{2})$ 과 에지 셋 $E (G_{1}) \cup E ( G_{2} )$ 을 가지는 그래프다. 그래프 $H$ 가 그래프들의 유니언으로 표현될 수 없으면 $H$ 를 **연결되었다**Connected 고 하고, 그 외에는 **단절되었다**Disconnected 고 한다. 단</description>
    </item>
    
    <item>
      <title>그래프의 행렬 표현</title>
      <link>https://freshrimpsushi.github.io/matrix-representation-of-graph/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://freshrimpsushi.github.io/matrix-representation-of-graph/</guid>
      <description>주어진 그래프 $G$ 에 대해 다음과 같이 구해지는 정방행렬 $A$ 를 인접 행렬Adjacent Matrix 이라고 한다. $$ A:= (a_{ij}) = \begin{cases} 1 &amp;amp;, ij \in E(G) \\ 0 &amp;amp;,ij \notin E(G) \end{cases} $$ 인접 행렬은 이산적으로도 풍부한 성질을 가지면서 행렬의 꼴을 하고 있기 때문에 선형 대수의 여러가지 이론을 접목시킬 수 있다. 특히 그 고유값은 네트워크를 응용하는 여러 모델에서 자주 언급된다.가령 위와 같은 그</description>
    </item>
    
    <item>
      <title>그래프의 호메오멀피즘</title>
      <link>https://freshrimpsushi.github.io/homeomorphism-of-graphs/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://freshrimpsushi.github.io/homeomorphism-of-graphs/</guid>
      <description>위상수학에서의 호메오멀피즘그래프 아이소멀피즘두 그래프 $G_{1}$ 와 $G_{2}$ 가 주어져 있다고 하자. $G_{1}$ 의 어떤 세분 $G_{1}&#39;$ 과 $G_{2}$ 의 어떤 세분 $G_{2}&#39;$ 에 대해 그래프 아이소멀피즘이 존재하면 $G_{1}$ 와 $G_{2}$ 가 **호메오멀픽** 하다고 한다. * 그래프 $G$ 에 다음과 같은 조건을 만족하는 버텍스 $w$ 들을 차례로 추가한 그래프를 $G$ 의 **세분**Subdivision $G&#39;$ 이라 한다. $$</description>
    </item>
    
    <item>
      <title>기하적 듀얼 그래프</title>
      <link>https://freshrimpsushi.github.io/geometric-dual-graph/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://freshrimpsushi.github.io/geometric-dual-graph/</guid>
      <description>주어진 평면 그래프 $G$ 에 대해 기하적 듀얼 그래프 $G^{}$ 는 다음과 같이 만들어진다.Step 1. $G$ 의 각 페이스 $f$ 에 대응되는 버텍스 $v^{}$ 를 찍는다.Step 2. $G$ 의 각 에지 $e$ 와 겹치도록 대응되는 에지 $e^{}$ 를 긋는다.Step 3. 원래의 그래프는 지우고 $v^{}$ 와 $e^{}$ 로 이루어진 그래프를 $G^{}$ 로 둔다. * 평면 그래프가 그려지면서 평면 상에서 구분되는 영역들을 페이스 라고 부</description>
    </item>
    
    <item>
      <title>널 그래프와 컴플리트 그래프</title>
      <link>https://freshrimpsushi.github.io/null-graph-and-complete-graph/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://freshrimpsushi.github.io/null-graph-and-complete-graph/</guid>
      <description>심플 그래프 $G$ 가 주어져 있다고 하자.1. $E(G) = \emptyset$ 이면 $G$ 를 널 그래프 라고 한다.2. $E \left( \overline{G} \right) = \emptyset$ 이면 $G$ 를 컴플리트 그래프 라고 한다.1. 널 그래프 는 말 그대로 비어있는 그래프를 의미한다. 여기서 Empty(빌 공, 空)이 아니라 Null(영 영, 零)이라는 표현을 쓴 이유는 실제로 $G \ne \emptyset$ 일지라도 그래프로써 아무런 의미가 없기 때문이다. 예컨</description>
    </item>
    
    <item>
      <title>레귤러 그래프</title>
      <link>https://freshrimpsushi.github.io/regular-graph/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://freshrimpsushi.github.io/regular-graph/</guid>
      <description>1. 모든 버텍스의 차수가 같은 그래프를 레귤러 그래프 라고 한다. 특히 모든 버텍스의 차수가 $r$ 이면 $r$-레귤러 그래프 라고 한다. 다시 말해, 다음을 만족시키는 그래프 $G$ 를 $r$-레귤러 그래프라고 한다. $$ \deg (v) = r \qquad , \forall v \in V(G) $$ 2. $2$-레귤러 연결 그래프를 사이클Cycle 이라고 한다.1. 레귤러 그래프 의 예로써 다음과 같은 것들을 생</description>
    </item>
    
    <item>
      <title>레이블 트리와 케일리 정리</title>
      <link>https://freshrimpsushi.github.io/labeled-tree-and-cayley-theorem/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://freshrimpsushi.github.io/labeled-tree-and-cayley-theorem/</guid>
      <description>각 버텍스에 서로 다른 수가 부여된 트리를 레이블 트리 라고 한다.레이블은 버텍스의 집합과 같이 실제로 원소가 같은지 다른지 구분하는 것과는 다른 개념이다. 가령 다음의 두 그래프는 쓰여있기는 달라도 본질적으로 같은 레이블 트리로 볼 수 있다. $$ 1-2-3 \\ a-b-c $$ 물론 그래프기 때문에 다음의 두 경우는 서로 같다. $$ 1-2-3 \\ 3-2-1 $$ 그러나 다음 두 그래프는 레이블이 부여된</description>
    </item>
    
    <item>
      <title>무한 그래프</title>
      <link>https://freshrimpsushi.github.io/infinite-graph/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://freshrimpsushi.github.io/infinite-graph/</guid>
      <description>1. 그래프 $G$ 의 버텍스 집합 $V(G)$ 나 에지 집합 $E(G)$ 가 무한 집합이면 $G$ 를 무한 그래프 라고 한다.2. $V(G)$ 와 $E(G)$ 가 모두 가산 집합인 무한 그래프 $G$ 를 가산 그래프Countable Graph 라고 한다.3. 무한 그래프 $G$ 의 버텍스 $v \in V(G)$ 에 대해 $A(v)$ 를 다음과 같이 정의하자. $$ A(v) := \left\{ w : vw \in E(G) \right\} $$ 무한 그래프 $G$ 의 버텍스의 차수는 다음과 같이 $A(v)$ 의 기수로 정의한다. $$ \deg (v)</description>
    </item>
    
    <item>
      <title>서브 그래프</title>
      <link>https://freshrimpsushi.github.io/subgraph/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://freshrimpsushi.github.io/subgraph/</guid>
      <description>그래프 $G$ 에 대해서 그래프 $H$ 가 $V(H) \subset V(G) $ 와 $ E(H) \subset E(G)$ 를 만족하면 $H$ 가 $G$ 의 서브 그래프 라고 한다.주의해야하는 것은 $H$ 가 $G$ 의 서브 그래프라고 $H \subset G$ 와 같이 나타내면 안 된다는 것이다. 서브 그래프는 직접적으로 그래프 이론에서 어떤 관심의 대상이 된다기보단 당연하고 상식적인 용어로써 의미가 있다. 서브 그래프를 정의함으로써 생각할 수 있는 것들의 예시</description>
    </item>
    
    <item>
      <title>수학에서의 그래프와 네트워크</title>
      <link>https://freshrimpsushi.github.io/graph-and-network-in-mathematics/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://freshrimpsushi.github.io/graph-and-network-in-mathematics/</guid>
      <description>1. 정점과 정점들을 연결한 선들로 이루어진 집합을 그래프 혹은 네트워크 라고 한다. 정점들의 집합을 $V$, 선들의 집합을 $E$ 라고 하자.2. $V(G) := V$ 의 원소를 $G$ 의 버텍스Vertex 혹은 노드Node 라고 한다.3. $E(G) := E$ 의 원소를 $G$ 의 에지Edge 라고 혹은 링크Link 라고 한다.4. 자기 자신으로 이어진 에지를 루프Loop 라고 한다.5. 두 버텍</description>
    </item>
    
    <item>
      <title>심플 평면 그래프의 성질</title>
      <link>https://freshrimpsushi.github.io/properties-of-simple-planar-graphs/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://freshrimpsushi.github.io/properties-of-simple-planar-graphs/</guid>
      <description>$G$ 가 심플 평면 그래프라고 하자.[1] $G$ 가 연결 그래프고 $n \ge 3$ 개의 버텍스, $m$ 개의 에지를 가지면 $m \le 3n - 6$[2] 모든 심플 평면 그래프 $G$ 는 $\deg v \le 5$ 인 버텍스 $v \in V(G)$ 를 가진다.증명[1] 평면 그래프의 각 페이스는 적어도 세 개의 에지로 둘러싸여있다고 하자.가장 간단한 케이스로 컴플리트 그래프 $K_{3}$ 만 달랑 있다면 에지 $m=3$ 에 페이스 $f=2$ 고, 여기서 페이스가</description>
    </item>
    
    <item>
      <title>악수 딜레마 증명</title>
      <link>https://freshrimpsushi.github.io/proof-of-handshaking-dilemma/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://freshrimpsushi.github.io/proof-of-handshaking-dilemma/</guid>
      <description>임의의 유향 그래프에서, 입력 차수의 합과 출력 차수의 합은 같다.악수 딜레마는 유향 그래프에서의 악수 렘마라고 할 수 있다.증명 유향 그래프에서 출력 차수의 합은 아크의 수와 같다. 아크는 하나의 버텍스에서 나오고 하나의 버텍스로 들어가므로, 출력 차수와 입력 차수의 합은 같다.■</description>
    </item>
    
    <item>
      <title>악수 렘마 증명</title>
      <link>https://freshrimpsushi.github.io/proof-of-handshaking-lemma/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://freshrimpsushi.github.io/proof-of-handshaking-lemma/</guid>
      <description>임의의 그래프에서, 모든 버텍스의 차수의 합은 짝수다.이름의 &amp;lsquo;악수&amp;rsquo;는 보다시피 각각의 버텍스가 인접한 버텍스와 악수를 한다고 했을 때, 그 횟수가 바로 차수의 합이기 때문에 붙은 것이다.증명 그래프 $G$ 에 대해 모든 차수의 합은 정확하게 모든 에지의 수의 두 배여야하므로 $$ \sum_{v \in V(G)} \deg (v) = 2 \left| E(G) \right| $$ ■ 위의 증명에서 곧바로 다</description>
    </item>
    
    <item>
      <title>앤더슨-리빙스톤 정리 증명</title>
      <link>https://freshrimpsushi.github.io/proof-of-anderson-livingston-theorem/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://freshrimpsushi.github.io/proof-of-anderson-livingston-theorem/</guid>
      <description>$R$ 이 유니티 $1$ 을 가지는 가환 링이고 그 영인자들의 집합을 $Z(R)$ 라 하면 그 영인자 그래프 $\Gamma (R)$ 는 연결 그래프고 $\text{diam}(\Gamma(R)) \le 3$ * $\text{diam}$ 은 그래프의 지름을 의미한다.앤더슨 과 리빙스톤 은 영인자 그래프의 연구에서 중요한 업적을 남겼으며, 특히 그래프의 연결성과 지름의 상한값을 특정하는 이 정리를 앤더슨-리빙스톤 정리 라 부르기도 한다.증명 $x,y \in Z(R) (x \ne y)$ 이라 하자.C</description>
    </item>
    
    <item>
      <title>에르되시-갈라이 정리</title>
      <link>https://freshrimpsushi.github.io/erd%C3%B6s-gallai-theorem/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://freshrimpsushi.github.io/erd%C3%B6s-gallai-theorem/</guid>
      <description>1. 그래프 $G$ 의 차수를 중복을 포함해 모아놓은 집합을 그래프 스코어Graph Score 라 하고, $G$ 의 그래프 스코어를 내림차순으로 정렬한 시퀀스를 $G$ 의 디그리 시퀀스Degree Sequence 라 한다.2. 증가하지 않는 자연수들의 시퀀스 $D = (d_{1} , \cdots , d_{n})$ 에 대해 $n$ 개의 버텍스 $v_{1} , \cdots , v_{n}$ 가 다음을 만족 시키게끔 하는 그래프 $G$ 가 존재하면 $D$ 가 **그래픽**Grap</description>
    </item>
    
    <item>
      <title>영인자 그래프</title>
      <link>https://freshrimpsushi.github.io/zero-divisor-graph/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://freshrimpsushi.github.io/zero-divisor-graph/</guid>
      <description>가환 링 $R$ 이 주어져 있다고 하자. $R$ 의 영인자 집합을 $Z(R)$ 이라고 할 때, 다음과 같이 정의된 그래프 $\Gamma (R)$ 을 $R$ 에 대한 영인자 그래프라고 한다. $$ V \left( \Gamma(R) \right) = Z(R) \\ E( \Gamma(R)) = \left\{ ab : ab=0 \right\} $$ 알다시피 영인자끼리 곱한다고해서 반드시 $0$ 이 되는 것은 아니다. 예로써, $ 2, 4 \in Z \left( \mathbb{Z}{10} \right)$ 는 $\mathbb{Z}{10}$ 의 영인자가 맞지만 그 곱은 $8 \ne 0$ 이다. 따라서 주어지는 가환 링 $R$ 에 따른 영인</description>
    </item>
    
    <item>
      <title>오일러 그래프</title>
      <link>https://freshrimpsushi.github.io/eulerian-graph/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://freshrimpsushi.github.io/eulerian-graph/</guid>
      <description>모든 버텍스를 포함하는 닫힌 패스가 존재하는 그래프 : 헤밀톤 그래프$G$ 가 연결 그래프라고 하자.$G$ 의 모든 에지를 포함하는 닫힌 트레일이 존재하면 $G$ 를 오일러 그래프 라 하고 그 트레일을 오일러 트레일 이라 한다. 모든 에지를 포함하지만 닫혀있지 않은 트레일이 존재하면 $G$ 를 세미 오일러 그래프 라한다.우리에게는 한 붓 그리기 문제로도 익숙한 개념</description>
    </item>
    
    <item>
      <title>오일러의 다면체 정리 증명</title>
      <link>https://freshrimpsushi.github.io/proof-of-eulers-polyhedron-formula/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://freshrimpsushi.github.io/proof-of-eulers-polyhedron-formula/</guid>
      <description>연결 평면 그래프 $G$ 에 대해, $n:=|V(G)|$, $m:=|E(G)|$, $f$ 를 페이스의 수라고 하면 $$ n-m+f=2 $$ * 평면 그래프가 그려지면서 평면 상에서 구분되는 영역들을 페이스 라고 부른다.오일러의 다면체 정리 는 오일러의 표수 , 그래프 이론에서는 그냥 오일러 공식 으로도 불린다. 기하학적으로는 공간도형의 점, 선, 면이 #점-#선+#면=2 의 관계를 따른다는 의미를 갖는다. 예로써 정육면</description>
    </item>
    
    <item>
      <title>완벽 그래프</title>
      <link>https://freshrimpsushi.github.io/perfect-graph/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://freshrimpsushi.github.io/perfect-graph/</guid>
      <description>그래프 $G$ 의 모든 유도서브그래프 $H$ 가 다음을 만족하면 완벽 그래프 라고 한다. $$ \chi (H) = \omega (H) $$ $\chi (H)$ 는 그래프 $H$ 의 크로마틱 수다.* $\omega (H)$ 는 그래프 $H$ 의 클리크 수다.그래프 이론의 세계는 수학의 많은 분과가 그러하듯 어마어마하게 넓은데, 솔직히 조금은 더 넓다고 말하고 싶다. 그래프에서 버텍스와 에지를 정의하는 방법이 너무 다양하기 때문이다. 영인자</description>
    </item>
    
    <item>
      <title>이분 그래프</title>
      <link>https://freshrimpsushi.github.io/bipartite-graph/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://freshrimpsushi.github.io/bipartite-graph/</guid>
      <description>그래프 $G$ 의 버텍스 $V(G)$ 에 대해 파티션 $\left\{ A,B \right\}$ 가 존재하고 모든 $xy \in E(G)$ 에 대해 $x \in A, y \in B$ 혹은 $x \in B , y \in A$ 이면 $G$ 를 이분 그래프 라 부르고 $G = G(A,B)$ 와 같이 나타내기도 한다.이분 그래프는 그 이름 그대로 버텍스가 두 부류로 나뉘며, 같은 부류끼리는 인접하지 않은 그래프다. 가령 다음의 그림을 보면 주황색 버텍스 끼리는 인접하지 않고, 파란색 버텍스끼리는</description>
    </item>
    
    <item>
      <title>추상적 듀얼 그래프</title>
      <link>https://freshrimpsushi.github.io/abstract-dual-graph/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://freshrimpsushi.github.io/abstract-dual-graph/</guid>
      <description>기하적 듀얼 그래프의 성질[3] 평면 그래프 $G$ 와 그 기하적 듀얼 그래프 $G^{}$ 에 대해,$C \subset E(G)$ 가 사이클 $\iff$ $C^{} \subset E \left( G^{} \right)$ 는 컷셋추상적 듀얼 그래프 는 직관적으로 평면 그래프에 대해 기하적 듀얼 그래프와 달리 일반적인 그래프에 대해서 추상적으로 정의된다. 듀얼 그래프가 어떠한 방법으로 만들어지는 것이 아니라, 듀얼의 성질을 가지면 듀얼 그래프라고 하는 식</description>
    </item>
    
    <item>
      <title>쾨니히스베르크의 다리 문제와 풀이</title>
      <link>https://freshrimpsushi.github.io/k%C3%B6nigsberg-bridge-problem-and-solution/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://freshrimpsushi.github.io/k%C3%B6nigsberg-bridge-problem-and-solution/</guid>
      <description>쾨니히스베르크의 다리 문제 는 다음과 같이 도시에 놓인 7개의 다리를 한 번씩만 건너면서 처음 있는 위치로 돌아올 수 있는지에 관한 것이었다. 해법을 모른다면 언뜻 경우의 수를 다 따져봐야하는 막막한 문제로 보인다. 일단 수학 문제처럼 보이지도 않고, 모든 경우를 다 따져보면 풀릴 것 같은데 막상 따져보기가 쉽지는 않다.위대한 수학자 오일러는 이것을 그래프</description>
    </item>
    
    <item>
      <title>쾨닉의 정리 증명</title>
      <link>https://freshrimpsushi.github.io/proof-of-k%C3%B6nigs-theorem/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://freshrimpsushi.github.io/proof-of-k%C3%B6nigs-theorem/</guid>
      <description>$G$ 가 국소적으로 유한인 연결 그래프라고 하자. 그러면 모든 $v \in V(G)$ 에 대해 $v$ 가 시점인 원웨이 무한 패스가 존재한다.증명 $G$ 는 연결 그래프이므로 $v$ 가 아닌 모든 $z \in V(G)$ 에 대해 $v$ 에서 $z$ 로 가는 패스가 무한히 많이 존재한다. 그리고 $G$ 는 국소적으로 유한하므로 무한히 많은 패스들 중 무한히 많은 일부는 하나의 같은 에지로 시작해야만한다. 그 에지를 $vv_{1}$ 이라고 하</description>
    </item>
    
    <item>
      <title>트리 그래프</title>
      <link>https://freshrimpsushi.github.io/tree-graph/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://freshrimpsushi.github.io/tree-graph/</guid>
      <description>사이클이 존재하지 않는 연결 그래프를 트리 라고 한다.트리는 컴퓨터 공학의 자료 구조 등에서 흔히 볼 수 있는 개념으로써, 컴퓨터를 조금이라도 다루는 이공계 전공이라면 아마 힙 소팅이라는 말을 들어봤을 것이다. 여기서 말하는 그 힙이 바로 트리의 일종이다.트리의 유니언은 직관적이게도 포레스트Forest 라 부른다. 유향 그래프일 경우 입력 차수가 $0$</description>
    </item>
    
    <item>
      <title>평면 그래프와 쿠라토프스키 정리</title>
      <link>https://freshrimpsushi.github.io/planar-graph-and-kuratowski-theorem/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://freshrimpsushi.github.io/planar-graph-and-kuratowski-theorem/</guid>
      <description>그래프를 평면에 그렸을 때 에지가 겹치지 않게 그릴 수 있으면 그 그래프를 평면 그래프 라고 한다.평면 그래프가 그려지면서 평면 상에서 구분되는 영역들을 페이스Face 라고 부른다. 다음과 같은 평면 그래프 $K_{4}$ 는 네 개의 페이스 $f_{1}, f_{2}, f_{3}, f_{4}$ 를 가지며, 그 중에서도 특히 바운드 되지 않은 $f_{4}$ 를 **무한 페이스**Infinite Face 라 부른다.**평면 그래프</description>
    </item>
    
    <item>
      <title>플뢰리 알고리즘 증명</title>
      <link>https://freshrimpsushi.github.io/proof-of-fleurys-algorithm/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://freshrimpsushi.github.io/proof-of-fleurys-algorithm/</guid>
      <description>$G$ 가 오일러 그래프라고 하자. 그러면 다음과 같은 방법으로 오일러 트레일을 만들 수 있다.임의의 버텍스 $u$ 에서 시작해서 다음의 두 규칙을 따라 트레일을 만든다 :(i) 이미 지나온 에지는 지운다. 만약 에지가 지워지면서 고립 버텍스가 되면 그 버텍스도 지운다.(ii) 각 단계에서 브릿지는 다른 대안이 없을때만 지나간다.* 에지 $b \in G$ 가 지워짐으로써 그래프</description>
    </item>
    
    <item>
      <title>하벨-하키미 알고리즘 증명</title>
      <link>https://freshrimpsushi.github.io/proof-havel-hakimi-algorithm/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://freshrimpsushi.github.io/proof-havel-hakimi-algorithm/</guid>
      <description>증가하지 않는 시퀀스 $D = (d_{1} , \cdots , d_{n})$ 가 주어져있다고 하자. $D$ 가 그래픽하다면 다음과 같은 방법으로 $D$ 의 실현 $G$ 를 찾을 수 있다.**Step 1. ** $n$ 개의 버텍스 $v_{1} , \cdots , v_{n}$ 를 가지는 널 그래프를 만든다.**Step 2.** $k = 1, \cdots , n$**Step 2-1.** $v_{k}$ 과 $v_{k+1} , \cdots , v_{d_{k} + 1}$ 를 잇는다.**Step 2-2.** $d_{k+1} , \cdots , d_{d_{k}+1}$ 를 $1$ 씩 감소시킨다.**Step 2-3.** $d_{k} \leftarrow 0$ 와 같이 대</description>
    </item>
    
    <item>
      <title>해밀톤 그래프</title>
      <link>https://freshrimpsushi.github.io/hamiltonian-graph/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://freshrimpsushi.github.io/hamiltonian-graph/</guid>
      <description>모든 에지를 포함하는 닫힌 트레일이 존재하는 그래프 : 오일러 그래프$G$ 가 연결 그래프라고 하자.$G$ 의 모든 버텍스를 포함하는 닫힌 패스가 존재하면 $G$ 를 해밀톤 그래프 라 하고 그 사이클을 해밀턴 사이클 이라 한다. 모든 버텍스를 포함하지만 닫혀있지 않은 패스가 존재하면 $G$ 를 세미 해밀톤 그래프 라 한다.오일러 그래프가 모든 에지를 지나는 트레일에</description>
    </item>
    
  </channel>
</rss>
