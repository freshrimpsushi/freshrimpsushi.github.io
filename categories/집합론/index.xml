<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>집합론 on 생새우초밥집</title>
    <link>https://freshrimpsushi.github.io/categories/%EC%A7%91%ED%95%A9%EB%A1%A0/</link>
    <description>Recent content in 집합론 on 생새우초밥집</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>ko</language>
    <lastBuildDate>Fri, 08 Nov 2019 00:00:00 +0000</lastBuildDate><atom:link href="https://freshrimpsushi.github.io/categories/%EC%A7%91%ED%95%A9%EB%A1%A0/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>동치류</title>
      <link>https://freshrimpsushi.github.io/equivalence-class/</link>
      <pubDate>Fri, 08 Nov 2019 00:00:00 +0000</pubDate>
      
      <guid>https://freshrimpsushi.github.io/equivalence-class/</guid>
      <description>이관 대기</description>
    </item>
    
    <item>
      <title>집합의 분할</title>
      <link>https://freshrimpsushi.github.io/partition-of-set/</link>
      <pubDate>Thu, 07 Nov 2019 00:00:00 +0000</pubDate>
      
      <guid>https://freshrimpsushi.github.io/partition-of-set/</guid>
      <description>이관 대기</description>
    </item>
    
    <item>
      <title>수학에서의 동치관계</title>
      <link>https://freshrimpsushi.github.io/equivalent-relation/</link>
      <pubDate>Wed, 06 Nov 2019 00:00:00 +0000</pubDate>
      
      <guid>https://freshrimpsushi.github.io/equivalent-relation/</guid>
      <description>이관 대기</description>
    </item>
    
    <item>
      <title>수학에서의 이항관계</title>
      <link>https://freshrimpsushi.github.io/binary-relation/</link>
      <pubDate>Tue, 05 Nov 2019 00:00:00 +0000</pubDate>
      
      <guid>https://freshrimpsushi.github.io/binary-relation/</guid>
      <description>이관 대기</description>
    </item>
    
    <item>
      <title>집합의 데카르트 곱</title>
      <link>https://freshrimpsushi.github.io/cartesian-product/</link>
      <pubDate>Mon, 04 Nov 2019 00:00:00 +0000</pubDate>
      
      <guid>https://freshrimpsushi.github.io/cartesian-product/</guid>
      <description>이관 대기</description>
    </item>
    
    <item>
      <title>집합족과 첨수</title>
      <link>https://freshrimpsushi.github.io/family-and-index/</link>
      <pubDate>Sat, 02 Nov 2019 00:00:00 +0000</pubDate>
      
      <guid>https://freshrimpsushi.github.io/family-and-index/</guid>
      <description>이관 대기</description>
    </item>
    
    <item>
      <title>선택 공리가 추가된 체르멜로-프렝켈 집합론</title>
      <link>https://freshrimpsushi.github.io/fraenkel-set-theory-with-the-axiom-of-choice-included/</link>
      <pubDate>Thu, 31 Oct 2019 00:00:00 +0000</pubDate>
      
      <guid>https://freshrimpsushi.github.io/fraenkel-set-theory-with-the-axiom-of-choice-included/</guid>
      <description>이관 대기</description>
    </item>
    
    <item>
      <title>선택 공리</title>
      <link>https://freshrimpsushi.github.io/axiom-of-choice/</link>
      <pubDate>Tue, 29 Oct 2019 00:00:00 +0000</pubDate>
      
      <guid>https://freshrimpsushi.github.io/axiom-of-choice/</guid>
      <description>이관 대기 $$ \forall U \left( \emptyset \notin U \implies \exists f : U \to \bigcup_{X \in U \\ f(X) \in X } U \right) $$ 모든 공집합이 아닌 집합들의 집합 $U$ 에 대해 $U$ 의 모든 원소로부터 원소 하나씩을 선택하는 선택 함수 $f$ 가 존재한다. 선택 공리는 가령 다음과 같은 집합의 집합 $U$ 가 있을 때, 그 원소인 집합에서 원소 하나을 뽑는 함수 $f$ 가 존재함을 보장해준다. 가령 다음의 예를 생각해보자 : $$ U = \left\{ \left\{ \pi , 1/2 \right\}</description>
    </item>
    
    <item>
      <title>치환 공리꼴</title>
      <link>https://freshrimpsushi.github.io/axiom-schema-of-replacement/</link>
      <pubDate>Sun, 27 Oct 2019 00:00:00 +0000</pubDate>
      
      <guid>https://freshrimpsushi.github.io/axiom-schema-of-replacement/</guid>
      <description>이관 대기 $$ \forall X \left( \forall x \in X \exists ! y \left( p(x,y) \right) \implies \exists Y \forall x \in X \exists y \in Y \left( p(x,y) \right) \right) $$ 모든 함수에 대한 치역이 존재한다. * 기호 $\exists !$ 는 유일하게 존재함을 의미한다. * 여기서 $p(x,y)$ 는 $X \times Y$ 에서의 명제함수다. 명제함수 $p(x,y)$ 는 물론 함수지만 엄밀하게 말해 함수로써 정의된 것은 아니며, 설령 함수로 정의되었다고 할지라도 위 공리에서 말하는 함수 그 자체는 아니다.</description>
    </item>
    
    <item>
      <title>정칙성 공리</title>
      <link>https://freshrimpsushi.github.io/axiom-of-regularity/</link>
      <pubDate>Fri, 25 Oct 2019 00:00:00 +0000</pubDate>
      
      <guid>https://freshrimpsushi.github.io/axiom-of-regularity/</guid>
      <description>이관 대기 $$ \forall X \left( \exists x_{0} ( x_{0} \in X ) \implies \exists y ( y \in X \land \lnot \exists x ( x \in y \land x \in X )) \right) $$ 모든 집합 $X \ne \emptyset$ 은 자기 자신과 서로소인 원소를 가진다. 정칙성 공리에 따라 스스로를 원소로 포함하는 재귀 집합, 예컨대 $X = \left\{ X \right\}$ 와 같은 집합은 존재할 수 없다. 자기 자신과 서로소가 되기 위해서는 적어도 자기 자신은 아니어야하기 때문이다. 정칙성 공리는 공집합이</description>
    </item>
    
    <item>
      <title>무한 공리</title>
      <link>https://freshrimpsushi.github.io/axiom-of-infinity/</link>
      <pubDate>Wed, 23 Oct 2019 00:00:00 +0000</pubDate>
      
      <guid>https://freshrimpsushi.github.io/axiom-of-infinity/</guid>
      <description>이관 대기 $$ \exists U \left( \emptyset \in U \land \forall X ( X \in U \implies S(X) \in U) \right) $$ 공집합과 $X$ 를 원소로 가지면 $S(X)$ 도 원소로 가지는 집합 $U$ 가 존재한다. * 집합 $X$ 에 대해 $S(X)$ 는 $S(X) := X \cup \left\{ X \right\}$ 와 같이 정의되는 집합이다. 이것이 왜 무한 공리인지를 구구절절 설명하는 것보다 자연수 집합 $\mathbb{N}$ 의 존재성 증명을 한 번 보는 게 낫다. $\mathbb{N}$ 이 존재한다. Strategy : 폰 노이만이 제안한 구성법으로써, 자연</description>
    </item>
    
    <item>
      <title>멱집합 공리</title>
      <link>https://freshrimpsushi.github.io/axiom-of-power-set/</link>
      <pubDate>Mon, 21 Oct 2019 00:00:00 +0000</pubDate>
      
      <guid>https://freshrimpsushi.github.io/axiom-of-power-set/</guid>
      <description>이관 대기 $$ \forall X \exists P \forall A ( A \subset X \implies A \in P) $$ 임의의 집합 $X$ 에 대해 $X$ 의 모든 부분집합을 원소로 갖는 집합 $P$ 가 존재한다. $X$ 의 멱집합은 일반적으로 $\mathcal{P} (X)$ 와 같이 표기하거나 $2^{X}$ 와 같이 쓰는데, 그 이유는 유한 집합 $X$ 의 원소의 개수를 $|X|$ 이라고 하면 $P(X)=2^{|X|}$ 이기 때문이다. 꼭 개수가 중요한 것은 아니기 때문에 집합론을 많이 쓰면 많이 쓰는 분과일수록 $2^{X}$ 와 같은 표현을</description>
    </item>
    
    <item>
      <title>합집합 공리</title>
      <link>https://freshrimpsushi.github.io/axiom-of-union/</link>
      <pubDate>Sat, 19 Oct 2019 00:00:00 +0000</pubDate>
      
      <guid>https://freshrimpsushi.github.io/axiom-of-union/</guid>
      <description>이관 대기 $$ \forall X \left( \exists U \left( \forall a \left( a \in x \land x \in X \implies a \in U \right) \right) \right) $$ 임의의 집합 $X$ 에 대해 $X$ 모든 원소들의 원소들을 포함하는 집합 $U$ 가 존재한다. 합집합 공리는 다음과 같이 정의되는 합집합의 존재성을 보장한다. $$ x \in A \lor x \in B \iff x \in A \cup B $$ 임의의 두 집합 $A$, $B$ 에 대해 적어도 둘 중 하나에 속하는 원소들의 집합을 $A$ 와 $B$ 의 합집합이라고 하고, $A \cup B$</description>
    </item>
    
    <item>
      <title>분류 공리꼴</title>
      <link>https://freshrimpsushi.github.io/axiom-schema-of-specification/</link>
      <pubDate>Thu, 17 Oct 2019 00:00:00 +0000</pubDate>
      
      <guid>https://freshrimpsushi.github.io/axiom-schema-of-specification/</guid>
      <description>이관 대기 $$ \forall X \exists A \forall a \left( a \in A \iff ( a \in X \land p(a)) \right) $$ 임의의 집합 $X$ 에 대해 성질 $p$ 를 가지는 원소들로 이루어진 부분집합 $A$ 가 존재한다. * 여기서 $p(x)$ 는 $X$ 에서의 명제함수다. $A$ 를 $X$ 의 부분집합으로 한정하는 이유는 러셀의 역설과 같은 문제가 일어나는 것을 방지하기 위함이다. 공리가 아니라 공리꼴인 이유는 이 공리가 무수히 많은 $p(x)$ 에 따라 무수히 많이 존</description>
    </item>
    
    <item>
      <title>짝 공리</title>
      <link>https://freshrimpsushi.github.io/axiom-of-union/</link>
      <pubDate>Tue, 15 Oct 2019 00:00:00 +0000</pubDate>
      
      <guid>https://freshrimpsushi.github.io/axiom-of-union/</guid>
      <description>이관 대기 $$ \forall A \forall B \exists U ( a \in A \land b \in B ) $$ 임의의 두 집합 $A$, $B$ 에 대해 $A$ 와 $B$ 를 원소로 가지는 집합 $U$ 가 존재한다. 처음으로 짝 공리를 접하면 (사실 대부분의 공리를 접할 때는 거의 다 비슷하지만) 도대체 이런 공리가 왜 필요한지 의문이 들 수가 있다. 그런데 사실 짝 공리란 진정으로 집합이라는 개념을 수학의 영역으로 끌어올리는 역할을 한다고 말할 수 있</description>
    </item>
    
    <item>
      <title>공집합 공리</title>
      <link>https://freshrimpsushi.github.io/axiom-of-empty-set/</link>
      <pubDate>Sun, 13 Oct 2019 00:00:00 +0000</pubDate>
      
      <guid>https://freshrimpsushi.github.io/axiom-of-empty-set/</guid>
      <description>이관 대기 $$ \exists X \forall x \left( \lnot \left( x \in X \right) \right) $$ 어떤 원소도 가지지 않는 집합 $X$ 가 존재하고, 이 집합 $X$ 를 공집합이라고 정의한다. 공집합은 일반적으로 $\emptyset$ 과 같이 표기한다. 한편 공집합은 공집합은 원소의 개수가 $0$ 개인 집합으로도 볼 수 있는데, 이와 같이 원소의 개수로 정의할 수 있는 집합에는 다음과 같은 것들이 있다 : 1. Singletone Set : 원소의 개수가 단 하나인 집합을 홑</description>
    </item>
    
    <item>
      <title>외연 공리</title>
      <link>https://freshrimpsushi.github.io/axiom-of-extensionality/</link>
      <pubDate>Fri, 11 Oct 2019 00:00:00 +0000</pubDate>
      
      <guid>https://freshrimpsushi.github.io/axiom-of-extensionality/</guid>
      <description>이관 대기 $$ \forall A \forall B ( \forall x ( x \in A \iff x \in B) ) $$ 임의의 두 집합 $A$, $B$ 에 속한 원소가 같으면 두 집합이 같다고 하고 $A = B$ 와 같이 나타낸다. 한편 $A$ 와 $B$ 가 같지 않으면 $A \ne B$ 와 같이 나타낸다. 두 집합의 같음은 그 자체로 공리이자 정의다. Extensionality는 확장이 아니라 외연外延을 의미하는 것으로, 집합은 &amp;lsquo;어떠한 집합&amp;</description>
    </item>
    
    <item>
      <title>집합의 포함관계</title>
      <link>https://freshrimpsushi.github.io/subset-relation-of-sets/</link>
      <pubDate>Wed, 09 Oct 2019 00:00:00 +0000</pubDate>
      
      <guid>https://freshrimpsushi.github.io/subset-relation-of-sets/</guid>
      <description>이관 대기 $$ A \subset B \iff \forall x (x\in A \implies x \in B) $$ 임의의 집합 $A$, $B$ 에 대하여 $A$ 의 모든 원소가 $B$ 의 원소일 때 $A$ 는 $B$ 의 부분집합Subset, $B$ 는 $A$ 의 초집합Superset이라고 하고 $A \subset B$ 와 같이 나타낸다. 한편 $A \subset B$ 인데 $B \not\subset A$ 이면 $A$ 를 $B$ 의 진부분집합Proper Subset이라고하고 $A \subsetneq B$ 와 같이 나타낸다. 사소한 주의사항으로, $A \subset B$</description>
    </item>
    
    <item>
      <title>명제함수의 한정규칙</title>
      <link>https://freshrimpsushi.github.io/quantification-rules/</link>
      <pubDate>Sun, 06 Oct 2019 00:00:00 +0000</pubDate>
      
      <guid>https://freshrimpsushi.github.io/quantification-rules/</guid>
      <description>이관 대기 전체집합 $U$ 의 명제함수 $P(x)$ 가 주어져있다고 하자. 1. Universal Quantifier : &amp;lsquo;모든 $x \in U$ 에 대하여&amp;rsquo;를 $\forall x$ 와 같이 쓰고 전칭기호라고 한다. 2. Existential Quantifier : &amp;lsquo;적어도 하나의 $x \in U$ 가 존재해서&amp;rsquo;를 $\exists x$ 와 같이 쓰고 존재기호라고 한다. 가령 자연수 집합 $\mathbb{N}$ 에 대해 논리식 $p(x)$ 가 &amp;lsquo;$x$ 는 $3$ 의 배수다&amp;rsquo;라면</description>
    </item>
    
    <item>
      <title>집합과 명제함수의 정의</title>
      <link>https://freshrimpsushi.github.io/definition-of-set-and-propositional-function/</link>
      <pubDate>Fri, 04 Oct 2019 00:00:00 +0000</pubDate>
      
      <guid>https://freshrimpsushi.github.io/definition-of-set-and-propositional-function/</guid>
      <description>이관 대기 1. Set : 우리의 직관 또는 사고의 대상으로써 서로 뚜렷이 구분되는 객체의 모임을 집합이라 한다. 2. Element : 집합에 속한 객체를 원소라고 한다. 3. Propositional Function : 집합 $U$ 의 원소 $x$ 에 대해 참이거나 거짓 둘 중 하나인 명제 $p(x)$ 를 $U$ 에서의 명제함수라고 한다. 1. 수학에서 집합은 거의 모국어 하나에 필적할만큼 중요한 개념이다. 어쩌면 자연어보다 나을 수도 있는 게, 필</description>
    </item>
    
    <item>
      <title>삼단논법의 수리논리적 증명</title>
      <link>https://freshrimpsushi.github.io/proof-of-syllogism/</link>
      <pubDate>Sun, 29 Sep 2019 00:00:00 +0000</pubDate>
      
      <guid>https://freshrimpsushi.github.io/proof-of-syllogism/</guid>
      <description>이관 대기 $$ ( p \to q ) \land ( q \to r ) \implies p \to r $$ 삼단논법을 모르는 사람은 없고 굳이 설명해줄 것도 없다고 본다. 고대의 철학적 논쟁이 아닌 이상에야 굳이 &amp;lsquo;삼단논법에 의해&amp;rsquo;라는 말을 쓰는 경우는 흔치 않다. 그만큼 우리들에게는 익숙한 논법이자 보편타당한 원리기 때문이다. 하지만 삼단논법이 증명이 되는 것이고 증명을 해야</description>
    </item>
    
    <item>
      <title>수학적 귀납법</title>
      <link>https://freshrimpsushi.github.io/mathmatical-induction/</link>
      <pubDate>Sun, 29 Sep 2019 00:00:00 +0000</pubDate>
      
      <guid>https://freshrimpsushi.github.io/mathmatical-induction/</guid>
      <description>이관 대기 명제 $p(n) (n=1,2,3, \cdots )$ 에 대해 $p(1)$ 이 참이고 $p(n)$ 을 가정했을 때 $p(n+1)$ 이 성립하면 $p(n)$ 은 참이다. 어떤 식이 자연수에 대해 성립할 때 특히 큰 위력을 발휘하는 증명법으로, 페아노 제5공리라고도 불리며 혹은 &amp;lsquo;수학적&amp;rsquo;이라는 말을 떼고 그냥 귀납법이라고도 한다. 본래 귀납법이란 현상이나 실체를 경험적으로 모아 어떤 결론을 내리는 것인데</description>
    </item>
    
    <item>
      <title>귀류법의 수리논리적 증명</title>
      <link>https://freshrimpsushi.github.io/proof-of-reductio-ad-absurdum/</link>
      <pubDate>Sat, 28 Sep 2019 00:00:00 +0000</pubDate>
      
      <guid>https://freshrimpsushi.github.io/proof-of-reductio-ad-absurdum/</guid>
      <description>이관 대기 $$ (p \land \lnot q) \to c \iff p \to q $$ * 여기서 $c$ 는 모순을 의미한다. 배리법 혹은 귀류법은 수학 전반에서 정말 많이 사용되는 증명법이다. 하지만 처음 귀류법을 접하는 사람은 이게 단어부터 생소해서 거부감이 들 수 있다. 혹은 그냥 익숙해졌을 뿐, 왜 귀류법이 작동하는지 이해하지 못한 사람도 있을 것이다. 아래의 글을 읽어보면서 귀류법을 이해해보자: (1)</description>
    </item>
    
    <item>
      <title>대우법의 수리논리적 증명</title>
      <link>https://freshrimpsushi.github.io/proof-of-contrapositive-law/</link>
      <pubDate>Fri, 27 Sep 2019 00:00:00 +0000</pubDate>
      
      <guid>https://freshrimpsushi.github.io/proof-of-contrapositive-law/</guid>
      <description>이관 대기 $$ p \to q \iff \lnot q \to \lnot p $$ 어떤 명제가 참이면 그 대우도 참, 어떤 명제가 거짓이면 그 대우도 거짓이다. 물론 역Converse이 성립한다면 대우법에 의해서 원래 명제의 이Reverse도 성립한다. 이러한 표현들은 수학에 익숙하지 않은 사람들에겐 너무 어렵다. 예를 들어서 이해해보자 : $p$ : 날씨가 덥다 $q$ : 땀이 난다 $p \to q$ : 날씨가 더우</description>
    </item>
    
    <item>
      <title>드 모르간의 법칙 증명</title>
      <link>https://freshrimpsushi.github.io/proof-of-de-morgans-laws/</link>
      <pubDate>Thu, 26 Sep 2019 00:00:00 +0000</pubDate>
      
      <guid>https://freshrimpsushi.github.io/proof-of-de-morgans-laws/</guid>
      <description>이관 대기 [1] 드 모르간의 법칙 : $$ \lnot (p \land q) \iff \lnot p \lor \lnot q \\ \lnot(p \lor q) \iff \lnot p \land \lnot q $$ [2] 드 모르간의 정리 : $$ (A \cup B)^{c} = A^{c} \cap B^{c} \\ (A \cap B)^{c} = A^{c} \cup B^{c} $$ 드 모르간의 법칙와 드 모르간의 정리는 각각 명제, 집합에 대한 정리지만 실제로 말을 하면서는 별로 구분하지 않는다. 법칙이든 정리든 **드 모르간-**만 붙으면 부정이나 여집합을 취하면 괄호 안의 명제, 집합</description>
    </item>
    
    <item>
      <title>항진 명제와 항위 명제</title>
      <link>https://freshrimpsushi.github.io/tautology-and-contradiction/</link>
      <pubDate>Tue, 24 Sep 2019 00:00:00 +0000</pubDate>
      
      <guid>https://freshrimpsushi.github.io/tautology-and-contradiction/</guid>
      <description>이관 대기 모든 논리적 가능성에 대해 참인 명제를 항진 명제라고 한다. 모든 논리적 가능성에 대해 거짓인 명제를 항위 명제라고 한다. 실제로 항위 명제라는 단어는 거의 쓰이지 않으며, 그 대신 모순이라는 말을 많이 사용한다. 기호로는 항진 Tautology과 모순 Contradiction의 앞글자를 따서 항진 $t$, 모순 $c$ 와 같이 나타낸다. 위의 진리표</description>
    </item>
    
    <item>
      <title>명제와 결합자, 진리표</title>
      <link>https://freshrimpsushi.github.io/truth-table/</link>
      <pubDate>Sun, 22 Sep 2019 00:00:00 +0000</pubDate>
      
      <guid>https://freshrimpsushi.github.io/truth-table/</guid>
      <description>이관 대기 참이거나 거짓이거나 둘 중 하나인 서술을 명제라고 한다. 명제는 참이거나 거짓 둘 중 하나의 진리값Truth Value을 가진다. 두 명제 $p$, $q$ 의 진리값이 같으면 $p$ 와 $q$ 가 (논리적) 동치(Logically) Equivalent라고 하고, $p \equiv q$ 와 같이 나타낸다. 다음을 결합자라고 한다. 1. 부정 : $\lnot$ 2. 논리곱 : $\land$ 3. 논리합 : $\lor$ 4.</description>
    </item>
    
  </channel>
</rss>
